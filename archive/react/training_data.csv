IS,How to best define a propType for accepting a component as a prop,Given this contrived example what is the best definition of componentType,,"jimfb,zpao,zpao",2015-10-12 16:14:43,2015-10-12 17:35:03
IS,React Children map does not traverse as stated in the docs,According to the docs If children is a nested object or array it will be traversed However when I use this function on for example something like React children map this props children finds div and input type password but not the elements inside div Have I misunderstood the docs or is this a bug,,zpao,2015-10-12 21:55:05,2015-10-12 22:07:32
IS,Can i use react dom with react 0 13,Hi I try to upgrade some packages to support react 0 14 and react dom But if my understanding is right if i want to support 0 14 without warnings i cant support 0 13 anymore without asking people to do some workaround like aliasing areact dom' to areact' in the webpack config Is this right or i missing something,,"gaearon,jimfb,gaearon",2015-10-13 10:20:39,2015-10-13 11:22:38
IS,JSX listeners broken in React 0 14 for Android LTE 4 3 with NODE ENV wouldevelopment',I'm still quite new to React but I guess this is a bug in the React framework introduced in 0 14 Seems like all listeners attached with JSX are broken in native Android browser for Android LTE 4 3 when compiling code with NODE ENV development Everything works fine with NODE ENV production compilation I have tracked it down to being related to ReactErrorUtils that in development mode do guards on events The source code L58 L74 If I simply remove that part of code after compiling the React app the listeners starts working again I guess this is not intentional but instead a bug To reproduce problem in Android LTE 4 3 code that works in e g Chrome Browser Using the pre compiled Getting Started lib,,"jimfb,sebmarkbage",2015-10-13 08:08:39,2015-10-13 18:40:35
IS,ReactMount cache gets repopulated when unmounting nodes,0 14 does not have this problem only master Repro A slightly more elaborate case crashes without the new poison error if you unmount and remount the tree with the same keys,,sophiebits,2015-10-13 01:45:42,2015-10-13 19:19:24
IS,react dom is not published to Bower,,,zpao,2015-10-13 20:29:16,2015-10-13 20:30:41
IS,React 13 3 with addons minified version does not have TestUtils,If I include react with addons React addons TestUtils is available globally but if I include the minified version it is not,,"jimfb,zpao",2015-10-13 21:27:07,2015-10-13 21:29:03
IS,ReactCSSTransitionGroup unexpected behavior with 0 values,L22,,,2015-10-13 20:57:44,2015-10-13 21:54:21
IS,Invariant Violation Objects are not valid as a React child If you meant to render a collection of children use an array instead or wrap the object using createFragment object,In my component is render function I have If I change to this onItemClick bind this item to e onItemClick e item inside the map function everything works as expected,,,2015-10-14 05:39:54,2015-10-14 06:21:48
IS,defaultChecked do not render check attribute on second load,Hi I got my component who wo not check the radio when i go to the view id for the second time I started in my list component with react router at the index of the site i click on the view button of an element the radio is checked i return in my list and go to another or the same element and it is not checked anymore When i inspect the component in the React developer tool the radio has the defaultChecked true property What happen Thank you,,"zpao,jimfb",2015-10-14 16:51:51,2015-10-14 18:07:49
IS,Support kind and srclang attributes in react dom,These two properties are required for showing subtitles in video element but currently does not support in react attributes for subtitle kind is not required but better to add it too for different type of track Can these two add to the supported list so do not need to use dangerouslySetInnerHTML when render tracks,,,2015-10-14 08:15:35,2015-10-14 21:35:03
IS,TypeError Cannot read property 'toUpperCase' of undefined in some case instead of component not defined,this happens in meteor however I'm almost positive I did not have 2 versions of react not sure how I could check that img width 1247 alt screenshot 2015 10 14 20 15 15 src,,zpao,2015-10-15 00:23:19,2015-10-15 00:37:29
IS,ES6 Double import of CSS file CLOSED,So this is not a traditional kind of issue I do not know if it could be considered a traditional issue Normally I would turn to stack overflow but this is more or less an oddity that should not occur but I stumbled upon So I'm doing the setup for server side rendering with Webpack Express Babel Webpack dev middleware Basically the setup that I have right now is dev specific and generates the Webpack resources in memory on the Express server I then have React Router in place to facilitate routing History API on the front end So basically I have Express backend to render server side components and provide back end routing A front end React app that can hook into back end rendered components and hook the necessary events or do client based routing for routes not defined on the back end Now I'm using Node v4 x which does not support ES6 modules by default so I included a babel hook Everything works perfectly and Babel can parse everything if I remove the import statement from one of the subroutes Welcome or Faq it will bundle perfectly WebPack never complained about this when running babel loader and babel to compile the JSX and JS It is only when I introduced this hook to be able to import my front end components in the backend that it started going haywire I was hoping maybe someone here could explain to me why this happens Again I know Github Issues is not a place to ask questions but to reiterate I do not know if this is an issue or not,,"fkling,gaearon",2015-10-15 12:49:19,2015-10-15 14:11:02
IS,data attribute working only for html elements but not for custom component 0 13 3,Hello I create Component MyComponent then try in generated html you can find data test id parent but data test id child for root element of MyComponent can not find May be data attribute for custom component should be maped for root element Thank you,,"jimfb,jimfb",2015-10-15 12:23:17,2015-10-15 14:18:53
IS,Confused about performant way of key usage with a list of fixed count,Hi there I searched lots but I'm still confused about what is the best way to get the maximum performance in DOM operations and also CPU and memory usage I can do lot of assumptions but I would like to ask please I have a list with an always fixed count of 500 items lets say 5 to illustrate the example the list is a stream new elements frequently get pushed and old elements are removed List sample 2 1 Q In this example react will reuse the component instead of destroying and creating a new one everytime I push and remove an item If so maybe consumes less CPU than the first example Updating the context of each div may be more expensive in DOM operations than in the previous example So I do not know what is the best way to handle this to be honest I'm not even sure what reacts really does and what scare me most is what browser internals do I can image that for a list with very few amount of elements maybe option 2 will be prefered and with a huge list of elements option 1 is prefered Im saying non sense c I also can guess this will depend of the content of the div if the content of the divs is always same the option 2 will be like a noop and the option 1 will remove and append a new div every time I'm right Thanks in advance Sorry for asking here,,jimfb,2015-10-15 14:47:43,2015-10-15 16:53:21
IS,Bower ReactDOM Uncaught ReferenceError ReactDOM is not defined,After installing ReactDOM and adding it globally I get a ReferenceError that ReactDOM isnt defined,,"zpao,zpao",2015-10-15 18:05:10,2015-10-15 20:04:58
IS,How to avoid loaded two copies of React error when developing an external component,I am developing an external component let is say my component which I link to the project with npm link as it is in process and I need the package to reflect changes In the my component folder there are node modules react and node modules react dom as they are its dependencies However they are peerDependences so I did not suppose to bring them into the project linking this package However when using npm link it link the whole directory including node modules So when the project builds it includes packages 2 times from node modules and from node modules my component node modules This begins to affect when the component is using ReactDOM findDOMNode it causes this error Also it may help to understand what is happening the problem only appears if there are both node modules my component node modules react and node modules my component node modules react dom If there is only one of them there is no error message The usual package installation does not bring such error as there is no node modules react dom there How is it supposed to develop an external component and the project at the same time,,jimfb,2015-10-15 19:35:38,2015-10-15 22:43:04
IS,enqueueCallback invariant should specify identify actual object in failure message,Oddly enough the two examples below are not equal as I thought they would be I'm assuming that is because the function as assuming an optional callback But I would expect your code to do a typeof check and not just a defined check Can we change it to do a typeof fn 'function' check I can submit a PR,,"zpao,jimfb",2015-10-14 14:49:59,2015-10-16 16:39:56
IS,Cannot read property 'componentDidLeave' of undefined,I have been trying to get this info from react docs but I do not see anything similar I am getting that error in the console everytime an item is deleted from a collection Cannot read property 'componentDidLeave' of undefined and I am not using componentDidLeave anywhere do you have an idea,,jimfb,2015-10-16 16:30:01,2015-10-16 16:48:56
IS,Support invalid event within Form elements,The invalid event is fired when a submittable element has been checked and does not satisfy its constraints Ref,,zpao,2015-10-13 04:54:06,2015-10-17 01:02:18
IS,keymirror module not found error,Hi I'm using the tutorial It works in 0 13 version but in 0 14 version require areact lib keyMirror' no longer works I updated the code to use require 'keymirror' as in the todo example but this also is returning Cannot find module 'keymirror',,zpao,2015-10-17 04:20:55,2015-10-17 07:41:41
IS,gitter channel,i know you guys have an irc channel but you guys should have a gitter channel,,"jimfb,gaearon,zpao",2015-10-16 22:33:40,2015-10-19 16:52:43
IS,cannot update existing input compoent value in ReactJS,I have a problem posted in stackoverflow but with no answer maybe this is the issue of react Please see Or maybe should show a right way to solve this type of problems,,zpao,2015-10-19 11:09:08,2015-10-19 17:35:31
IS,mountWrapper calls in input select and textarea should include the listeners property,As per r42317074 The mountWrapper calls in input select and textarea should include the listeners property in their wrapperState to avoid changing the hidden class when the assignment is made This would also be better just as a free function we are trying to get away from OO in the core anyway,,jimfb,2015-10-19 17:53:48,2015-10-19 18:19:10
IS,Unable to unit test react component,I was trying to write unit test for a component using Jest and tried this Is it an issue with react or jest,,zpao,2015-10-19 10:09:24,2015-10-19 19:02:21
IS,Any plans on extracting PropTypes and checks out of React,Could be very useful with other variable checks like function arguments,,"zpao,gaearon",2015-10-19 19:21:52,2015-10-19 19:22:51
IS,npm install fails on Windows with npm '3 x',Built master on Webstorm with npm 3 3 9 Failed with error in fbjs scripts node check dev engines js AssertionError Current npm version is not supported for development expected 3 3 9 to satisfy 2 x Commenting out semver satisfies block line 56 allowed build to proceed,,"syranide,zpao",2015-10-16 13:23:45,2015-10-19 20:52:47
IS,npm validation for package install,I have a react app in which folder name is sports inside the sports folder I have node modules inside the node modules folder I have football folder and react folder If go to football folder and do npm install react its installing react which makes my application fail how to prevent this command npm install react from being successful Is it anyway we can right a script to prevent this process to happen but it should work when we do npm install react in sports folder Is there any already npm packages which we use it make automatically validated our npm commands,,"jimfb,zpao",2015-10-20 04:04:31,2015-10-20 06:00:48
IS,Call render with this props,It would be nice if regular elements could get the same render API as the v0 14 pure components It would also make it easy to move between pure and regular component declarations and it encourages thinking of props as immutable,,"gaearon,zpao",2015-10-20 11:49:21,2015-10-20 17:27:12
IS,upgrade to 0 14 nothing renders,hi i have update to 0 14 version because i want to use a premade component which requires it i have spent an hour more trying to debug why nothing renders then i tried other components that worked but they did not render either then i googled and found that i need to require react dom and ReactDOM render but this did not help either the render methods of all my components are not being called at all how is that possible,,"zpao,zpao,zpao,gaearon,gaearon,gaearon,jimfb,zpao",2015-10-20 19:04:08,2015-10-20 19:07:39
IS,renderToString on stateless function,Is this possible I'm currently getting a warning error,,,2015-10-21 07:21:40,2015-10-21 07:26:25
IS,Events doesnt work,Is there anything can make click event not work I ve met a problem every on click event are not fired when i click it Those all happened on android webview and just a few device have this problem thx for youre help,,zpao,2015-10-21 09:00:43,2015-10-21 12:43:21
IS,0 14 0 createElement fails when children node is an array of React elements,It seems that this silently fails when using 0 14 0 and ReactDOM while it renders fine with 0 13 3 Am I missing something,,zpao,2015-10-22 09:57:02,2015-10-22 15:56:10
IS,Issue with react dom and react addons test utils,Hey there I'm having a bit of a trouble with my component tests since upgrading to React 0 14 0 In particular since moving away from react addons and using react addons test utils in conjunction with react dom some of my tests that simulate clicks are failing Here is an example of the test that works but it uses react addons and React render both of which are deprecated So that works great the supplied function gets called and the tests pass However as soon as I use react addons test utils or ReactDOM render the test fails What is interesting is that there is no combination besides the passing case mentioned above that works So for example react addons test utils ReactDOM render fails but so does react addons test utils React render as does React addons TestUtils ReactDOM render Any idea what could be causing this problem,,"zpao,zpao",2015-10-20 17:05:27,2015-10-22 19:59:21
IS,How Can I Change the Dependencies' Support Version,I set up a project and run it It says required support v7 23 0 1 I did not installed v7 23 0 1 but I installed v7 22 0 1 And I do not want to use v7 22 0 1 for some reason So I changed android app build gradle file is dependencies line compile 'com android support appcompat v7 23 0 1' to compile 'com android support appcompat v7 22 0 1' This works usually in normal android projects But did not in react native project Could not find com android support appcompat v7 23 0 1 The error log seems a bit difference than before It says Required by AwesomeProject app unspecified com facebook react react native 0 12 0 How could I change the dependencies' support version of com facebook react react native 0 12 0 to v7 22 0 1 or in other words How Can I Change the Dependencies' Support Version to a My Version I have read the most of related issues But they do not work for me I have read the page of android setup but it dose not work for me I have surely installed Android Support Repository and Android Support Library and Google Repository update Another reason I ask this question is When some day google releases a support 'v7 24 0 1' and I want to use it but com facebook react react native 0 12 0 this package still requires 'v7 23 0 1' How could I make the project run perfectly Thank you update I reboot by Mac and things changed But still not works out put No resource found that matches the given name 'android Widget Material Button Colored',,zpao,2015-10-22 09:16:41,2015-10-22 23:39:12
IS,Reuse component issue how to deal with if the api json string is different between multiple files,here is the issue I have a reuse List component and using json api to load the data what if the string is different in multiple files for example json1 plz advise thx,,zpao,2015-10-23 02:20:39,2015-10-23 02:23:50
IS,track attributes support,I'm trying to use Video track element but some attributes does not work from i'm trying to do,,"zpao,jimfb",2015-10-22 10:19:36,2015-10-23 03:20:44
IS,Issue with extended Array T as Component props,In component ctor this props groupBy function is undefinded This behavior is correct This is not a problem actually but it is very strange for me editor console,,"zpao,sophiebits",2015-10-23 02:51:37,2015-10-23 04:24:36
IS,Why do the docs on ReactLink say note that ReactLink is not needed for most applications and should be used cautiously,Why do the docs on ReactLink say note that ReactLink is not needed for most applications and should be used cautiously I assume having onChange handler on inputs is the preferred way to update state and ReactLink et al just make that pattern a bit less boiler plate So I guess I wanted to understand the note on the docs before I start using it Cheers john,,zpao,2015-10-23 17:11:50,2015-10-23 17:56:47
IS,Lost IME input when call setState,Hi I have a component like this when I input english in the text it works well but when I input chinese japanese korea charaters with IME it breaks I guess it since I call setState in textChanged seems call jQuery directly it works well The question is calling jQuery to change the DOM maybe is not a good choice is there any way to only refresh some parts of component Many thanks,,,2015-10-24 14:59:10,2015-10-24 16:10:51
IS,return null from a stateless fn component does not throw error using shallow renderer,With a basic React application return null or false inside a stateless function component throws an error But when using the shallow renderer ReactTestUtils createRenderer no error are thrown and everything works as expected It is not consistent The behavior should be the same Here is the error received when returning null inside a stateless fn component using react dom No arender' method found on the returned component instance you may have forgotten to define arender' returned null false from a stateless component or tried to render an element whose type is a function that is not a React component Allowing it would be really great but the error message mentioned it so I guess it is on purpose,,,2015-10-19 23:04:42,2015-10-24 16:18:14
IS,Component not seen as reactElement dom is not defined on server side renderToString,I'm trying to render a very simple hello world component on the server My JSX Babel compiled js file looks like this dom use strict var React require react var ReactDOM require react dom var Title React createClass displayName Title render function render return dom h1 null Hello World module exports React createFactory Title Im getting Invariant Violation error you must pass a valid reactElement If I change createFactory to createElement I get dom is not defined,,"zpao,zpao",2015-10-24 16:34:43,2015-10-24 19:23:56
IS,dangerouslySetInnerHTML escaping raw SVG on server,Hi I created the following component that accepts a raw svg string and transforms it into a react element The component works however on the server the SVG is being escaped,,chicoxyzzy,2015-10-21 14:39:20,2015-10-24 23:51:08
IS,What is the equivalent of v0 13 for React DOM,I'm a web developer using coffeescript and I used to be able to do Is that DOM still available somewhere,,,2015-10-25 15:48:00,2015-10-25 17:29:20
IS,DevTools Make component search faster,If I try to use the Search by Component Name panel it only captures some of my keystrokes I suspect it is burning cycles filtering the list so it is not available to catch the remaining keystrokes Perhaps this could be solved with a web worker Send it searches as you receive the keystrokes let it do the filtering in the background and return the results to the UI thread Just a thought I do not know how the search is implemented but it should certainly not be missing keystrokes,,zpao,2015-10-25 00:58:47,2015-10-26 18:37:52
IS,0 14 Component names displayed as ProxyClass in the React tab in Chrome Dev Tools,In 0 14 do we have to explicitly define displayName in each component Without specifying displayName the component name becomes ProxyClass in the React tab in Chrome Dev Tools Running the latest React Dev Tools,,zpao,2015-10-26 20:31:43,2015-10-26 22:20:22
IS,Cursor jumps to end of controlled input,spicyj The cursor of a controlled input element is jumping to the end whenever I format or modify the value between renders Here is my code creditcard parse formatted creditcardparsenumber string simply turns a number like 4444555566667777 into a card number like 4444 5555 6666 7777 which is a common use case for things like phone numbers etc If I remove call to creditcard parse formatted and just pass this state cardNumber the cursor does not jump But the cursor still jumps even if I pass this state cardNumber '5' as the next value so it seems any modification of the string between renders means middle edits edits before modification point in string cause cursor to jump to end I'm on react v0 14 0 and Chrome 46 The bug seems related to this line of code L61 in ReactInputSelection js because when I comment out that if the bug is fixed curFocusedElem and priorFocusedElement pass the test even though the value has changed,,sophiebits,2015-10-24 00:53:55,2015-10-26 22:48:52
IS,Confusing handling of is within props,Within L108 is is listed as a supported HTMLDOMProperty However including is anywhere in the component means that react treats it as a custom component and will just dump all key value pairs without handling other supported HTMLDOM properties like className etc I came across this when trying to do server side rendering for a third party library that expands is into style I do not expect react to care about the external library overloading is but is it confusing that its listed as a valid HTML property in the release notes but if you use it it also treats the DOM element as custom,,"zpao,zpao",2015-10-27 18:31:54,2015-10-27 18:45:15
IS,onClick not adding handler,I have code like this with babel In the React dev tools it seems that the onClick prop is set to the correct function but when I check what function is actually assigned to the event handler it is just emptyFunction I have process env NODE ENV 'production' set It was working before in 0 13 3 but since upgrading the onClick as stopped working If I use r and select the element with react dev tools and call the handler it works,,"zpao,jimfb",2015-10-24 23:09:42,2015-10-27 20:51:19
IS,Android4 2 2 Compoent is Event failure,Button is onclick event Text box of onChange event will be invalid Later we had to use jQuery event bindings native binding in compoentDidMount and compoentDidUpdate,,"zpao,zpao",2015-10-26 09:58:53,2015-10-28 02:31:27
IS,dangerouslySetInnerHTML inside a textarea,is there any way to do this you can see from the example here what i'm trying to achieve so the emoji is render inside the text area is there any way to dangerouslySetInnerHTML the value of the text area,,fkling,2015-10-28 15:43:32,2015-10-28 15:53:37
IS,Issue with documentation HTML entities,html entities Regarding this This creates a warning Warning Each child in an array or iterator should have a unique key prop Probably not a good idea for the manual to be encouraging a syntax that yields warning messages Is there another approach for this,,"zpao,sophiebits,zpao",2015-10-28 18:47:16,2015-10-28 18:58:56
IS,Accept 'color' property in link tag,In order to use safari is pinned size tab icon we need something like But react does not support the color property Why not to support it Or is there any other way to handle this,,zpao,2015-10-28 19:20:51,2015-10-28 19:21:43
IS,Release 0 14 1,It is time Let is do it I do not think anything left open on the milestone list is enough to block but if fixes come in we will take 'em Changelog could probably be cleaned up a little bit maybe organized differently React DOM Fixed bug where events would not fire in old browsers when using React in development mode Fixed bug preventing use of dangerouslySetInnerHTML with Closure Compiler Advanced Mode Added support for srcLang default and kind attributes for track elements Added support for color attribute Ensured legacy props access on DOM nodes is updated on re renders React Test Utils Add on Fixed scryRenderedDOMComponentsWithClass so it works with SVG React Transition Group Add on Fix bug preventing 0 to be used as a timeout value React on Bower Added react dom js to main to improve compatibility with tooling x cherry pick the commits x finalize changelog x ship it update fiddles,,"zpao,yiminghe,zpao,zpao",2015-10-28 00:40:26,2015-10-28 21:48:33
IS,dangerouslySetInnerHTML escapes slashes,gets turned into Is it possible to avoid this,,jimfb,2015-10-29 05:12:04,2015-10-29 05:24:28
IS,Simplify definition of propTypes default values,Given that a component has defined property types react could also have a reasonable default fallback if a property value has not been defined For bool it could be false for func it could be null and for strings it could be an empty string For required properties you shall not specify the default value,,"jimfb,jimfb",2015-10-29 01:21:22,2015-10-29 09:04:25
IS,Weird components that can not be referred,I use React and Material UI for my app Here is the part of code What I want to do with this code is to generate rows in a table of player list and while a row is tapped a dialog shows up with the data of the row But the two 'TextField is with refs of 'txtName' and 'txtNotes' can not be referred as on the last 2 lines produce errors The pic below is produced by 'console log' in ' onShowInfo' method I added some aref is with random names just to test ee77834e 7a46 4734 8480 2464e1d65382,,"jimfb,jimfb,zpao",2015-10-29 03:31:47,2015-10-29 17:21:08
IS,Suggestion deprecating jsx,I would like to suggest to deprecate jsx format pro easy to match closing tag with eyes fake pro Designer friendly No really designer still have to know everything about javascript to write web page and even more they need to know all javascript tools to build cons It encourage ugly deeply embedded code It create a whole dimension in the ecosystem of javascript Every editor need to have a syntax highlighter formatter linter for it Every language that compiles to javascript might need to support jsx DefinetelyTyped have better support for tsx than ts ReactDOM div do not check properties in ts,,jimfb,2015-10-29 15:50:13,2015-10-29 17:43:27
IS,React no longer works with recent versions of es5 sham 4 1 8 with React 14 1 in IE8,React 14 1 wo not load with es5 sham versions greater than 4 1 7 IE8 React 14 0 will work with any version of es5 sham up to 4 1 15 time of this writing Not sure of this a bug in es5 sham introduced in 4 1 8 I will dig into root cause and follow up,,"zpao,zpao",2015-10-29 11:22:01,2015-10-29 22:41:02
IS,0 14 1 not fire click event on Internet Exproler and Windows 8 or 7,Count up with 0 14 0 But can not count up 0 14 1 I got this issue on IE 10 and 11 Windows 8 7 And Windows 10 IE 11 is move fine,,"jimfb,zpao,zpao,sophiebits",2015-10-29 14:50:09,2015-10-30 00:54:18
IS,0 14 1 performance issues,Heya We are upgrading to React 0 14 1 and when using that in conjunction with Fixed Data Table we seem to have taken a real performance hit What I can see Fixed Data Table has not changed anything other than using the ReactDOM render function instead of React render when upgrading to React 0 14 What is going on,,zpao,2015-10-30 14:04:46,2015-10-30 17:48:44
IS,Is it ok to not using Flux,Hi everybody I'm just started learning React recently and often found myself lost in the limbo when reading about Flux I know it is just the concept about the application architecture to develop website with React But I have an idea that use routing with Express and use React for rendering the view only Is it a good solution And should I abandon Flux Is there any reason why we should use Flux Thanks Huy,,"iamdustan,jimfb",2015-10-30 18:28:16,2015-10-30 18:34:20
IS,Support invalid event,Hi just wondering if the invalid event is currently supported I tried using something like But it does not work I have to manually attach the event handler to the actual DOM node in order to get it working So is the invalid event actually supported If not any plans on supporting it,,"jimfb,zpao",2015-10-30 11:50:23,2015-10-30 19:09:20
IS,checkboxes not reacting for onchange events in DOM when checked prop is provided by default,could not alter the checkboxes when checked attribute is provided,,syranide,2015-10-30 08:03:45,2015-10-30 20:59:23
IS,ReactErrorUtils invokeGuardedCallback appears not work in MS Edge,It looks like Edge does not like that fakeNode is not attached to the body If I append it to the body then remove after removing the listener all is good Obviously in a production build this is not an issue as handler is called directly This was for a 'click' event,,"jimfb,zpao,zpao",2015-10-31 04:54:06,2015-10-31 06:14:10
IS,Prohibited component names,Hi all are the any list of reserved class names I had an issue with a component I named Event It was included in a EventsList component When I tried to filter the list I got this error Are there any other reserved names Cheers,,"edvinerikson,edvinerikson,zpao,zpao",2015-10-31 13:14:45,2015-10-31 18:25:29
IS,OnClick in a tag not working in IE11 after update to 0 14 1,None of my onClick handlers are working in development mode after updating from 0 14 0 to 0 14 1 using IE11 When reverting the code that was changed in ReactErrorUtils js for 5157 I get the onClick handler working again,,"iamdustan,iamdustan",2015-11-02 13:41:30,2015-11-02 14:29:35
IS,putListener dominating ReactPerf printDOM and printWasted,I believe this is a Safari hack I'm seeing putListener get out of control even for elements that have not updated they have rerendered but no change was necessary to the DOM This also is causing weird interactions with react raf batching which we have forked for 0 13 and 0 14 It was working fine in 0 13 but now fast interactions cause findComponentRoot errors as it is attempting to run putListener Example printDOM output,,"STRML,STRML,jimfb,zpao,STRML,STRML,STRML,sophiebits,jimfb,STRML,sophiebits,jimfb,sophiebits,jimfb,jimfb,gaearon,gaearon",2015-10-15 21:48:18,2015-11-02 17:46:45
IS,PropTypes nesting,Hey there We are using redux and putting all of our actions into this props actions Unfortunately this makes it hard to use PropTypes because we are lacking the ability to nest with PropTypes something like Is there a solution for this or a feature upcoming,,zpao,2015-11-02 18:04:06,2015-11-02 18:31:09
IS,react dom includes react,My project uses react react dom and react bootstrap react bootstrap requires react to be a peer dependency react dom includes react as a child dependency So I must install react as a top level dependency in order for react bootstrap to work Now I have two copies of react When I try to use the Modal component in react bootstrap I get the error Uncaught Error Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is render method or you have multiple copies of React loaded I can fix this by deleting the directory node modules react dom node modules react Maybe react dom should be changed so react is a peer dependency instead of a child dependency,,"syranide,syranide,bjrmatos,zpao",2015-10-26 01:42:24,2015-11-02 19:14:29
IS,react native init error,i use react native init but have this problem github com 0 192 30 252 130 errno Operation timed out my node version is 4 0 0 but i can ping github com to be successful Installing react native package from npm npm ERR git clone template Users guods npm git remotes templates mirror git Users guods npm git remotes git github com facebook react git baa2986b Cloning into bare repository ' Users guods npm git remotes git github com facebook react git baa2986b' npm ERR git clone template Users guods npm git remotes templates mirror git Users guods npm git remotes git github com facebook react git baa2986b fatal unable to connect to github com npm ERR git clone template Users guods npm git remotes templates mirror git Users guods npm git remotes git github com facebook react git baa2986b github com 0 192 30 252 130 errno Operation timed out npm ERR Darwin 15 0 0 npm ERR argv Users guods git nvm versions node v4 0 0 bin node Users guods git nvm versions node v4 0 0 bin npm install save react native npm ERR node v4 0 0 npm ERR npm v2 14 2 npm ERR code 128 npm ERR Command failed git clone template Users guods npm git remotes templates mirror git Users guods npm git remotes git github com facebook react git baa2986b npm ERR Cloning into bare repository ' Users guods npm git remotes git github com facebook react git baa2986b' npm ERR fatal unable to connect to github com npm ERR github com 0 192 30 252 130 errno Operation timed out npm ERR npm ERR npm ERR npm ERR If you need help you may report this error at npm ERR npm ERR Please include the following file with any support request npm ERR Users guods project testReact npm debug log ping github com PING github com 192 30 252 130 56 data bytes 64 bytes from 192 30 252 130 icmp seq 0 ttl 42 time 285 963 ms 64 bytes from 192 30 252 130 icmp seq 1 ttl 42 time 437 400 ms 64 bytes from 192 30 252 130 icmp seq 2 ttl 42 time 465 788 ms,,zpao,2015-11-02 02:31:01,2015-11-02 20:07:00
IS,SyntaxError when I trying to compile main js as described in tutorial,I read What i did sudo npm install g browserify npm install save react react dom npm install save babelify touch main js,,"zpao,zpao",2015-11-01 04:27:01,2015-11-02 21:19:19
IS,Event handlers Shadow DOM,Hello React I am currently trying to make events work for React components rendered within a Shadow DOM and find that by putting back those commented lines L64 L77 do work Is there a way to enable this from outside the library right now using some kind of injection such as the ones performed by ReactDOM for instance,,sophiebits,2015-11-02 10:41:35,2015-11-03 01:00:27
IS,Show a friendly error when using TestUtils Simulate with shallow rendering,I'm doing a simple shallow render on a component which has a button a with an onClick handler I can correctly assert most of its properties but I can not get asserting whether the button has been clicked by using TestUtils Simulate click output props children 1 and a sinon spy passed in as handler to work TestUtils does not throw any Invariant Violation or whatever other error the spy just never gets called When I manually call it through this props children 1 props onClick it works Is this expected behavior,,"zpao,sophiebits,sophiebits",2015-10-26 07:58:57,2015-11-03 01:22:07
IS,React freezing Chrome task manager reports 100 cpu on tab 5mb memory increase per second 0 14 0 14 2,Sorry about the vauge description can not think of what to provide except source and a trace stack as I'm rather flummoxed Edited source to convey gist My issue originates w an onClick handler inside Row I'm unsure what the large ammounts of computation mutation could be,,"jimfb,sophiebits,jimfb,gaearon",2015-11-03 01:48:25,2015-11-03 02:43:43
IS,example basic jsx precompile babel example js out dir build failed,ahmlp a1vtgbnywdi j 9 babel version 6 0 15 babel core 6 0 20,,,2015-11-03 10:02:54,2015-11-03 10:10:41
IS,Support for for attribute in a tag,Implementing a solution such as And for test1 allows the label to act on behalf of the checkbox but I can not add a for in jsx,,zpao,2015-11-03 19:35:23,2015-11-03 19:36:44
IS,assertValidProps breaks ' html' name mangling,An alternative that would work is typeof 'undefined' instead of ' html' in Edit Or you could remove the checks in production which I'm not sure is a good idea Also the file is lib ReactDOMComponent js,,"quadrupleslap,syranide,quadrupleslap,zpao",2015-10-24 22:19:37,2015-11-03 22:57:56
IS,componentWillReceiveProps does not detect when an object prop is mutated,When passing an object state from owner to child like this Have not tried this using a non state object 1 Is this React is intended behavior and 2 should it be,,sophiebits,2015-11-03 22:22:57,2015-11-04 00:23:50
IS,React 0 14 Objects invalid children,Why can we have functions be children but not objects In react router you can have multiple route components in such cases instead of this props children you would get this props children name This makes building abstractions much easier so that you always know where to find the components So why functions but not objects,,"sophiebits,sophiebits",2015-11-02 22:52:31,2015-11-04 18:55:21
IS,areact addons test utils' generates warning is deprecated warning,I have require d react addons test utils as specified in the documentation however the following warning is generated Warning require areact addons' is deprecated Access using require areact addons addon ' instead This is due to the fact that this module exports require areact lib ReactTestUtils',,,2015-11-05 00:13:09,2015-11-05 00:56:45
IS,No changelog for 0 14 2,NPM says 0 14 2 is out but I see no sign of it on github A changelog would help me understand whether I should upgrade now or later,,"jimfb,zpao",2015-11-05 00:27:14,2015-11-05 01:40:59
IS,Uncaught ReferenceError React is not defined,Can not inject react js on some sites Example insert in chrome console,,"gaearon,zpao",2015-10-31 22:26:39,2015-11-05 02:29:28
IS,Docs on changing the rendering backend,React famous worked by creating an invisible DOM structure L50 L60 with display none using componentDidMount and related lifecycle methods to create a Famous Scene Graph another tree structure mirroring the structure of the hidden DOM But that is a bit unnecessary all that extra DOM I read somewhere that there can be alternate rendering backends Is there some place I can read about this and how to make an alternate rendering backend that would completely ignore DOM in the case of a scene graph For example suppose I would like to make a scene graph with Three js purely in WebGL where DOM wo not come into play at all,,sophiebits,2015-11-03 18:10:45,2015-11-05 04:11:08
IS,Provide react addons js in distributions,There should be an additional react addons js file in the distribution package In a multi page app there could be pages that need only react js without the addons and some that need the addons as well Currently that means that you add react with addons to all pages to avoid loading the react js portion twice,,"iamdustan,iamdustan,sophiebits,jimfb",2015-10-22 09:01:12,2015-11-05 04:20:13
IS,Should there be a requestUpdate or setState use deep merge,Currently we have forceUpdate But I think a common case is to have deferred rendering in the same way that setState will render after a period of time From what I see forceUpdate renders immediately This is an issue if lets say if you wanted to update two css properties and then render Of course you could use setState however since it uses shallow merging updating states would cause overwriting the previous state Example In order to solve this you could circumvent the state object and create a second object which contains computed styles and render requests could happen through a call to a function like requestUpdate Of course ignoring state and using another object to manage style would create the side effect of state being contained in two objects this is not nice So in the end having deep merge for state would be the best however this obviously is a huge change and may create large performance drawbacks,,"syranide,syranide,syranide,sophiebits",2015-11-04 04:06:57,2015-11-05 04:21:43
IS,Add repository to addons' package json,Follow up for 5243 The react addons packages should have a repository entry in their package json files,,,2015-11-04 14:51:58,2015-11-05 05:29:35
IS,Client side usage of react dom server API,Hi I am in the process of migrating our codebase to React 0 14 x During this I encountered a problem because of the fact that our client side uses React renderToStaticMarkup to render React components and passing the results around as strings I know not ideal but given what our codebase was previously this is sadly needed for us in some cases However given my understanding of the structural changes with react and react dom packages as I can tell I am not supposed to simply call React renderToStaticMarkup any more and the API is not accessible from the react dom package I do not use webpack yet so at the moment using react dom server is not appropriate for me What is the supported way if any of calling React renderToStaticMarkup in the browser using the pre built packages,,gaearon,2015-11-05 11:23:25,2015-11-05 13:59:39
IS,ReactTransitionGroup js 116 Uncaught TypeError Cannot read property 'componentDidAppear' of undefined,Example 0 14 0 Animation React Fork by React Base Fiddle JSX Run another animation during animation it will throw the Uncaught TypeError Please try to run alternately on the link of the example,,"sophiebits,sophiebits",2015-10-22 04:07:12,2015-11-05 19:10:16
IS,API Reference is not very useful,Due to a lot of text not explicit explanation no way to search stuff in the API makes this library extremely hard to use It is very hard for someone to read so much I rather have stuff done,,"zpao,sophiebits",2015-11-05 13:38:23,2015-11-05 19:10:42
IS,Nicer docs site,Have been using React for awhile now and I'm loving it As a front end developer I would like to contribute back to the React community Would like to ask the React core team if you guys are open to simple re skinning and prettifying of the docs page Some ideas I have in mind 1 Make the sidebar items collapsible 2 Mobile friendly 3 More vibrant color theme The changes will not be too drastic mostly playing with CSS An example of my past work in skinning a site Let me know your thoughts I can make a PR to address these issues smile,,"yangshun,sophiebits",2015-11-05 17:54:35,2015-11-05 19:16:23
IS,Inconsistent error messages in Test Utilities functions,I just noticed that findRenderedDOMComponentWithClass returns error with message Did not find exactly one match found 0 for class class name while findRenderedDOMComponentWithTag returns an error message Did not find exactly one match for tag tagname It would be preferrable to have consistent errror messages and I would personally prefer the first format where number of matches are reported in parantheses,,,2015-11-05 11:47:53,2015-11-05 20:03:05
IS,Internet Explorer 9 and ES6 import syntax returns Invalid Component,Hey Just broke a keyboard or two on this bug It seems that using Babel and the ES6 syntax if i declare my app this way Is this a know bug feature This is causing a world of pain inside my App as it is a pretty big app with a lot of components and higher order components Thanks,,zpao,2015-11-06 01:41:39,2015-11-06 02:40:12
IS,react native upgrade does not exist,This page content mentions that I should run npm native upgrade after installing a new version of react native But react native upgrade says there is no such option I'm confused,,chentsulin,2015-11-06 06:09:55,2015-11-06 06:17:51
IS,How to trigger the eventListener that is registered outside of the react component,How to trigger the eventListener that is registered outside of the react component,,jimfb,2015-11-06 08:56:17,2015-11-06 09:31:00
IS,JSX Add Component property shorthand for Component property property,Currently JSX supports the following syntax,,syranide,2015-11-08 08:03:27,2015-11-09 13:07:15
IS,How to test child props without triggering Do not access props of a DOM node 0 14,I have a component whose job it is to add certain properties to its child What is the 0 14 way of testing this PS I test the behavior of Parent doStuff elsewhere but I also need to ensure that the given child gets a reference to this method,,"jimfb,jimfb",2015-11-09 16:05:17,2015-11-09 16:13:01
IS,Can I force react not to update dom between class renders,Here is my problem Using react router 1 0 i'm going to be re rendering trees that are 90 the same We use an external lib for an api that produces video mark up Totally out of our hands They modify the dom and that is how it has to be My problem comes in that when the routing changes it re renders the tree and wipes out the custom DOM put in by the third party api I have tried things like returning false from shouldComponentUpdate always using dangerouslySetInnerHtml html '' to a blank string hoping that react would internally not do diff is on it nothing seems to work Is there anything I can do to stop it,,"jimfb,jimfb,jimfb",2015-11-09 16:12:17,2015-11-09 16:27:23
IS,After calling setState with an ES6 class instance as its argument this state became a plain object,When React component getInitialState method returns an ES6 class instance everything works fine this state in render mthod has the right type But when I call setState with ES6 class instance as its argument this state becomes a plain object react 0 14 2 gulp babel 6 1 0,,jimfb,2015-11-09 09:09:17,2015-11-09 16:32:16
IS,License file is not included in the react and react dom NPM packages,Please add these files with full license text to the NPM distribution packages Unfortunately from the legal standpoint simply specifying the name of the license is not enough because it is unclear where to get the EXACT legally binding text of that license This is a major roadblock on our way to using the module seriously Thanks a lot for the great code and thanks in advance for fixing this blocker,,jimfb,2015-11-09 11:29:20,2015-11-09 17:12:11
IS,Links to docs in changelog not working,This is especially bad because this is the links concerning how to migrate to 0 14 For example on the changelog page under Breaking Changes breaking changes there is a link to the createFragment helper but it points to which does not exist the React cloneElement link in the same section suffers the same fate Possibly others,,,2015-11-08 15:40:46,2015-11-09 19:28:15
IS,How can i change the element is CSS from loop result,I recently developed by using React but i found that can not change the element is CSS the value of certain fields or class name from a loop result For example now i want to remove an element via handleRemove param and change its class name like bounceIn change into bounceOut to produce an animation effects Is there any way to help me to solve this Expecting your answer,,"yangshun,zpao",2015-11-09 03:19:32,2015-11-09 19:32:00
IS,onUpdate onChange OnInput not working with input type range in IE 11 Windows,onChange is working in chrome though Both of the following in working in chrome and not in IE 11 React version react 0 13 x,,"jimfb,zpao",2015-11-07 07:17:41,2015-11-09 19:39:03
IS,React TestUtils PhantomJS Error Invariant Violation A valid ReactComponent must be returned,When I use the Chrome driver everything works but when I use PhantomJS I get this error,,jimfb,2015-11-09 23:57:13,2015-11-10 01:10:39
IS,React dom and Apple TV,I have been playing lately with getting React to work for building client server apps for the new Apple TV so I'm opening this thread just to start the conversation around the issue in case other people are also looking into it For those unfamiliar with the subject the SDK for the new Apple TV lets you build JavaScript applications that get loaded from your server and evaluated in a JS context on the device Now for building interfaces they came up with a DOM implementation and some flavour of XML called TVML that just bridges to native UI components and APIs much like React Native in a way They also have a small JavaScript API called TVJS for creating documents making HTTP calls etc This way of building apps is an alternative to the traditional iOS development that you can also do on the Apple TV with Swift Obj C UIKit and the other frameworks The interesting thing is that the default Apple TV apps like Music TV Shows etc are built as JS client server apps with Browserify and Handlebars templates So at a first try React kind of works on the platform you might need to shim window and document as they are not available but as you start getting into the details you realise there are some limitations to ATV is DOM model For example I just noticed that IDL attributes Content versus IDL attributes are not working so that might be a problem Then some elements are conflicting with HTML elements that have the same name same issue for property names and so on In conclusion I think a custom React renderer for the Apple TV would be the solution but the strange thing is that it would still be a DOM renderer like react dom only configured for ATV is elements and attributes and patched for its DOM implementation is quirks Do you guys think this is feasible,,"jimfb,jimfb,jimfb",2015-11-10 15:16:17,2015-11-10 15:25:55
IS,Input element can not focus and can not edit,Hi guys I get a problem I write a react component When I render the virtual selector to body in bootstrap modal But I can not edit input or focus Online example,,jimfb,2015-11-10 15:36:59,2015-11-10 16:06:43
IS,onChange on text input with placeholder fires without modifications in Internet Explorer,Using IE 11 if one has an input component with a placeholder attribute and an onChange handler the onChange handler will be called when clicking the input without typing anything in just clicking it I made a reproducible case in codepen here If one opens it in IE and look in the console and clicks the input with the placeholder they should see an event from the onChange handler It seems to be a known issue that Microsoft is unwilling to fix However if one of React is goals is to normalize the onChange event as the documentation implies this needs a workaround One possible solution would be to check if the input that triggered an input event is focused at the moment,,"jimfb,syranide,jimfb,sophiebits",2015-11-10 13:31:21,2015-11-10 20:32:58
IS,update tutorial to use callback refs,On the page Refs to Components in the documentation it is stated that React also supports using a string instead of a callback as a ref prop on any component although this approach is mostly legacy at this point Yet the tutorial uses string based refs for the comment box inputs Since the tutorial is aimed at newcomers it may be a good idea to a explain why string based refs are considered legacy and or b use another approach,,"jimfb,zpao,jimfb",2015-11-09 14:59:00,2015-11-10 22:11:58
IS,Allow nonce attribute on script style tags,The nonce attribute is helpful in increasing the coverage of a pages Content Security Policy by allowing some script tags to be evaluated inline without enabling 'unsafe inline' over the entire page Right now I believe the only way to create a script tag to with the nonce attribute is to use dangerouslySetInnerHTML on a parent element,,zpao,2015-11-09 22:17:35,2015-11-10 22:43:57
IS,Warn when duplicate copy of React,Looks like we lost the duplicate react warning due to merging which contained,,"jimfb,sophiebits,jimfb,sophiebits,jimfb",2015-11-10 18:40:04,2015-11-10 23:04:29
IS,Document context in stateless functional components,If you set contextTypes on a functional component the second argument of the function is the parent is context Is this undocumented because it is unsupported and unstable behavior or is it just missing from the documentation as far as I can tell,,"jimfb,yangshun,jimfb,yangshun",2015-11-05 09:58:24,2015-11-10 23:32:22
IS,ReactDOMServer 0 14 0 does not eval on Java 8 Nashorn JavaScript Engine,With the release of 0 14 0 and the modular split the use of ReactDOMServer renderToString in the code instead of the original React renderToString results with an error in Nashorn as it does not support any module system so it is not possible to execute the suggested require areact dom server' The code for testing was obtained from here and modified to use version 0 14 0 instead of 0 13 1 This is being executed on the latest version of Java 8 1 8 0 66 Potentially related to 3037,,"jimfb,sophiebits,Daniel15,sophiebits,sophiebits,sophiebits,Daniel15,sophiebits",2015-10-28 21:45:47,2015-11-11 05:42:58
IS,adapting docs to react rb,I apologize if this is not the best place to ask this but We are getting ready to document our ruby react js adapter react rb and would like to take the current react js docs as the starting point and change the examples etc to use the ruby dsl syntax I believe that this is within the docs creative commons license correct,,"jimfb,zpao",2015-11-11 01:19:31,2015-11-11 18:10:05
IS,Cannot expose component functions,I'm running into an issue with React 0 14 with regards to exposing component functions Perhaps I am just doing something wrong unless this is a stale piece of documentation from an earlier version of React I have a React component that exposes a piece of state as a function e g The console log line results in this error Uncaught TypeError controller getSelections is not a function Am I doing something wrong,,zpao,2015-11-11 18:16:57,2015-11-11 18:24:29
IS,Undocumented Change same instances components are not rerendered anymore,I noticed an undocumented change at least I did not find it from React 0 13 to 0 14 Now React does not rerender the component when it is exactly the same instance i e when you save a reactComponent in a variable look React 0 13 3 React 0 14 2 Even further this is not only using React render if the components below does not have state neither any props and we just try to rerender the same instance with a forceUpdate or setState for example the rendering is skipped look React 0 13 3 React 0 14 2 I could not find this on the react update changelog maybe it falls under Many small performance improvements have been made And just to be clear it does work if your components instantiates a new children on the render method like this React 0 14 2,,"jimfb,zpao,sophiebits",2015-11-11 13:08:41,2015-11-11 19:01:42
IS,TestUtil renderIntoDocument issue with refs,I'm quite unsure where this error is coming from,,jimfb,2015-11-11 19:38:13,2015-11-11 20:16:33
IS,React 0 14 Invariant Violation findComponentRoot after state update,This code works in the first load After the state is updated there is the following error in the console If I remove the reference for title inside defaultMessage prop it works normally again I'm not sure if this is an actual issue with React but I could not understand why the first time works and the second time fails Any help appreciated,,"alansouzati,syranide,alansouzati,alansouzati,zpao",2015-11-11 08:37:11,2015-11-11 23:17:51
IS,ReactDOM render returns null for pure functions,I was thrown off by this behavior figured it warranted an issue I was attempting to ReactDOM findDOMNode the result of ReactDOM render,,jimfb,2015-11-12 06:15:41,2015-11-12 06:22:07
IS,Inline Style interferes with ReactCSSTransitionGroup CSS,,,jimfb,2015-11-12 11:42:33,2015-11-12 12:34:42
IS,componentDidUpdate fires before references are triggered or associated,So I feel like componentDidUpdate and references are executing in the wrong order Background I'm working on a situation where you are in a list of input fields with a blank row of fields at the bottom When you press enter in any field it moves your focus to the next one by talking to a register which keeps track of all the fields and their positions Shift enter goes in reverse as well If you press enter on the final field it kicks off a Flux like action which results in the next blank field being rendered and then I want to move focus to that row So I set up a callback that will fire on the next componentDidUpdate knowing that when that happens I will have access to the new Field which registers itself during componentWillMount That works just fine I can access that component just fine however if I want to use a method to direct focus to a DOM Element within it it will be too early to make use of references seems to indicate that reference binding happens synchronously after Now I could easily get around this by using ReactDOM findDOMNode this and then using querySelector to find my target but that is not a clean React way to go about solving the issue I believe based on what I know of the API that references should be bound executed before componentDidUpdate Mount fires Does this not occur by design mistake or incompatibility with other goals,,"jimfb,sophiebits,jimfb,jedwards1211,jedwards1211,sophiebits",2015-11-11 02:40:39,2015-11-12 15:32:44
IS,ReactCurrentOwner set before constructor call causes false warnings,ReactCurrentOwner is set before the constructor call L157 L161 If a constructor has side effects like a Flux Store dispatch then other components may get their setState called They will log a warning that setState cannot be called from render This warning is misleading because this is not what happened It protects against setState calls from render but what really happens is one component causing a side effect in its constructor leading to other component getting its setState called which should not result in a warning I'm not sure it is worth fixing but something 5302 reminded me about Original issue issuecomment 148385030 Warning message Warning setState Cannot update during an existing state transition such as within render Render methods should be a pure function of props and state Per issue 108755091 the issue is new to 0 14,,"gaearon,jimfb,gaearon,jimfb,acdlite,jimfb,sebmarkbage,sebmarkbage,acdlite,sophiebits",2015-10-29 00:36:03,2015-11-12 17:26:06
IS,Please add source url to react addons npm packages,Please add repository repository property to the React addons like react addons perf It is required to import them as jars at webjars org,,"zpao,zpao",2015-11-12 21:56:06,2015-11-12 22:13:24
IS,Why is this state not available by default,I'm happy to move this question elsewhere if you can point me in the right direction Why do I get an error Uncaught TypeError Cannot read property isomeProperty' of null when I do not call this setState before the initial render Is not this state part of the core React Component API Why would not it be present by default,,"fkling,jimfb",2015-11-13 17:25:54,2015-11-13 18:27:37
IS,What if setState passed the component state to the provided callback,I apologize if this has been discussed before however I was unable to dig anything up I'm proposing the following For a more concrete example this came up in the following PR on ReactRouter An onUpdate prop can be passed to a Router component which it will invoke when ever it updates itself with the new Route state Instead of forwarding along the state in the callback provided to this setState it must be intentionally provided like this setState state this props onUpdate this props onUpdate state I'm happy with a firm no here but when I investigated to see what it would look like to add this to React it seems like part of the trouble is a that there is not a great way to enqueued callbacks with specific parameters in the queue of callbacks managed by a component is updater property I may have this totally wrong I am still learning quite a bit about how queued updates happen At any rate I thought there might be some good conversation around it,,"nhunzaker,nhunzaker,jimfb",2015-11-12 17:26:24,2015-11-13 19:21:14
IS,componentDidMount fired but isMounted false until I release mouse button is released,Context Drag and Drop on a tree of components Dragging between siblings items c1 8 for example works fine for avoiding some bugs 1 I need to access the dragged item dimensions offsetWidth Height it works only if he is mounted but it works fine with 2 items in the same parent But when dragging an item c1 8 d1 8 from one container list to the other one the element gets successively removed from its list and added to the root component then added to the other list I even see componentDidMount being fired in console but its isMounted returns false when continuing to drag over the other list that is what is strange the switching still works but only with 1b so less user friendly When releasing the drag and dragging inside that list it will work well again isMounted will be true Other point onDragEnd is not fired when the parent of drag changes In the code I do nothing particular in onDrop or onDragEnd that could explain why it sudddenly works after releasing the button onDragStart simply sets the dragged component in a global state everything happens in onDragOver 1 when dragging an element over one with smaller or equal dimensions a I switch them instantly else b I wait until I cross the half to avoid infinite switchings,,,2015-11-13 10:18:28,2015-11-13 20:11:00
IS,keyMirror should be exposed,keyMirror as other utils could be exposed as React utils keyMirror or by the way you want many people have to include the package separated and this could be optimized,,"jimfb,zpao",2015-11-14 01:48:33,2015-11-14 02:33:05
IS,React re write is DOM in component with no changes,Hard to search for this wondering if this is intended behavior I have my root component which I call this setState x 1 on It does not change anything in the render Yet chrome seems to flicker the DOM node and I can get it to break on subtree changes image Is this intended or am I just doing something strange,,"jimfb,zpao,zpao",2015-11-14 01:25:38,2015-11-14 17:32:46
IS,Component is not getting rendered if the name does not get started with capital letter,Hi I have this very small react code now I expect it should display the Hello however it does not show anything Again no error message in the console I have tested this code in 0 14 and even in master branch Thanks,,"antoaravinth,antoaravinth,jimfb,zpao,jimfb,zpao",2015-11-14 13:38:27,2015-11-15 19:05:59
IS,Potential Inconsistency in Docs Regarding Dispatcher Waitfor,In the docs flightDispatcher waitFor CountryStore dispatchToken Dispatcher example note absence of callback Elsewhere in the docs Note the specified implementation of dispatcher includes both a CB and a promise return Could these be made more consistent Is there a single canonical example of dispatcher dependency at work,,jimfb,2015-11-16 00:27:16,2015-11-16 04:23:00
IS,dangerouslySetInnerHTML not reconciling for P tags likely due to nested P tags,I noticed when trying to use dangerouslySetInnerHTML for a P tag in a tutorial app I am building it was having weird behaviour when the content was being changed I am able to get the desired behaviour by using a div or span instead I am using React 0 14 2 This might be similar to To view check out this branch Steps to repro Run the app add a post Click the 'edit' icon next to the new post Edit the text and hit 'Update Post' You should see the old post text still displayed along with the newly updated text,,"cody,cody",2015-11-16 06:05:17,2015-11-16 15:55:24
IS,'onDoubleClick' event is invalid when I set 'onMouseDown' event,Who can help me,,"cody,jimfb",2015-11-15 05:27:50,2015-11-16 19:31:51
IS,shouldComponentUpdate and child components,I have a couple wrapper components which dynamically calculate the size and position they need to be Normally this works and performs great with shouldComponentUpdate but as soon as I add children inside these components I can no longer use this method Why Because if i return 'false' for the wrapper needing an update the children never get updated themselves Example JSX Is there any good way around this Only idea I have is to add a new method shouldUpdateChildren like this other question detailed,,jimfb,2015-11-16 22:24:39,2015-11-17 00:16:47
IS,A way to create pure stateless components,I have just discovered that stateless components are not pure You can do,,zpao,2015-11-17 17:31:48,2015-11-17 17:56:10
IS,Npm install peerDependencies fail on update to 0 14 2 fails with its own react dom,Updated react to latest build in order to use the react d3 components library which had a hard dependency and now I get these errors All the versioning below seems as though it should pass the corresponding versioning logic Have uninstalled and reinstalled all node modules make sure have latest versions but nothing working,,"syranide,syranide,syranide,zpao",2015-11-17 14:51:01,2015-11-17 17:58:15
IS,ReactDOMServer not available through globals,Recently some code was moved from React to ReactDOM I get the idea behind this move Before to do server side rendering we had to use React renderToString This is neatly available on the global React object After we have to use ReactDOMServer renderToString The problem with this is that AFAIK the ReactDOMServer object is not available in the global scope So when we do not have access to the require function this is problematic My server side code with Nashorn is currently doing React renderToString and this is still working but for the upgrade to the newest React version I scoured the whole internet and the React source code but have not found a way to gain access to ReactDOMServer without doing,,"jimfb,zpao",2015-11-17 14:36:12,2015-11-17 18:56:59
IS,DOM elements in switched order,I have a Component that among many other things includes this two components in the following order where this props owner is just a boolean The problem is that React prints the Components NewListBox element before the Components ListsMenu in the DOM Here you can see how the DOM looks image the div with class newList is printed above the ul with class lists when the reactids show the order should be the other way around If I change this props owner by true it will print the element in the expected position in the DOM Am I missing something basic here Pretty weird issue,,"zpao,sophiebits,sophiebits,sophiebits,sophiebits,zpao",2015-11-17 21:53:00,2015-11-18 00:30:20
IS,add JSX support for reversed attribute,Wanted to used the reverse attribute for ol tags but it seems like the JSX compiler does not support it Could this be supported so I can use it Would make it easier than creating list numbers on my own Thanks,,,2015-11-06 18:53:31,2015-11-18 07:24:27
IS,Use controlled components in tutorial,Based on some discussions had outside of github we are going to move away from the use of refs in the tutorial and use controlled components instead This is the most reacty way to do what is done in the tutorial and avoids the escape hatch of refs,,"zpao,yangshun,zpao,yangshun,zpao,yangshun,jimfb",2015-11-10 22:46:10,2015-11-19 05:25:11
IS,validateDOMNesting generates warnings for components that return null inside tbody,According to the doc on Render render its ok for components to return null if nothing needs to be rendered but this causes a warning from validateDOMNesting if used inside a tbody,,zpao,2015-11-19 11:43:35,2015-11-19 16:34:34
IS,this props children does not always inherit the context from its parent,I have assumed that the children would always inherit the context from its parent but that is not always the case This works as expected I have also created simple jsfiddle to demonstrate that I would assume that if the Child is inside the parent it should inherit the context of it Is that how it is meant to be And is there a way to change the context so the second example would also work,,gaearon,2015-11-19 16:47:52,2015-11-19 18:53:44
IS,Input defaultValue not always evaluated,When you rerender with two similar views that both contain an input regardless of type defaultValue is not evaluated This only happens when the element tree structure is the same similar up to the input even if the inputs are two different types You can see it in this simple example where the new and old views are inputs inside a div,,"jimfb,sophiebits,jimfb",2015-11-19 18:30:05,2015-11-19 19:45:50
IS,HTMLAudioElement is partially supported and confusing,Attempting to render an audio volume 1 tag Element is rendered but volume attribute not If I understand correctly PR 2094 introduced lots of different attributes and was rejected However presently React violates the principle of least surprise by agreeing to render an HTMLAudioElement but only rendering some of its attributes only those that are included in HTMLDOMPropertyConfig Is there any work planned on the media tags should React be willing to render them only with part of the attributes would not it be better to drop support completely,,"syranide,jimfb,syranide,jimfb,syranide",2015-11-19 11:42:13,2015-11-19 21:17:11
IS,randering large amount of elements is slowly,Recently I have been using React in my project When rendering more than 1000 elements the list is always more than 3000 elements it becomes sluggish I can not find a solution Can you help me,,zpao,2015-11-20 07:45:34,2015-11-20 17:41:04
IS,React Child isNull Ability to check if a component rendered null,Suppose I want a component Concatenate that concatenates it is children together using a separator prop I would like to choose to not render a separator if the corresponding child decides to render null is this possible Is there a React Child isNull functionality,,zpao,2015-11-20 18:03:08,2015-11-20 19:05:02
IS,Separate website for each release,I was working on issue in React Native and found out that React is also having this issue in the website from People often send pull requests which update both code and docs which makes sense However when the PR is merged the docs go live immediately but the code is only released in up to 4 weeks This means the docs are inconsistent with the APIs and CLI commands people get when using React Native,,zpao,2015-11-20 10:27:47,2015-11-20 23:42:03
IS,Creating a new element with key null creates an element with key 'null',Not sure if this is intentional but if I run this If undefined is used as the key the result is the latter above,,"zpao,syranide",2015-11-20 19:16:03,2015-11-20 23:56:05
IS,ReactCSSTransitionGroup throws error when using a timeout and the element has been removed,Using React 0 14 2 With this render method An exception is thrown if this props isVisible becomes false before the transitionAppearTimeout has has elapsed The exception occurs in ReactCSSTransitionGroup handleDoneAppearing where it tries to find the component but this refs is empty I'm guessing that ReactCSSTransitionGroup handleDoneAppearing should just exit early if the components are gone,,,2015-11-18 11:04:14,2015-11-22 16:44:04
IS,Allow to use and as string,I do not like the fact React does not allow to use class and style as inline string attributes Is there a fork or how hard is to modify React to support it The reason is that I do not like to manually rename class to className and without inline styles as string I can not use WebStorm is extract to class feature that is really nice while developing new styles,,zpao,2015-11-21 13:28:37,2015-11-23 02:52:49
IS,React Functional Components,Hello Is it possible to use reacts Lifecycle methods with reacts new functional components from v0 14,,iamdustan,2015-11-22 00:09:20,2015-11-23 19:01:37
IS,in componentDidMount can not throw error,I type some code in the componentDidMount which error is not defined in the console the catch e ReferenceError error is not defined is printed out,,"yangshun,zpao",2015-11-23 08:44:24,2015-11-23 19:04:58
IS,AutoFocus attribute is not triggered on render,Hello The autoFocus attribute is not triggered on a render therefor it is impossible to change the focus with that attribute if there are multiple fields Currently the only way to change the focus is to give the input a ref and change it on componentDidUpdate The autoFocus attribute will only work on the initial render,,zpao,2015-11-23 15:31:18,2015-11-23 19:11:46
IS,React PropTypes node should accept stateless component function,I just replaced some react components that where defined using es6 classes and I am now getting warnings about my react stateless component that are just fuction not being a ReactNode Maybe func should be added Or is there any reason why node does not handle func as well,,zpao,2015-11-22 14:41:41,2015-11-23 20:23:41
IS,Checksum is invalid because of copy entity,I'm using React to render on the server and on the client On the client I'm getting this error message Am I doing something wrong or is this a bug I'm using react 0 14 2 rendered on express viewed in chrome,,zpao,2015-11-23 23:25:33,2015-11-24 00:14:03
IS,failed to parse json,Failed to parse package json data npm ERR package json must be actual JSON not just JavaScript,,"zpao,jimfb",2015-10-24 11:17:53,2015-11-24 06:49:36
IS,Missing CSS Pointer Events,pointerEvents not working feat pointer events,,,2015-11-24 09:26:45,2015-11-24 12:43:40
IS,React Children toArray changes element key,React Children toArray changing the childrens key property ex foo foo In 0 14 sometimes i dont know exactly when but event without toArray i got even weirder keys when i parsing children ex foo foo foo I did not found any mention of these things yet Is it documented somewhere Can i get the original key somehow,,sophiebits,2015-11-24 10:28:19,2015-11-24 22:24:50
IS,Uncaught Error Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is render method or you have multiple copies of React loaded details,Uncaught Error Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is arender' method or you have multiple copies of React loaded details This has been talked about the answer wouldo not run two copies of React ' I got it Here is the thing I'm not running two copies of React I'm building a React component npm module that is installed in a larger project Within my module I'm including React as a peer dependency and it is marked as an external in my webpack config js This has actually been working fine all the time with one exception when my components have refs I have gone so far as to use a document querySelector yikes to get rid of that error message There has to be a better way I'm opening an issue now though because I want to use the react widgets package and it uses refs This is breaking my project Ca not React be smart enough to associate these refs with the running copy of React Am I missing something Thanks Ben,,jimfb,2015-11-24 01:42:28,2015-11-24 22:59:48
IS,Disable a specific warning,Will explain the issue briefly instead of extending React component I have a class which gets state from a getInitialState function if exists This triggers a warning by react Warning getInitialState was defined on SomeComponent a plain JavaScript class This is only supported for classes created using React createClass Did you mean to define a state property instead So my question is is there a way to disable this warning from happening Cheers,,jimfb,2015-11-25 16:05:45,2015-11-25 16:10:57
IS,Does the change of the state always fire the function render,Here is the example but after the second update I found that the values of the inputs can not change according to the state that I pass in the second time I also want to know if there are some UI operation happened during two calls for the render is it possible that React can reserve those for users or just refresh the whole component according the state,,zpao,2015-11-25 09:40:37,2015-11-25 18:43:53
IS,Inputs are deselected when firing callback in onChange,I am having an issue with text based inputs in React 0 14 3 and React DOM 0 14 3 When the onChange event is fired for an input the input will be deselected Here is what this looks like in the UI wtf Here is an example JSBin console of my components There is a Form top level component which describes the fields on the form This component also holds the state of the form and is the only component that extends React Component For each field in the form there is a Field child component which each has a Label and Input child The form also has one Submit component which when clicked will fire an onSubmit function with the state of the form With the exception of Form these components are all stateless functional components The Input components are controlled They get their value from the top level form component The state is properly updated in this top level after the onChange event is fired as you would expect things to typically work with a controlled form This state is then passed down via props to the input I have been trying to figure out what could possibly be the cause of this weird deselection issue but have not made any progress any ideas Thanks,,cody,2015-11-26 21:09:27,2015-11-26 21:35:54
IS,If a component have tag span and a text without any tag the tag will be within span,img width 424 alt a0089a8fb40dfd43f53cd6bc75240248 src img width 432 alt ed50c816b0337fb04c0cc36d33b3f492 src,,"edvinerikson,zpao",2015-11-26 15:36:21,2015-11-26 21:37:13
IS,Singleton React Component,Hey guys So in this application I'm writing there is a component called help section It is basically a box that shows some predefined texts about the component the user is messing with I want to be able to tell my help section component which component to show help for As of now I'm using Flux with some actions and a store This is not too bad and works quite nicely however it is quite a large setup with 2 files defined specifically for this cause There are also a number of other issues that I have experienced such as help section actions dispatching because of other actions which raises a Cannot dispatch in the middle of a dispatch error However if I could define help section as a singleton I could just import helpSection from ' HelpSection and be done with it since I will get the instance of help section All I have to do is expose a method on helpSection that sets the properties I want to change and call it I know it breaks React is unidirectional data flow with a component changing another component but maybe it is worth it sometimes The way I think about it it is sort of a combination of a store some actions and a component into one object A lot of components will only get instantiated once at run time so maybe it will be quite useful in some cases I could not find any reference to this on the web other than in this JSfiddle which seems to work nicely It is a bit unclear IMO Is this a good way to do it I'm quite a novice in JavaScript and React so I might be missing some obvious points hopefully not What do you think about this Thanks for reading P S Sorry for any ambiguousness English is not my native language smile,,"jimfb,zpao",2015-11-27 19:09:19,2015-11-27 19:56:33
IS,Server side rendering of style attribute always causes invalid checksum,I'm working on server side rendering of a React app using Nashorn It is going ok I got a basic skeleton app running However I have been getting this warning a lot Warning React attempted to reuse markup in a container but the checksum was invalid What I find strange is that in most cases the problem seems to revolve around the style attribute Instead figure out why the markup being generated is different on the client or server client ScrollSpacerBefore style height 0 da server ScrollSpacerBefore data reactid fwzq0 The fragment style height 0 is missing from the server rendered piece If I remove setting the style prop the issue is always resolved This gives me the warning notice that I commented out the two style props Is this intended behavior If so what can I do about it,,"zpao,zpao,zpao,zpao",2015-11-28 11:00:55,2015-11-28 19:29:18
IS,I have a react native bundle server When process multi request got Errors at Create ReactPackager step,stdout bundle Created ReactPackager stderr uncaught error Error Error Unable to find file with path null at Fastfs readFile Users star Work reactnative node modules react native packager react packager src DependencyResolver fastfs js 97 13 at Module read Users star Work reactnative node modules react native packager react packager src DependencyResolver Module js 85 36 at Users star Work reactnative node modules react native packager react packager src DependencyResolver Module js 71 12 at Cache get Users star Work reactnative node modules react native packager react packager src Cache index js 68 36 at Module getDependencies Users star Work reactnative node modules react native packager react packager src DependencyResolver Module js 70 24 at collect Users star Work reactnative node modules react native packager react packager src DependencyResolver DependencyGraph ResolutionRequest js 108 20 at Users star Work reactnative node modules react native packager react packager src DependencyResolver DependencyGraph ResolutionRequest js 145 14 at tryCallOne Users star Work reactnative node modules react native node modules promise lib core js 37 12 at Users star Work reactnative node modules react native node modules promise lib core js 103 15 at flush Users star Work reactnative node modules react native node modules promise node modules asap raw js 50 29 See logs var folders kh xrfg 8hs0psd8w1czfh4vcy40000gn T react packager log at SocketClient handleMessage Users star Work reactnative node modules react native packager react packager src SocketInterface SocketClient js 131 23 at BunserBuf anonymous Users star Work reactnative node modules react native packager react packager src SocketInterface SocketClient js 52 42 at emitOne events js 77 13 at BunserBuf emit events js 169 7 at BunserBuf process Users star Work reactnative node modules react native node modules bser index js 289 10 at Users star Work reactnative node modules react native node modules bser index js 244 12 at doNTCallback0 node js 407 9 at process tickCallback node js 336 13 This is why how to slove it,,zpao,2015-11-30 07:15:55,2015-11-30 17:35:44
IS,A way to error if props are passed that are not in PropTypes,I have found that I have accidentally been specifying a few components with props that are not being used in those components It would be nice if there was a way to have a runtime check for React PropTypes that did not allow additional props being passed,,"TheSavior,zpao",2015-11-29 01:08:42,2015-11-30 17:52:08
IS,Replace scry with a less fancy word,I think scryRenderedDOMComponentsWithClass and all other methods starting with scry should be deprecated in favor of more obvious names like findRenderedDOMComponentsWithClass,,jimfb,2015-11-30 22:02:57,2015-11-30 22:12:03
IS,React component got lost from the attached html node when Angular ui router changed state,At the first time of Angular ui router runs up the default ui view the React component is working fine but after state changed the React component just lost from the dom Any clues are greatly appreciated,,zpao,2015-11-30 22:20:02,2015-11-30 22:30:33
IS,Component Test How to test a child component already has a function bind prop,Hi guys I got a case But because i am using this onPageSelect bind this so i can not expect it true Will React automatically bind this and in render i do not need to use bind here,,"lasekio,sophiebits",2015-11-26 10:41:43,2015-11-30 22:50:51
IS,v0 14 3 Inside render is return any comments placed above the first line cause various errors,Using v0 14 3 one comment placed on first line of render is return causes nothing to be rendered in browser My code causing this,,"zpao,jimfb",2015-11-30 22:56:17,2015-11-30 23:42:12
IS,Android emulator displays weird error messages,Delete please I confused this repository with react native,,,2015-12-01 14:52:13,2015-12-01 14:58:37
IS,OnMouseOver does not work on Chrome,I'm using react 0 14 3 and have something like On Firefox 44 0a1 the onMouseMove works but on Chrome 46 0 2490 86 64 bit does not,,"jimfb,gaearon",2015-12-01 11:45:58,2015-12-01 18:59:46
IS,If it is isomorphic code why do you require different code on the server,In the docs you have an example for server side code and an example for client side code I thought isomorphic code was supposed to work on both automatically,,"zwhitchcox,jimfb,zwhitchcox,jimfb,zwhitchcox,iamdustan",2015-12-01 19:21:29,2015-12-01 19:38:10
IS,onMouseUp not triggered on right click context menu,Explanation of the codepen Click on link there will be counter increment onMouseDown Each onMouseDown and onMouseUp event is logged Try clicking with Right Mouse Button open context menu for link onMouseDown is triggered with counter incremented but onMouseUp is skipped entirely onmouseup issue I found this old webkit bug resolved if it helps,,"sophiebits,jimfb",2015-11-23 03:25:41,2015-12-01 22:01:23
IS,very slow first user click handler,Hello At this screen you can see profiler timeline of react 0 13 app First click handler is very slow screenshot 7 What do you think about it,,,2015-12-04 13:53:18,2015-12-04 14:10:02
IS,IE11 input onChange on mounting,onChange event is fired on mounting input component to DOM on IE11 It does not occur on IE9 Chrome Firefox New value from event is the same as actual nothing has changed Scenario 1 Initial app render 2 Mounting component with nested input on user event action hasChanged Reproduction 1 React 0 14 2 0 14 3 min and non min 2 Browser only IE11 and probably IE10 not tested 3 Only for specific component structures I could not find a minimum structure simple to reproduce My input looks like this input ref input title this props title type text value placeholder placeholder className form control onChange this handleChange onBlur this handleBlur onFocus this handleFocus onMouseDown this handleMouseDown Stack trace from IE11 using non minified react with addons onChange event handleChange Line 112 Col 13 NumericInput jsx LinkedValueUtils executeOnChange Line 3582 Col 7 react with addons js handleChange Line 7982 Col 3 react with addons js ReactErrorUtils invokeGuardedCallback Line 10094 Col 7 react with addons js executeDispatch Line 2827 Col 5 react with addons js executeDispatchesInOrder Line 2850 Col 5 react with addons js executeDispatchesAndRelease Line 2290 Col 5 react with addons js executeDispatchesAndReleaseTopLevel Line 2301 Col 3 react with addons js forEachAccumulated Line 17829 Col 5 react with addons js EventPluginHub processEventQueue Line 2506 Col 7 react with addons js runEventQueueInBatch Line 10119 Col 3 react with addons js ReactEventEmitterMixin handleTopLevel Line 10135 Col 5 react with addons js handleTopLevelWithoutPath Line 10233 Col 5 react with addons js handleTopLevelImpl Line 10213 Col 3 react with addons js Mixin perform Line 17256 Col 7 react with addons js ReactDefaultBatchingStrategy batchedUpdates Line 8850 Col 7 react with addons js batchedUpdates Line 15332 Col 3 react with addons js ReactEventListener dispatchEvent Line 10344 Col 7 react with addons js,,"karczk,syranide,karczk",2015-12-04 12:13:20,2015-12-04 15:01:45
IS,Make style attribute processing a plugin custom attribute handling,I'm experimenting with a different way of applying styles My approach is easily applied with Angular using a directive attribute but React is my library of choice Radium is a similar example They wrap the render function in order to apply their logic for styling I suspect there is an opportunity to improve the modularity of React by having an API to set custom attribute handlers and checking running them when React processes a node is attributes The current React style attribute processing could be done by a plugin rather than having the behavior hardcoded in the library This should make it much easier for libraries like Radium and after glancing over the source it looks to be easy to implement this behavior I would be glad to work on this and to submit a PR if it is agreed this is a good idea Here is a quick suggestion for the API,,,2015-10-25 23:30:21,2015-12-04 16:39:27
IS,Controlled select not reflecting correct state after selection,Case js output I have a select with a value depending on the state When I select the 'baz' item in the combobox and do not do anything in the onChange handler the combobox suddenly displays the first element even though the state is still the same So the state of the combobox is inconsistent with the state of its 'value' property This seems to happen in at least Chrome and Safari,,,2015-12-03 18:22:01,2015-12-04 19:12:23
IS,Rendering a snap svg image,Hi I'm new to React I'm looking use snap svg for rendering some svg images into some views however I'm not quite sure how best to set this up I'm using ec6 and the Babel transpiler Could you explain the best way to add snap svg so that it can render to a view please Really looking for best practise here rather than me doing it completely the wrong way Thanks,,jimfb,2015-12-04 21:24:03,2015-12-04 23:23:55
IS,could ReactCSSTransitionGroup use getComputedStyle to get transition timeouts automatically,While reading about the new transitionEnterTimeout etc in ReactCSSTransitionGroup a thought struck me why not just get the timeout directly from CSS with getComputedStyle once the transitioning classes have been applied to a transition group child Does anyone foresee a problem with this approach,,"jedwards1211,sophiebits,gaearon,gaearon",2015-12-01 15:28:59,2015-12-05 06:27:29
IS,Always remove keys from children in shallow rendering,I have a component which alters the children with React Children map Because of React Children map the keys differ using this props children would work fine but I want be able to alter them Should shallow rendering try harder to remove all keys or is there something I'm doing wrong,,sophiebits,2015-12-04 02:35:57,2015-12-05 12:19:57
IS,Hard to catch errors in React render,This is related to 2461 Essentially if we wrap a render call in a try catch this works the first time It seems like when React render is called a second time the update case it does not work It seems that React render is async when updating an existing component tree I may be missing something but it seems like this leaves no way for developers to catch errors when rendering children components I have a JSBin demoing this issue here console output,,jimfb,2015-11-26 01:25:51,2015-12-06 04:48:29
IS,dangerouslySetInnerHTML does not apply the style or properties,Hi guys got an issue on dangerouslySetInnerHTML my problem is it decode the HTML entities but it does not apply the style or properties here Thanks in advance guys,,jimfb,2015-12-07 04:31:59,2015-12-07 04:36:52
IS,Arrow function event callback invoked after target element has been removed,This results in an invariant violation findComponentRoot 0 2 1 Unable to find element I have an example app 100 lines that reproduces the issue To reproduce it start the app and select a user from the radio button list From the call stack at the time of the invariant violation it looks like React is batching click events My guess is that at the time when the batch is being processed the target element 0 2 1 has been removed from the DOM but its click handler arrow function has not been removed from the event processing queue I tried testing some variations for example setting state once in onUserSelect and using a bound method instead of an arrow function to define the event handler In both those cases the invariant violation did not occur,,,2015-11-29 08:30:06,2015-12-07 08:13:45
IS,WebkitInputPlaceholder,WebkitInputPlaceholder seems not to work If i add simple css not doing it is job Anyone has same issue It is not very popular CSS attribute but i need to have it for customization options BTW do not you think that react could have cross browser support for those prefixed css stuff and remove WebkitInput Moz and ms prefix all together React let is not to think about DOM too much but still i have to think about browser prefixes,,"iamdustan,iamdustan,cody,zpao,zpao",2015-12-07 13:57:20,2015-12-07 18:31:23
IS,Event bubbling of onScroll does not appear consistent with the native behavior,I have two nested elements that can be scrolled but I only want to listen to the parent scroll event When the textarea is scrolled the event bubbles to the parent onScroll event Here is a working example Bug feature It appears like it ought not bubble according to the spec event type scroll My workaround is to verify the target element when handling the scroll event or maybe preventing the textarea from sending it is scroll events Tested with React 0 14 3 Chrome IE11,,"jimfb,sophiebits",2015-12-07 19:19:18,2015-12-08 02:09:04
IS,react addons update 0 14 3 requires a peer of react 0 14 3 but none was installed,I get react addons update 0 14 3 requires a peer of react 0 14 3 but none was installed error but I am on latests react update why is this npm install react addons update save not working,,zpao,2015-12-08 08:19:26,2015-12-08 18:06:45
IS,React Virtual DOM v 0 13 2 on ios,Hi I have sorting for table It works as expected if site opened at desktop browser or android device but on ios 8 4 9 1 browsers safari chrome nothing happens only sort icon changes state Idea I have sorted source of items each of them map with custom ItemRow component which implements shouldComponentUpdate to avoid unnecessary renderings on sort order change What have i missed for ios browsers,,jimfb,2015-12-08 15:58:06,2015-12-09 10:43:01
IS,Stop showing warnings as errors,I can not debug my own code because of the warnings spam The warning spam is beyond my control because react router is having conflicts with history that they have not resolved It is very frustrating to experience this 2015 12 09 at 3 36 pm without having any recourse short of installing out of date deps Show warnings as warnings That is what console warning is for,,"conorhastings,zpao,gaearon,brigand",2015-12-09 23:48:02,2015-12-10 04:55:39
IS,delete,oops sorry wrong place,,,2015-12-10 09:58:11,2015-12-10 10:04:52
IS,Anchor Download attribute not handling filename correct,According to w3c attr hyperlink download if the download attribute is set the download dialog box should prompt with the filename set in that attribute and not the file referred to in href I have only tried with react 0 14 2 but it does not seem like there have been any change fixing this issue in the master branch Example a href download image jpg Download a Expected behavior A browser download dialog box with image jpg Actual behavior A browser download dialog box with test jpg,,syranide,2015-12-10 11:10:40,2015-12-10 12:17:13
IS,Change devtools install message on file URLs,When visiting a file URL with the devtools installed in Chrome you get Download the React DevTools for a better development experience because they do not work with file URLs That might be fixed on the Chrome side too but we could improve the message here to say something like Download the React DevTools and use an HTTP server instead of a file URL for a better development experience,,"sophiebits,sophiebits",2015-12-05 17:37:33,2015-12-10 16:55:57
IS,Way to disable the getInitialState warning in ES6,I really like the convenience of the getInitialState API in ES5 react so I decided to reimplement it in a simple wrapper around React Component but I get an annoying warning Is there a way to disable this warning since I'm doing it intentionally and providing my own functionality,,"jimfb,jimfb,syranide,jimfb,syranide",2015-12-10 17:45:29,2015-12-10 18:08:01
IS,TestUtils findRenderedComponentWithType does not work with functional stateless component,I have just changed a component from class Header extends React Component to const Header props JSX here Now one of my tests is failing because it can not find an instance of that component where there should be one This line of code I'm guessing it is because the function that I'm importing in my test file i e Header is not the same one that was used to create the component in my actual code because each place that imports a function gets its own instance of it Which means that the types never match according to TestUtils And before it must have worked because ES6 classes are unique somehow so you always import the same thing Is this expected behaviour when using functional components or is there something I'm missing,,jimfb,2015-11-27 07:32:19,2015-12-11 17:33:36
IS,TypeError inst render is not a function when testing stateless functional components,Functional component which looks like this React 0 14 3 JEST 0 8 0 npm 3 5 2 node 5 2 Any suggestions on how to get rid of this,,"jimfb,jimfb",2015-12-10 12:08:17,2015-12-11 17:35:57
IS,image request pending while frequently refreshing page,i use server rendering and write dynamic value in render function such as Date now this may not be proper and react shows warning in console React attempted to reuse markup in a container but the checksum was invalid if i refresh tab frequently image request in the tab will be pending the problem dose not disappear even after i remove the dynamic value env React 0 14 2 Chrome 47 OSX 10 11 1 babel 5 x,,jimfb,2015-12-11 07:43:07,2015-12-11 18:49:21
IS,Inline event handlers can get lost,I was a bit hacking the render function with this function the components injected contain a class column so if I keep the extra wrapping div is with data region it can breaks the UI So I used the function above but what is weird is the inline event handler do not work anymore it works with addEventHandler though but the style are preserved that seems inconsistent,,,2015-12-10 15:54:07,2015-12-11 19:53:14
IS,Warning validateDOMNesting tr cannot appear as a child of table,Using react and react dom v0 14 3 Have a component which renders Getting an error message in console Warning validateDOMNesting tr cannot appear as a child of table See ProductDetails table tr Add a tbody to your code to match the DOM tree generated by the browser Any ideas why,,cody,2015-12-12 18:32:05,2015-12-12 19:03:58
IS,How to use server side rendering in React in Expressjs app,Documentation does not have neither any examples nor links to examples I want to know how step by step to use React on a server in an Expressjs application How component files should look how they are connected to templates and layouts how Expressjs' response render 'template' should behave if I render react on server how to include React components in a template should components be compiled in advance and many other questions In particularly I have a Dust js template that is rendered this way in a controller And now I want to know how to use React on a server How I need to change my current routine to compile render react AND my template on a server For now when I use ReactDOMServer renderToString and ReactDOMServer renderToStaticMarkup I get these errors and I do not know what does it mean because React documentation does not have any errors explanations Error Invariant Violation renderToStaticMarkup You must pass a valid ReactElement TypeError Cannot read property ' reactAutoBindMap' of undefined,,"iamdustan,jimfb",2015-12-14 05:13:46,2015-12-14 16:50:14
IS,Stateless Component Performance,Are stateless components optimized using React createElement so they arent re rendered if the props havent changed stateless functions If so it would be nice to mention that in the docs Because then there is a significant difference between the following And it may not seem evident to someone thinking that they are just functions,,jimfb,2015-12-14 21:06:07,2015-12-14 21:38:34
IS,ES6 rules not allowed static properties in classes only method,see more,,jimfb,2015-12-14 21:32:40,2015-12-14 21:45:45
IS,Issues with autoCorrect attribute set as property,Hey As far as I can see the autoCorrect attribute are set as an HTML property L194 This can give issues with Input elements Check this Chrome 46 0 2464 0 autocorrect in document createElement 'input' false Safari 8 0 7 autocorrect in document createElement 'input' false Mobile Safari iOS 8 4 simulator autocorrect in document createElement 'input' true There are identical issues with some other browsers as well This is not tested on iOS 9 x,,"zpao,syranide",2015-11-10 06:52:58,2015-12-14 22:11:15
IS,React cloneElement breaks children lifecycle events,I will try to make this as easy to understand but will probably be pretty lengthy I'm in the process of converting my Toolkit library to React and started with the Accordion component This Accordion his 4 components the Accordion parent wrapper which handles state events etc the AccordionItem which is nested within Accordion and the AccordionHeader and AccordionSection which are rendered within AccordionItem This can be seen here very rough And can be implemented as such The issue I'm running into is How do I pass props and information from the parent Accordion to the AccordionItem children seeing as how those are implemented manually by a developer and not generated by the parent component I simply can not define explicit props The way I currently solved this is by cloning all the children and passing custom props as seen here and suggested all over Google L154 The problem with this approach is that the children are re cloned every time the parent renders which breaks all the child lifecycle events Each lifecycle event like componentWillReceiveProps will receive all the same props every render making it extremely difficult to see what exactly changed On top of this constantly re cloning everything seems like an expensive process I also tried modifying the child is props through React Children map but they are all read only of course which is quite annoying in this instance I tried cloning the children only on the first render and attempting to update single props on each subsequent render but that turned out to be really difficult or nigh impossible I thought about using an event system from within the parent but how can I hook up the children to listen to it Still could not figure that out I'm now looking at contexts but they seem very new and unstable I feel like this is such a basic and common use case that it should be supported yet it is a giant pain right now I'm not the only one having this issue either it is all over StackOverflow So what exactly is the best approach to solving this Contexts Deal with the cloning issue Any advice would be appreciated,,"milesj,jimfb,milesj,jimfb,milesj",2015-12-14 20:34:09,2015-12-14 22:28:34
IS,React JS display all data in the text field for particular selected ID,,,jimfb,2015-12-15 09:29:35,2015-12-15 12:17:26
IS,any plan to de couple react dom from react,Since react dom introduced I am sorry it is really buggy to me how to bundle React in my projects because the following line in index js Because usually I bundle react in a site core js for all other app in the website the site core js is completely independent It use browserify to expose react for other module to require If some components want react and some components want react addons till the end you have to require react addons The component only need react will get nothing so I expose react dist react with addons min js as react for all Now the problem is react com always want to require react lib ReactDOM it will require a duplicated React when i bundle react com I see require areact lib ReactDOM' as a temp solution so I am asking if any plan to de couple react dom from react Sorry for asking,,"gaearon,zpao",2015-12-15 13:50:00,2015-12-15 22:29:50
IS,remove install warning that react tools prefers to be installed globally,NPM runs package script calls npm test npm run yourownsscript npm postinstall etc with the execution environment appended with the node modules dir so that CLI packages do not need to be installed globally to work propery Currently there is an installation warning npm WARN prefer global react tools 0 13 3 should be installed with g but this has not been necessary for a few NPM major versions now so it is worth removing that warning to keep the install log clean,,"zpao,brigand,zpao",2015-12-15 17:20:44,2015-12-15 22:39:05
IS,BUG SyntaxError unexpected token,I'm getting a syntax error with this code The error happens on the line that says width self iconButtonSize Have a written the comments incorrectly If not this may be a bug with Babel is transformer,,,2015-12-15 23:16:15,2015-12-15 23:17:04
IS,Changelog can upcoming release changes be added,When I check the diff between the current last stable release and the upcoming one in master branch There is a LOT of changes Could the Changelog file be updated all along the dev process This way should be possible to anticipate deprecations for example,,"jimfb,zpao",2015-12-16 13:23:52,2015-12-16 13:49:27
IS,style property lineHeight pixels problem,Hello When I am setting a lineHeight as a number the value in the DOM is not set in pixels It would be great if it will work like height and set the value in the DOM in pixels Attached a jsfiddle link Thanks,,yangshun,2015-12-16 15:46:25,2015-12-16 17:46:29
IS,How to get the index of clicked element,I have some list item and I want know which one is clicked by user so I set onClik on every li item and I user event target to get the node clicked but I get this issue my li items has children nodes when user click the children inside the li element event target is not the element I want how do I fix it my code but I do not think it is a elegant way,,"yangshun,jimfb,zpao,jimfb",2015-12-16 13:02:56,2015-12-16 18:50:29
IS,if DEV warning,I have noticed that calls to the warning function often is wrapped in a if DEV conditional which will be compiled down to redundant development 'production' gates in the build process E g this code from EventPropagators js It does not matter in the end since that whole block will be removed by the dead code elimination in Uglify but I guess the source files could be cleaned up to do not have all those if DEV checks or am I missing something,,"jonathanp,conorhastings,jonathanp,zpao,jonathanp",2015-12-15 04:49:21,2015-12-16 20:08:01
IS,Unclear documentation about generating production build,It is mentioned in the react downloads page that NODE ENV needs to be set to 'production' for development warnings to be disabled And it suggests using webpack DefinePlugin After searching for quite a bit I found from is webpack howto project that I could declare it like this Setting NODE ENV production actually increases the file size,,zpao,2015-12-16 09:11:39,2015-12-16 20:25:28
IS,Warn if people pass in mutated props,Having the constructor passing super a props object that differs in object equality and or shallow compare from the original is illegal because We should have a warning for that because it is reasonable for someone to assume they could extend a component and modify the props without considering the ramifications and the bug wo not show up in their initial render test but will show up when the component updates,,"jimfb,prometheansacrifice,jimfb",2015-10-30 05:53:44,2015-12-17 00:09:33
IS,Click events delayed until after render causing clicks on incorrect nodes,I have got a weird one here which will take a bit to explain In my app we have a filter drop down menu which when opened shows options which appears over a large chunk of content which is composed of a number of clickable tiles one of which appears underneath the filter menu When the filter menu is opened and clicked react is watching an onClick event which responds by doing event preventDefault and event stopPropagation then does a setState triggering the URL to update and all of the tiles to re render in a blocking manner as per React is way of life This works just fine with a single click The tricky part comes when two or more clicks happen on this dead dropdown menu element while all of the rest of the page is re rendering Since the tiles are numerous and all contain complex graphs the page takes upwards 2 seconds to render on my new Macbook Pro blocking the UI for that entire time while React executes a gigantic amount of pure javascript to re calculate render these graphs image Oof Once all of those graphs are re calculated and that gigantic blocking function completes all additional clicks on that menu all then execute but not in the way I would expect Instead of clicking on the menu some more they now seem to click on whatever appeared as a result of the re rendering which in this case are clickable tiles and the double click now causes the app to switch pages again to view details for that tile It seems as though React is keeping track of the X Y coordinates of the click and applying them to whatever is there after the re render happens Things I have tried but have not helped tried capturing the click on many levels of the filter drop down menu to try to prevent event propogation but realized it was not even clicking on the menu deferred executing the setState so that hopefully the clicks could pile up before rendering All this solved was making the menu go away and then you would just keep clicking on the tiles that are there before the re render but then once it re rendered it actually clicked on the new tiles So confusing Is this expected behavior I understand that the events are being queued until later but I would expect the click events to apply to the elements that were there when the events happened not on whatever shows up after the render If this is expected why and do you have suggestions for working around this,,"jimfb,syranide",2015-12-17 01:04:01,2015-12-17 02:10:09
IS,Remove react lib webcomponents js from NPM package,In React 0 13 x this file was not shipped as part of the NPM package it looks like some changes happened in the build system since and the file is now being shipped to NPM perhaps unintentionally Some less sophisticated build systems that do not ignore unused files might be bundling it for the client Perhaps this is not the only such change It could be worth investigating if there are other unused files,,zpao,2015-12-17 00:31:34,2015-12-17 02:57:14
IS,Invalid string style definition breaks IE 11 and Safari 8,I had a pesky bug that was hard to track down where React was defining the style key twice on an element I finally discovered that it was because I had defined an element like this Clearly a mistake typo on my part but in my production code it caused a duplicate style entry in the object which breaks IE 11 and Safari 8 It would have been nice to see an invariant warning about this or something It may be because I'm using optimisation react constantElements not sure,,zpao,2015-12-17 04:46:03,2015-12-17 05:32:42
IS,How would one pass LaTeX code into a component,I have the fairly rare but given the internet by no means unusual situation where I need to embed LaTeX code that needs to be interpreted later by a MathJax or KaTeX etc The following code does not work due to JSX intepretation of the bits inside,,"jimfb,jimfb",2015-12-18 01:53:51,2015-12-18 01:55:09
IS,TestUtils shallowRenderer does not automatically call componentDidMount after that,Hi I got a case When i try to use shallowRenderer to test this component ex test console log has been called It wo not work component jsx,,"jimfb,jimfb",2015-12-18 08:34:33,2015-12-18 16:59:37
IS,Consequences of unsynchronized client server renders,What are the consequences when a client render is out of sync with a server render For example I have a button which I want users with JavaScript disabled to be able to access but I do not want it when the React client app takes over Or I would like to minimize file size by using renderToStaticMarkup instead of renderToString So my two questions can basically be summarized as what are the performance and other consequences of Rendering a slightly different dom tree on the server Mounting on a non empty dom which does not have data react id s,,"zpao,jimfb",2015-12-19 16:17:18,2015-12-19 17:57:28
IS,diff patch with markdown preview,When I preview huge markdown file with changes dangerouslySetInnerHTML is very slow can I use react to smart innerHTML I do not know how to do it thx,,"yangshun,jimfb",2015-12-22 12:16:25,2015-12-22 17:33:57
IS,Calling setState in render causes infinite loop,This may seem really silly to do to call setState in render However it is possible for this to happen if a component has a callback which is being called immediately during render and in your callback handler you call setState,,"jimfb,jimfb,sophiebits,sophiebits,sophiebits,gaearon",2015-12-03 15:33:09,2015-12-22 18:49:17
IS,Server and Client render the same markup but React still indicates checksum invalid,screenshot 2015 12 22 15 57 53,,jimfb,2015-12-22 21:58:05,2015-12-22 22:11:26
IS,Error Invariant Violation findAllInRenderedTree instance must be a composite component,Hello all I am writing test cases for a project I am new in JEST and have taken a long time to configure it After few days when I started with writing test case I written a test case as below mentioned Please help me to resolve this problem Thanks Jameer Khan,,zpao,2015-12-23 09:13:36,2015-12-23 19:49:09
IS,Add code coverage reporting,Jest can do this and we can report through coveralls or code climate it does not matter This should not require too much work but will need some finishing touches by me or Ben for the TravisCI integration I will plan to do this soon if nobody else jumps on it,,"zpao,zpao,jdalton,zpao,zpao",2015-12-21 19:52:38,2015-12-23 20:24:17
IS,Support SVG stroke linejoin attribute,Support SVG stroke linejoin attribute,,gaearon,2015-12-23 18:43:24,2015-12-24 20:10:14
IS,SVG attributes and ARIA attributes with different pattern,I have the following JSX sample which is a SVG element In raw HTML strokeWidth is represented as stroke width It seems to me that all JSX attributes follow the camel case format So I immediately thought on adding ariaLabel instead of aria label Question Is there a pattern for JSX attributes If yes why aria does not follow this pattern In fact I like the idea of having stroke so that I do not have to preprocess my raw svg to reactjs I understand that this could be the expected behavior but I'm just trying to understand why the patterns are different for aria and svg,,"alansouzati,edvinerikson,gaearon,alansouzati,alansouzati",2015-12-07 06:06:14,2015-12-25 19:17:30
IS,SVG attributes support is missing the filter attribute,SVG attributes support is missing the filter attribute which is the only cross browser way to apply SVG filters IE and Edge,,gaearon,2015-12-06 15:55:05,2015-12-25 19:18:18
IS,SVG attributes set with no namespace,Say we have a view rendering use xlinkHref id in a loop First render displays all instances just fine but newly appended use is would not show Also calling getAttributeNS '' 'href' on them would return null while returning id for initial nodes Here is JSBin example js output with reproducible issue,,"gaearon,gaearon,gaearon,sophiebits",2015-12-25 08:03:12,2015-12-25 21:39:27
IS,React props change object to array,,,,2015-12-28 07:15:19,2015-12-28 07:34:22
IS,can not use variable containing html to set inner contents of tag,So I'm getting an error from babel when trying to use the DangerouslySet inner html for a div I'm using a gulpfile to watch my jsx files gulpfile,,yangshun,2015-12-29 01:39:03,2015-12-29 08:18:34
IS,wrong version in npm,after doing npm update I have react and react dom 0 14 5 instead of 0 14 4 the versions at npm are indeed 0 14 5,,"chicoxyzzy,chicoxyzzy,sophiebits",2015-12-29 22:53:53,2015-12-29 23:25:45
IS,Better tools to debug needed,Better tools to debug needed rather than the current Chrome React Dev Tools,,zpao,2015-12-30 00:58:55,2015-12-30 01:01:47
IS,react only updates dom diff ignore state detail change,I came across a problem while using react when i change state which is an array but did not change the dom based on the array the component did not updates I suggest it is because of the dom diff algrithom so is there a way to update details in a dom,,jimfb,2015-11-24 15:04:35,2015-12-30 05:57:01
IS,Copyright messages need to be updated each year,Previously copyright messages needed to be updated every year see 1006 and 2995 To prevent the need for yearly copyright message updates touching almost every file adopt the same copyright message as React Native Copyright 2013 2015 becomes Copyright 2013 present,,rickbeerendonk,2015-12-29 19:48:22,2015-12-30 07:24:24
IS,Way to create pluggable Decorating Component,How is it possible to make pluggable AOP style component which transforms props and transmits it to child More precisely how to pass props to child element in parent render method I want to use it like this However when i do this react renders child element without data props UPD Solution should have used React cloneElement react cloneelement,,jimfb,2015-12-30 13:54:42,2015-12-30 17:42:06
IS,internal components,Does facebook have any plans on releasing some reusable components for websites like it has for reactive native I know the community is making this happen but it would be good to see some of the components used internally at facebook instagram,,zpao,2015-12-30 21:00:13,2015-12-30 21:08:09
IS,SVG attributes getting ignored,INPUT Missing properties refX refY markerUnits orient,,"rickbeerendonk,zpao,zpao,zpao",2016-01-01 05:54:34,2016-01-01 19:04:15
IS,Using two different renderers in a same script,Hello React team Due to the way React injects its dependencies notably the Component one one cannot use two different renderers in a node js scripts Let is say for instance that I need to use both react blessed and react dom server because I display a nice CLI interface and then render some html after a HTTP request this will crash because the second renderer will override the first is one dependencies Is there a solution I would have overlooked here Related to Yomguithereal react blessed 43,,"jimfb,sophiebits",2016-01-02 11:53:08,2016-01-02 21:07:03
IS,External JSX files are not executed synchronously,I have the following code,,"rickbeerendonk,rickbeerendonk,rickbeerendonk,brigand,zpao,jimfb,jimfb,jimfb,zpao,zpao,jimfb",2016-01-01 19:56:30,2016-01-03 00:00:32
IS,Import scope is not available in child class,Why the base class is import scopes are not available in inherited class Base js Do I need to re export the es6 default modules on every component if it is used by next component,,zpao,2016-01-03 06:50:52,2016-01-03 19:58:36
IS,Composing Containers,When building some apps I found out containers plays a major roll in our apps Of course Relay and Redux make it easy to create them But for me there are some other data sources and caches which manages the state of our apps So having a clean and clear way to compose Containers is important for me That is why I created react komposer See Let s Compose Some React Containers qpxo5k2hk Basically with that you could compose from a new kind data source including promises Rx js observables even Meteor is tracker based data sources Check some demos using with xxx Looking forward for feedback on this,,zpao,2016-01-03 15:14:16,2016-01-03 20:00:48
IS,Bower distribution does not include non deprecated renderToString,We have some corner cases within our client side application which requires React renderToString functionality In 0 14 this has been deprecated in favor of ReactDOMServer renderToString Unfortunately the bower distribution does not include a way to reference ReactDOMServer,,"jimfb,zpao,zpao",2015-10-13 18:25:43,2016-01-04 17:48:27
IS,props in constructor does not match props in render,Expected,,"zpao,jimfb",2016-01-04 13:44:58,2016-01-04 17:57:22
IS,Please tag v0 14 5,The latest version on npm is v0 14 5 but the latest tag on github is v0 14 4 It is really scary to get an untagged version of a library because you have no idea which commit was released,,zpao,2016-01-04 07:28:17,2016-01-04 17:59:40
IS,Add alias methods for the React lifecycle components,Here is a classic example of creating a React class in es6 There are a few things I find bothersome with the lifecycle method names Problem Including 'component' in the method name is redundant Since we are extending a class Liskov substitution tells us that we the subclass we are implementing should implement the behaviors of Component Since we know our class is a Component saying componentWillReceiveProps is redundant we could just as well say willReceiveProps This redundancy may seem trivial but it is more typing more boilerplate and thus more error prone The name is non orthogonal 1 componentWillMount 2 componentDidMount 3 componentWillReceiveProps 4 shouldComponentUpdate confused 5 componentWillUpdate 6 componentDidUpdate 7 componentWillUnmount I end up typing componentShouldUpdate more often than I would like to admit At best this is a distraction at worst it is a subtle source of bugs Proposed Solution Add alias methods fore the lifecycle methods 1 componentWillMount willMount 2 componentDidMount didMount 3 componentWillReceiveProps willReceiveProps 4 shouldComponentUpdate shouldUpdate 5 componentWillUpdate willUpdate 6 componentDidUpdate didUpdate 7 componentWillUnmount willUnmount Now this will obviously require a deprecation cycle as we need to warn users that are using these method names for other reasons It seems to be somewhat common a quick search on Github shows many people doing this Conclusion Although this may seem like bike shedding I think this is important and will save time agony for the long future of React users old and new heart,,"gaearon,jimfb",2015-12-15 23:31:27,2016-01-04 19:40:17
IS,null owner in addComponentAsRefTo hard to fix,I am migrating my UI from react 1 13 3 to 1 14 3 and encountered the following error messages when loading my page So clearly my ref is set in the render method in this code that fails I investigated about the possibility of having twice React loaded and npm ls grep react has only one line I am not sure this proves anything since we have a complex build that generates our code and probably the issue is somewhere in our build but I ensured React code is only once in our output script I also put a breakpoint in ReactCurrentOwner line 20 and was hit only once I do not know if this is sufficient but for me we load React only once so I went deeper When debugging I see that in the call to addComponentAsRefTo function component ref owner owner is null I then put breakpoints when ReactCurrentOwner current is set to a non null value ReactCompositeComponent lines 146 and 605 ReactMultiChild line 196 and 211 When I start my application the breakpoint in ReactCompositeComponent 146 is hit twice and at this time this currentElement props is hint 'root but each time it is reset to null on line 150 The call to addComponentAsRefTo is done outside these two windows where the owner is not null What can I do to investigate more,,"gaearon,gaearon,jimfb,gaearon,gaearon",2015-12-09 22:57:49,2016-01-04 19:49:02
IS,Deprecate Immutability Helpers,Have we thought about getting rid of these The API is pretty complicated and it is probably a better idea in most cases to either use Immutable JS more powerful and complete or the stage 2 proposal for object spread syntax simpler will eventually be built into JS As long as we continue to have this immutability helper addon in the docs I feel we will be steering people new to React towards a solution that we know is a bad tradeoff,,"graue,zpao",2016-01-05 00:54:59,2016-01-05 01:18:50
IS,TestUtils Simulate blur should reset document activeElement,As the title describes simulating a blur event should reset document activeElement probably to document body document activeElement is the only way that I'm aware of to get the element that caused a blur event on IE11 Context,,zpao,2016-01-04 23:04:15,2016-01-05 18:24:10
IS,Inline styles with browser specific values,It would be nice if I could define an inline style with an array and the parser would expand it to duplicate styles props For example let myStyles display ' webkit flex' ' ms flexbox' 'flex' and then specifying style myStyles in my component would expand to style display webkit flex display ms flexbox display flex Thanks,,"syranide,zpao",2016-01-05 16:49:47,2016-01-05 19:46:40
IS,Children component mounted before parent compoent,Hi there Here is my page image image I want get host detail from main view I think it is should be Main view mounted Drill view mounted but actually it is Drill view mounted Main view mounted,,"gaearon,milesj",2015-12-26 14:33:17,2016-01-06 05:10:46
IS,Optimizing componentWillReceiveProps and shouldComponentUpdate,React component lifecycle dictates that when new props roll in componentWillReceiveProps gets called where you can calculate the new state and set it without a second cycle Afterwards shouldComponentUpdate gets called and we can compare props and state of last cycle with the next one However if state is a product of the props it makes more sense to check whether the props have changed before calculating the state so unnecessary calculations can be avoided This produces some ugly looking code where componentWillReceiveProps first runs the code that would otherwise be in shouldComponentUpdate and based on that result sets a new state or terminates Simplified Example Is there a cleaner way of approaching this where no resources are wasted on unnecessary state calculations,,"milesj,jimfb,milesj,benjycui,jimfb",2015-12-11 21:45:33,2016-01-06 06:21:58
IS,Shallow rendering broken with 0 14 5,After upgrading to 0 14 5 I find few test cases failing with On looking at node modules react node modules fbjs lib getActiveElement js I see that it just reads from document object So I just defined document globally which fixed the issue global document fixes the issue But this was not a problem with react 0 14 4 However same test case passes when running individually as against running a bunch of test cases even if global document is not defined,,zpao,2016-01-06 00:09:49,2016-01-06 08:22:57
IS,forceUpdate does not cause rerender,We bail out of rerender when the props object is triple equals equal It can lead to some unintuitive results where the user has dropped all references to a string and yet the old data is still visible after a render forceUpdate Example Invoking ReactDOM render again is insufficient You need to call ReactDOM unmountComponentAtNode and then ReactDOM render again This seems like an API violation Do we already have an issue tracking this Would we fix it,,"jimfb,sebmarkbage,jimfb",2016-01-06 13:04:39,2016-01-06 13:32:56
IS,rendering style tag with ' ' selectors,So I'm trying to dynamically inject a tag to dynamically style an inline SVG element that i cannot render directly with React and converts ' ' to gt which breaks the CSS dangeroslySetInnerHTML in style tag causes error,,,2016-01-06 22:36:06,2016-01-06 22:46:29
IS,componentWillReceiveProps does not trigger for new context changes,The componentWillReceiveProps method only triggers if props change However there are situations where the context changes but the props do not but this method does not trigger It makes it really difficult to alter the state before an update as we can not do this in componentWillUpdate Perhaps a new method like componentWillReceiveContext can be added or the previous componentWillReceiveProps can simply be renamed to something like componentWillReceive which is always called if any prop state context has changed,,"milesj,yangshun,milesj,milesj,milesj,milesj,milesj",2015-12-30 19:45:30,2016-01-07 00:00:11
IS,React v0 14 5 setState does not work for Shallow Render,You can use this gist for reproducing the issue For the 1st test I want to make an async request when component is going to be mounted and use the result of a request for updating state As you will see in test report it does not happen For the 2nd test I believe this issue was fixed recently in 0 14 3 Shallow Render can not recognize sync state updates Please tell me if you see any mistakes in my code because I was trying to fix these problems in many ways I hope example code is simple enough,,"alexeyraspopov,jimfb,alexeyraspopov,alexeyraspopov,alexeyraspopov,alexeyraspopov,alexeyraspopov,zpao,zpao,zpao,alexeyraspopov,alexeyraspopov,alexeyraspopov,zpao",2016-01-05 00:16:26,2016-01-07 00:02:27
IS,Do we really need to write MyComponent to call Stateless functional components,What I have discovered most excitingly in the last v0 14 release is Stateless functional components I think this can unleash React power in JS functional programming realm Accordingly I have found the fact I do not have to write MyComponent to use my components since as long as I stick to Stateless functional components all I need to do is to call the Stateless functional components in normal JS way that is MyComponent More importantly avoiding to write in the legacy way MyComponent I do not have to write props like below The working live demo is Code Hopefully I could show some potential of the new stateful Components and help others who want to seek a way to write stateful Components with Stateless functional components Overall I would like to hear your thought Thanks,,jimfb,2016-01-07 04:06:34,2016-01-07 04:14:58
IS,starter kit link in readme points to 0 14 5 version,the starter kit link in the readme file points to the 0 14 5 version instead of 0 14 6 I can make the change if it hasnt been done yet,,"jimfb,zpao,zpao",2016-01-07 14:26:25,2016-01-07 18:13:59
IS,Babel 6 4 Semicolons and arrow functions in a class,I would like to share discussion diff 49011143 this diff to everyone as I have not seen Babel post about it My transpile broke today because of this change Spec Compliancy babylon 3225 throw parse error if class properties do not have a semicolon In practise this means in a class not only the constructor needs a semicolon but arrow functions as well I used arrow functions for 'this' to fall through so I changed it to normal functions add ' bind this ' to the call where needed we are using the node coding style,,jimfb,2016-01-07 20:57:40,2016-01-07 22:07:14
IS,Issue with Simulate Click invoking a function that I am spying on,I am having lots of trouble testing out whether clicking on my rendered button element is invoking the onClick handler Here is my code for the Component to be tested Can anybuddy give a newbie some guidance Thanks Andrew,,"zpao,jimfb",2015-11-17 05:17:20,2016-01-08 01:14:50
IS,Drag n Drop elements sorting,Hello I need advice about drag n drop sorting with react 1 Start Data react do full rerender and 1 is no longer needed insertBefore 2 If left insertBefore it falls with an error because item and itemOldSibling no longer exist Whether there is a normal way to dnd sorting with react,,"yangshun,zpao",2016-01-08 08:10:52,2016-01-08 17:29:28
IS,Synthetic keyboard event for Spacebar press has an improper event key value,Made a pen for this React is translating a Spacebar press into instead of Spacebar per the listing on MDN It does look like many characters are not detected though so I'm wondering how reliable the use of event key actually is,,"zpao,zpao,syranide",2016-01-08 16:45:46,2016-01-08 17:41:47
IS,Stateless functional components and shouldComponentUpdate,This is probably a question documentation issue In some places of the doc we can read In an ideal world most of your components would be stateless functions because these stateless components can follow a faster code path within the React core This is the recommended pattern when possible This pattern is designed to encourage the creation of these simple components that should comprise large portions of your apps In the future we ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations What I find unclear is these explainations is how React optimize the rendering when using stateless functional components The good sense would be that React uses something similar to shallowEqual to know if it has to call the function or not but as React does not enforce strict immutability yet I mean the PureRenderMixin is actually an option not the default I wonder how these functional components behave I think this should be better documented if any memoization technique is used when rendering these functional components because it is not so obvious to me if my app will perform almost the same or better if I choose to replace all my components using PureRenderMixin and no state lifecycle methods by functional components as I do not have much insights of the internal working of the optimizations done,,"slorber,jimfb,slorber,jimfb,slorber,jimfb,slorber,jimfb,slorber,jimfb,jimfb,gaearon",2015-12-16 14:05:35,2016-01-08 17:59:01
IS,input type number value '2' Is stuck on 2,Number inputs in react do not follow the normal html conventions It seems as though number inputs with a set value are stuck at that set value This should not be the case Demo of the issue,,"yangshun,jimfb",2016-01-09 01:02:36,2016-01-09 04:23:42
IS,event handlers arguments,The page does not mention that events may receive foreign arguments that are unexpected on normal browser events For example I have an event handler like this function handleThis e somethingElse in a browser img onerror handleThis the argument somethingElse will be always undefined but in react img onError handleThis the argument somethingElse will have things I do not expect like a string with this content 2 2 1 e 1e925dd08ffdee5af4825d9d9c632a655 would be possible to add that as a property of the event like event SECRET DOM DO NOT ADD RANDOM UNEXPECTED ARGUMENTS TO EVENTS OR YOU WILL BE FIRED,,jimfb,2016-01-09 16:43:20,2016-01-09 20:27:32
IS,SVG use does not display new elements after state update,Hello I have a component this way When the component is mounted everything works as espected the different locations of use are rendered properly But when the state is updated here after 4 sec for the demonstration the new elements are not displayed They are in fact present in the DOM but not displayed probably due to issues with namespace When I cut paste them with firefox tools in the same place they suddenly appear,,"zpao,sophiebits,sophiebits",2015-12-02 21:27:31,2016-01-11 16:59:54
IS,can not seem to update name attribute,Using 0 14 3 re rendering an element with a new value for the name attribute keeps the old value getAttribute 'name' still returns foo1 I know old versions of IE considered name readonly In new browsers however setAttribute 'name' whatever works fine Why not with React console output,,zpao,2016-01-11 21:45:52,2016-01-11 22:02:16
IS,Warn when value and defaultValue are both specified,This should be illegal Users need to decide if they are using controlled or uncontrolled inputs We should warn if both properties are specified,,"jimfb,syranide,jimfb,syranide",2016-01-11 20:07:18,2016-01-11 23:33:43
IS,Selects with a lot of default values are not running efficiently,An app I'm building requires a select with a lot of option s and they are all checked by default There appears to be an issue with React is performance for this situation Here is a JSFiddle It builds a select with 500 options all selected and takes over a second to run on my computer If you remove defaultValues you can see that it runs almost instantly And if you set it to 5000 options it takes over 2 minutes to run for me The problem appears to get exponentially worse the more selected options you have I realize that this is an edge case but it also seems like a bug to me,,"syranide,syranide,syranide,jimfb,syranide,jimfb,syranide,syranide,jimfb,jimfb",2016-01-11 21:47:24,2016-01-11 23:39:58
IS,Using Immutable state breaks TestUtils Simulate,I have a simple react component that has some checkbox inputs in a table For this component I an managing state using an Immutable library like is described here I have a simple handleChange listener that updates the state of the component that looks like this When running the test handleChange is only called once and handling change is only logged one time If I remove either the this forceUpdate line or the line where I am setting the state both changes are simulating successfully and handling change is logged out twice This is simplified version of the code that brought this to my attention but produces the same results none the less I have been racking my brain all day trying to figure out what is causing this and unfortunately have had no success remedying this issue,,,2016-01-11 23:26:37,2016-01-12 02:10:02
IS,componentDidMount is called before render is completly done,Hi As much as I understand React component lifecycle componentDidMount should fire after render is done but I just found out today that this is not the case and I'm not sure if this is a bug or lack of understanding from my side If I call a function that return some jsx inside render it always run after componentDidMount so if I have this setup componentDidMount always finish before renderTable or renderMessage Am I missing something or is it some bug Thanks,,"jimfb,jimfb,aweary,gaearon",2016-01-11 23:39:45,2016-01-12 02:49:34
IS,Inconsistency with propTypes and contextTypes,Although contextTypes are only recently document in react and the api is still unstable I find it odd that these two similar annotations that accept the same react prop validations do not work the same way With propTypes if you omit a propType you still receive the property propTypes simply validate properties However with contextTypes this is not the case you only receive the context if you set a validation for the contextType I would assume if I were new to both features that I would be given context automatically if there is any passed to my component similar to props However I am forced to explicitly state which context my component can receive What benefit does this have I certainly understand the need to validate contexts but If validation is not needed then whats the point of having to explicitly request the context in such an unintuitive way,,"jimfb,jimfb,gaearon,jimfb",2015-10-31 17:28:05,2016-01-12 05:02:04
IS,Ability to call setState in the constructor,A design question raised in another bug issuecomment 152668532 What is the ideal behavior Why do not we support setState in the constructor It seems better than having people manually add this state in the constructor since the current method encourages the imperative pattern that can not be used elsewhere in the component cc for an answer,,"jimfb,jimfb,sebmarkbage,acdlite,jimfb,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,basarat,basarat,jimfb",2015-10-30 23:06:34,2016-01-12 05:11:55
IS,setState called twice trigger render twice,use react 0 14 5 in the examples basic click counter index html change the handleClick method If I click lt h2 gt element the setState invoked twice and the render invoked one time But If the setState invoked in setTimeout callback the render invoked multi times,,"brigand,jimfb,zpao,jimfb,jimfb",2015-12-31 07:07:16,2016-01-12 05:58:06
IS,Extract addons for real or remove warning,When upgrading to react 0 14 there comes a warning among others that says that addons should not be requires through react addons' they should instead be required from their own package First I would like to point out that I think it is a very good change to put the addons in their separate packages However I have also noticed that the addons are in fact not really put in their separate packages but they just link to the implementation still existing within the react package This brings some trouble to our build If we browserify an addon currently only using transition group that bundle will include all of react This causes an error when running our app An alternative for us is to import react addons This gets rid of the error but leaves us with red warnings I do consider this a non option as I think it is important to leave the number of warnings errors to 0 As mentioned I do think it is a step in the right direction to extract the addons but I also think it is wrong to require the user to update the import before the change is actually made Could this be reconsidered,,"jimfb,jimfb",2015-11-26 16:18:18,2016-01-12 06:37:05
IS,Unhelpful error caught TypeError Cannot read property arefs' of null,Adding a ref to a child element of a stateless component yields a caught TypeError Cannot read property arefs' of null I can see this being really hard to debug Could there be a better error message there,,"jimfb,jimfb,jimfb",2016-01-13 02:16:08,2016-01-13 05:58:53
IS,React Performance with bound functions,When I'm abstracting a components I sometimes find it necessary to bind a function to a parameter before passing it to a child component For example if I have a list of counters we want to bind the increment prop to increment the appropriate counter,,"jimfb,syranide,jimfb,syranide,STRML,gaearon,syranide,jimfb,jimfb,STRML,STRML",2015-10-16 18:32:03,2016-01-13 13:41:37
IS,onWheel Stop bubbling is not happening,My Target I am having a div which scrolls But on coming to the top or the bottom after the scrolling the div the scrolling starts happening on the entire page itself which I do not want I think it is happening due to event propagation so I am trying to stop in following manner My Implementation I am using extends Component es6 way to create my components And I have put onWheel event listener as It is consoling out 'Scrolling Me' fine but I am not able to stop propagating this event to the parent Not sure why stopPropagation is not happening exactly or whether this issue is happening because of propagation I do not want to use libraries which used mixins so please do not suggest me this way,,"jimfb,jimfb,jimfb,monkindey",2016-01-13 10:34:43,2016-01-13 13:59:22
IS,Enormous data reactid,I'm developing a big GUI application Chrome Developer Tools are lagging because of data reactid s reaching a hundred kilobytes in size Here is a small example What do I do wrong How data reactid is computed roughly Could you create a paragraph somewhere in the performance manual on this issue,,jimfb,2016-01-13 18:20:57,2016-01-13 18:23:47
IS,Issues with installing master with npm 3,Installer tries to run build script from the node modules folder inside sbjs scripts while npm 3 is using flat node modules structure Additional info npm 3 3 6 node js 5 0 0 windows 7 x64 ru RU was trying to check for resolution of this question,,zpao,2016-01-13 18:41:56,2016-01-13 18:53:59
IS,Tips Documentation on accessing props of the children,e g Is this something you should avoid doing,,"jimfb,jimfb",2016-01-13 23:26:03,2016-01-13 23:28:54
IS,Allow props state to be of types other than Object,Hello I'm the author of scalajs react which facilitates using React from the statically typed Scala language I use immutable Scala values as components' props and state but because React requires JS objects I have to wrap all props values in a single key object For example instead of just setting a component is state to 3 I have to wrap it into v 3 Also as I understand it React performs additional work with the objects it receives like if a component has state a 9 b 8 when receiving a setState a 1 it will actually merge the two to create a new object a 1 b 8 This feature is very useful when developing in JS but very useless for all consumers of my library and perhaps others Om maybe maybe not the reason being that in my case that merging of props state is done via Scala itself where all the static types and other invariants can be checked by the compiler It would be much more efficient for us who use React via other languages to allow components to use types other than Object in props state Even a simple check like if newState is Object mergeStates else blindlyReplaceState would be sufficient WDYT,,"jimfb,jimfb,jimfb",2016-01-15 03:08:01,2016-01-15 04:41:05
IS,Issue with ReactCSSTransitionGroup,I'm getting this error Uncaught Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is render method or you have multiple copies of React loaded details after installing ReactCSSTransitionGroup and It seems that I have only one copy of react running I'm using gulp and browserify to package the app babel preset react 6 3 13 babel plugin transform react display name 6 3 13 babel plugin transform react jsx 6 3 13 babel helper builder react jsx 6 3 13 babel plugin transform react jsx source 6 3 13 eslint plugin react 3 15 0 formsy react 0 17 0 react 0 14 6 react addons css transition group 0 14 6 react dom 0 14 6 react router 1 0 3,,jimfb,2016-01-15 09:59:42,2016-01-15 10:35:10
IS,Controlled Components 'value' Not Being Reflected In The DOM,I noticed that the input is value is not updated in the DOM when implementing a controlled component Is this normal expected behavior Here is a link to an example on JSBin When it first loads press 'Run with JS' button in Output section js output,,yangshun,2016-01-15 16:35:39,2016-01-15 17:28:43
IS,Callback method does not refer to the right this,Let is say I have a component which will add a listener from the componentWillMount method that will callback a method that is declared into this component The listener gets kicked in the method is executed but inside the method this does not refer to the component which I want to Why Heres the full component But this does not refer to App the component here So Am i supposed to set the state of the component Thanks,,gaearon,2016-01-15 20:57:57,2016-01-15 21:08:41
IS,binding event inside onClick prop,ref In react both 1 and 2 are alerted while in react lite only 1 is alerted In my case I have to wrap the second binding with a setTimeout to make it work in react,,jimfb,2016-01-16 05:06:27,2016-01-16 06:26:47
IS,Render static html client side,Is there any way to get a string of plain html from a react component but on the client side My app has a design editor that lets you click elements and edit their style nothing new there but I'm re making it from the ground up using react both for the app itself and for the templates that should be edited inside an iframe and then rendered elsewhere Attaching click handlers to every editable element conditionally eg if the view is being rendered inside an iframe for the editor would be a nightmare and I can not just use jquery ' is editable' click like I used to because of the virtual DOM Taking all that in account it seems that the only solution is rendering the would be edited view as plain HTML so I can use the ' is editable' click approach inside my editor Any insights or similar experiences,,jimfb,2016-01-16 05:16:13,2016-01-16 07:20:43
IS,Load Initial Data via AJAX isMounted,In Load Initial Data via AJAX it uses isMounted which does not exist for es6 classes Not sure how to best update the example but it should probably be changed Maybe abort the jqxhr,,"brigand,jimfb,jimfb,sebmarkbage,gaearon,jimfb,jimfb,jimfb",2015-12-31 10:30:18,2016-01-17 20:13:28
IS,onclick change render,Hi I'm new to react If I want to click the button from DOM then change rendered class from CommentBox to CommentText below how to do it using simple onclick function Something like,,jimfb,2016-01-18 12:17:06,2016-01-18 20:03:48
IS,Simulate focus on es6 classes component,Hi I try to use Simulate focus on an input wrapped inside an es6 class but it does not work Maybe it is a limitation with react addons test utils but I did not find anything on this subject You can reproduce the issue here,,"cody,jimfb,jimfb",2016-01-18 18:04:02,2016-01-18 20:29:05
IS,a toUpperCase is not a function,Using SmallGrid gives the error TypeError a toUpperCase is not a function ion d a return o createClass tagName a toUpperCase render function return The library is built with grunt babelify and works fine in its examples,,"jimfb,syranide",2016-01-19 09:34:43,2016-01-19 11:08:52
IS,request supporting noindex element,Hi Do you plan to support the noindex tag and even better its valid type noindex It is very necessary for every SEO needs Type Feature Request Component DOM general issues,,jimfb,2016-01-19 13:26:41,2016-01-19 14:44:47
IS,react 0 14 6 renderToStaticMarkup for CustomComponent,Hi Why does renderToStaticMarkup outputs className in the markup for CustomComponent hyphenated tag names,,jimfb,2016-01-19 14:45:33,2016-01-19 14:49:49
IS,Consider applying HTML namespace by default,Currently when creating elements React checks for various namespaces like SVG and uses createElementNS but when it is HTML it does not apply a namespace at least in ReactDOMComponent Mixin mountComponent it checks there are other places that do document createElement without any checking In Firefox we are starting to use React in XUL pages We are trying to get off of XUL as fast as we can but we need a migration path When using React in a XUL page it will create XUL elements by default because that is the default namespace and a XUL div is different than a HTML div Is there any chance you all could apply the HTML namespace when creating elements It would look like document createElementNS tag instead of the normal createElement call If that is not possible is there anything React can do to help us out If not we are going to have to fork React and change all createElement calls to createElementNS which is not hard I have already done it but I wanted to ask here first before we fork it I'm fine forking it for now in while when we are mostly HTML we can drop the fork,,"jlongster,jlongster,jlongster,sophiebits,jlongster,sophiebits,jlongster,jlongster,zpao,jlongster,jlongster",2016-01-15 16:29:34,2016-01-19 16:57:58
IS,React inline styles blocked by CSP policy for istyle src',I'm working on an application that has a strict CSP policy including style src style src which prevents the possibility of using inline styles If I attempt to use React is builtin CSS templater with the following component the styling is blocked with an error I'm wondering if React is DOM engine can set the style object instead of serializing to a string and inserting a style attribute in the markup This would make React adhere more tightly to CSP Would a pull request on this be welcomed,,"zpao,sophiebits,sophiebits",2016-01-19 03:28:43,2016-01-19 19:44:49
IS,React does not support svg attributes,There are a few svg attributes where support is lacking I have noticed that mask and filter are missing Mozilla have a list of all the svg core attributes here Core,,"jimfb,iamdustan,jimfb",2016-01-20 12:35:45,2016-01-20 17:38:15
IS,Props undefined in getInitialState,First I know this is an anti pattern so please forgive me I was doing something like this recently but noticed that on the first render the this state origValue was undefined The props did eventually get populated and was available on the next render However as getInitialState is only ever called once this state origValue is always going to be undefined I fixed the issue by setting this state origValue in componentDidMount However I wonder if its a bug that this props is not always available in getInitialState,,"jimfb,aweary",2016-01-20 12:08:04,2016-01-20 19:29:31
IS,Replace native bind to improve performance on Chrome,React autobinds the methods of components created with React createClass But Function prototype bind is very slow on Chrome and Chromium derived browsers Here is a post discussing it and here is a adaption of the test code One can test it on Google Chrome finding that calling a bound function has an overhead even larger than heavy math computation It will be long before v8 fixes this long standing issue and for the new version to be adopted en masse Meanwhile React may improve its performance on Chrome by writing its own bind just as in lodash or underscore,,"STRML,zpao,jimfb,sebmarkbage",2015-12-29 12:34:43,2016-01-21 00:16:54
IS,Legal What are the licence of the gh pages site from facebook open source,I'm willing to use the facebook gihub io templates for an own MIT licensed project Are the gh pages site the same licence as main repository I asked on twitter but no luck so far cc,,"iamdustan,jimfb",2016-01-21 09:33:34,2016-01-21 15:21:02
IS,TestUtils cannot render stateless function components,I'm using react 14 3 babel 6 0 15 and react test utils addon 0 14 6 Jasmine 2 3 is my testing framework of choice It seems as though any stateless function component cannot be tested by TestUtils renderIntoComponent or TestUtils createRenderer render Either returns null when rendering the function component Test with any stateless function component and it should yield the same result Component import React from areact' const User name age return div name age div module exports User Test expect TestUtils renderIntoDocument User name bob age 20 toBeTruthy Error Expected null to be truthy,,jimfb,2016-01-21 17:49:35,2016-01-21 18:56:47
IS,getInitialState in React createClass warning,Hi just migrated to react 0 14 6 and encounter this warning when switching to react min js sample i have component but then my state becomes null thanks,,"jimfb,zpao,jimfb",2016-01-21 04:40:58,2016-01-21 20:42:07
IS,scryRenderedDOMComponentsWithClass does not allow you to assert props on found components while scryRenderedComponentsWithType does,As a trivial example assume this component render code This does not seem like the expected behavior to me If it IS expected then I think it should probably be explicitly mentioned in the docs,,"jimfb,jimfb",2016-01-14 00:14:07,2016-01-21 23:08:02
IS,Can i render every element with different render function,I need some element only have html and do not need data reactid But I do not except i should render two element with different function e g renderToStaticMarkup renderToString and combine it because the element could be include by many element Render split and combine could cause mistake when element is much more If i could set an attribute in compoment If i write as above the render function can auto swap render function to render elements Is there any graceful solution,,jimfb,2016-01-22 05:32:32,2016-01-22 05:40:03
IS,Basic Example with Precompiled JSX unexpected token,I'm trying to compile this example and ran into two issues The first was that it seemed I needed to install babel cli which I did and was able to run the next set of commands but then I get this error I'm still new to using React so it is probably a user error but I figured I would put in an issue just in case,,"zpao,zpao",2015-12-01 14:30:46,2016-01-22 18:00:56
IS,HTMLtoJSX does not convert curly brackets,Hi I am experiencing a problem with the HTMLtoJSX converter the same converter as officially displayed on The HTML code div div is compiled to the following JSX code Test Does anyone know a solution for the problem Best Regards Jan Jaap,,"zpao,Daniel15,Daniel15",2016-01-24 20:29:40,2016-01-24 22:36:57
IS,Does bound function being reused across multiple instance of React Component,Hi I met some problem with event handler binding in React ES6 class syntax Problem happens when I create 2nd instance of child component method1 is incorrectly bounded to this of 1st instance Other props are pass properly the problems are with event handlers When render is called will the binding be re evaluate If parent component rerender does it destroy the old children and reconstruct a new one Regards,,zpao,2016-01-21 10:27:48,2016-01-25 02:09:28
IS,add ReactDefaultPerfAnalysis js as an export to react addons perf,I would like to submit a PR for adding ReactDefaultPerfAnalysis js as an export to react addons perf Where is the source for react addons perf located,,,2016-01-25 21:41:00,2016-01-25 21:43:43
IS,SyntheticEvents are leaking dom nodes,SyntheticEvent target is not nulled when event is put into the events instance pool for reuse When unmounting the instance pool of events remains and the nodes pointed by the target property become detached nodes Here is an example Click the header a few times to generate events After 5 seconds the component will be removed via unmountComponentAtNode Open chrome dev tools take a heap snapshot and notice the detached nodes held by the SyntheticEvents Screenshot attached image,,zpao,2016-01-26 11:39:50,2016-01-26 16:29:32
IS,Invariant Violation Element type is invalid expected a string for built in components or a class function for composite components but got object,I have a simple React component but it fail to instant React Component Exmaple js,,jimfb,2016-01-27 15:23:18,2016-01-27 17:26:39
IS,react dom npm install production error,For some specific reason I need to bundle react dom with browserify However I faced a problem with installing its' dependencies Check my steps download react dom tar file from npm registry and unpack it go to the react dom folder and run npm install production This results in an error Interesting fact if run npm install without production flag it gets peer dependencies without errors Though if it is issue with peer deps why it returns SO weird error npm ERR Cannot read property areact' of undefined Maybe it is related to react dom packaging If you ask why I need this check this url and service,,"zpao,zpao,zpao,zpao",2016-01-25 21:32:57,2016-01-27 19:05:21
IS,Rendering form do not work on Safari,,,teosz,2016-01-29 15:16:32,2016-01-29 15:16:38
IS,modularity,Is there any work going on to make React a bit more modular Before you laugh it off I'm not suggesting React should be based on thousands of micro libs Some things I never used or do not have a need for Server side rendering Only use React in non SEO critical projects Also absolutely not convinced about so called performance benefits as we do not use node to begin with Support for older browsers This is a fast moving target More and more people drop support for IE 10 11 completely nowadays especially on rich apps where it would be a complete bother anyway Do Synthetic events do more than just patch old browsers quirks propTypes Runtime type checks impossible to remove in production Nowadays we can use typescript or flow to have quicker compilation feedback without any size overhead Just some thoughts this is not meant as a critic just wondering about the design direction for React I know all this might only remove a few dozens of kbytes and in the grand scheme of things it is not hugely important but I like to think every little detail count,,jimfb,2016-01-29 08:30:43,2016-01-29 16:08:28
IS,onTouchStart fire extremely slow in ios9 2 isafari,onTouchStart fire extremely slow in ios9 2 isafari slow then onClick is this a bug,,"jimfb,jimfb,gaearon",2016-01-10 16:55:32,2016-01-29 16:29:00
IS,event target selectedOptions IE Bug,Currently the synthetic event fired from select element is onChange prop has no selectedOptions property in IE11 most likely earlier versions as well event nativeEvent srcElement value appears to work in all browsers This works in Chrome Can this be polyfilled to be consistent across browsers or is the assumption developers should use event nativeEvent srcElement value,,"jimfb,jimfb,sophiebits,jimfb,jimfb,sophiebits",2016-01-06 15:19:46,2016-01-29 16:30:06
IS,eslint related error,on npm install I have installed eslint and eslint plugin react both locally as well globally yet the error persists,,"jimfb,zpao",2016-01-29 12:52:29,2016-01-29 16:38:31
IS,Bug input value never updated in unit test,Say I have a component that renders an input type text value whatever If I try to unit test it using ReactTestUtils Simulate change the component gets the updated value but then the value attribute in the DOM does not get the update See,,"jimfb,zpao",2016-01-28 22:52:58,2016-01-29 18:56:29
IS,What is the reason that a stateless function cannot return null,When I return null from a stateless function I receive an error message I would like to know what is the reason that a stateless function cannot return null Here is my sample code Thank you,,"hnordt,gaearon,hnordt,syranide,sophiebits,jimfb",2015-11-01 12:51:28,2016-01-29 23:35:44
IS,nesting of components fails with latest stable React TypeScript AMD require js,I currently have a working example of a project that uses the latest React TypeScript using tsx files together with the AMD module loading system with require js and building running debugging in Visual Studio 2015 CE However if I now try to nest 2 React components into a parent React component I am getting exceptions in require js when running the app The child React components are working fine individually so the problem really seems to come from the nesting itself If I run the same project using an older version of React 13 x and not using AMD modules then the app works fine also when nesting the React components I have made a test repository public here HelloPenguin is the old project using React 13 x and not using AMD HelloPenguin React0 14 6 AMD is the new project latest React 0 14 6 and using AMD If you remove lines 41 and 42 in ApplicationView tsx you will see that the app runs fine and the individual React components also work fine This must be something I'm overlooking but I can not seem to pin it down Does anyone know what could be wrong here and how to fix this problem Thanks,,jimfb,2016-02-01 16:42:19,2016-02-01 19:07:32
IS,React expose prop types validator,As a potential feature could React expose a propsDidValidate method or the like,,jimfb,2016-01-29 20:11:14,2016-02-01 19:38:34
IS,Node value setter called too many times,For background see r44678597 Good first bug,,"jimfb,sophiebits",2016-01-29 21:05:08,2016-02-01 21:07:46
IS,Cascading props,After using react for a while I came up with a strange idea to support some kind of cascading props So we have parent component Going further I would propse the use of CSS like traversal selectors on these props i e first child I know all of it looks very much like some kind of mad antipattern but I would like to hear why besides obvious performance isssues The main reason behind it is that a lot of times you have to change a little bit insides of a component in one particular place and have to implement new methods props and then declare them in parent component anyways,,"conorhastings,jimfb,jimfb",2016-01-29 20:29:05,2016-02-01 21:09:37
IS,Enhancement Build in a way to generate a function that sets some state variable,I created this mixin this morning to handle creating functions that just call setState if the component is mounted but it would be nice if it was just built in to the React component since I think it is a pretty common pattern to handle UI events by just setting some state variable,,"jimfb,jimfb",2016-02-01 21:11:51,2016-02-01 21:16:33
IS,Optional and required values in PropTypes shape,Not sure if there is already a good way to do this but it would be nice to be able to do this The latter can get quite big if there are multiple optional values,,jimfb,2016-01-25 16:44:36,2016-02-01 23:17:13
IS,Add new use without namespace,I have an List of elements when I push new elements they added without namespace Any ideas,,jimfb,2016-02-01 12:44:36,2016-02-02 05:57:51
IS,jquery bootstrap example uses handleHidden which does not exist,Introduced in,,"jimfb,piscolomo",2016-02-01 22:24:31,2016-02-02 06:06:01
IS,BUG JSX allow tag use class property,image Node ver 5 0 0 Babel Deps babel cli 6 4 0 babel core 6 3 26 babel eslint 5 0 0 beta6 babel loader 6 2 0 babel plugin add module exports 0 1 2 babel polyfill 6 3 14 babel preset es2015 6 3 13 babel preset react 6 3 13 babel preset react hmre 1 0 1 babel preset stage 0 6 3 13 It seems cause by custom html tag,,jimfb,2016-02-02 10:51:51,2016-02-02 10:53:22
IS,should validate attributes by element,We mistakenly used required attribute to style label element such as After running the above code The required attribute is still on label element Then I realize required is not an attribute of label by standard the label element just an attribute of some other elements like input etc so I think required should not be allowed to render at component mount phase like other arbitrary names such as xyz else it will cause people confusion And I notice that 0 15 x solves this problem by a flag MUST USE PROPERTY so required is rendered at component mount and will be removed correctly but is inconsistent with other attributes select checked which is not rendered at all So should react validate attributes by element like validateDOMNesting,,"yiminghe,jimfb,yiminghe,jimfb,yiminghe,jimfb",2016-02-02 10:38:24,2016-02-02 11:58:17
IS,IE unable to render elements on popup window after state has changed,I am using react 0 14 3 and I encountered an issue on IE 9 10 11 which can be examplified by the following piece of code The issue is that when the state of AnotherCoolComponent changes React tries to render the paragraph but fails throwing an Invalid Argument error on DOMChildrenOperations js on line 41 If the state changes again another error is thrown Invariant Violation processUpdates Unable to find child 1 of element This probably means the DOM was unexpectedly mutated e g by the browser usually due to forgetting a tbody when using tables nesting tags like form p or a or using non SVG elements in an svg parent Try inspecting the child nodes of the element with React ID 1 This probably happens because the element was not rendered before I tested on Chrome and FF and it works fine on both,,"zpao,jimfb,jimfb,jimfb,jimfb",2015-12-30 15:02:02,2016-02-02 15:30:49
IS,button onClick disabled true not firing onClick is undocumented,Looking at there are tests stating that onClick does not get fired if you click a button that is disabled This does not seem to be shown anywhere in the documentation Slightly tangental if there is an onClick on a parent element of a button disabled true and somebody clicks the button is the onClick fired for the parent element,,,2016-02-02 12:49:01,2016-02-02 21:41:10
IS,TypeError Cannot set property 'initialValue' of null ReactDOMSelect postUpdateWrapper,Issue Using latest 14 7 I'm running into an issue error with select and ReactDOMSelect 158 when navigating away from one place to another place which is causing a select to throw even though it should and is unmounted Error being TypeError Cannot set property 'initialValue' of null at Object ReactDOMSelect postUpdateWrapper 3992 assets js main js 22153 38 Other reports of this happening are here Setup Currently integrating into an app in pieces So I render our Router into an empty container that renders components that render into their appropriate DOM containers Seemingly the error I have narrowed it down to calling unmountComponentAtNode this section which occurs in a componentDidUpdate I removed it and the error stops happening I realize that mounting to an existing node that is a React root will cause an unmount and mount the correct things Repro I have attempted to reproduce it but no luck at the moment even though I have narrowed it down to the unmountComponentAtNode call The click is originating in a different ReactDOM render container so I'm not sure if it is an eventing thing where clicks from different ReactDOM roots are applying to everywhere else Stack Trace,,jimfb,2016-02-02 21:09:23,2016-02-02 22:02:48
IS,some attributes are only set if SSR is used,Maybe we do not care but some attributes are currently only set if SSR is used Not sure if it is worse than the old behavior which was different for initial render as compared to subsequent renders But this could be a tricky one for people to debug if they hit it since it depends on a more subtle difference SSR vs CSR I imagine people frequently fail to test their components on SSR so the difference is more likely to catch them by surprise,,"jimfb,zpao,sophiebits",2016-02-02 11:57:02,2016-02-02 23:35:46
IS,UIExplorer crash,after execute gradlew Examples UIExplorer android app installDebug open UIExplorer app is crash crash log react txt,,jimfb,2016-02-03 01:17:43,2016-02-03 01:26:25
IS,DOCS When I run the demo code I get a false which should be true in the docs,In this doc this code When I test it it comes with a false can somebody help me,,jimfb,2016-02-03 07:58:12,2016-02-03 10:10:09
IS,Touch events on Android 4 1,Hello Touch events on Android 4 1 do not working We are using react 0 14 2 According to the issue it was fixed in 0 14 1 but it is still not working Any ideas,,jimfb,2016-02-03 14:53:48,2016-02-03 20:19:27
IS,Bug on resolving default props HTMLAllCollection fix,Introduction I found a bug on resolving default props when component props have property with HTMLAllCollection React ignores value and uses default value it should take that collection isIE9OrLower look at the end of topic is simple function to test Internet Explorer in version 9 or lower Simple use case isIE9OrLower IE9 or lower modern browser Chrome Firefox modern IE yeah i know returns HTMLAllColection as document all but old IE returns true HTMLAllCollection is weird collection Workaround Change document all to document all,,"karczk,jimfb,karczk,jimfb,jimfb,sophiebits,sophiebits,karczk,sophiebits",2016-02-01 20:53:41,2016-02-03 22:39:50
IS,Warn if style value is NaN,Passing a value of NaN as the value of a css style seems to indicate an error Turns out that we do not warn on initial render and give a confusing error on update because NaN NaN as per spec Discovered in issuecomment 168471074 Anyway we should probably warn if someone passes in NaN on initial render and not warn on update if both previous next values are NaN,,"jimfb,zpao,jimfb,jontewks,jimfb",2016-01-04 18:46:48,2016-02-03 22:41:24
IS,Bugs with document createElement rendering,setting type on textarea should not throw setting dir null on div should not add attribute setting dir auto on textarea throws in IE11,,"sophiebits,zpao,jimfb,sophiebits",2015-10-21 22:50:33,2016-02-03 22:52:33
IS,is not defined,I have a class that is trying to do a get request in the componentDidMount function however if I initially load a page with this component in it I get the following error is not defined I followed the example from xxx I just changed it over to ES6 perhaps I am using something improperly class NativeApp extends React Component state banners loadBanners this serverRequest get ' api banners' function res this setState res bind this componentDidMount this loadBanners render return DefaultLayout title this props title loggedIn this props loggedIn logOut this props logOut button onClick this loadBanners className btn btn primary Manually Load Banners WHY button DefaultLayout export default NativeApp,,jimfb,2016-02-03 23:25:46,2016-02-03 23:44:37
IS,IFrame onLoad event handler is not called in Chrome for non HTML documents,IFrame onLoad event handler is called in Firefox but not in Chrome I am using Firefox v41 and Chrome v46 and react v0 14 0 The 'load' event is fired in both Chrome and Firefox but the onLoad event handler is only called in Firefox Here is a jsfiddle demonstrating the issue If you open it in Firefox you will observe that a dialog box appears to save open the file and the iframe disappears But in Chrome the iframe does not disappear When I tried to run the code in debugger the control never goes to the onLoad event handler in Chrome,,"jimfb,zpao,jimfb",2015-10-30 03:19:11,2016-02-04 00:47:54
IS,componentDidMount is called before the visual is rendered,I am trying to get visual attributes width to be precise of a component once it is rendered and CSS is applied I have been trying with componentDidMount but width is still 0 I am not sure what I'm doing wrong output,,"jimfb,jimfb,jimfb",2016-02-04 19:53:03,2016-02-04 20:27:05
IS,Error boundaries attempting to unmount not yet mounted siblings,Only shows up if the failing component has a composite sibling within the error boundary that has not yet rendered,,jimfb,2016-02-04 22:24:20,2016-02-05 01:20:09
IS,pull request for htmltojsx,Hi there I put in a pull request for htmltojsx in react magic to fix the improper rendering of brackets issue a few days ago I was just wondering what the typical timeline for reviewing those was Cheers,,jimfb,2016-02-05 17:23:00,2016-02-05 17:49:42
IS,Chrome Dev Tools Warning ReactDOMComponent Do not access props of a DOM node,I have created a component that uses the ref attribute so I can read the width and height of the DOM node It looks like this Everything looks good but if I open the Chrome Dev Tools and look at the properties of the div element I get the following warning in the console Warning ReactDOMComponent Do not access props of a DOM node instead recreate the props as render did originally or read the DOM properties attributes directly from this node e g this refs box className This DOM node was rendered by MakeWrapper The message is actually shown twice in the console I also noticed that two different prop properties exists which might be causing the error to show twice when Chrome is looping through the DOM properties Is there something wrong with my code or is this a side effect of using Chrome Dev tools chrome dev tools,,"zpao,jimfb",2016-02-05 13:43:07,2016-02-05 18:07:25
IS,findDom and AUDIO tag does not work,Assuming I have an audio tag correctly playing an audio file The currentTime is 30 seconds I run the following code the output in console is 30 If i replace the first line with const audioElement document getElementById 'audio' everything works as expected At the beginning I thought there was a deep copy issue but that would not explain the console log inside the try,,"jimfb,zpao,jimfb",2016-02-04 23:37:12,2016-02-06 03:44:52
IS,Wrong highlight in code in React docs,Example image,,jimfb,2016-01-29 13:50:16,2016-02-06 03:46:29
IS,Documentation about refs and shallow rendering,Docs say about refs in shallow rendering Shallow testing currently has some limitations namely not supporting refs However if I shallow render a component the ref property is present correctly We are using it in react shallow testutils like this Is this feature stable can we rely on ref being present,,jimfb,2015-12-07 16:18:59,2016-02-06 04:23:59
IS,How can I visit the official site that writing by other language default English,visit the link getting started it is English page how to read this page that writing by other language,,jimfb,2016-02-06 05:48:09,2016-02-06 05:59:26
IS,License and offline use,Hi Can React be utilized in offline commercial product for free What needs to be done The License file was too cryptic to understand XDVarpunen,,jimfb,2016-02-07 03:19:56,2016-02-07 03:35:32
IS,startWatchingForChangeEventIE8 getting called in Google Chrome,I'm getting errors in the console when attempting to render select and input components The errors get thrown from L103 L107 and L109 L116 These methods should only run in legacy IE browsers correct I am having this issue in Google Chrome 48 0 2564 82 Mac,,"zpao,zpao,zpao,jimfb",2016-01-25 21:44:11,2016-02-07 17:54:03
IS,console shows error Uncaught Invariant Violation,I am making an app based on this boilerplate Ref gist The app is building fine but my console shows this error Uncaught Invariant Violation Element type is invalid expected a string for built in components or a class function for composite components but got undefined,,jimfb,2016-02-07 11:19:10,2016-02-08 04:26:32
IS,React cloneElement onClick does not work,Hi Im trying to add an onClick handler to an already existing element Example When setting it directly in the ImageCardView it works,,,2016-02-09 11:34:19,2016-02-09 11:41:54
IS,Remove event listener used with bind in ES6 syntax,I'm trying to communicate with an iframe with the postMessage API but I have an issue with the eventListeners management in ES6 It is stated in the docs that With React every method is automatically bound to its component instance except when using ES6 class syntax The problem is that this handler bind this this handler so when I'm done with the event I can not remove the listener because I can not keep a reference to the handler I could try to encapsulate the function but the encapsulating function would also need a binding I could try to super the constructor too but I'm not sure this is a good idea plus I do not know the args it need I'm quite sure I'm missing an important point here Any help would be much appreciated Thanks anyway,,"fkling,jimfb",2016-02-09 16:54:39,2016-02-09 17:31:42
IS,link expired,Hi Link got expired can you update it,,zpao,2016-02-10 01:02:19,2016-02-10 01:08:59
IS,svg clipPath has wrong namespace,Hi when svg clipPath created dynamically i e via button click has wrong namespace more details here press button Add new center For test I use React 0 14 7 is it latest react I thought that it should work thanks this pull request I see that clipPath added here and circle too L155 And circle works OK but clipPath no,,"jimfb,jimfb",2016-02-10 12:58:37,2016-02-10 15:23:24
IS,Input re render does not happen as expected when value is null,I'm building an app that has a series of single character text inputs that auto advances as you input This app syncs data with our servers and each input can only be one of a list of characters or null Here is a minimal demo to illustrate what is happening Is there any other workarounds or discussion about how we tell an input element that it is controlled Avoiding constant '' null conversion would be the ideal situation here since there are a lot of moving parts in the app that may have to do this a few times per render This is definitely an edge case because if this were a multicharacter input that had validation the second character would kick off validation and all would be good,,"jimfb,jimfb",2016-02-10 15:34:24,2016-02-10 15:52:05
IS,Closer control over reconciliation,I am running into a use case that does not seem to be supported by React I am using redux and react redux in this example but the problem could potentially extend to any component that takes children I am trying to build a set of components that are independent of one another to the point that they can be included on the page in their own script tags Each component will have a stateless component and a container that connects it to a redux store I have written some helper functions to do this in a generic way Initially I render the component by itself to the target DOM node When the store becomes present it fires an event that my helper functions are listening for which will render the container component wrapped in a Provider to the same target DOM node This works great if there is no DOM state However I want to allow the user to interact with my Widget before the store is present For instance in my Widget example they should be able to enter some text in the input and that DOM state should persist when the WidgetContainer is rendered in its place Currently this is not possible due to React is reconciliation algorithm If two components have a different type React will not attempt to reconcile their sub trees relevant code here L39 This causes the existing input node to be thrown away along with anything the user may have typed There is no way for me to tell React that I want my two components to be reconciled because I have the foreknowledge that they will generate an identical DOM structure What I want to know 1 Is there a workaround for this issue 2 If there is not is it a valid enough use case to consider adding a way to force React to reconcile two elements with different type s One potential solution which may be infeasible due to my unfamiliarity with the codebase is to consider two elements with different type s but identical key s to be candidates for reconciliation,,"jimfb,jimfb,jimfb,gaearon",2016-02-10 13:05:35,2016-02-10 16:13:34
IS,Event order changes with input field being present on initial render,This is difficult to explain so I created a jsfiddle The code runs fine as is Changing the first variable to null and rerunning will display the issue I'm experiencing I'm not sure if this is expected behavior Thanks in advance for any guidance Note I'm experiencing this on version 0 13 3 I created the fiddle on version 0 14 0 to be sure that upgrading was not going to resolve my problem,,jimfb,2015-12-14 22:50:36,2016-02-10 22:13:27
IS,Question how to just update parentless component outside of it,Copy of stackoverflow question comment57616408 34941598 How should I properly update component if it does not have a parent I have found two ways to do it First method Here I update component through changing component s state So which method is correct Or maybe here is a third correct way I know that I should Flux etc but I want to know the simplest way in the simplest example,,jimfb,2016-01-23 14:47:22,2016-02-10 22:19:15
IS,Value attributes in invalid components are not re rendered properly,If I add a value attribute in a div tag or other tag that should not have a value attribute it will work and add the attribute but it will not be updated properly that is if it depends on the state setState will trigger render but wo not change the value in the real dom I'm guessing this has to do with incompatibilities between the virtual and the real dom on what is allowed on such tags the virtual dom knows you can not add value but real dom allows Either way I think it is bad that it fails silently I believe it should either work completely or give always an error A simple example that reproduces the problem As you can see if you click the button the content of the div is updated but it is value attribute in the dom is not this happens both on Chrome 48 0 2564 22 dev and Firefox 41 0,,"cody,jimfb",2015-12-15 18:33:31,2016-02-10 23:22:26
IS,Difference between currentTarget and target of SyntheticEvent,There is 2 properties in SyntheticEvent currentTarget and target It is identical usage or what is the difference between them,,"gaearon,jimfb",2015-12-25 01:41:09,2016-02-10 23:28:36
IS,ResponderEventPlugin assumes touch events,Based on this comment issuecomment 23959601 I implemented drag n drop in the browser with the ResponderEventPlugin It worked like a charm but upgrading to 14 x breaks the plugin The problem is an assumption that the plugin is used with touch events Besides the plugin referencing touch events throughout the code this is the breaking line L499 ResponderTouchHistoryStore recordTouchTrack topLevelType nativeEvent nativeEventTarget recordTouchTrack expects nativeEvent to have changedTouches and touches properties Enabling the ResponderEventPlugin also breaks the ReactBrowserEventEmitter test Multiple tests break L334 L385 by adding the ResponderEventPlugin L61 L67 Commenting out the call to ResponderTouchHistoryStore recordTouchTrack appears to fix the plugin I would like to continue using this plugin but I'm concerned that it is no longer intended to be used for my use case Is it expected that ResponderEventPlugin is only for react native Or is there some configuration concept I'm missing I have not tested all releases but I believe this is the case for all 14 x,,"jimfb,sophiebits",2016-02-11 20:44:16,2016-02-11 21:38:40
IS,Setters not preserved with React createClass,setters in React createClass are ignored but they work with class syntax Would not it be possible to create the component class from the object given and preserve any setters getters,,"jimfb,zpao",2016-02-11 23:43:37,2016-02-12 00:51:48
IS,Error boundary should catch errors in componentWillUnmount,,,jimfb,2016-02-05 01:32:46,2016-02-12 02:11:35
IS,Optional href property not removed on render but set to empty,While href is optional for all a s it has very specific meaning when it is set but without a value ie a href vs a where the former is a link back to the current uri and the latter is a placeholder link This can be especially irksome in a React app because an unexpectedly set href can easily change what was meant to be an onClick into a full page reload Here is a fiddle demoing the bug here You can see what should be a Bar a rendered as a href Bar a instead,,jimfb,2016-02-12 18:31:32,2016-02-12 18:54:13
IS,Getting started docs are ambiguous,Working through react docs docs getting started md as a user new to npm would I run into the following 1 Where does this content go What is the filename,,jimfb,2016-02-12 07:12:25,2016-02-12 19:03:44
IS,React js app wo not run in Android 4 x WebView,Getting the following error upon loading Uncaught SyntaxError Duplicate data property in object literal not allowed in strict mode From line in bundle js App runs well in modern browsers on PC Mac iOS UIWebview mobile Safari Android also 4 x Chrome and Android 5 x Consulting this table android44 shows Android 4 4 supports ES5 well and should run React js applications just fine Any ideas,,"jimfb,jimfb,zpao,zpao,jimfb,zpao",2016-02-12 05:32:20,2016-02-12 22:10:10
IS,Warn when an input switches between controlled and uncontrolled,A component should either be using uncontrolled inputs or controlled inputs but not both they should pick a single paradigm for the lifetime of the component As a result an instance of an input should never switch from controlled to uncontrolled or vice versa We should warn when an input that was previously controlled becomes uncontrolled or vice versa,,"jimfb,yangshun,jimfb,brigand,jimfb,syranide",2016-01-11 20:56:52,2016-02-13 00:34:55
IS,head profile profile attribute is not supported,profile is missing If you pass properties to native HTML elements that do not exist in the HTML specification React will not render them Meanwhile profile attributes is in standards kind of Above is a blatant copy of 4226 but hey that worked out Also anticipating the need to glance at the Mozilla Developer site attr profile One day 140 will be closed and this wo not be an issue anymore,,"zpao,zpao,jimfb,jimfb,zpao",2016-02-12 21:37:07,2016-02-13 17:26:20
IS,Extending react dom,I would like to create a renderer that extends react dom that is overrides some parts of it The goal is to be able to keep react dom but swap out some parts of it ultimately ReactCompositeComponent and ReactDOMComponent Since in 0 14 react dom is buried inside react itself I created a script that downloads some react dom files and created a jscodeshift transform that rewrites imports from var ReactCurrentOwner require ReactCurrentOwner' to var ReactCurrentOwner require areact lib ReactCurrentOwner' and to files i would like to customize var ReactMount require ' ReactMount' how fun is that It seems react 0 15 will bring significant changes regarding react dom and react separation but for now we have to work around this So I end up with custom ReactDOM ReactMount ReactDefaultInjection instantiateReactComponent ReactChildReconciler and ReactMultiChild But when i try to render something with my custom ReactDOM render I get this error Since the injection is called once with my custom injection how is that possible Am I missing something here I suspect some global tying things somehow but can not figure it I created a repo with this little experiment here,,"iamdustan,iamdustan,jimfb",2016-02-13 14:25:54,2016-02-13 18:22:00
IS,Render during reconciliation causes NPE,I have a view with a controlled select on it When the onChange event fires the resulting function actually changes the view removing the select Then I get this error Uncaught TypeError Cannot set property 'pendingUpdate' of null Reproduced here react 0 14 7 I also noticed I do not get the same error in an older version 0 13 1 The line that throws is in ReactDOMSelect L183 I was able to see a fix for a similar situation here I do not know if a similar check could be applied here or maybe I just should not remove my select as a result of an onChange event,,"sambev,jimfb,sambev,jimfb,sambev,jimfb",2016-02-12 19:46:38,2016-02-13 21:23:53
IS,Use mixed arrays with strings has warning,Has warning Each child in an array should have a unique key prop Check the render method of Hello See for more information Jsfiddle,,,2016-02-15 02:52:14,2016-02-15 09:00:37
IS,Async routes cause server side checksum invalid error,NOTE This may be an issue for React Router instead If so please inform me and I will notify them I'm using Webpack react router and react I got this error while using react router with async routes and server side rendering Is this a bug or something else,,jimfb,2016-02-16 00:27:51,2016-02-16 00:58:14
IS,Can react be more lenient with returning JSX expression in render,Here is a random hello react fiddle I plucked from google React now throws an invariant violation on Hello render A valid ReactComponent must be returned You may have returned undefined an array or some other invalid object all because I put the actual expression in a new line instead of the same line as the return statement Reference Can react be made more lenient so that the 2nd example is allowed The react version referenced in both fiddles is v0 14 6,,zpao,2016-02-16 07:57:26,2016-02-16 08:44:21
IS,dangerouslySetInnerHTML should warn if markup is invalid,dangerouslySetInnerHTML expects valid sanitized markup from a library like marked We may not be able to guarantee that the markup is sanitized but we can spot many obvious errors which are an indication that markup is unsanitized Things like an instead of an amp as per issuecomment 184373913 This is also a good thing to warn about because we can catch subtle SSR markup checksum issues If the markup does not validate we should warn The only tricky part here is that we do not want to have the markup validation library required in the production build,,"jimfb,jimfb,syranide,jimfb",2016-02-15 21:33:20,2016-02-16 11:07:56
IS,property 'key' not allowed,Heads up to anybody going through debugging hell If you have your own fancy component e g AwesomeInput and you think its smart passing a prop named key to your component so that you can set it as the react key you know the one React complains about needing if there are multiple elements on the same level this props key will be undefined within your component 'key' and aref' are reserved words that are not allowed to be passed as props renaming the prop resolves this issue It is too bad that React does not warn you about that as it does with many other things Would be great if this would be reflected more prominently in the docs under areserved names' or similar,,jimfb,2016-02-16 16:13:26,2016-02-16 16:15:30
IS,Warn on access of props key and props ref,The props key and ref are reserved by React and used internally Component authors may attempt to access these properties thinking they could read the value as per We could use Object defineProperty in dev mode to warn if props key or props ref is accessed and point the user to a note discussion somewhere That way users who actually run into the issue will always get a timely message that sends them directly to the relevant explanation discussion This would be a good first bug if we decide we actually want to do it,,"jimfb,gaearon,sophiebits,jimfb,jimfb,prometheansacrifice",2015-12-29 01:34:34,2016-02-16 18:11:28
IS,Failed to execute 'write' on 'Document',when I try to do something like this in react and example js like this document write ' ' it will raise an error Failed to execute 'write' on 'Document' How can I insert a script tag like this in react,,zpao,2016-02-16 10:24:09,2016-02-16 18:52:52
IS,Porting ReactPerf to the new DevTools API,There are a few concerns that I heard about ReactPerf in the order of importance 1 It is gated by DEV but React Native wants to have a way to enable it in production builds and pass the accumulated info into systrace 2 It is often broken by refactoring 3 It appears generic but depends on specific module and method names 4 It has some obscure bugs that are hard to fix because of the coupling 5 The console table visualization is poor 6 We are working on a new DevTools API so they should align If I m mistaken here please let me know In 5306 we started introducing a new set of APIs for first class instrumentation It makes sense that we transition ReactPerf to the new API and fix some of these issues while we re at it I talked to some people on the React Native about this What I understand so far is ASAP We want to remove ReactPerf function wrapping completely addresses 2 somewhat mitigates overhead from fixing 1 We want to create a devtool like ReactDOMDebugTool e g ReactPerfTool addresses 6 Unlike ReactDOMDebugTool ReactPerfTool will not be gated by DEV addresses 1 ReactPerfTool will have startMeasurement and endMeasurement methods for profiling functions addresses 1 It can have more granular methods for specific parts of React lifecycle if needed addresses 2 3 5 Calls to ReactPerfTool will be gated by a runtime flag e g ReactPerfTool isActive addresses 1 In the Future Rather than reach out into the profiled functions startMeasurement will accept arbitrary arguments addresses 3 We would separate generating user meaningful data from its accumulation so it would be easy to test addresses 4 Bonus We can use a noop decorator Babel plugin to insert if ReactPerfTool isActive ReactPerfTool startMeasurement and endMeasurement calls mitigates pain and potential breakage from addressing 1 Bonus Rather than console table API we can provide a component that interprets that data and displays it in an overlay both on web and native addresses 5 The decorator Babel plugin part is the one I m not sure about because it would involve complicating tooling On the other hand it will allow adding performance measurement to any functions in the codebase without risking having early return s missing endMeasurement calls and similar breakage during refactorings The first actionable step in my opinion would be to remove the function wrapping and the DEV gate from the existing ReactPerf and replace measure with explicit startMeasurement and endMeasurement calls gated by ReactPerf isActive wherever it is used We would still pass the function as an argument so we don t have to rewrite everything at once but this would give the RN team more freedom and unlock future refactorings We can also combine this with introducing decorator Babel transform if this is the way we want to go to avoid adding manual startMeasurement and endMeasurement calls all over the place Does this make sense What have I missed,,"gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon",2016-02-10 18:28:41,2016-02-16 19:04:06
IS,Dynamic pure components re initialized despite key attribute when using jsx,Hello I am using pure components but am generating them dynamically Doing so registers as a change in react is diffing algorithm despite having a key attribute therefore the components' state ex focus resets on each re render example Since both of those components are just functions we can do that but this is a bit odd looking especially considering the old deprecated component syntax I suspect the issue is in React createElement Can something be changed or is this way to out there Appreciate any help Thanks,,zpao,2016-02-14 02:29:41,2016-02-16 19:05:33
IS,Following NPM getting started guide incomplete and results in errors,I decided to try out React today and began following the Getting Started Guide for using React from npm using react from npm Unfortunately I was unable to get the example up and running The first problem I encountered was the missing HTML file which I scavenged from lower in the page and adapted However once I loaded up the bundle js file in the HTML page I received the following error in the browser console Uncaught Invariant Violation registerComponent Target container is not a DOM element Was there a step I missed somewhere,,"jimfb,mxstbr,jimfb,mxstbr,zpao,zpao,mxstbr,jimfb,zpao",2016-02-16 19:22:07,2016-02-16 19:47:33
IS,Include SRI hashes for fb me links on download page,We will need to do a little bit more than just hard code these since we will actually want to generate these at release time But we could at the very least manually generate those hashes now and do what we need in the docs to display it SRI,,"zpao,jimfb",2016-02-03 01:44:16,2016-02-16 19:50:31
IS,Some libraries' version jQuery and marked are old on tutorial,When seeing index html I found some libraries' jQuery and marked version are old jQuery is latest version is 2 2 0 but the version in index html is 2 1 0 And then marked is latest version is 0 3 5 but the version in index html is 0 3 2 Why do not you update these libraries,,zpao,2016-02-14 08:50:18,2016-02-16 20:10:06
IS,DOCS Make Stateless Functions more prominent,All the way at the very bottom of the Reusable Components stateless functions page there is a section on Stateless Functions Below that section is a note In an ideal world most of your components would be stateless functions because in the future we ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations This is the recommended pattern when possible emphasis mine If this is indeed the recommended pattern it should be made much much more prominent For example by using it in the A Simple Component section on the homepage That now has this HelloMessage component as the visitor is very first example of a React component As a bonus it is now much much simpler and postpones introduction of React createClass to later when the examples go more in depth Let is start teaching people the right patterns,,"jimfb,jimfb,mxstbr,jimfb",2016-01-31 00:41:31,2016-02-16 20:25:25
IS,Breaking change on 0 14 7 testing events,On 0 14 6 this test was passing This seems related to the change here Perhaps it should only be cleaning up error objects on the next tick In the mean time how should I work around this,,"TheSavior,koba04,jimfb",2016-02-17 01:39:49,2016-02-17 03:40:06
IS,Programmatically access warnings errors after rendering,Let is say I have a component which has propTypes thus ensuring the contract is maintained,,jimfb,2016-02-17 03:36:56,2016-02-17 03:56:45
IS,ReactDOM not define in react 0 14 7,React render works fine but not ReactDOM render,,"syranide,jimfb",2016-02-17 07:24:17,2016-02-17 14:45:22
IS,React should unmount components upon unload event,When the unload event is fired on the window e g when the tab window is closed or the page is reloaded React should unmount all components to prevent memory leaks,,"syranide,jimfb",2016-02-17 09:59:27,2016-02-17 14:48:11
IS,Performance for Unmounting Mounting a component vs hiding it,Is there a preferred method or performance benefit to hiding a node in the dom via css vs mounting and unmounting it For example I have a render function with the following code The first snippet mounts and unmounts the node and I feel this is cleaner in the Analysis component since I know selectedFeature will always be defined and I do not need any conditional code in this snippet or the Analysis component But this can change very frequently in the application so I was wondering if one method is preferred or more performant over the other If performance is the same I will probably go with the first snippet as it feels cleaner to me and Im guaranteed to have a value for selectedFeature,,jimfb,2016-02-17 14:02:53,2016-02-17 14:59:01
IS,try statements vs perf,I was profiling my app and noticed those warnings my app is not reallly slow but in the code there are some try finally even without catch are there reasons to use them image,,"jimfb,jimfb",2016-02-17 20:09:02,2016-02-17 23:55:44
IS,Why seperate react and react dom from original react,In past Look like the past is more easy to import react Is there a post to indicate why react do this change,,jimfb,2016-02-18 01:50:44,2016-02-18 01:52:04
IS,Warn when reading from event which has been returned to the pool,The title is an assumption based on my experience upgrading Here is an example of what I'm seeing Here is a jsbin that demonstrates the behavior with 0 14 6 console output Here is a jsbin with 0 14 7 console output Notice in the console that the log inside the callback is logging that e target null evaluates to true In my app I'm passing the event to an onChange handler which utilizes the target So this update breaks that situation This may or may not be a bug It may just be necessary for avoiding the memory leak If that is the case then it is a support request smile How should I handle this if I'm passing the event to another callback and I want that event to have references to things like target,,"kentcdodds,gaearon,kentcdodds,kentcdodds,gaearon,jimfb,kentcdodds,gaearon,kentcdodds,gaearon,kentcdodds,gaearon,jimfb,kentcdodds",2016-01-29 17:36:08,2016-02-18 05:51:47
IS,Dynamic propTypes,Hi I am trying to construct a mixin which takes a dev defined component specification and constructs its prop types defaults accordingly I am trying to do something like this The above code does not work Is there anyway I can do something similar Many thanks,,jimfb,2016-02-18 16:21:55,2016-02-18 17:17:54
IS,img elements alt attribute should not default to true if used without a value,Consider the following If foo png fails to load user will be displayed true instead of nothing Fiddle alt This attribute defines the alternative text describing the image Users will see this displayed if the image URL is wrong the image is not in one of the supported formats or if the image is not yet downloaded Usage note Omitting this attribute indicates that the image is a key part of the content but no textual equivalent is available Setting this attribute to the empty string indicates that this image is not a key part of the content non visual browsers may omit it from rendering attr alt,,"syranide,jimfb,syranide,jimfb,syranide,jimfb,syranide,zpao",2016-02-17 09:42:20,2016-02-18 20:39:04
IS,why this props children cannot re render,for example,,jimfb,2016-02-19 17:04:31,2016-02-19 17:25:22
IS,Disabled radio button fires onChange event from double click in Internet Explorer,In Internet Explorer a disabled radio button will fire an onChange event when double clicked The checked state does not change but the onChange event fires nonetheless,,jimfb,2016-02-19 00:15:24,2016-02-19 17:33:57
IS,React cloneElement handles undefined props differently to React createElement,I'm not sure if this is expected but it caught me out earlier,,"acdlite,jimfb,jimfb,zpao,sebmarkbage",2016-01-28 18:23:20,2016-02-19 22:53:38
IS,Frameworks,Does facebook recommend a good backend to go with react Maybe something that already has login page features built in,,jimfb,2016-02-21 03:22:11,2016-02-21 04:05:09
IS,ReactJS setState bug my fault,Hello guys I made an exemple here to see exactly what I'm talking about I used context for the storeInput function because in my app it passes through more than one component Sorry for the short message but I do not have the best writing english skills and it is more easier for me to show you If you do not understand something please let me know Thanks,,jimfb,2016-02-20 03:52:33,2016-02-21 04:07:22
IS,HTML to JSX Compiler broken,Hi Today I tried to use the HTML to JSX Compiler and it looks is broken screen shot 2016 02 20 at 11 56 01,,"montogeek,jimfb,montogeek",2016-02-20 16:56:25,2016-02-21 14:11:45
IS,Why are environment checks done before warning but not invariant,While going through the lib source of React after an NPM install I noticed some blocks like this All calls to warning feature their own ternary environment check so wrapping it in an environment conditional seems unnecessary I have already gone through and found replaced most of the instances but I wanted to see if there was a philosophical reason for this before submitting a PR Thanks,,"jimfb,sophiebits",2016-02-21 17:45:41,2016-02-21 17:55:49
IS,Issue with native change event on select and valueLink,Hello i'm trying to make a validator for forms and i want to make possible of usage LinkedStateMixin with the validator So for inputs validation i use native events addEventListener for it i make following actions it is just an approximate algorithm In event handlers change blur keyup code i perform setState method if valid state is chaged With input tag it works very fine value of state input1 was changed as expected but for select tag state selectValue was changed only one time So it is the problem And i think this is an issue Is it possible at all to make such things work or i am in the wrong way I have some Jest tests i can share it if needed,,jimfb,2016-02-21 15:37:00,2016-02-21 17:59:38
IS,React Jest Mocking issue with keymirror,I have ran into an issue with 0 14 when testing with jest npm 3 Ultimately I have realized that since npm 3 installs everything as siblings packages that react depends on will still get automatically mocked and therefore break My example was an error like this Looking into it in the lib BeforeInputEventPlugin js file it referenced EventConstants in that file it was using fbjs lib keymirror to create it is EventConstants Since that was being mocked the return from EventConstants js was undefined Thus causing an error This might be part of a bigger problem with jest and supporting npm3 I'm not sure if this issue should live in their repo Or more immediately react could not depend on fbjs and just use it is own keymirror implementation,,"zpao,cpojer,zpao,cpojer,zpao,zpao,cpojer,cpojer,cpojer,cpojer,cpojer",2015-10-15 14:50:38,2016-02-22 02:17:14
IS,On onChange event and input type number,As seen here when altering the value of an input type number element an onChange is triggered Thing is that is not the case in React Here is a pen to illustrate the case view console,,"jimfb,jimfb,jimfb",2016-02-22 14:29:06,2016-02-22 15:48:03
IS,Calling renderToString twice second time should not fire lifecycle events,I'm trying to implement server side rendering with react redux My components use componentWillMount to start fetching data from a REST API and I use a simple counter in my redux store to see how many fetching requests are pending I then have this code server side though it still does a bunch of useless async calls because that second renderToString calls the componentWillMount methods again,,jimfb,2016-02-22 00:59:07,2016-02-22 16:17:07
IS,event persist is not present when running tests,TestUtils Simulate scroll does not seem to give an event with persist function on it As a result when the event handler is debounced throttled the target srcElement becomes null when the actual handler is called,,"ankeetmaini,jimfb,jimfb",2016-02-08 12:25:34,2016-02-22 16:59:26
IS,Add opt out for contenteditable warning,,,"sophiebits,jimfb,jimfb,sophiebits",2016-02-21 17:55:12,2016-02-22 22:11:16
IS,shouldComponentUpdate vs componentShouldUpdate,Why did you choose the former the latter matches a bit better with componentDidMount,,,2016-02-23 09:51:15,2016-02-23 10:16:16
IS,Any way to handle setState changes output on SSR,I was wondering how it is the best way to render server side without rendering this on the client AND handle the state changes What I mean here is how to get the HTML from a server component that has a state changing Example 1 A server gets a requests to generate an HTML 2 The server arequires' a react component passing some props 3 The react component renders in the server but it has to do an Ajax Socket query to get some info The event is sent and the response comes later 4 The react component changes the state changing the output 5 The HMTL generated is ready and with the latest state changes What is happening here is that ReactDOM renderToStaticMarkup as expected does not wait for the component to finish the state changes in this case wait for the data and re render How can I achieve this Doing all the queries first and passing all the data as props Is this the only way Thanks,,jimfb,2016-02-23 18:00:30,2016-02-24 18:05:40
IS,How I can test a swipe with testUtils,Anyone of you knows how I can simulate a swipe using testUtils event simulation,,jimfb,2016-02-24 14:44:28,2016-02-24 18:06:54
IS,Escaped equal in server side id rendering,Hello I have got some strange problem with server side rendering React add a slash before and make checksum invalid errors,,"teosz,jimfb,teosz,jimfb",2016-01-25 11:52:47,2016-02-24 18:18:07
IS,HTML to JSX Compiler broken,displays ReferenceError HTMLtoJSX is not defined,,"joecritch,jimfb",2016-02-24 17:15:03,2016-02-24 18:40:39
IS,Allow cite attribute in blockquote element,cite is currently only supported as element not as attribute in blockquote Since it is unknown to react it is thrown away on render cite A URL that designates a source document or message for the information quoted This attribute is intended to point to information explaining the context or the reference for the quote,,"AprilArcus,zpao",2016-02-22 10:10:10,2016-02-24 19:15:45
IS,Proposal bind component to SyntheticEvent,The common way to send additional properties to onClick handlers is with bind The idea here is to attach the component the event originated from to the synthetic event Would something like this be possible feasible even needed Does bind really bring that much of an impact Is there another better way to do this without bind,,jimfb,2016-02-24 03:19:06,2016-02-24 20:01:31
IS,Proposal componentWillPrepareUnmount continueCallback,EDIT After discussion in this thread I have amended componentWillRemount to the proposal I have been working a lot with animations in combination with react lately and while most lifecycle methods make transitions on components a walk in the park I have struggled to get the scenario of unmounting a pleasant experience In the end though I have come up with a lifecycle method proposal that could be incredibly powerful componentWillPrepareUnmount continueCallback and componentWillRemount What they would do when declared on a component is to delay the actual unmount just as if nothing happened until the component itself calls the provided callback which then would resume the actual unmounting If a component in a pending unmount state is restored before the actual unmount takes place the unmount is canceled and the component treats the change as a regular update componentWillUpdate fires etc with the addition of componentWillRemount being called to give you the chance to react specifically to this event Edge case mitigation Ancestors override descendants If an ancestor of a component using unmount preparation unmounts the descendant unmounts instantly without preparation unless the ancestor also utilizes componentWillPrepareUnmount which would give it some arbitrary time to prepare This would allow us to gracefully perform an animation on our components right before they are really unmounted letting component specific code decide how it should disappear For example What do you think,,"jimfb,sebmarkbage,syranide,syranide,gaearon,jimfb",2016-02-18 21:06:56,2016-02-24 20:04:54
IS,A way to disable contenteditable warnings,L178 L184 React warns A component is contentEditable and contains children managed by React It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated This is probably not intentional I am writing a rich text editor using React and have written it to ensure that the nodes are not modified by the browser by capturing all input events performing the modifications on my internal document format and re rendering using React However on each render React still warns me about this I would be awesome to be able to disable this warning somehow such as with a specific value to the contentEditable prop another name or something I'm not sure the best approach to take here so I thought I would create an issue for discussion around this,,"jimfb,jimfb,mxstbr,jimfb,sophiebits,jimfb,jimfb,mxstbr,sophiebits",2016-01-12 17:55:23,2016-02-24 21:02:32
IS,Seal pooled events,Kind of related to the old 1612 and 5840 anyone trying to be smart and adding properties to a pooled non persisted event will cause those to properties to remain in the pool causing a memory leak of sorts Could it make sense to Object seal event the events that way we ensure that users can not mess with the event object in bad or unsupported ways Should probably do this instead issuecomment 171685664,,"syranide,jimfb,syranide,jimfb,syranide,jimfb,syranide,syranide,jimfb,koba04,antoaravinth,koba04",2016-01-14 08:42:20,2016-02-24 21:30:49
IS,button href is not updated when component is rerendered,Using react 0 14 7 It seems that for some reason when react diffs the dom for buttons it replaces the text but is not updating the href attribute for anchors it is correctly updating both the text and the href attribute The below code illustrates the issue It is a component that cycles its internal state and renders a link and a button to move the state to the next stage the link works fine but the button does not as the href is not updated but the text is,,"jimfb,jimfb,zpao",2016-02-24 18:19:16,2016-02-24 22:58:26
IS,cloneElement vs createElement,Can anyone let me know if using cloneElement on exist element instance or createElement on react Element class which one is better in term of performance Sometimes cloning something is faster than create new instance Please let me know Thanks,,jimfb,2016-02-25 00:14:45,2016-02-25 04:10:01
IS,a way to render subcomponents into different DOM roots would be a huge win,I have been trying to accomplish something that if only I could figure out a way to do it would be a killer paradigm for elegant reusable view components I have gotten in the habit of rendering my views like this This is awesome and I highly recommend it There is just one pesky little thing I can not do in all cases animate Header Body and Title transitions individually when switching between views I created a Drilldown component that provides a special HeaderSkin and BodySkin to animate transitions from the Header and Body of one view to those of another It crossfades the header and pans the body horizontally like typical drilldowns The transitions work when the two views are of the same React Component type but not when they are different because React can not keep the same Component instance mounted I'm wondering if there could be a well designed system for rendering components like my Header Body etc through some kind of wormhole into a placeholder controlled by an ancestor component With that capability it would then be possible to drop view components of any type into my Drilldown and animate the transitions between their subcomponents I remember trying to create such a wormhole once when I was less experienced with React But it quickly became hacky and I never got it working completely It basically revolved around passing elements to some callback in this context inside render methods and the callback would then put the rendered element in the desired location in the ancestor I seem to remember there being a problem with things like refs though and also needing to use setTimeout to delay the rendering of the wormholed component since render triggering other rendering is not kosher Has anyone tried to do similar things Thoughts,,"jedwards1211,jimfb,jedwards1211",2016-02-25 04:35:44,2016-02-25 05:47:28
IS,Demo page is not rendering properly,ReferenceError HTMLtoJSX is not defined happening in Chrome and Safari on OS X for me,,zpao,2016-02-25 06:27:41,2016-02-25 07:42:29
IS,dataTransfer getData 'xxx' in the handler of onDragOver is not available in Chrome,I can not get my data in the handler of onDragOver by event dataTransfer getData,,,2016-02-25 07:25:01,2016-02-25 09:05:06
IS,improve error message for Objects are not valid as a React child found object with keys,This error takes a significant amount of time to debug and reason out where the offending object is being put into the tree Is there any more information the error message could provide than the keys It would help to know which line in the code is setting the object as a child The stack trace has no reference to any of the code in my render so am forced to step thru all lines of code which does not always reveal the culprit So at least starting on a given line would speed up the process of elimination The keys help but still not enough to determine a precise cause in the code It would help if there was a way to detect this condition in the debugger I have tried things like references,,zpao,2016-02-25 14:04:44,2016-02-25 19:40:14
IS,Cannot declaratively specificy select position for controlled input elements,I am working on a component that has a controlled input element The component has an onChange handler that manipulates user input before setting the value back on the input is value prop As a result of this manipulation the caret position as restored by React may be different than where the user was typing To control this situation I keep track of the caret position in the component is state It was pretty simple to implement this abstraction for myself but it seems like something that is actually missing from React I think this goes along well with the idea that React is an API for declaratively controlling UI components' state,,zpao,2016-01-31 23:01:44,2016-02-25 23:23:33
IS,Use static get for propTypes in ES6 classes,Regarding this es6 classes Could we not just do something like this,,zpao,2016-02-25 23:44:22,2016-02-26 00:52:09
IS,Elements not visible to user in Chrome on HiDPI displays,In Chrome on HiDPI displays elements that exist in the DOM React Components are not properly displayed They exist in the DOM but are not visible They are part of a dynamic list that can be filtered I will try to link a recreation of this issue here soon,,zpao,2016-02-25 19:37:53,2016-02-26 15:58:30
IS,ReactDOM The cost of extra 900 bytes,ReactDOM and React are good separation of concerns However except for special cases React applications almost always require the ReactDOM as well The special cases can obviously have their own builds which can remove the unnecessary dependency But React officially should serve a single library which includes the ReactDOM as a single resource It absolutely makes no sense for an extra network request for a library that is 900 bytes gzipped This cost is even multiplied since the official CDNs seem to already have a redirection in place At the moment of filing this issue a request to ends up with 301 to And similar redirects for ReactDOM That is 4 requests in place of what could be a 2 2 requests for a mere 900 bytes In other words taking the overhead of TCP IP and HTTP an overhead of nearly half a kilobyte with about 600ms of latency in my geographic location for a mere 900 bytes Now add to the fact that the gzip would probably nullify that 900 bytes almost entirely if its included as a part of the other 70kb file due to binary compression I'm honestly quite surprised why it was even decided to separate them Not as libraries but in terms of deployment,,"gaearon,jimfb,gaearon,jimfb",2016-02-26 18:45:51,2016-02-26 19:48:33
IS,Spanish docs,Hi I just noticed that docs are being translated to multiple languages right now I can see Italian Japanese Chinese and Korean I would like to contribute with the Spanish version How can I start,,"montogeek,zpao,montogeek,zpao,montogeek,bjrmatos,bjrmatos,jimfb,bjrmatos,bjrmatos",2016-02-26 00:16:26,2016-02-26 20:02:15
IS,Is there any way to update React Child Components,Parent element I like to use first one This code is to make a wizard like content Thanks in advance,,"jimfb,jimfb,zpao",2016-02-29 16:29:06,2016-02-29 19:00:34
IS,Validation for React PropTypes oneOf should compare values using Object is,to check for NaN value proper also related to 6130,,"chicoxyzzy,chicoxyzzy,chicoxyzzy,zpao,chicoxyzzy,zpao",2016-02-26 21:21:47,2016-03-01 00:22:33
IS,navigator is not defined,Running tests in watch mode results in eventual error navigator is not defined This is happening because after test is run once ExecutionEnvironment canUseDOM L73 becomes true,,"jimfb,zpao",2016-02-24 12:52:39,2016-03-01 06:30:52
IS,Should React Children only handle mapped children,Let is say we have a component Foo which expects to get a single child Is this by design Did I miss something here,,jimfb,2016-03-01 09:11:04,2016-03-01 09:57:41
IS,Componen render but not call Lifecycle functions,I have a project that creates a HTML layout based on json file On the 4th and 3th step some components are not call lifecycle functions For Example Component code Component code BaseNode that is empty class Rendering result Rendering result Console output Console output Mini project with reproducible error project,,"jimfb,jimfb",2016-02-29 14:30:30,2016-03-01 12:08:18
IS,Incorrect warning without an onChange handler This will render a read only field,If you use an onInput event handler it accomplishes the same thing as an onChange event handler for human input purposes Should the warning not be suppressed by the presence of onInput,,,2016-03-01 22:57:54,2016-03-01 23:00:33
IS,Bug componentWillUnmount is overwritten not extended in inheritance chain,Hi I happen to run into an odd issue regarding componentWillUnmount which is only called by the top constructor and leaves me with an issue of how to do cleanups of extended component I am not sure if it is a bug or if I'm just dumb Here the base components componentWillUnmount method is only called when the top level component does not have one Small 30 line code pen reproduction of my issue,,zpao,2016-03-01 23:44:31,2016-03-02 00:29:20
IS,Implement React PropTypes exactly,I took use case below from some gitter chat where wanted some property to be String or exactly false Use case I can implement it if it does make sense,,"chicoxyzzy,chicoxyzzy",2016-02-26 21:12:24,2016-03-02 02:20:33
IS,SVG renders children Object object into DOM,See for a basic example I'm assuming there is some step in the new SVG code that we just need to remove the children key if we consume it as a React prop,,"zpao,zpao,gaearon",2016-03-02 00:53:41,2016-03-02 11:02:50
IS,Children type displayName is impossible on node js,,,"mxstbr,mxstbr,jimfb,jimfb,jimfb",2016-03-02 10:16:31,2016-03-02 13:45:04
IS,ReactElement tests explicitly not using JSX,The ReactElement tests L14 L15 have this at the beginning But there are a number of instances of JSX in the file For example test 1 L47 L49 1 Should the note be removed or clarified 2 Should JSX be purged from the file 3 When adding tests to this file should they be free of JSX In certain contexts but not others,,"jimfb,mxstbr,jimfb",2016-03-01 15:52:47,2016-03-02 19:00:20
IS,Proposals for new React PropTypes,PropTypes exactly I took use case below from some gitter chat where wanted some property to be String or exactly false So maybe he can add some comments here Use case,,"chicoxyzzy,chicoxyzzy,chicoxyzzy,gaearon,jimfb",2016-03-02 02:20:09,2016-03-02 19:09:04
IS,SVG elements missing,I have built and run v15 alpha and still cannot use SVG elements like foreignObject and filter The issue closure messages implied that the related tied in issues were fixed and they were closed but these issues are not fixed just passed over Should reopen a general SVG issue ticket to address these,,"jimfb,jimfb",2016-02-29 18:45:22,2016-03-02 20:08:23
IS,Nesting components,Hello I wanted to add two another components under one so I did something like And reference them using this props children it did not work I got message Objects are not valid as a React child found object with keys logged in console they looked like this children So I went through react code and find autobind I set it to false and now everything works correctly however I guess there will be problems with that approach in future because I belive autobinding is useful or will be useful somewhere else in my outer component Is it bug or am I doing something wrong Thank you,,"jimfb,jimfb,syranide,jimfb,jimfb",2016-03-02 14:47:39,2016-03-03 17:37:27
IS,setState not being called,After an API call setState is not being triggered The first console log statement works as expected and displays all the empty objects from my constructor function but the callback to setState is never triggered and state is not updated I have let it sit like this for over 10min I have no console errors The strange part is that when I am working in another part of the app it magically begins working again and I have no idea why Am I missing something obvious,,"jimfb,gaearon",2016-03-03 20:18:16,2016-03-03 21:44:45
IS,ES7 async this setState,Since this setState has a callback it would be sweet if you could use await this setState,,jimfb,2016-03-04 01:35:33,2016-03-04 02:02:36
IS,title tab value rendering using react,Hello React pre Is their a way to show rendered element is value in title like we have var title lt span my title lt span lt div title title my value lt div OUTPUT should be like this lt div title 'my title' my value lt div pre,,jimfb,2016-03-04 10:29:04,2016-03-04 15:45:23
IS,Synthetic events proxy does not work for normal synthetic events,This blames to 5939 cc Not sure yet if this is affecting all load events or just ones that are attached directly to nodes for eg image But the problem is that when we intercept set operations for SyntheticEvent s but not subclasses like SyntheticMouseEvent we do not have target constructor L199 Simplest repro will still fail w o the load listener,,"zpao,gaearon,zpao,kentcdodds",2016-03-04 19:28:44,2016-03-04 22:25:14
IS,Warn if calling setState in getChildContext,This code causes a maximum call stack These sort of errors are hard to track down as the stack trace is deep in react Is this a place we can give a user an invariant to let them know what they did wrong,,"jimfb,jimfb,jimfb,jimfb,gaearon",2016-02-24 22:34:47,2016-03-05 16:24:46
IS,Remove FBJS as dependency,It is for sure one linked to the other but what are the reasons for reactjs using fbjs at it is core I can not see any way both of them need to co exist unless there is a base code for them that is shared In that case that should become part of Reacjs or a shared library among them,,"jquense,gaearon,jimfb",2016-03-05 19:52:50,2016-03-06 00:12:56
IS,Svg textPath startOffset parameter is ignored,See The top image is in pure svg and the text is displayed in the middle The second image is the same svg rendered in react The pictures should show the text in the same location but they do not It seems that startOffset is stripped by react as it is not recognised Within the svg namespace in a textPath element startOffset is a valid attribute at can be treated as all other attributes are in react,,jimfb,2016-03-06 15:54:23,2016-03-06 17:01:48
IS,Jasmine is broken,Looks like npm test is broken on a fresh checkout Just doing a git pull and npm install locally results in running jasmine1 but running the same commands on a fresh checkout attempts to run jasmine2 and results in 300 failing unit tests,,jimfb,2016-03-06 20:12:26,2016-03-06 20:49:05
IS,docs build bundle exec rake not working with babel 6 update,in this commit babel was updated from v5 to v6 that change broke the bundle exec rake command necessary to build the examples in docs Since babel 6 does not have the in browser transformation which would be the replacement img width 694 alt captura de pantalla 2016 02 29 a las 10 52 07 p m src,,"bjrmatos,kittens,bjrmatos,zpao,bjrmatos",2016-03-01 03:52:25,2016-03-07 19:43:26
IS,Pre binding is problematic binding causes performance issues,Per this article esamatti react js pure render performance anti pattern fb88c101332f I posted this in StackOverflow I feel like I'm in a catch 22 If I use bind on event handlers or the pattern there could be performance issues with re rendering If I use the method described in the article above then I can not pass arguments to a single DRY function I have to create several functions to handle different scenarios as in one of the answers in the SO post with setEmail setPassword What is the solution here,,jimfb,2016-03-07 22:57:46,2016-03-08 00:11:27
IS,Nested noscript renders invalid HTML,While it does not really make sense to nest noscript there are instances where it can happen unintentionally In this case React renders invalid HTML In a setup with HMR this ends up causing invariant violations It might be worth adding a warning for this case React Version 0 14 7 should be fixed in 15 0 due to the changes to noscript,,"gaearon,jimfb,brigand,sophiebits,sophiebits",2016-03-07 22:28:51,2016-03-08 13:51:17
IS,Proposal Do not bail out of reconciliation for pure functions,This might be a terrible idea so I'm just throwing it against the wall here React has a core reconciliation principle if the type has changed do not bother reconciling From my understanding it has two goals 1 It is a good heuristic because it is unlikely that two different components yield similar DOM 2 One stateful component instance can not morph into another component type However it makes pure function components pretty much the same pain to hot reload as class components currently are We can not just swap ButtonBeforeEdit with ButtonAfterEdit because React will bail out of reconciliation and destroy any state and DOM under it as a result This undermines the hot reloading experience in a crucial way so we have to keep resorting to workarounds issuecomment 149377033 like insanely complex proxies The interesting thing to note about pure function components is that 2 no longer applies to them They are stateless and have no instances right So even if React did not bail out of reconciling different type s of stateless component there would be no weird morphing of instances It would probably be less efficient in development but we can live with that On the other hand making hot reloading easy with simple tools is beneficial because maintaining complex solutions is hard both for me and for people who depend on my infra and have to wait for my upgrades Maybe I'm suggesting something crazy I'm not sure It certainly has important consequences outside of hot reloading or performance changes For example this transition currently resets the StatefulThing internal state but with the proposed change it would not because merely changing Button to Toggle two stateless components is now not per this proposal enough to bail out from the reconciliation What do you think,,"gaearon,jimfb,gaearon,gaearon",2015-10-20 00:20:57,2016-03-08 15:32:10
IS,Use Semvar,React is jumping from v0 14 v15 Most developers can not make heads or tails about whether or not you guys have finally switched to semantic versioning to start using this project Please make it clear that this is the first FULL version release many of us will NOT consider react for production usage nor be able to push it past or corporate overlords until it makes it to the 1 0 version or later,,zpao,2016-03-08 21:11:02,2016-03-08 22:26:29
IS,Controlled inputs with the potential for undefined value,Upgraded to React 15rc1 today and a new warning appears to have cropped up The problem I have realized is that on first render this props search get 'term' returns undefined because its value is only populated with text put into the input I expect this is a pretty common pattern for controlled components Otherwise loving the release having all SVG attributes at my disposal is very exciting,,jimfb,2016-03-09 00:18:12,2016-03-09 01:49:53
IS,Error when trying to run UIExplorer on android,I'm trying to run the UIExplore example app on android Steps I have followed 1 Cloned 2 npm install 3 npm start to start the package manager 4 adb reverse tcp 8081 tcp 8081 because I'm running on device 5 gradlew Examples UIExplorer android app installDebug As soon as the app launches I get an error stating that an unknown module named invariant was required It is definitely there in node modules fbjs lib Here is the stack trace,,,2016-03-09 15:49:46,2016-03-09 15:55:28
IS,React v15 0 0 react addons css transition group and react addons transition group WARN,After update to react 15 my terminal show this message in my build npm WARN react addons css transition group 0 14 7 requires a peer of react 0 14 7 but none was installed npm WARN react addons transition group 0 14 7 requires a peer of react 0 14 7 but none was installed How can i fix this,,,2016-03-09 17:38:18,2016-03-09 20:00:33
IS,Enhance PropTypes XOR,Hello I tries with react to declare XOR behavior in the props I used on component I succeeded somehow and post a solution for that but the result lack simplicity and could be include in React I think What do you think,,,2016-03-10 11:15:08,2016-03-10 16:29:22
IS,A syntax error can not be detected by JSXTransformer js about extends keyword,class IndexPage extends React Component render return div I think extends React Component is not a right syntax version React v0 13 0 chrome browser version 47 0 2526 111 m,,"sairion,jimfb",2016-03-10 09:50:42,2016-03-10 17:34:32
IS,dangerouslySetInnerHTML error when nesting HTML within React component,I'm using a library that provides a component called InputPassword which returns an input area I need to place a label block right beneath the input block for some animations to work So far I have made it possible via the following,,"edvinerikson,zpao",2016-03-10 19:53:17,2016-03-10 21:36:21
IS,renderToString fails to terminate comment node,Run this Just wondering is the behavior for server rendering changing in v15 Thanks,,"jimfb,dittos,jimfb,jimfb,jimfb",2016-03-08 09:23:02,2016-03-11 07:36:36
IS,Css Unrepaint Chrome only when I'm rerendering,Hi I have found an issue on Chrome When I'm re rendering my Mobile Desktop React Component the CSS properties are not repainted If I go to the inspector and just change a property like font size or color or whatever I see the repaint Any ideas,,"jimfb,gaearon",2016-03-10 10:34:03,2016-03-11 13:07:16
IS,GUI automation testing after React 0 14 without data react id,Hi there Sorry to open an issue here but we used to leverage the mechanism of data react id to identify an element in GUI automation testing framework like Selenium We are using inline style and add several unique keys to different components This works well in current version but seems data react id gonna be removed in React 15 document createelement is in and data reactid is out I have not tried with the new RC version yet but just wondering how should we do in React 15,,gaearon,2016-03-11 05:42:07,2016-03-11 13:10:35
IS,Run at least a subset of the tests in browser before releases,Frankly it scares me a little that a substantial IE text node bug made it through into a release candidate Some of the tests could fairly easily be run on SauceLabs or a similar service to do actual browser verification,,"iamdustan,gaearon,zpao",2016-03-11 14:44:54,2016-03-11 15:30:39
IS,ref callback attribute not behaving as expected,It seems the ref callback is not behaving as I expected it to based on the docs The docs say that ref is called when the component is mounted and all the other times it is called it is called with null as a parameter However when I put a console log in componentDidMount and one in the ref callback the one in the ref callback is called on every render whereas the componentDidMount is only called once The component i'm reffing is not even changing props Am I misunderstanding something I'm using React 0 14,,"syranide,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-03-11 14:54:38,2016-03-11 15:38:33
IS,react addons css transition group should not use require in browser environment,react dom library checks if it is ran in a browser env and then uses the window global to get a React reference react addons css transition group library and probably other addons do not do this and also do not supply a dist folder Why is it important When optimizing Webpack for development you want to set areact' library as noParse and alias areact' directly to the dist react min js This saves a lot of time However since libraries like css transition group require react lib this is not possible I know react dom and the addons will be truly divided into separate packages in the future is there any estimate on when react addons css transition group,,zpao,2016-03-10 15:05:31,2016-03-11 18:06:07
IS,Docs Question Refs Callback vs String,I was reading the docs again it is not clear to me the difference between defining a ref as a callback vs string input ref input this input input vs input ref input Can someone clarify to me please,,"hnordt,gaearon,hnordt,gaearon",2016-03-11 18:10:24,2016-03-11 19:03:11
IS,v15 rc1 seems to skip some text nodes in IE,The following results in only Hello being written in IE11 jsfiddle I realize there has been some changes to the way text nodes work in v15 but before we update our code to use span I wanted to check if this is the intended behavior since test is written in chrome,,"syranide,gaearon,dittos,dittos,sophiebits,zpao",2016-03-11 11:10:38,2016-03-11 19:05:43
IS,How to use life cycle hooks for animation using react low level API,I need to work around a bit of animation in react for that i am using the low level API of react i e React Transition Group This i want to use because it provides me the life cycle hooks like componentWillEnter callback componentWillLeave callback But i am struck in the problem how to use those life cycle hooks Herre is mine code But the life cycle hook function componentWillEnter and componentWillLeave are not getting called Please let me know what mistake i am making,,jimfb,2016-03-12 22:13:30,2016-03-12 22:16:41
IS,Click event not work correctly,render function return li data placeid this props suggestion placeId data value this props suggestion name onClick this onClick this props suggestion name li screenshot cb dev 2016 03 10 13 45 08,,zpao,2016-03-10 11:50:06,2016-03-14 15:23:15
IS,Break with 15rc1,Hi I have a fairly trivial application which was running on ReactJS 0 14 x Since I have moved it to 15rc1 it continues to work perfectly in Chrome However in IE11 in appears to render critical parts empty The relevant piece of code where I'm failing is here L37 There is no error output on the debug console The DOM explorer appears to just render it with missing data div class alert alert info role alert div You can see the application with the relevant behaviour running live at Enter any network 127 0 0 0 will yield the fastest return to see the issue Edit For non IE users you can see a SS here,,"syranide,jimfb",2016-03-14 10:09:27,2016-03-14 18:11:56
IS,set input value to undefined got warning that input is uncontrolled using react 15 0 0 rc 1,,,"syranide,jimfb",2016-03-14 02:49:42,2016-03-14 18:27:42
IS,string proptype is PropTypes string where as boolean proptype is PropTypes bool,Why is one abbreviated and the other is not Can they all match their typeof,,jimfb,2016-02-23 23:23:19,2016-03-14 19:01:27
IS,IE and React 15RC,Here is a weird I noticed today when debugging on IE10 image Wrapping the hello label inside a span ie span hello span would of course do the trick My guess is that this issue is also present in IE9 and perhaps IE11 too,,"iamdustan,jimfb,jimfb",2016-03-15 15:17:54,2016-03-15 15:21:02
IS,Codemod for SVG Attributes,Previously the whitelist of supported SVG attributes was very incomplete Rather than constantly playing catch up with the SVG attributes whitelist we decided it would be better to pass all attributes directly through For example the strokeWidth attribute is now deprecated in favor of the stroke width attribute the standard attribute for SVG elements It would be good if we had a codemod to help SVG users migrate to v15 It can rewrite all the known attributes including className class for SVG elements,,"jimfb,gaearon,sebmarkbage,jimfb,sebmarkbage,jimfb,sebmarkbage,sebmarkbage,zpao,sebmarkbage,gaearon",2016-03-08 12:31:58,2016-03-15 20:18:28
IS,Warning SVG property className is deprecated,In 5714 we changed SVG attribute logic to pass all SVG attributes unchanged This means for example that instead of svg strokeWidth you d write svg stroke width The reason for this change was that we don t want to maintain a whitelist of attributes Since we released 15 RC I saw a report on Twitter saying that svg className now also prints a warning Warning SVG property className is deprecated Use the original attribute name class for SVG tags instead In a way this makes sense as it is consistent with us not maintaining a whitelist and with how we treat custom components On the other hand SVG elements do not seem that special and asking people to use class on them instead invites the old discussion about doing that for DOM elements as well I would like to double check that this className class is indeed a change we want to make for SVG elements Alternatively we can leave className as is by introducing a special case for it alone,,"gaearon,jimfb,sebmarkbage,jimfb,jimfb,koba04,zpao,zpao,gaearon",2016-03-08 11:35:28,2016-03-15 20:20:44
IS,node warning possible EventEmitter memory leak detected 11 listeners added,Hi This is a classic but I cannot fix it this time it seems like the removeListener method does not remove the callbacks here is my store,,"cody,gaearon",2016-03-15 19:38:30,2016-03-15 21:45:57
IS,React v15 0 0 rc1 issue in IE11 Unable to get property 'nextSibling' of undefined or null reference,Do not know yet exactly what causes this so I will update the ticket if I find out more For now I do got a long stack trace This code works fine in Chrome but fails in IE11 I will try to see if I can make a minimal example displaying the problem,,"iamdustan,iamdustan",2016-03-16 09:53:28,2016-03-16 10:58:08
IS,SVG Support focusable attribute,Currently if I supply a focusable attribute to the SVG it shrinks it out Seems it happens because there is no focusable key in SVGDOMPropertyConfig js So is there any chance you merge a PR which adds this property to the list,,"gaearon,gaearon,jimfb",2016-03-08 12:01:09,2016-03-16 16:24:59
IS,Please add events onFocusIn OnFocusOut,subj,,"mxstbr,jimfb,mxstbr,jimfb,gaearon",2015-10-18 13:56:40,2016-03-16 16:48:27
IS,Attempted to assign to readonly property,Getting a crash report from a React Native app that is crashing in react code I can not really provide much detail other than the stack trace All I know is it is our most frequent crash by far 73 of crashes are this one Has anyone else run into this,,"jimfb,jimfb,jimfb",2016-03-16 21:24:52,2016-03-16 23:05:08
IS,renderToString in 15rc2 still put wouldata reacid' in markup,It looks to me like ReactDOMServer renderToString reactdomserver rendertostring still puts in the the data reacid attributes everywhere Is this intended In my quick tests ReactDOMServer renderToStaticMarkup reactdomserver rendertostaticmarkup seems to do the job now since 15rc2 no longer needs the react dataid do we need both render methods going forward Todd,,zpao,2016-03-17 02:48:08,2016-03-17 03:02:27
IS,Testing pure function vs createClass component using scryRenderedComponentsWithType,I would assumed that although there are different ways of creating components the results would be the same and we would be able to find them in the document in a uniform manner When I try and use the test utility method scryRenderedComponentsWithType it can not find components created using a pure function Should this test pass or is there another way of getting pure function components in the document,,gaearon,2016-03-17 11:19:56,2016-03-17 15:33:43
IS,Wierd functionality when try to display complex array,Hello I got one strange error like thing I got array of commands in very special component eg I have no any of this elements I have putted keys to commands and it seems to me that react does not handle elements with key property correctly When i try too look at available elements it was exists before remove function called I have no idea why incorrect dom element is removed since removed element left on page and when I have correct array when i console log it is items in ScenarioForm render method,,"gaearon,gaearon",2016-03-18 12:36:45,2016-03-18 15:48:34
IS,Perf actual React components,ReactPerf and ReactDefaultPerf allow for profiling the react internals of ReactCompositeComponent but what I really think would be useful is for React to have a start stop style for perfing the components Or possibly just track these methods automatically and spit out warnings Some long range uses would be how many times did you call shouldComponentUpdate what was the response if you are always returning true that might be insightful for your components how many times did you call setState could compare this with of render cycles to track forced renders possibly I had started work in 4522 but that just needed to be closed,,gaearon,2015-10-23 04:19:32,2016-03-18 22:23:16
IS,ReactPerf printDOM throws Uncaught TypeError Converting circular structure to JSON,Identical app I call printDOM after the app is loaded React 0 14 7 img width 622 alt screen shot 2016 03 17 at 20 31 56 src React 15 0 RC1 RC2 and master img width 635 alt screen shot 2016 03 17 at 20 34 02 src We should fix this before releasing 15 0,,"gaearon,gaearon",2016-03-17 20:35:31,2016-03-18 22:24:18
IS,checkPropTypes suppresses repeat warning messages about missing required propTypes,We have been writing some tests around behaviour when required prop types are not supplied to a React component We noticed that as we added isRequired to more PropTypes some of our test suite did not break as expected Our first tests check the number of times console warn is called which failed as this number would increase but the following tests that did not supply the newly required prop did not trigger an increase To demonstrate the behaviour in a browser please see this jsFiddle We discovered the cause in ReactElementValidator L214 It is actually suppressing repeat warning messages for missing propTypes As you can see in the source there is even a comment about this issue Only monitor this failure once because there tends to be a lot of the same error From our perspective this non deterministic behaviour is unexpected and we would expect these warnings to appear any time we render a component without props which we have specified as being required even if there tends to be a lot of them We have discussed it as a team and we feel that the greater community may expect this type of behaviour too At this point we would appreciate it if we could either get perspective on why this behaviour exists we may be missing something that this protects against find a solution to patch this behaviour remove suppression would be optimal in our eyes The relevant commit when this behaviour was added is here quite a while ago now,,"GordyD,gaearon",2016-03-18 20:41:35,2016-03-18 23:10:56
IS,Incorrectly displaying html entities,I have a bit of JSX which looks like I'm using babel The times however is showing up as in the browser Any idea what is going on,,"mxstbr,zpao",2016-03-18 21:50:21,2016-03-19 00:04:14
IS,require in stateless functional component fails,The behavior of webpack require differs between regular React components and React stateless functional components This will work See for a simple project that reproduces this issue Apologies in advance if I am making an obvious mistake in my configuration,,"abloomston,cody,gaearon,abloomston",2016-03-19 16:07:09,2016-03-19 20:46:06
IS,HTML tags missing content when wrapped with comments v15rc1,I have notices that since there are no longer spans everything element wrapper by comments content fails to display for IE and Edge,,"cody,gaearon",2016-03-19 17:18:28,2016-03-19 23:00:31
IS,distinguish between React elements and plain old objects,I'm using some short hand functions for rapid prototyping and need to check if the arguments are react elements objects or 'normal' ones Using typeof for the moment but is it reliable var isPojo o typeof o 'object' Array isArray o o typeof separate plain old js objects from react elements,,gaearon,2016-03-19 12:23:53,2016-03-19 23:01:45
IS,validateDOMNesting figure inside a p tag,Hi I'm using a markdown to JSX parser and everything works ok but I see a warning in the console for a react DOM validation Checking the specs it seems that p allows for figure See here Permitted parent elements Any element that accepts Flow content p is a valid flow content element Question Is there any other reason for this warning to be there that I'm not aware of FYI I'm using React 0 14 7,,"alansouzati,cody,syranide,alansouzati",2016-03-18 22:23:19,2016-03-20 10:14:32
IS,Disabled input button should not fire onClick in IE11,the following button should not fire onclick but it does so in IE11 Chrome and Mozilla are ok using the normal DOM without React is ok too See the plunker example that reproduces the issue open it with IE,,"gaearon,cody,gaearon",2016-03-20 11:47:51,2016-03-20 14:53:46
IS,Breaking error in IE 8,virtualbox ie8 win7 18 03 2016 10 50 19 How to replicate this issue 1 run Windows 7 with IE 8 on VirtualBox 2 clone this repo 3 run npm start and open in IE 8 4 try to select different options in select component and the error will appear Although it is not fancy at all I still need to support IE 8 for a few more months Thanks,,"gaearon,gaearon",2016-03-18 10:53:56,2016-03-20 21:01:16
IS,input type color fires continuous change events,The native color picker will fire a lot of input events and then a single change when closing the picker The react version fires change at the same rate as input,,"cbrwizard,gaearon",2016-03-21 09:42:21,2016-03-21 10:51:42
IS,React and React Dom are blocked on Chrome even when running this on a Python 3 4 http server,Pasting the exact code from into a HTML file and opening it through a Python 3 4 HTTP server for some reason gives the following error in Chrome Redirect at origin '' has been blocked from loading by Cross Origin Resource Sharing policy No 'Access Control Allow Origin' header is present on the requested resource Origin ' 8000' is therefore not allowed access I'm able to work around this completely by removing the integrity and crossorigin attributes from the React and React Dom script tags I have never had this issue in Chrome before and I frequently include external scripts with crossorigin and integrity attributes with no problem so I'm lead to believe this may have something to do with the way FB me is configured,,"gaearon,gaearon,jimfb,zpao,jimfb",2016-03-17 11:58:49,2016-03-21 22:19:16
IS,'Bind' will result in errors in onClick handler,If you create any react component and add this attribute to it onClick this setState bind this smKey smValue then you click it it will report an error Uncaught Invariant Violation enqueueCallback You called setProps replaceProps setState replaceState or forceUpdate with a callback that is not callable but actually it is working the state will be correctly updated nothing wrong just the annoying error I think this is a bug but I can not image how could it be when this can work onClick this setState smKey smValue to me they are exactly the same things,,"gaearon,syranide,gaearon,gaearon,gaearon,zpao,gaearon,gaearon",2016-03-21 08:09:23,2016-03-22 15:46:22
IS,js click,,,jimfb,2016-03-22 18:19:13,2016-03-22 18:39:49
IS,Accessing params of non primitive proptypes shape oneOf etc,Hi I have a use case to read in the proptypes of a component in enhance development process Is there a way to access arguments for types like React PropTypes shape,,"milesj,jimfb",2016-03-22 21:48:32,2016-03-22 22:19:38
IS,DOM rendered is different with Virtual DOM,It just happened when the Virtual DOM inspected by React DevTool is AND the 4th section is inserted with this setState sections someArray and all these section is using dangerouslySetInnerHTML There is no any warning or error in console,,"jimfb,zpao,gaearon",2016-01-04 21:52:18,2016-03-23 17:45:00
IS,this is not defined,I was using react redux relay trying to achieve server render and I found this following problem However it was right okay on browser side And after debugging I found the only valid difference was that es6 classes on browser side have been transform by babel and babel polyfill and when I add transformation on node side it turns out okay I wonder if there is anything to do with react or just some bugs of node js plz help,,"gaearon,gaearon",2016-03-23 18:20:53,2016-03-23 18:52:05
IS,Jest failed Travis Passed,Calling it out as a separate issue so it does not get lost in the noise Jest clearly failed but travis says everything is green Discovered in issuecomment 190312503 cc,,"jimfb,zpao,cpojer,sophiebits,cpojer,sophiebits,cpojer,sophiebits,zpao,jimfb,sophiebits,jimfb,sophiebits,jimfb,gaearon,sophiebits,gaearon,sophiebits",2016-02-29 21:30:06,2016-03-23 19:00:17
IS,15 0 0 rc 1 css property warnings does not contain any context origin,Version 15 0 0 rc 1 Fiddle check console For an example providing NaN to a css property will result in NaN is an invalid value for the fontSize css style property Now I'm aware that there is an error in my code but I have no idea which component I should check I would like to have something like this NaN is an invalid value for the fontSize style property Check the render method of Header I will be happy to try to solve this if this is something we want to do,,"edvinerikson,edvinerikson,zpao",2016-03-08 16:41:53,2016-03-23 19:12:51
IS,Deleting selection range in input does not work,Steps to reproduce Visit Erase Hello from the input box Type a lowercase a It should be transformed to APPLE with PPLE selected Press delete or backspace Expectation the PPLE should be erased Instead nothing happens If you continue typing ir for instance the PPLE selection is erased correctly though,,,2016-03-23 22:28:32,2016-03-23 22:32:39
IS,Log warning to console when components written as functions are implemented incorrectly,Example See how easy that is to miss Not sure how difficult something like this is to figure out Going to continue looking myself but if someone has some idea how to go about creating a warning for this scenario please feel free to point me in the right direction smile,,"jimfb,jimfb",2016-03-24 03:23:27,2016-03-24 03:39:59
IS,Add warning for onFocusIn and onFocusOut,As per we should warn if these attributes are used,,"jimfb,jontewks",2016-03-16 21:06:35,2016-03-24 15:37:46
IS,Explore possibilities of an Emmet style react plugin that allows for succinct templating,I have been using emmet for a while in sublime and it occurred to me that the angle brackets were re purposed to actually provide a useful utility nesting If you consider in JSX where a component is returning an xml like syntax You can see that it would be much more succinct to remove the brackets Although it is not as easily readable it is much faster to write Currently angle brackets are not serving a purpose other than delineating a tag We can assume the returned output will be a tag so therefore it could be more useful to re purpose the usage to stating a nested hierarchy Just an idea but I thought it was worth mentioning,,"aweary,jimfb",2016-03-24 20:22:29,2016-03-24 21:46:20
IS,Stop Exporting Secret DOM Server Stuff,React js should only export the isomorphic stuff No dependencies on DOM The secret export stuff is only for the browserify package so we should just do a special case file here L66 Rename React js ReactBrowserify js and ReactIsomorphic js React js That way we do not take on the dom dependencies in the npm package Will help with React Native unification,,sebmarkbage,2016-03-24 01:16:09,2016-03-24 23:01:51
IS,CSS values with important in 0 15,It seems that style values with Important doesnt work in 0 15 Fiddle,,"zpao,gaearon",2016-03-25 20:57:34,2016-03-25 22:57:38
IS,Nested properties issue,Hello I have the code Why do I get 1 variable reference for 2 separate components instead of 2 instanses of nested prop for every component Why this props saves only last setted value for all instanses of the component after mounting Is it a normal behavior I think the correct behavior is having different property values for different instanses P S I tested this code here,,"jimfb,gaearon",2016-03-25 22:08:09,2016-03-25 22:59:57
IS,Requiring react addons css transition group includes React in webpack builds that exclude react,I'm trying to use the addon in a layout component with react and react dom as peer dependencies but if I include it my build goes from 55k to 750k The published npm module is simply this line of code module exports require areact lib ReactTransitionGroup' If I look at react lib ReactTransitionGroup I see this line var React require ' React' Which causes webpack to pull in all of react since I only defined areact' as an external module I could make areact addons css transition group' external to my webpack build but there is no distributed script for just that addon that adds it to the window variable similar to how including the react script adds window React and react dom adds window ReactDOM The timeout transition group module depends on react addons css transition group so it has the same problem,,"zpao,gaearon",2016-03-25 21:33:08,2016-03-25 23:00:41
IS,invalid unitless properties,I noticed that some of the unitless properties are invalid E g when the 'o' prefix are added to the style name some of the style names are converted into OOpacity OOrder OOrphans and some other weird names And some of the prefix are not needed anymore for some of the unitless properties,,"aweary,gaearon",2016-03-26 13:05:29,2016-03-26 17:34:18
IS,React appends style to head by default resulting in empty duplicate,is this by design necessary seems inconsistent since it does not append meta or title etc to head results in empty duplicate,,"gaearon,gaearon",2016-03-27 19:05:54,2016-03-27 20:27:59
IS,How to declare PropTypes for recursive data structures like a tree,Hi I would like to do something like As you can guess this does not really work because it ends up calling PT arrayOf undefined isRequired I know this is probably a javascript limitation due do not implementing lazy evaluation but is there a way to declare such structure properly in PropTypes I have not seen this documented,,"slorber,slorber,gaearon,gaearon,gaearon",2015-12-16 13:49:27,2016-03-27 22:37:15
IS,TestUtils Simulate event does not set the synthetic event type,SyntheticEvent type is undefined when received by the handler Or the nativeEvent type for that matter Needs to be added in here somewhere L496 I realize that it is not sustainable to have to set all the possible fields for a simulated event but the type at least makes sense for verification that you are getting the right sort of event,,gaearon,2016-02-23 17:46:06,2016-03-28 23:46:41
IS,Translate thinking in react md to Japanese,,,jimfb,2016-03-29 11:31:24,2016-03-29 11:34:00
IS,ReactTransisitionGroup does not allow the option to append or prepend a child to siblings,The ReactTransistionGroup assumes that children should be prepended to their siblings when inserted into the parent I think we should add an optional prop that allows configuration to prepend or append children I have working code I can submit a pull request I just wanted to make sure I was not missing something L215 L218,,gaearon,2016-03-29 14:54:22,2016-03-29 14:59:16
IS,dangerouslySetInnerHTML issue,Hello I caught the following issue today return dangerouslySetInnerHTML html item Text key 'conditions ' index and if in item Text I have the following strong p bla bla bla p strong Beschikbaarheid Bij het selecteren van een vlucht word je vlucht nog niet meteen geboekt Je vlucht wordt definitief bevestigd na een succesvolle betaling op onze website I get the next one result p data reactid 1qcvo80rke8 2 2 0 1 0 conditions 0 strong strong p p strong Vluchtdetails en voorwaarden strong p Beschikbaarheid Bij het selecteren van een vlucht word je vlucht nog niet meteen geboekt Je vlucht wordt definitief bevestigd na een succesvolle betaling op onze website p p As you can see p is not rendered one inside another But If I change the p to div in the item Text I get right markup with correct rendered data I tried to add key className to p but it does not help,,,2016-03-30 10:04:32,2016-03-30 12:22:11
IS,server is running and I include the export line its not throwing an error,I am facing a weird error when the server is running and I include the export line its not throwing an error and able to see the application even it shows webpack is valid export SportsTopPortion but after including this line and start the server again I am facing the error Error Invariant Violation i am using webpack node and react since I am using webpack for build I am thinking the error will be due to webpack checked React code for errors there is no problem in syntax can you tell me how to fix it the reason I am using export is to write unit test case whole code and test code can be seen in gist below I am debugging for past four days not able to find out,,"zpao,zpao,zpao",2016-03-30 20:47:28,2016-03-30 20:51:21
IS,TestUtils renderIntoDocument and lifecycle,Hi everybody There something I do not understand in the TestUtils library I want to test a react component with TestUtils The lifecycle of my component is getInitialState componentWillMount render componentDidMount componentWillReceiveProps shouldComponentUpdate componentWillUpdate render componentDidUpdate componentWillUnmount If I use TestUtils renderIntoDocument these methods will never be call componentWillReceiveProps shouldComponentUpdate componentWillUpdate componentDidUpdate because a new container is recreated to each call to renderIntoDocument renderIntoDocument function aReactElement var div document createElement wouldiv' return ReactDOM render aReactElements div See my fiddle So I do not understand why you suggest to use renderIntoDocument method to test reacts component I think its better to use method likes create the container let container document createElement wouldiv' call render method let component ReactDOM render reactElement container to test react components See fiddle Your opinion Best regards,,jimfb,2016-03-31 03:08:13,2016-03-31 03:50:43
IS,Support question Serverside rendering only why re render on client,Alright kind of a React newb but React is not following the principle of least surprises with this one so I have to ask Our team only really wants serverside rendering for a particular project We do not need to do much special on the client However as far as I have learned you need to have a reference to the same React components on the client as you do on the server in order to actually get dynamic behavior events are bound etc on the client My question is if we have a div id areact root' div why is not React setup so that on the front end we could just call without the React component first argument Does not could not React have enough info to go off of already so as to not need an actual reference to the React component on the front end as well As long as React on the front end has a reference to the root DOM node could not should not that be enough The whole thing where you have to re render on the client is kinda unexpected I am sure I am missing something or there must be some good reason why the lib works this way I just do not know and want to know which is why I am writing this Thanks,,"gaearon,gaearon,gaearon",2016-03-31 08:31:52,2016-03-31 09:24:40
IS,New PropType PropTypes style would it make sense,Would implementing a PropTypes style make sense I think it should be useful for many scenarios Example One implements a TabPanel component accepting a property tabStyle which should be a valid style object,,"brigand,gaearon,brigand",2016-03-31 08:19:17,2016-03-31 10:18:12
IS,flattenChildren Encountered two children with the same key,So I have been struggling trying to figure this out and nothing I can find helps I have got a function that renders a component for every item in an array pretty much It works perfectly fine except for the fact that it gives me a bunch of warnings all saying the same screenshot from 2016 03 31 14 25 12 These keys never change no matter what I try and set it to Here is my code below As you can see I set the key for each component but it does not even use it I know for a fact that race id is unique too I have tried adding and removing the keys from all the elements in my code as well as setting them to different values but it still always prints out 4 warnings with these as the keys 0 84414 0 84415 0 84416 0 84417 Also using React 0 14 6 if that could make a difference,,jimfb,2016-03-31 20:39:55,2016-03-31 21:13:23
IS,React 15 rc 1 regression onTouchTap not working,onTouchTap stops working in React 15 I have prepared this reduction The only difference between pane A and pane B is which version of React is used If you open it on a touchscreen device or in DevTools with emulation on you will see that onTouchTap worked in React 14 but ceases to work in React 15,,"gaearon,gaearon,jimfb,gaearon",2016-03-08 22:30:31,2016-04-01 01:22:19
IS,Addons Update push in array based on a id,The react addons update is very useful to me but I wonder the best way to use it in a use case I have I have an Array of items indexed by a uniqueId I want to use the push command in way only new uniqueId may be added and others updated For example I had a look to combine assign and merge behavior Do you have some advice for this type of use case or do you consider another command may be needed for that,,gaearon,2015-10-23 09:00:42,2016-04-01 02:15:49
IS,allow arrays for CSS properties that can take multiple values,It would be nice if people were able to write,,"zpao,aweary",2016-04-01 17:30:11,2016-04-01 17:40:49
IS,Proposal externalize inline styles,From your meeting notes There are tons of different ways to render JS styles see Radium CSS Modules React Native Web etc I see tremendous opportunity here for powerful third party stylesheet packages And without burying the lead too much What if React DOM did not manage inline styles at all An external inline style library would be responsible for producing a valid toString response to send into the style prop of the renderer Maybe if the renderer was expecting an object form you could also create an expectation around valueOf returning a primitive object This could look something like React could provide an add on that maintains the existing functionality to get things started similarly with how you all have shifted immutability helpers off to the community However it puts React in a place where 1 Inline stylesheet package maintainers have greater control 2 Static inline styles can be compiled ahead of time 3 React does not have to spend dev effort on maintaining inline style support 4 Those not heavily using inline styles can use template strings and benefit from a lighter weight React though this is not really a huge deal,,"nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon",2016-04-01 19:50:08,2016-04-01 20:13:45
IS,Attract more contributors by sharing first contribution stories,Dan Abramov asked what is the main reason holding you back from contributing to react So far 52 of the answers are Code is not approachable While not directly related but I think if current contributors shared their stories of their first contributions to react explaining why and how they got involved would be encouraging for others It can even be linked to in the official docs,,gaearon,2016-03-26 08:59:59,2016-04-02 21:41:15
IS,Warning for defining propTypes in production,A production only warning for having propTypes defined as a non empty object could spark a change in the community to have propTypes conditional on NODE ENV This could be automated with a babel plugin or similar for other build systems This would result in all react apps being significantly smaller in production Warning you have defined propTypes on the ComponentName component in a production build If this is your own code consider using a plugin such as babel plugin plugin name If it is a third party library open an issue Or alternative save all bytes text Warning propTypes defined on ComponentName,,"brigand,brigand,jimfb,brigand,jimfb",2016-04-03 15:47:14,2016-04-03 20:52:33
IS,Component setState does not allow Symbol keys,When trying to do something like this setState someSymbol isomeValue' the render is being invoked properly but the this state someSymbol is undefined Running Object getOwnPropertySymbols on this state I have confirmed that this setState does not define Symbol properties,,"gaearon,zpao,aweary,zpao,aweary,zpao,sebmarkbage,aweary,aweary,zpao",2016-03-29 17:30:24,2016-04-04 17:21:39
IS,transitionGroup,Could you tell me where the problem is,,"jimfb,gaearon",2016-04-05 12:34:27,2016-04-05 12:35:46
IS,'Warning ' messages should use console warn,Currently they use console error which overestimates their severity and causes devs to react more strongly than the message might imply Example,,zpao,2016-04-05 19:00:01,2016-04-05 19:21:37
IS,Select option empty value regression in 15 0 0 rc 1,React 0 14 7 option value empty option emits empty string on change js console output React 15 0 0 rc 1 option value empty option emits string with value empty on change js console output This is because React 15 0 0 rc 1 cuts off value from option tag,,"chicoxyzzy,chicoxyzzy,chicoxyzzy,chicoxyzzy,jimfb,everdimension,troydemonbreun,syranide,everdimension,syranide,chicoxyzzy,everdimension,chicoxyzzy,jimfb",2016-03-08 19:07:06,2016-04-05 20:27:13
IS,Official method of transforming components,From The goal is to eventually kill this technology in favor of less hacky technologies baked into React I'm running into a problem where I want to be able to transform components regardless of Babel i e components that may or may not be touched by Babel because they are either already transpiled a dependency within node modules etc And official way to transform all components would solve this problem immediately and could enable some incredibly useful functionality in the realm of reusability extensibility and managing application state via context I'm curious as to whether or not anyone has put any official thought towards this or if you would be willing to accept a pull request for it,,"jimfb,gaearon,gaearon,gaearon",2016-04-05 21:27:29,2016-04-05 21:37:37
IS,Investigate why Travis failed to build JS files,There was a parse error in L567 so the website had important JS files deleted I manually restored with 2714c5d6f2bf19ee40bbc20b0ad804c1770f01ba Maybe this was a fluke looks like Babel was installed and could be a non issue after branch cut when we will switch to Babel 6 but wanted to get this on the books in case somebody else notices and knows what is up,,"zpao,jimfb",2016-03-07 21:39:53,2016-04-05 22:01:59
IS,callback in setState second parameter cannot get mouse click is event handler,Hi all I use setState in a click function and I pass a callback function to second parameter Please look at In the callback function I cannot get event handler is it reasonable I try to pass event handler into callback like but the state is wrong How can I get event handler and right state in setState callback function correctly thank for your help in advance,,"andreypopp,jimfb",2016-04-06 10:57:42,2016-04-06 14:57:36
IS,npm install save react dom throws error,npm install save react dom npm http GET npm http 200 npm ERR registry error parsing json npm ERR SyntaxError Unexpected token npm ERR Y n F B z2 i u 2 M I jI dK 3s W b K I H ga G 1 Q Lz lF U 7vg f M QU U ' n N o l i Gnf5 G p 5 u C 3a p V c D o Xt R awd 9S h i lX s fl E Du5s k n fawh u D 7Vj F h Vau 8 Q G 9 Jcu r f M M n QM Rh W J 8 N npm ERR B UQ DvY 'S T S 'z 3 ND He g fL q f h Sg j B npm ERR w v r Of P I y W tV Q p Y w we M 8vdA fH 8u i1C 8 k l V 8 3 ' H a W M 6 j lP m F3fZj p H G mE 22 r G h 7 v 1 L G H npm ERR Ra q P MU v tAc Y o g 3 'xn w 0nj 7 fKUkK u Y f 3Q Y h o n WQ gM p xW b T I x C i R B e7 C h z k ODz u 2z s N L O I ' a q sJ s p 0G O ' 6 D i 0 2 eQn z X v m Ty T e i d g n 5Q npm ERR 3 N 'Nc q d9 g s 0 2k s J Bx A x L n 8 gT cd v M iYw ph a U w s W b z l 3 gT j z sZ a u Ip V6 d1 k d h M c C u m 3 j d 7 z W N V R Ddx kT v N e f5 d Z c Q k t ' ki i i x ' O 6 a e7r l FE 7 ' S6 S4n g 6 K A Xf V M U 8 8 e o J C PXu 8 2 1 npm ERR Oq TF rJ Fc SQ Mj c A k Z 7 y gQ A b b mq w n F D4 A 6E HT X i K w N q b 9 u RV lV Z M l T JV gt Ez Y 2 5 I npm ERR SD L q DD l O 8 y 8 f M X s f p mx 7 8 D L D o r n 6 l q t 0 1' T t ' A ei SL A 1 xOBM 2 f A Z Q rNv 39 z qO R w Q r 4 i r t d d D fu f h L8 w A 4 U 4 p hQ j ' 3 W O r 5 H igI A r G 7 xYu U y 8 b npm ERR V D 9E ge X d c 0rQ e1 ' f ad Bp V a 7 H d 5 u D H eF RA I YkX 8 LWX Pql c RR v 9 X me 4G 5 j8 4 G5 EN t6 aP t q g fk N n M m x g pCwl l 4 xM 3 W62 s y r 3 R X 3 h Y o R o 7 N A l g E'l '1 1 x a Y nPe 7K c f W7 l g D c z g j d3 3n N 4 Y UX y wc ' c e Th Y VY S 0 npm ERR l Y h a D P6 D jd yz T K a7 Q r k J yt npm ERR at Object parse native npm ERR at RegClient anonymous usr share npm node modules npm registry client lib request js 238 23 npm ERR at Request self callback usr lib nodejs request index js 148 22 npm ERR at Request EventEmitter emit events js 98 17 npm ERR at Request anonymous usr lib nodejs request index js 896 14 npm ERR at Request EventEmitter emit events js 117 20 npm ERR at IncomingMessage anonymous usr lib nodejs request index js 847 12 npm ERR at IncomingMessage EventEmitter emit events js 117 20 npm ERR at stream readable js 920 16 npm ERR at process tickCallback node js 415 13 npm ERR If you need help you may report this log at npm ERR npm ERR or email it to npm ERR npm googlegroups com npm ERR System Linux 3 19 0 56 generic npm ERR command usr bin nodejs usr bin npm install save react dom npm ERR cwd home karir Code latihan reactjs npm ERR node v v0 10 25 npm ERR npm v 1 3 10 npm ERR type unexpected token npm ERR npm ERR Additional logging details can be found in npm ERR home karir Code latihan reactjs npm debug log npm ERR not ok code 0 The problem is the json in has some funny characters id react dom rev 74 1a738664f6df983414e4a01d482b8d03 name react dom description React package for working with the DOM dist tags latest 0 14 8 next 15 0 0 rc 2 versions 0 1 0 name react dom version 0 1 0 description DOM is a React DOM wrapper with subjectively more sanity and awesome helpers author The funny characters are located beside the word subjectively npm version 1 3 10 nodejs version v0 10 25,,"gaearon,zpao",2016-04-06 09:21:05,2016-04-06 20:54:06
IS,ReactTestUtils Simulate logs unexpected console error,To reproduce open Error is logged to browser dev tools in Chrome Firefox somehow not in Safari Happens on v15 0 0 rc 2 and on latest master version The assignment of additional event data to the newly created SyntheticEvent triggers a console error L502 Warning This synthetic event is reused for performance reasons,,"zpao,gaearon,zpao",2016-03-30 11:54:11,2016-04-06 21:59:22
IS,Setting select value fails when using optgroup,As per this fiddle The output of this in the select field is edited for brevity When passing into the select field the value of Midlothian it is still showing Fife as the selected value However it does seem that it possibly works with defaultValue being passed however it does not work with both being passed,,"gaearon,gaearon",2016-04-07 13:43:11,2016-04-07 14:29:08
IS,Curly brackets as the first line in return causes unexpected token error,Curly brackets as the first line in return causes unexpected token error For example,,"zpao,keyanzhang",2016-04-07 19:21:25,2016-04-07 19:33:03
IS,SECRET DOM DO NOT USE OR YOU WILL BE FIRED,great variable name Found in react src umd ReactUMDEntry js,,zpao,2016-04-07 21:03:35,2016-04-07 21:14:19
IS,Typing in middle of controlled text field jumps to end,Repro Go to Scroll to TODO example Type anything into the input field Click in the middle of the text and type another character Notice the cursor jumps to the end of the text field,,"Daniel15,Daniel15,zpao",2016-04-08 01:10:24,2016-04-08 01:11:22
IS,Cursor jumping to end of controlled input in some browsers,Appears to be working in Firefox but at least Chrome Safari are broken Should be a really recent regression so very few possible changes to blame Easiest repo the todo list on our homepage,,"zpao,sophiebits,sophiebits",2016-04-08 01:09:58,2016-04-08 04:19:37
IS,setState obj callback callback called before state has mutated,I am fighting what used to be called 'a race condition' I'm not sure what you guys call it in the React world calling this snippet in a component proves my point I trust Either it is a 'noob observation go do this instead' or a documentation glitch as the docs says that the callback is called once the state is mutated or eventually a bug Obviously I'm rooting for 1 which would have me on my way in a jiffy providing someone with a lot more knowledge of React would stick it to me so to speak cheers Walther,,"RaitoBezarius,syranide,syranide,syranide,syranide",2016-04-08 09:50:38,2016-04-08 10:08:26
IS,Removal of React spread has broken compatibility with TypeScript and older Babel transpilers,If you use TypeScript or an older version of babel React 15 0 0 yields errors React spread is not a function See this issue Applications can monkey patch a backwards compatible React spread function but it would be preferable for React to come with a compatibility shim function,,gaearon,2016-04-08 14:25:35,2016-04-08 14:54:52
IS,render should check input type,I just updated some code that was using React 0 11 and one of the errors I made was passing in class constructors The error this gave was TypeError this is undefined at react js 5045 which gave me no clue as to what was wrong The problem of course is that React createElement className needed to be passed in instead I think this might be an easy error to catch and warn about to help out noobs like me,,jimfb,2016-04-08 01:31:08,2016-04-08 18:34:50
IS,Release v15,There is just one thing left on the blocker list which should get merged shortly Then we are code complete Everything else we were considering was not a regression so it got booted and we can catch up later Real Code Changes x remaining regression with simulating events 6380 x fix failing test fallout from 6228 6426 x upgrade deps 6413 Docs x update properties attributes Removed deprecated methods Add any new deprecation notes x Add notes for potentially confusing version mismatches eg returning null from a functional component Actual Release x create branch 15 stable x shrinkwrap x update changelog sync with blog post x publish x Update travis to build docs from new branch part of release but after everything is published Post release x update the tutorial repo x update fiddles x ensure master has release resource synced,,"zpao,zpao,gaearon,zpao",2016-04-05 22:25:12,2016-04-08 22:01:54
IS,Can we try to auto prefix something CSS attributes like transform,According to the test here L176 we need to manually add the prefix for transform when inline this attribute In my case where implementing non trivial graph animation interaction UI and I am programmatically calculating the value for translate I have to manually add the prefix every time Is it possible to delegate this tedious task to React itself If so can anyone point me to the related code I will try to make a PR for this,,"zpao,aweary",2016-04-08 21:46:44,2016-04-08 22:21:11
IS,multiple checkbox toggle affecting state,hi guys I am experiencing strange behaviour if I have couple of checkboxes It behaves that other checkbox change state of other after selecting Below is a snippet for the reference On other hand I might overlooked something but cannot see it any advise would be great,,"gaearon,gaearon",2016-04-09 08:10:24,2016-04-09 12:01:43
IS,Unable to use transpiled ES6 classes as components in React 15 0 1,The following code snippet Let me know if any more information is required,,,2016-04-09 13:02:30,2016-04-09 13:03:23
IS,use of template literals,Is there any code convention reason for not using template literals consistently using template literals There are couple of more occurrences like return prefix key charAt 0 toUpperCase key substring 1 L63,,"keyanzhang,jimfb",2016-04-10 22:24:51,2016-04-11 00:01:20
IS,Do not warn about unitless 0,With React 15 0 1 I'm getting this warning react with addons js 21026 Warning a span tag owner unknown was passed a numeric string value for CSS property padding value 0 which will be treated as a unitless number in a future version of React While it generally makes sense 0 should be allowed unitless like it is in the CSS spec,,"gaearon,jimfb",2016-04-11 00:04:05,2016-04-11 00:34:13
IS,Immediately setting a disabled attribute on form submit button using setState caused no form submission to take place,I have a form with a submit button When the user clicks submit my handleSubmit function calls this setState submissionTakingPlace true the re render then sets a disabled attribute on the submit button In Chrome and Safari the network tabs shows that no POST request even starts In Firefox the POST occurs Note I have the same behaviour when I use a input over a button Here is a Codepen example Issue occurs on the latest version of React 15 0 1 Apologies if this is a browser quirk vs a React issue but me and a colleague were pretty confused by it,,jimfb,2016-04-11 01:44:27,2016-04-11 02:47:02
IS,select fails to set a value when using optgroup 15 0 RC2,React 0 14 8 correct sets the defaultValue for select when using optgroup However 15 0 RC2 defaults to the first option I'm not very familiar with the React codebase but I suspect it has something to do with a change made in 1dca72e specifically this line L35,,"trevorsmith,jimfb",2016-04-07 21:15:12,2016-04-11 02:54:11
IS,Unable to type Korean in input v 15 0 0,Hi there You might know I guess that there is an issue about typing Korean in the recent version The problem is when I try to type Korean the letters are split Korean letters make group letters from element for example group letters like which means React is composed of sort of R e a c t the first 2 are put together and make the first group letter and so on Before update if I type by order it automatically put together to be It is possible because there is a rule to make them But now in v15 0 1 if I type it does not put together so it shows I tried uncontrolled input that does not set it is value through onChange setState and I worked right I guess the problem is in onChange setState Korean is one of the biggest language in the world about 12th This issue make new version of React useless to every Korean user I have to be fixed ASAP I found I just been fixed thx,,zpao,2016-04-11 10:51:42,2016-04-11 11:19:27
IS,CSS Transition Group peer dependencies error,Hi when I try installing react addons transition group I get a peer dependeincies error I think its because transition group still depends on react addons clone with props while React now has React createElement Error below npm i react addons css transition group npm WARN package json No description npm WARN package json No repository field npm WARN package json No README data npm WARN package json No license field npm ERR Windows NT 6 3 9600 npm ERR argv C Program Files nodejs node exe C Program Files nodej node modules npm bin npm cli js install react addons css transition gr up save npm ERR node v0 12 4 npm ERR npm v2 10 1 npm ERR code EPEERINVALID npm ERR peerinvalid The package react does not satisfy its siblings' peerDepen encies requirements npm ERR peerinvalid Peer react dom 15 0 1 wants react 15 0 1 npm ERR peerinvalid Peer react addons clone with props 0 14 8 wants react 0 1 8 npm ERR peerinvalid Peer react addons css transition group 15 0 1 wants react 15 0 1,,iamdustan,2016-04-11 11:17:01,2016-04-11 15:58:38
IS,React 15 breaks server rendering check sum,I'm developing an universal app with React and after updating to v15 0 1 I started getting this error Warning React attempted to reuse markup in a container but the checksum was invalid This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting React injected new markup to compensate which works but you have lost many of the benefits of server rendering Instead figure out why the markup being generated is different on the client or server client ut class md input name txtCadmus pat server ut class md input pattern 0 9 nam It seems to be some bug on V8 Object assign reordering or something like that but I'm not completely sure Tried to change a bunch of stuff e g force both server and client to use a polyfill or using Babel transform object assign plugin but nothing solved the problem Then I uninstalled React 15 0 1 and installed 0 14 8 again and the problem was gone Btw it is pretty simple to simulate the issue Code React 15 not working 15 0 1 React 0 14 8 working as expected 0 14 8,,gaearon,2016-04-11 17:18:21,2016-04-11 20:08:49
IS,RenderToStaticMarkup,In v15 you said that arenderToStaticMarkup' was out this is still in the docs describing you use this in the internal build Does this still apply Link to docs reactdomserver rendertostaticmarkup This is the blog post that made me suspicious Blog post removed deprecations,,cody,2016-04-12 09:13:23,2016-04-12 11:06:03
IS,Warning Constructor is changing a uncontrolled input of type search to be controlled since 15 0 1,I noticed now react 15 complains for something like or just changing the initial state it stops complaining as soon as you put a string instead of undefined is it intended because I do not see a big problem and difference with a value being undefined,,"gaearon,gaearon",2016-04-12 10:11:46,2016-04-12 15:00:31
IS,15 0 1 breaking devtools,I am using React 15 0 1 with Meteor When I open the Chrome console I get a Waiting for the roots to load to reload the inspector click here This has no effect I like that the data reactid s are gone but not having the devtools inspector is a huge loss Any word on this,,zpao,2016-04-12 16:23:41,2016-04-12 16:53:49
IS,installing react addons best practices,The various React addons express a peer dependency on their matching React version You can write a React component library that runs with multiple versions of React but depends on some specific addons as an implementation detail If you consume this library in a host environment that uses react 14 npm will still helpfully install the latest version of react addons update which of course peer depends on react 15 causing rather confusing UNMET PEER DEPENDENCY warnings since I the consumer am only looking around the peerDependencies block for version issues So my question is this what are best practices for a library in this situation Should I declare react addons update as a peer dependency meaning that my consumer has to personally install not just React itself but also every react addons that any of their dependents use Seems annoying to my consumer and also a sort of an abstraction break for the sake of version matching Perhaps react addons should be more independently versioned so they accept multiple versions Or maybe not declare a peer dependency on React if they do not actually need it like for react addons update which only uses a couple of the small non React core utilities,,"gaearon,gaearon,jimfb,gaearon",2016-04-12 21:02:52,2016-04-12 22:36:35
IS,React is not defined in simple React component,Hi all I'm using 15 0 1 and using React to create Universal app I was getting React is not defined in the following component Note if I remove HeroSearchView the page works fine,,,2016-04-13 04:16:33,2016-04-13 04:32:44
IS,Add component instance to onSetState in ReactDebugTool,Unless there is some other cleanway to sniff the state without monkeypatching it would be great to get the actual component instance which has raised the onSetState in ReactDebugTool,,gaearon,2016-04-11 09:21:16,2016-04-13 15:10:58
IS,Ca not reuse server markup because of required vs required rendering difference,I am trying to upgrade from 0 14 8 to 15 0 1 in a Universal JS application without any warnings on 0 14 8 I'm getting a few warnings however I think this might be an issue with ReactDOM Reuse markup warning,,zpao,2016-04-13 05:32:27,2016-04-13 17:59:34
IS,Expose name and options of propTypes,I'm looking for a way to iterate over a component is defined propTypes and determine the type and the options For example I'm working on a styleguide and was hoping to list out all possible options to pass into a component is props Please let me know if there is a way to do this already Thanks,,gaearon,2016-04-13 18:39:44,2016-04-13 18:47:51
IS,react15 fail to exist as a standalone js,I am using react0 14 7 and webpack for my project It works perfectly fine However when I try to upgrade to react15 I pops up such an error This is a very classic issue Why it works in react0 14 7 but fails for react15 Could any one answer,,jimfb,2016-04-14 07:28:39,2016-04-14 16:08:52
IS,The allowScriptAccess attribute is not supported,There is a scene I wanted to put a flash in my page But when i changed the src state though element is attributes are changed the flash did not really change with it,,"syranide,jimfb",2016-04-12 03:05:05,2016-04-14 16:13:32
IS,Children do not re render when parent component is optimised,I am seeing something that looks like a bug and have written a simple test case for it Please refer to this WebpackBin as it contains the test scenario,,"jimfb,gaearon,gaearon,gaearon,jimfb,jimfb,gaearon",2016-04-14 16:01:59,2016-04-14 16:42:37
IS,Language translation with React,Transpiling Language with React partly relative to React This targets mainly Babel but could be done with React as well What do you think Gist,,"zpao,zpao,zpao,zpao,gaearon,gaearon,amasad",2016-04-14 11:00:11,2016-04-14 17:12:21
IS,React css manual,Hi is there a manual that detailed about React style Because I found the offical doc is not explicate it very well For example flex 1 can directly use in a component but in html css it supposed a flex attribute in its parent but react doc seems not explain it,,"jimfb,iamdustan,zpao",2016-04-13 03:51:02,2016-04-14 17:15:38
IS,Rendering component into a shadow root in React 15 x,In 0 14 it was quite easy to render a component into a shadow root mdash this was due to the nodeType check in ReactDOMComponent L302 L304 However you will notice that in 15 0 that check has been completely removed L216 and as such will always bind events to the document element mdash the ownerDocument rather than the document fragment As the events that cross the shadow boundary are retargeted to appear as though they are from the shadow host instead of the internals React is event delegating fails to invoke the event function In the case of 0 14 the event delegation on the document fragment correctly handled the event as it was able to inspect the listenerBank L128 L131 before retargeting was performed mdash any further propagation of the event would have been unnecessary Now I realise React does not support Shadow DOM natively mdash however it seems as though we have taken a little step back especially with Angular 2 and its Shadow DOM support on the horizon I'm merely wondering as to the rationale behind the removal of the ownerDocument check and whether we would be happy to add it back in sup For those people who dislike the CSS Module approach sup,,"Wildhoney,jimfb,Wildhoney,jimfb,jimfb",2016-04-08 12:29:10,2016-04-14 17:18:53
IS,Change in owner causes issues with shallow rendered tests,There appears to have been a change in how owner is generated between 0 13 and 0 14 which is causing a number of our shallow rendered tests to fail when upgrading because the deepEquals fails on the owner property Here is a simple example component which exhibits the issue,,gaearon,2015-10-26 22:09:52,2016-04-14 17:54:16
IS,Stop linking to react python in docs,Now that react python is being completely deprecated and will probably cease to function soon with new versions of react the docs should probably no longer link to it from the Use React and JSX in Python Applications page,,"jimfb,zpao",2016-04-14 20:52:27,2016-04-14 21:00:03
IS,ReactDefaultPerf printWasted does not work,Calling ReactDefaultPerf printWasted results in this is on a page internally at Facebook so I assume it is a fairly recent React version,,"Daniel15,jimfb,sverrejoh,gaearon,sverrejoh,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2015-11-25 21:59:08,2016-04-14 23:03:18
IS,Server Rendering SVG foreignObject body tag w 15rc2 results in missing ID error,I am using 15rc2 because I need all the svg tags I am rendering a foreignObject svg tag According to MDN I put body tag inside that tag and then whatever html I want in there but I do not know if that is an OK solution to this or if that body tag is necessary in some scenarios But in either case this seems to be a scenario where server rendering results in different DOM HTML then client rendering Is this a problem or is the body tag not supposed to there anyway Todd,,"jimfb,zpao,gaearon,jimfb,sophiebits,keyanzhang",2016-03-17 03:56:47,2016-04-15 01:27:13
IS,defaultValue is ignored when select contains optgroups,Proof,,jimfb,2016-04-15 08:22:05,2016-04-15 14:48:56
IS,How to getElementById with TestUtils renderIntoDocument,I'm writing some karma tests Since renderIntoDocument does not actually render into document how may I find a component by id,,jimfb,2015-10-18 22:27:23,2016-04-15 18:15:08
IS,1000 performance improvement for intensive react apps,I have a real time redux react app that is performance critical I have lot s of components on the page that may update very frequently I noticed that some of my animations were running jerkily and general component updates were lagging when lots of actions were being dispatched in a small space of time say 40 per second I run a Mac 10 9 5 with the latest chrome I ran performance diagnostics using the react tools and then optimised my app as much as possible mainly using shouldComponentUpdate making sure no time was wasted in unnecessary DOM reconciliation or rendering But even after doing this my app was still lagging So I dug deeper by running a CPU profile in chrome devtools I noticed that at the times when my animations were running jerkily or slow the react setState method calls were taking up to 25 ms 30 ms on average That would only allow a maximum of 30 component updates a second before performance hits the wall which in my case is an unacceptable limit I also ran a timeline to see if it was browser painting that was slow turns out no Below you can see the majority of the work was being done inside scripts not rendering This seemed very odd to me screen shot 2016 screen shot 2016 03 23 at 11 42 02 pm 03 24 at 12 11 41 am So I looked at the function stack screen shot 2016 03 23 at 11 51 17 pm In this example the setState method took 24 ms purely in scripting not rendering and you can see a large chuck of that was spent in ReactInputSelection hasSelectionCapabilities the light blue method in the bottom row Tracing it back this was being called from the ReactReconcileTransaction js module And guess what happened screen shot 2016 03 23 at 11 51 07 pm The extract same setState calls took only 1ms 3ms Notice the aggregated total time went from 4 91 s in the first example to only 174 ms after turning off SELECTION RESTORATION In others word a 1000 performance increase For my app this was huge and afterwards everything ran perfectly smooth So I have a few questions Why is the ReactInputSelection being called ferociously on almost every element I render when I don t even have any input or textarea elements in my components Why does the ReactInput selection restoration take so long Is this a bug If this is a necessary cost then can we have a way to disable selection restoration for performance critical apps that wouldn t need to make use of that feature,,"alexeyraspopov,gaearon,alexeyraspopov,jimfb,jimfb",2016-03-23 13:38:09,2016-04-15 20:00:23
IS,Errors when using HOC are not helpful,When you put an object into a component that has been decorated say by a HOC called StyledComponent you get an error like this Second would be to have integration with the React devtools so you could actually click and see the highlighted path component Final would be if possible to show the tagname that contained the object as well Just brainstorming for a better React,,jimfb,2016-04-15 21:37:47,2016-04-15 21:46:11
IS,React 15 inline styling is producing concatenated style properties from separate unique object keys,Assume the following styles object is provided to a component What this means is in chrome 49 it has a red background but in chrome 48 it has no background I'm not entirely sure who what is at fault here Would you be able to shed some light on the change Is this a bug or an intended feature,,"zpao,zpao",2016-04-15 22:50:35,2016-04-15 23:34:19
IS,Naming of react dom server is misleading,TL DR I think it should be react dom static If we have a look at what react dom server actually does it only provides two methods renderToString and renderToStaticMarkup Both of these result in static HTML the later one gives plain HTML while the first one gives React flavored HTML that React can quickly inject to But essentially all you get is static HTML as a string I can understand why it says server in the name in most cases you really only want to use it in server side and thus name it based on that However I think this leads to people to think you should never use the code client side which is not true for it is nature There are perfectly fine use cases for client side For example I have written a lazy loader component which renders this props children as non react static HTML until component comes into the viewport The rendering trick must be done because you can not have real DOM elements inside a noscript element it is contents is always seen as a string or as nothing at all if you ask IE8 The noscript element is important for the lazy loading trick in this case because it allows for loading the images even if JavaScript is disabled and in addition search engines can also get access to the images although Google these days does support JavaScript but I have no idea if it deals with lazy loading via virtual viewport or not Also most importantly by using noscript browser will not start fetching any images or resources contained within the noscript element when JavaScript is enabled So the use case in summary 1 Server renders static HTML with noscript elements containing non reactified static HTML 2 Client must render this exact same static HTML inside noscript element on initial render 3 Once componentDidMount client can start updating the DOM by checking if the component is in the viewport or not 4 In case JavaScript is disabled you can still get the images resources loaded You just wo not have them lazy loaded So I think it should be react dom static although I might also question the fact whether static rendering really has to be abstracted to it is own dependency Finally I already received a pull request that initially attempted to remove react dom server dependency purely because it is name is what it is I do not know if anyone else gets this noise but I guess it is quite likely for that to happen because naming things is hard yet names are powerful,,"zpao,jimfb",2015-10-23 17:39:16,2016-04-16 00:34:04
IS,React ContextTypes PropTypes when using an already static typed language like TypeScript,The ContextTypes and PropTypes that have to set for validation are a fine concept But when already using a language like typescript which takes care of the typing it is extremely redundant and painful to have to keep updating the ContextTypes in particular PropTypes however are alteast optional but ContextTypes are not Please provide an option to make them optional so that when using languages that provide static typing on top js the pointless redundancy can be eliminated,,"gaearon,jimfb,jamesgpearce,sebmarkbage",2016-04-16 02:02:47,2016-04-16 03:27:25
IS,the reconciliation is chapter have a wrong description,the reconciliation is chapter have a wrong description in the guide of react custom components description url the description React takes all the attributes from the new component and calls component Will Did ReceiveProps on the previous one but the react have not componentDidReceiveProps methond,,jimfb,2016-03-04 08:31:56,2016-04-16 03:39:50
IS,Setting the selection range of a text input only works asynchronously,Hello I'm trying to implement a text field and have fine control over its behavior The state of a text field includes its value and the selection range so I pass those in as properties The selection range is not exposed as an HTML attribute of a text input but you can set it using the underlying DOM element object I can get that value using the ref attribute and set it in componentDidUpdate like so note that I'm using Elemental UI is FormInput component which is just a wrapper around a regular input I'm using Redux so all properties you see are coming from the Redux store I do not actually change the selection yet so the value is always start 0 end 0 Thus I should expect the cursor to sit at the start of the field and not move At the moment the onKeyPress function passed into the component just dispatches a Redux action that adds an 'a' to the end of the text It also calls stopPropagation and preventDefault because I thought those might help me but they did not You will notice that I had to put the this input setSelectionRange in a setTimeout If I do not do this the call does nothing However this is not a complete solution because the cursor gets moved to the end of the input regardless so when I press keys the cursor moves to the end of the input then my selection gets called and the cursor quickly moves back to the beginning Since it works asynchronously I can deduce that React likely sets the selection range itself after componentDidUpdate is called Is there any way that I can have more control over this behavior This is not a common use case so I can understand that there is not an exposed API for setting the selection range But is there some workaround or something I'm not aware of that I need to do to get this to work,,"jimfb,sophiebits,jquense,jimfb,jimfb",2016-04-11 10:45:22,2016-04-16 03:47:16
IS,multiple children with same key warning message prepends ' ' to actual key value,If multiple children have the same key for example jsfiddle The key referenced in the warning prepends an internal looking ' ' to the key specified by the user This is a bit misleading ideally it would mention the exact key value set by the user,,"jimfb,hkal",2016-04-10 22:58:07,2016-04-16 03:55:37
IS,react dom server swaps element props,For example when rendered on client name and style props are pushed to beggining of attr list so making dom different on server and client,,,2016-04-16 10:25:45,2016-04-16 11:06:53
IS,I got React v15 update error,I run this command npm install save react 15 0 0 rc 1 react dom 15 0 0 rc 1 screenshot from 2016 04 17 14 11 38,,"jimfb,gaearon",2016-04-17 07:15:01,2016-04-17 12:32:07
IS,modal aftermodalopen,,,,2016-04-18 01:28:15,2016-04-18 01:28:35
IS,Allow mutating component state by using ES6 Proxies,Instead of this setState mykey 'my new value' this state mykey 'my new value' could be used by utilizing ES6 Proxies see this,,jimfb,2016-04-18 13:49:43,2016-04-18 13:51:23
IS,ReactDOM render comp document getElementById 'target' Throws error registerComponent,When i use ReactDOM render AppLayout document getElementById arender app' on meteor start up to set up a render target like Using Firefox browser,,"jimfb,gaearon,gaearon",2016-04-18 11:23:47,2016-04-18 15:09:31
IS,Minification warning with production environment,I have minification warning with NODE ENV production React v15,,"zpao,zpao,zpao,zpao,zpao",2016-04-14 07:17:14,2016-04-18 17:21:06
IS,HTML5 video tag support muted parameter,I am unable to use muted parameter for video autoplay muted loop Other parameters for video seems fine,,"jimfb,jimfb,zpao,zpao",2016-04-19 03:37:17,2016-04-19 05:10:50
IS,React browser js does not work with CSP,I would like React to work with CSP Content Security Policy without adding unsafe eval to the policy Browser js on line 5811 contains a call to Function which violates my CSP policy Code is below Is it possible to rewrite browser js so that it does not violate CSP,,gaearon,2016-04-19 08:24:48,2016-04-19 14:25:21
IS,React 15 regression controlled select elements with optgroup not displaying value on initial render,Using React 15 0 1 controlled select elements with optgroup elements are not displaying selecting the value provided on initial render See the following jsfiddle for a simple test case Here is another fiddle where it is working using React 0 14 8,,gaearon,2016-04-19 08:50:08,2016-04-19 14:33:03
IS,Upgrade addons from 14 x,After upgrading to react 15 0 1 I get the following error when running npm install But since it is a breaking change in version I would like to check up the changelog with each addon to ensure that I do not have any code that will break However I cannot find any changelog or gitrepo belonging to theese add ons What is the right approach here Should we simply follow the react version number every time Thanks in advance a bit lost here,,gaearon,2016-04-19 09:25:10,2016-04-19 14:37:26
IS,Warning for fieldset element without form parent element,If a fieldset element is present without a wrapping form element somewhere in the tree iOS Chrome throws a ReferenceError that kills execution Much like the suggestions for tbody under table s it would be nice if React threw warnings for this scenario in development,,jimfb,2016-04-20 14:02:09,2016-04-20 14:37:53
IS,keydown event listener performance is 3x is slower in 15 0 1,My use case is rendering an 80 x 80 grid of components and changing state of the parent component via window addEventListener event as per the docs like so In Chrome 49 0 2623 112 for example React 14 0 7 is taking 75ms to re render and 15 0 01 takes 270ms View console in the examples below to see what I mean 14 0 7 example 15 0 1 example,,"gaearon,gaearon,gaearon,sophiebits",2016-04-20 19:08:05,2016-04-20 21:28:37
IS,React 15 select with value not working with optgroups,Since upgrading to React 15 0 1 when rendering select with optgroups the value is not set on the DOM correctly The first option will always get picked Examples React 15 0 1 Fiddle broken js output React 0 14 7 Fiddle works js output React 15 0 1 without optgroup Fiddle works js output Environment OS X 10 11 4 Safari Version 9 1 11601 5 17 1 Chrome Version 49 0 2623 110 64 bit Firefox 45 0 1 Edit I also noticed that the same behavior occurs when using defaultValue,,"gaearon,jimfb",2016-04-20 17:34:24,2016-04-20 22:55:50
IS,Maintaining state through render passes,Someone interested in trying a fix on this Meaning you would still have a reference key ish to state through a render pass but it will be destructed and you would only have the reference left on destruction On re render the state rebuilds the previous one kinda like hot reloading but it watches how the previous state rendered and tries to re render out of that and then builds the changes made in the new render Dunno how this will be in action though Is this something worth chasing,,"gaearon,gaearon,jimfb",2016-04-19 00:10:51,2016-04-21 05:21:25
IS,Issue resulting in loss of cursor position in controlled inputs is not fixed,In 15 0 1 release I see Fixed issue resulting in loss of cursor position in controlled inputs in 6449 But actually this bug is not fixed Please consider this example Steps to reproduce 1 Input 123 2 Set cursor on 1 position after 1 3 Input something and see that cursor is moved to the end,,"syranide,gaearon,syranide",2016-04-21 08:48:02,2016-04-21 09:23:00
IS,Trying to read a property on undefined in render does not log an error,Trying to read a property on undefined in render does not log an error E g when I add console log undefined doesntexist in the render function even outside of the return block nothing happens I would have expected to get a Cannot read property wouldoesntexist' of undefined error message in the console,,"gaearon,gaearon",2016-04-21 08:39:20,2016-04-21 11:31:39
IS,validateDOMNesting,,,"gaearon,gaearon",2016-04-21 10:43:40,2016-04-21 11:46:31
IS,Proposal a component should just not render when a required property is missing,In a ReactJS application I often repeat the following pattern when a component is relying on a required property The same pattern is present also in Redux L60 and it is the same pattern that the react only if is trying to centralize But would not it be clear if a component would just not render without a required property A warning could be still present only in development mode,,"gaearon,jimfb",2016-04-21 09:54:52,2016-04-21 14:15:40
IS,PureRenderMixin does not respect changes in context,We accidentally applied PureRenderMixin to a page that that rendered the same result given the same props and state however it broke the page since the context changed for a isUserLoggedIn,,jimfb,2016-04-21 20:53:56,2016-04-21 20:55:16
IS,Error using nashorn and java 8,I lately upgraded my code from java 7 to java 8 And i am getting the following error Can anyone help Exception in thread main java lang reflect InvocationTargetException at sun reflect NativeMethodAccessorImpl invoke0 Native Method at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java 62 at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java 43 at java lang reflect Method invoke Method java 498 at org eclipse jdt internal jarinjarloader JarRsrcLoader main JarRsrcLoader java 58 Caused by java lang ArrayStoreException jdk nashorn internal runtime Undefined at jdk nashorn internal runtime arrays ObjectArrayData setEmpty ObjectArrayData java 168 at jdk nashorn internal runtime arrays ObjectArrayData delete ObjectArrayData java 240 at jdk nashorn internal runtime ScriptObject delete ScriptObject java 3599 at jdk nashorn internal objects NativeArray shift NativeArray java 1161 at jdk nashorn internal scripts Script 13 eval program eval 32 at jdk nashorn internal runtime ScriptFunctionData invoke ScriptFunctionData java 623 at jdk nashorn internal runtime ScriptFunction invoke ScriptFunction java 494 at jdk nashorn internal runtime ScriptRuntime apply ScriptRuntime java 393 at jdk nashorn api scripting NashornScriptEngine evalImpl NashornScriptEngine java 446 at jdk nashorn api scripting NashornScriptEngine evalImpl NashornScriptEngine java 403 at jdk nashorn api scripting NashornScriptEngine evalImpl NashornScriptEngine java 399 at jdk nashorn api scripting NashornScriptEngine eval NashornScriptEngine java 150 at javax script AbstractScriptEngine eval AbstractScriptEngine java 249 at uglify UglifyJS run UglifyJS java 75 at uglify UglifyJS exec UglifyJS java 50 at uglify UglifyJS main UglifyJS java 16,,"jimfb,jimfb,jimfb",2016-04-13 09:23:16,2016-04-21 21:18:05
IS,Add areactjs' to repository description to appear in github search results when searching for reactjs,When performing a global search query on github on query reactjs this repository does not appear in the list I think people do expect it to appear in it I suggest adding a bit a text to the repository description with this key word in it A proposal,,"zpao,jimfb,zpao",2016-04-21 09:58:58,2016-04-21 21:43:27
IS,TestUtils Better errors for methods when passing in arguments with wrong type,Rather minor issue but the fix should be simple enough so I thought that I would file this anyway When using react addons testutils sometimes I write simple errors such as This throws a stack trace of 80 lines with a type error of TypeError Cannot read property isplit' of undefined Fixing this is trivial and the first line of the stack trace points to the offending line as expected but the error itself is not really obvious Some others such as scryRenderedDOMComponentsWithTag do not throw until findAllInRenderedTree is reached which throws a bit more helpful error of Error findAllInRenderedTree instance must be a composite component Would it make sense to check that the arguments passed are valid and throw immediately if they are not so the user would end up with errors along the lines of scryRenderedDOMComponentsWithClass first argument must be an instance of ReactComponent,,,2016-04-12 10:10:42,2016-04-22 00:09:05
IS,Dynamically setting background,Consider this code the css rendered is background url www com no repeat center center background size contain background color rgb 176 55 61 Which is expected But when you change backgroundURL it also removes background size and background color The result becomes background url www com 50 50 no repeat,,zpao,2016-04-22 02:39:34,2016-04-22 03:43:44
IS,Rename defaultValue to initialValue in form components,The docs say The defaultValue and defaultChecked props are only used during initial render If you need to update the value in a subsequent render you will need to use a controlled component default value The note in the docs say that defaultValue is only used during initial rendering So I think it would be better to name it initialValue because it describes the behaviour of this property better Translating the terms to german a defaultValue means something static which can not be changed during runtime An initialValue of an input element might mutate during runtime eg prefill a form with the current time I'm not an english native speaker so it might be that the english language does not differentiate those two terms as the german language does,,"sebmarkbage,sebmarkbage",2016-04-22 08:39:52,2016-04-22 15:11:27
IS,Possible Improvements NODE ENV istaging' and warning about minification,Hello We using react for some our projects and found what on staging servers it start generate warning about It looks like you are using a minified copy of the development build of React When deploying React apps to production make sure to use the production build which skips development warnings and is faster We still need all possible warnings about propTypes or about controlled uncontrolled components to debug all issues on environment which as close as possible to production but still is not production In this case staging environment should be builded with minification to check app before delivering on production Proposal remove this warning L94 L100 for NODE ENV istaging' env if this possible Thanks,,"jimfb,gaearon",2016-04-22 17:15:21,2016-04-22 17:37:32
IS,Warn when body tag rendered by a component,Example that should warn when rendered There is no good reason to do this edit other than server rendering and with React 0 14 it seems to cause click handlers placed inside the faux body to not get called,,"graue,jimfb,antoaravinth,jimfb",2015-11-17 02:02:58,2016-04-22 19:06:07
IS,Additions to Props,Been working on a workaround for Props I think Props should have more advantages such as merge props split props and so on Is there any way we could make this a thing in React As mentioned I work on a tweak meaning this is like react components but ultimately I would like it to see as a official react feature Thoughts Here is the repo,,"jimfb,jimfb",2016-04-22 22:28:31,2016-04-22 22:32:22
IS,warn if calling setState in ref callback,Refs are dom nodes and thus we suggest you do not store them in state right You always store them somewhere on the instance Assuming so calling setState in a ref callback sounds like an antipattern issuecomment 212589250,,"jimfb,zpao,sebmarkbage,jimfb,jimfb",2016-04-20 22:37:54,2016-04-22 23:35:54
IS,Update ReactDOMServer renderToStaticMarkup documentation,renderToStaticMarkup is described as reactdomserver rendertostaticmarkup Similar to renderToString except this does not create extra DOM attributes such as data react id that React uses internally There are no more data react id s in React 15 so it is probably time to change this and clarify if this still has advantages over renderToString,,"graue,jimfb",2016-04-23 02:35:52,2016-04-23 05:06:59
IS,context undefined while use ES6 constructor,All issue in the code The react versioin is 15 0 1 i remember a previous version without this problem Is this a bug or the usage of my problem Here is my demo git Thanks,,,2016-04-24 10:23:56,2016-04-24 11:11:25
IS,should PureRenderMixin ignore function in props,But it seems redundant If function is ignored It will be helpful,,jimfb,2016-04-24 12:49:08,2016-04-24 15:50:56
IS,this is a BUG about title in IE,Div a title attribute IE environment becomes very caton,,"gaearon,jimfb",2016-04-22 09:43:50,2016-04-25 03:55:21
IS,How does parent component call methods in child components,,,gaearon,2016-04-25 09:51:07,2016-04-25 11:54:36
IS,Can not prevent a child onClick event from the parent is onMouseUp event,img 20151208 172309 I do click down mouse move and click up all this events apply within element area Events onMouseDown onMouseMove onMouseUp defined on the parent element SwipePanel So I try prevent onClick event on Element component such way So I need prevent childs is onClick event from parent component via onMouseUp I am using React v0 14 3,,,2015-12-08 11:36:44,2016-04-25 12:46:55
IS,Warning It looks like you are using a minified copy of the development build of React,It looks like you are using a minified copy of the development build of React When deploying React apps to production make sure to use the production build which skips development warnings and is faster See for more details,,gaearon,2016-04-25 15:27:33,2016-04-25 16:00:14
IS,isNotRequired,It happens every once in a while that I want to do something like this,,jimfb,2016-04-25 10:25:04,2016-04-25 18:06:43
IS,virtual DOM,hi I like react js so much can you guys tell me where you guys implemented the below logic in the code I am not sure how to create patch using js code It also uses what Facebook calls a virtual DOM for some increased performance by writing out a full render virtually and then checking the difference between the virtual render and what s actually on the DOM and creating a patch,,"jimfb,gaearon,gaearon",2016-04-25 20:34:16,2016-04-25 20:41:00
IS,removeChild error in renderers dom DOMChildrenOperations when a 3rd party lib adds wrappers in the dom,I get Uncaught NotFoundError Failed to execute aremoveChild' on 'Node' The node to be removed is not a child of this node in L68 the source of the problem is a the 3rd party lib uikit js that transform the dom after is was mounted image so parentNode removeChild childNode parentNode is the great parent of childNode not the direct parent so I guess all intermediate nodes should be removed until parentNode possible fix edit probably it could be the responsibility of that lib to clean the dom on componentWillUnmount,,"gaearon,jimfb,jimfb,gaearon",2016-04-23 11:33:19,2016-04-25 20:49:29
IS,Preserving state through Props turtleshell,Preserving state through Props turtleshell Been experimenting a bit with migrating props and state together and watch changes and how they could be used to preserve a state through multiple render passes As addressed in 4595 I would like to see how this approach would turn out to be Props are much better to pass values than state and how people will use this feature would be exciting to hopefully see To first point out some flaws that needs fix in order for this to fully function from my perspective 1 A very own special method that only keeps track of state that has been called upon and not the entire tree 2 Loose state wrappers I will go in depth later after explaining how this would look Fetching state and passing them as props For now I have just used a deep expensive method For stylus sake I have used a function as a wrapper to make it more approachable like you can see in the picture skjermbilde 2016 04 25 kl 22 25 54 Now there is a lot of sketchy things going on in the onClick attribute but this is highly experimental for now What is really good about this solution is that it does not nest states as children as other proposals It rather passes your state as a prop and then updates the prop based on the previous state I honestly do not have a clue why I added transferProps with this code And that is the intended use case here To avoid having state as children of the parent state or as children methods This code is also highly reusable once perfected For now this is not so highly performance friendly to reuse mainly because I'm using replaceState which in itself is a expensive task Also it breaks when used in the long term like this giphy skjermbilde 2016 04 25 kl 19 07 10 State to Props lifecycle functions As mentioned I used replaceState Could also have used setState but really we should not have any of those for this feature If this feature is a good way to keep track of state I would like to see the following State to props lifecycle Why setState and replaceState should only be set on the existing state The new prop returned would allow us to take the previous state and ignore any other value passed by previous states This would allow us a much faster transition from prevState to theNewProp where we just update state as a new value of prop rather than re rendering the entire state tree Props to state lifecycle Why We need some insurance that state is a valid state Maybe as a callback function that takes the current props and allows you to set a new state value like getInitialState with props as its arguments We have covered the most here Maybe one thing to add up is that we do not need to keep track of the entire state tree as long as we get the previous returned state valid This brings me up to issue 2 I'm not sure how React is set up with this right now with state wrappers but I think it will need some fixes if this is implemented considered I tried making this as an addon without breaking encapsulation It did not work because I was trying to make the lifecycle functions methods from external modules Yeah I'm a terrible programming citizen To clarify For this we need 2 new Lifecycle functions Making sure people gets informed about this issue,,"jimfb,jimfb,jimfb",2016-04-25 20:58:04,2016-04-25 22:20:15
IS,Documentation regarding refs,It would have saved me alot of time if the documentation about refs made it clear that they really only work for accessing one child from one parent Unless I am wrong about my understanding it would be good if all the documentation that dealt with refs explained this,,"jimfb,jimfb,gaearon",2016-04-05 02:58:50,2016-04-25 23:25:33
IS,Ability to hide component from devTools,The React DevTools are great but get convoluted when using community libraries at times e g react router redux coflux Could there be a blessed API that allows components to not show in the Dev Tools Something simple like When using the React DevTools I generally just want to see my components and their business logic Not things like RouterContext or Provider It is helpful to see those things at times though so I do not imagine these components become completely opaque But probably have a checkbox in DevTools that defaults off to show all components Assuming this is something you guys are too busy to do if you like the concept I can work on implementation,,jimfb,2016-04-26 16:47:55,2016-04-26 21:54:54
IS,Refs to components not working in 15 0 1,Refs to components using the inline function are not working The ref returns undefined in the componentDidMount lifecycle method ref c this domElement c However using the alternate method to do refs the element is returned as expected ref domElement,,,2016-04-27 16:06:14,2016-04-27 16:07:56
IS,ReactTransitionGroup Lifecycle Hooks Do Not Work,Not all ReactTransitionGroup lifecycle hooks fire In the below examples only wouldid appear' 'will appear' logs All of them should log I think this is a bug in React 15,,"gaearon,aweary",2016-04-27 17:07:20,2016-04-27 18:14:39
IS,React 15 breaks support for the type extension the is syntax on webcomponents custom elements,custom elements type extension example The is attribute is lost from the JSX If an is attribute is present it needs to be passed to document createElement as the second parameter,,gaearon,2016-04-27 21:30:21,2016-04-27 22:22:12
IS,blank space and line feed in Jsx,as we all know the render function return a html The problem is when i type space after areturn' and then connect HTML fragment there is no problem But there will be an error Uncaught TypeError Cannot read property 'getNativeNode' of null when i type enter to generate a new line and connect HTML fragment I also checkout this Currently in a component is render you can only return one node if you have say a list of divs to return you must wrap your components within a div span or any other component Do notforget that JSX compiles into regular JS returning two functions does not really make syntactic sense Likewise do not put more than one child in a ternary So how to understand this problem,,"aweary,keyanzhang,aweary",2016-04-28 03:13:29,2016-04-28 03:33:57
IS,Formal Type Definitions not up to date,Hey I noticed Formal Type Definitions are not up to date as they do not account for stateless components It probably should be something like,,"sheerun,gaearon,sheerun,gaearon",2016-04-26 20:21:02,2016-04-28 12:28:06
IS,d3 event is null in a ReactJS d3JS component,I'm using ReactJS d3JS and ES6 to create an org chart I can create the chart and see it But I want to add the zoom and drag behavior to the chart so I used d3 behavior zoom I can see the method zoomed is called but the d3 event is null I tried attaching the zoom behavior to the div svg and g but nothing helps The zoomed behavior is called but the event is null In my ASP NET project I made sure that I do not have any reference to d3 js other than in the systemJS configuration which many stackoverflow answers mentioned as the issue related to why d3 event is null My code is very similar to what is in an example like this which uses the old version of ReactJS This is my systemJS configuration,,jimfb,2016-04-28 10:23:52,2016-04-28 15:34:42
IS,React createElement does not accept functional component,We are relying on React createElement in our test suite Since it does not accept functional component we can not no longer use functional component in our project,,"gaearon,jimfb,jimfb,jimfb",2016-04-22 10:30:26,2016-04-28 16:30:32
IS,componentWillUnmount should only ever be called once,Error boundries might help if someone is using them but if you are not using error boundaries we should not ever attempt to unmount a single component instance more than once The only reason it is not an infinite loop is that we eventually run out of stack space P With good tail recursion in the JSVM this could become an infinite loop Anyway this is more than a contrived example because the ReactRouter redux combination creates situations where this type of thing happens,,"jimfb,jimfb",2016-04-21 23:25:54,2016-04-28 18:12:38
IS,React does not support Node v6 0 0,The package json does not accept a node engine of version 6 x I do not think that there is some regressions caused by Node v6 so it should be okay,,"RaitoBezarius,RaitoBezarius",2016-04-28 16:45:22,2016-04-28 18:33:26
IS,Sending events from parents to children easily,Been using React Native for half a year now really enjoying it I'm no expert but have run up against what seems like a weakness in the framework that I would like to bring up The problem Sending one off events down the chain parent to child in a way that works with the component lifecycle The issue arises from the fact that props are semi persistent values which differs in nature from one time events So for example if a deep link URL was received you want to say arespond to this once when you are ready' not istore this URL' The mechanism of caching a one time event value breaks down if the same URL is then sent again which is a valid event case Children have an easy and elegant way to communicate back to parents via callbacks but there does not seem to be a way to do this same basic thing the other direction Example cases A deep link was received and an app wants to tell child pages to respond appropriately A tab navigator wants to tell a child to scroll to top on secondary tap A list view wants to trigger all of its list items to animate each time the page is shown From everything I have read the two normal ways to do this are 1 call a method on a child directly using a ref or 2 emit an event that children may listen for But those ignore the component lifecycle so the child is not ready to receive a direct call or event yet These also feel clunky compared to the elegance of React is architecture But React is a one way top down model so the idea of passing one time events down the component chain seems like it would fit nicely and be a real improvement Best workarounds we have found Add a 'trigger' state variable in the parent that is a number and wire this to children Children use a lifecycle method to sniff for a change to their trigger prop and then do a known action We have done this a bunch now to handle some of the cases listed above really tacky Set and then clear a prop immediately after setting it Yuck Is there is some React Way to solve this common need If so no one on our team knows of one and the few articles I have found on the web addressing component communication only suggest dispatching events or calling methods directly refs Thanks for the open discussion,,"jimfb,jimfb",2016-04-28 19:17:20,2016-04-28 22:21:41
IS,React 15 update Uncaught TypeError Cannot read property 'addEventListener' of null,Hello After updating to React 15 0 1 we are getting the following error image,,"jimfb,jimfb,jimfb,jimfb,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,jimfb,sophiebits,sophiebits,jimfb,sophiebits,jimfb,gaearon,nhunzaker",2016-04-18 11:25:20,2016-04-29 06:07:23
IS,render called before componentDidMount,See,,,2016-04-29 09:39:50,2016-04-29 09:42:14
IS,0 is not a valid style property at StyleSheet transform,,,,2016-04-29 15:06:41,2016-04-29 15:09:00
IS,React cloneElement does not avoid Warning Failed propType Required prop,Ok so here is what happens I have some wrapper component that wraps a children Is this expected I am using React 0 14 7,,"gaearon,gaearon",2016-04-29 15:59:29,2016-04-29 16:26:49
IS,onPaste and div annoyances,I'm not certain if this is a react issue or not but it is quite annoying Any help would be greatly appreciate I want to be able to autofocus on a div and have onPaste register automatically ie I should immediately be able to press ctrl v and trigger the handlePaste handler after the component has mounted However the only way I'm able to achieve this is through a combination of hacks 1 div needs tabIndex set to 0 2 div needs to be contentEditable true which throws really annoying warnings in addition to introducing a blinking cursor also it makes everything mutable which is terrible 3 I still need to add some dummy text Source jsFiddle,,"zpao,hellendag,jimfb",2016-03-09 23:28:53,2016-04-29 19:56:21
IS,Docs request Detailed best practices for form validation with React,It is really awesome that the docs contain a special section on forms I have written up the pain points of dealing with input s and hopefully highlighting places where React can ease some of that,,"jimfb,gaearon,gaearon",2016-04-29 20:03:52,2016-04-29 20:17:49
IS,Uncaught Invariant Violation Must be mounted to trap events when replacing an image with a link to an image,I'm having a hard time narrowing a repro down for this and there seem to be a lot of required moving parts so I will try to give as much information as I can Relevant snippet of package json LayoutNoFooter simply wraps Layout and passes an additional prop in I have this component in the Header which is rendered by Layout Header is a react redux connected component Page1 has a componentWillUnmount that dispatches an action that ultimately toggles searchMode in HeaderLogo When I go from Page1 to Page2 the invariant violation fires If I setTimeout the action dispatch in componentWillUnmount it appears to work fine If I replace LayoutNoFooter with Layout it appears to work fine The invariant violation is on the img tag of the HeaderLogo stack I have tried building a repro in codepen with a similar structure setState calls to simulate react router and redux but I suspect they are doing more that would require me to actually build a repro w those technologies If that would be helpful I can work on it over time and hopefully repro it Maybe there is enough info here however Thanks,,"zpao,sophiebits,jimfb,sophiebits,jimfb,gaearon,gaearon,jimfb,sophiebits,gaearon,jimfb,sophiebits,jimfb,jimfb,gaearon",2016-03-29 16:35:37,2016-04-29 21:02:51
IS,React re render changes input value field first before type and re rendering the node,The following code generates two button is and an input field whose type changes respective to the type of button clicked or dependent on the component state So if my rendered field is type number and it has the value 42 and I tap the button to change the field type to text with new value hello world react tries to set input type 'number' is value to 'hello world ' before changing field type to text which generates a warning in the console as show below screen shot 2016 04 29 at 9 06 45 pm The value definitely set is once the type changes which is after the value however the warning is generated The code is below,,jimfb,2016-04-30 04:17:25,2016-04-30 14:42:10
IS,Invalid ref error when rendering exported react component from HTML,I encountered the famous addComponentAsRefTo issue when I upgraded react 0 13 to v15 0 1 on the same code I have checked the addComponentAsRefTo Invariant Violation gist and confirmed that I do not have two copied of react The following component code is compiled by webpack with config external areact' 'React' hence the react library is not bundled in the output js The bundle exports react components to window for example window Editor Editor The component is not rendered inside the bundled code instead it is rendered from HTML page and bind to an element like the code below However If I put the render method in the bundle code it works fine like,,,2016-04-30 15:21:48,2016-04-30 17:06:09
IS,How to require a image in server side rendering,That is my code,,"RaitoBezarius,jimfb",2016-05-02 09:09:08,2016-05-02 13:08:00
IS,No changelog for release 15 0 2,Neither the blog nor Changelog md have been updated but npm says there is a 15 0 2 out,,zpao,2016-05-02 00:44:07,2016-05-02 17:18:05
IS,Disable checkPropTypes in production performances issue,Hello We recently found out that the React checkPropTypes was taking about 8 10 of the CPU when rendering massive amount of object 1200 We are wondering if there is a way to somehow improve the perfs and disable the checkPropTypes for instance After all those are mainly useful in development mode not much in production I'm just thinking right now that it may already be disabled if NODE ENV is set to 'prod' but that is unlikely Thanks,,"RaitoBezarius,aweary,zpao",2016-05-02 14:59:30,2016-05-02 17:21:26
IS,Isomorphic rendering sporadically renders attributes in a different order,Warning React attempted to reuse markup in a container but the checksum was invalid This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting React injected new markup to compensate which works but you have lost many of the benefits of server rendering Instead figure out why the markup being generated is different on the client or server client a status update name status value server a status update value name statu I'm using react 15 0 0,,"zpao,syranide,zpao,sebmarkbage,jimfb,sebmarkbage,jimfb,zpao,sebmarkbage,zpao,sophiebits,sophiebits,jimfb,gaearon,gaearon,sophiebits,sophiebits,gaearon,sophiebits,aweary,sophiebits,sophiebits",2016-04-08 02:36:32,2016-05-02 18:39:06
IS,Cannot read property addEventListener of null,I have a component whose render method looks like,,,2016-05-02 19:05:07,2016-05-02 19:05:19
IS,Cannot read property addEventListener of null,I have a component whose render method looks like,,"aweary,jimfb",2016-05-02 19:03:18,2016-05-02 19:23:06
IS,SSR should not warn about onscroll,Ref issuecomment 214909216 It is a little surprising that the codepath is even being hit maybe that is a bug too but there should clearly be some sort of if check in that area,,"jimfb,aweary,zpao,aweary,zpao,RaitoBezarius,zpao,aweary,RaitoBezarius,aweary,RaitoBezarius,zpao,aweary,zpao,aweary,aweary",2016-04-26 23:02:31,2016-05-02 21:26:35
IS,GraphQL and React compatibility,This is related to Every time I try to use GraphQL and React together I face the same problem GraphQL returns null for non existed fields while React defaultProps works only for undefined Since more and more people now gonna use React with GraphQL I think there should be a nice way to handle this case Mb there is a nice way not hacky to deal with it right now and I'm missing something,,"zpao,yungsters,jimfb",2015-10-14 11:09:47,2016-05-03 00:07:24
IS,Provide way to defer checksum check during initial mount,We have developed a custom server side rendering solution to allow for asynchronous data loading Once everything is done we flush the final HTML to the browser along with all of the asynchronously loaded data written to the DOM We are also generating a checksum the same way react does with server side rendering During initial mount in the browser all of the data needed by the app is available but our data contract layer uses Promises to provide data to those who request it Our components do not know whether or not the data is available but our data layer does So components use the following pseudocode for loading data Underneath the hood our model layer knows whether or not the data is available and uses the data otherwise it makes an ajax request for the data But being that react is render is synchronous and Promises are asynchronous there is no way for us to take advantage of the reuse existing markup logic within react We have tested that if we return a synchronous Promise shim hack then everything works as expected but we all know the dangers in doing this Is there any way we can defer the checksum checks somehow Is there a way we can render the vdom only in memory and then trigger the mounting logic We do not want a detached dom with real dom nodes we are wanting react to construct its vdom and then mount when we tell it to Thanks,,jimfb,2016-03-04 19:51:36,2016-05-03 00:15:43
IS,In FireFox Input Focus Problem,In FireFox has the problem ohter Browser is right In its case Focus input from a box I moved to a input box in Fire Fox error my code input type text className focusInput ref focusEl href tabIndex 0 key focusNode onKeyDown this onKeyDown bind this onKeyPress this onKeyPress bind this onKeyUp this onKeyUp bind this onChange this onChange bind this onBlur this onBlur bind this onFocus this onFocus bind this input the focus method is this refs focusEl focus I debugger React Code is Wrong in setSelection function input offsets var start offsets start var end offsets end if typeof end 'undefined' end start input value is input type text name ext comp 1001 id ext comp 1001 autocomplete off size 20 class x form text x form field x field non blank x form invalid style width 30px visibility visible height 25px input selectionStart start is break wrong start value is 1 input selectionStart is 1,,"jimfb,jimfb",2016-04-30 09:39:51,2016-05-04 02:12:38
IS,warning in IE8 when ieCompatibilityMode is undefind,I have read a snippet in the source of ReactDOM js as the 1st pic show What I am confused about is 1 the document documentMode is value is undefined in my IE8 what is more 2 when I was running React in my IE8 is compatibility mode got the errors like the 2nd pic show without the warning about compatibilty mode so may I know what is the meaning of this snippet and whether we should add some code to deal with the case I just suffered qq 20160223183504 qq 20160223183514,,"jimfb,syranide,sophiebits,sophiebits,jimfb",2016-02-23 10:51:52,2016-05-04 02:19:58
IS,Unknown plugin babel plugin transform react jsx source,6398 added babel preset react node modules babel plugin transform react jsx source to babelrc but babel preset react does not L9 L15 export this module npm run build and npm test fail because of that I removed this line from babelrc and 6398 is tests still pass Should I remove it or change it to just babel plugin transform react jsx source Also cc since you might 64425 know this issue,,"keyanzhang,sophiebits,keyanzhang,sophiebits,keyanzhang,sophiebits",2016-05-04 05:23:14,2016-05-04 06:50:27
IS,Proposal Validating object against propTypes object outside or render context flows,To avoid using lots of event handling and manual prop chaining inside a parent form I wrote a component that accumulates form data using a context like so But this is not going to fly because I do not want to run React in dev mode in production Can React expose a way to take advantage of its validation system regardless of its mode so that I can test an object is shape and property types without hacking around the flow,,"aweary,jimfb,gaearon",2016-05-04 16:09:02,2016-05-04 16:27:40
IS,React perf always prints empty Array,Hi guys I'm trying to test the performance of my app by using react perf tools The problem is its not working I call in the console which works no console errors or warnings but printWasted always returns empty Array and a message Total time 0 00 ms This also happens for other functions like printInclusive and printExclusive What can be the problem P S I'm using react router how is react perf performing with that Maybe that is causing some issues Also process env NODE ENV is not set to production and I'm using React 0 13 3,,"jimfb,jimfb,gaearon,gaearon",2016-05-04 22:01:10,2016-05-04 22:06:50
IS,Add ref for root element,Would it be weird to have an implicit ref for the root el returned by render It would definitely be convenient especially in cases where you are wrapping components and can not just throw in another div messes with flexbox rendering etc,,,2016-05-05 16:37:52,2016-05-05 16:41:58
IS,Docs clarification Complete example of Refs,Under a complete example the relevant code centers around this myTextInput which is not defined under Complete example It is defined above Maybe move it below so it is all together,,"jimfb,jimfb,jimfb,jimfb,gaearon",2016-05-05 19:57:52,2016-05-05 20:56:22
IS,Isomorphic Rendering with inserted html broken 15 0,In React 0 14x and below inserted dom nodes inserted by plugins such as adblock browser sync or otherwise were ignored Now in React 15 these new nodes cause the I would say this is a regression since it breaks full page isomorphic rendering for anyone using plugins or scripts that insert dom when loaded I would say react should just ignore anything without a data reactid when mounting server rendered code Edit On top of this React now throws in this case where as before it would gracefully continue,,"zpao,zpao,zpao,sophiebits,sophiebits,sophiebits,sophiebits",2016-04-08 02:58:06,2016-05-06 01:01:36
IS,Objects are not valid as a React Child,I searched for this issue earlier and saw a mention of it but I think this is different I am using Immutable js and have an Immutable List as my react children on react v15 0 2 This works fine in modern browsers Inside of IE 11 React will throw an invariant saying that objects are not valid react children I do have a Symbol iterator polyfill using babel polyfill The current solution is calling toJS in the children so that IE does not complain but I am not sure if this is supposed to be happening Here is a jsfiddle with what I am doing For some reason in IE 11 with the example it works But with babel 6 and babel polyfill it throws the error img width 1682 alt screen shot 2016 05 05 at 3 36 50 pm src Not sure why I can not reproduce in the fiddle but when adding toJS onto the end of the list that error goes away on my site,,zpao,2016-05-05 19:39:54,2016-05-06 15:47:41
IS,How do I test the authentication flow in my app,Hi I have an app implementing auth using React router Redux Sagas JWT TLDR How do I approach testing this authentication flow Basically I am using React router is onEnter method to check if the user is authenticated to allow access to it The function checks this info from the app state When credentials are submitted an action is dispatched which is received by the sagas which send an api request and then store the credentials details in the local storage which then gets reduced in the app state,,"iamdustan,jimfb",2016-05-06 14:20:50,2016-05-06 17:07:58
IS,IE10 nativeEvent object missing returnValue for input onChange events,I just ran into this issue while testing the upgrade from 0 14 8 to 15 2 in IE 10 If preventDefault or stopPropagation is called inside the handler for an onChange event of an input control a Member not found exception is thrown Stepping through the code it appears that the the nativeObject reference is broken Accessing most of the properties of the MSEventObj will throw the same exception I am able to reproduce it with the minimal case below on a clean IE10 Windows7 test VM from Microsoft Repro Fiddle,,"jimfb,zpao,jimfb,jimfb,zpao",2016-05-04 20:22:10,2016-05-06 23:47:53
IS,Error boundaries crash on server rendering,ReactServerRenderingTransaction doesn t have a checkpoint so any component with handleError crashes during server rendering I tested on 15 but pretty sure this is in master as well Fiddle cc,,gaearon,2016-05-03 11:30:31,2016-05-06 23:54:06
IS,Proposal getComponentAtNode,ReactDOM already has the unmountComponentAtNode function I think it would be useful if there was a similar utility function that simply let you get the component instance at a particular DOM node It would allow you to guard unmountComponentAtNode calls and also help folks who need lots of interop between non React code and React code Furthermore it seems like a good function to have for the sake of ReactDOM API completeness Perhaps could be named getComponentAtNode Or findComponent to be similar to findDOMNode Happy to start working on a PR for you if y'all like the idea,,jimfb,2016-05-07 12:27:07,2016-05-07 16:43:40
IS,Support unquoted attribute values in JSX,For example,,"jimfb,gaearon",2016-05-07 21:37:12,2016-05-08 01:45:16
IS,Installation error at 'node postinstall',I got 'node postinstall' error when running 'npm install' on ubuntu 16 04 npm ERR Linux 4 4 0 22 generic npm ERR argv usr bin nodejs usr bin npm install npm ERR node v4 2 6 npm ERR npm v3 5 2 npm ERR file sh npm ERR code ELIFECYCLE npm ERR errno ENOENT npm ERR syscall spawn npm ERR spawn sync 1 0 15 postinstall node postinstall npm ERR spawn ENOENT Luckily I found a similar issue at and I realized my issue was also resolved by creating a symbolic link node to nodejs by running isudo ln s usr bin nodejs usr bin node' Am I missing something Or the command node postinstall needs to be replaced with nodejs postinstall,,"msmania,jimfb",2016-05-08 04:06:42,2016-05-08 07:48:48
IS,Unable to render backgroundImage with single quote in URL,If there is a single quote in the background image url React will not even flush the changes to the DOM I got around this by doing The same url works fine without the manipulation if set as the src of an img Not exactly sure why React is rejecting even putting this into the DOM and if there is some sort of inconsistency with how the browser handles single quotes in a background image could react handle that simple string manipulation itself,,"syranide,jimfb,syranide,jimfb,jimfb,syranide,jimfb",2016-05-08 18:39:52,2016-05-08 19:58:23
IS,How to force React to reorder keyed children instead of destroying recreating,I'm using React to build an application for viewing multiple webcasts at one time I have a VideoGrid component that has an arbitrary number of VideoCell components as children Each VideoCell has a unique key as described here dynamic children I'm trying to implement the ability to swap the positions of webcasts on the screen It is important that the DOM nodes are reordered and not recreated in order to prevent the webcast embeds from reloading Based on the documentation dynamic children the components should be reordered not destroyed and recreated because they have unique keys When React reconciles the keyed children it will ensure that any child with key will be reordered instead of clobbered or destroyed instead of reused The problem there is the or destroyed It is vital that my components be reordered and not destroyed I do not know how the diffing algorithm decides which components to reorder and which to destroy and recreate but I'm seeing a mix of the two behaviors that does not do what I want I created a simple test case on JSFiddle to demonstrate the problem I'm having Click the button to swap the keys assigned to the first and last components Note how the last component is correctly moved to the first position but the remainder of the components including the ones at indices 1 and 2 who do not change at all are destroyed and recreated You can see that by how the embedded video reloads Is there a way to force React to reorder children instead of destroying and recreating them,,"jimfb,gaearon",2016-05-08 22:08:01,2016-05-08 23:07:16
IS,Docs build in russian,Something went wrong with the build I think it is just this page but have not checked them all,,"brigand,brigand,gaearon,gaearon,gaearon,gaearon",2016-05-10 00:23:00,2016-05-10 00:39:35
IS,Uncaught TypeError Cannot read property 'addEventListener' of null,I'm getting this error in the console when certain components are removed from the DOM It is calling the method below which assumes that target is not null and tries to access addEventListener of null object Should it be checking if target target addEventListener instead Are components being removed in an incorrect way that would cause this to happen,,gaearon,2016-05-10 17:54:34,2016-05-10 18:21:12
IS,Rename react lib to react private,As suggested on Twitter Let s do it so we don t get more broken components,,"gaearon,zpao,gaearon,zpao,jimfb,zpao,jimfb,iamdustan,jimfb,zpao,gaearon,iamdustan,gaearon,syranide,aweary,zpao,gaearon",2016-04-08 16:25:52,2016-05-10 19:35:41
IS,React app cannot load in Facebook iOS WebView,Hello I know that this might not be the best place to ask but I cannot seem to find a better place to do so and both React and the said application are built by you you being Facebook Inc So we built this react application this is a demo page The main issue arises when we want users to share the link on Facebook for other people to view book the same cellar event The page loads fine on all desktop browsers all Android devices we tested also in the Facebook WebView all iOS devices using Safari but cannot load in the Facebook WebView in a range of devices going from iPhone 4 to 6S iPad 2 and Nano and iPod Touch we do not have access to all iOS devices but we found the same behavior in all the tested ones We put all kind of shims to support also legacy browsers we also render it using PhantomJS and it works fine the only issue comes from the Facebook WebView on iOS We use to track the console outputs but nothing is thrown when accessing it from the Facebook WebView it simply wo not load and now we are clueless on what to do next Those are our package json dependencies,,sophiebits,2016-05-10 11:13:44,2016-05-10 20:32:36
IS,ReactPrerfTools 15 1 0 alpha 1,I was testing latest refactor of PerfTools When using printOperations often but not always I get,,"gaearon,gaearon,gaearon",2016-05-10 20:39:47,2016-05-12 01:59:46
IS,New ReactPerf doesn t free memory in DEV when not profiling,We purge it here L88 L89 but this code doesn t run because of the early exit L53 L57 Need to fix this and add a test case to make sure we don t regress on it,,gaearon,2016-05-11 19:01:17,2016-05-12 02:41:55
IS,Not able to use TestUtils addon outside of npm,I am working on an old project and we have now started using React for the UI part In order to test the React components we need TestUtils addon which comes only with npm but we are using React outside of npm as our project is not built using npm So is there anyway i can use TestUtils addon outside of npm in my project to test the React Components,,zpao,2016-05-12 08:33:35,2016-05-12 18:36:50
IS,hidden true not works on element with display in css,CSS test display flex JS Expect Element hidden Actual Element not hidden Solution div hidden display none important Seems like React use div hidden to hide element think that important is better,,"zpao,zpao",2016-05-11 02:07:44,2016-05-12 18:51:10
IS,JSX doc render HTML tag vs render ReactElement,In this file Section HTML Tags vs React Components it says React can either render HTML tags strings or React components classes According to React terminology should not it be render React element,,"syranide,zpao",2016-05-12 13:36:27,2016-05-12 18:54:49
IS,Attributes on custom elements are not removed during the diff,We are trying to adopt custom elements for some parts of your UI and ran into the issue that during an update to the tree custom attributes on the the custom elements are not removed correctly as can be seen here output you will need to click on false and then inspect the DOM node in the dev tools of the browser I have tracked the issue to the updateDOMProperties method in ReactDOMComponent js It seems that there is a special check in the loop for nextProps But the corresponding section is missing for lastProps deleting which results in the incorrect behavior I'm starting the work on the patch,,,2016-05-11 10:19:09,2016-05-13 00:00:04
IS,React Router Error Occur,When i use react router something broken code like Error is like bundle js 185 Uncaught Invariant Violation createClass Class specification must implement a render method a,,gaearon,2016-05-13 08:50:42,2016-05-13 11:56:21
IS,ReactPerf 15 1 0 alpha 1 expose isProfiling on the exported object,I have tested the new Perf tools on one of the screens in one app I'm working on and it works great One thing I wanted also on the old one Perf tools was to be able to check whether the Perf tools are started or stopped so basically exposing ReactDebugTool is isProfiling variable My use for that is that I have a keyboard shortcut in development bound to start stop the Perf tools and currently I'm forced to maintain such a variable myself to know whether to start or stop which gets out of sync if I start stop the perf tools without the keyboard shortcut If you do not think it is worthwhile to expose isProfiling feel free to close this issue,,"gaearon,gaearon,gaearon",2016-05-12 14:04:17,2016-05-13 19:50:38
IS,Change expression brackets from to,Feature request If we change expression brackets from to we will be able to render style tag in react component,,"jimfb,jimfb",2016-05-14 22:20:55,2016-05-14 22:38:14
IS,15 0 2 Current Starter Kit examples basic commonjs not working,Do you want to request a feature or report a bug Bug What is the current behavior Running npm install and then npm start in the examples basic commonjs directory of react 15 0 2 as found on results in the following error What is the expected behavior The example works Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 0 2 NPM 2 15 1 Node 4 4 4 OS X 10 11 4 Unknown if it worked previously,,"gaearon,zpao",2016-05-16 13:23:47,2016-05-16 17:41:18
IS,form elements readonly attribute ignored,Do you want to request a feature or report a bug Bug What is the current behavior Readonly attribute does not exist in generated real DOM input field Example What is the expected behavior Add the readonly attribute to generated input element React 15 0 1 Credit to user3611459 from stackoverflow is question,,zpao,2016-05-16 18:16:23,2016-05-16 19:04:37
IS,Add option to ignore specified props in shallowCompare,feature request question Consider a component that has a stateless functional component SFC as prop e g like this where propsToIgnore could be an array of string keys To avoid a breaking change propsToIgnore could of course be added as the fifth argument instead but this seems more robust to me If this makes sense to you I could have a go at a PR for this,,zpao,2016-05-16 22:00:36,2016-05-16 22:35:52
IS,Text adjacent to radio button that is not wrapped in any tag results in a minified exception,This label input type 'radio' props children label results in a minified exception that is nearly impossible to debug because it tells me to switch to development mode however I receive no errors in development mode This label input type 'radio' div props children div label does not result in any errors I am not sure what the problem here is but I just spent 6 hours trying to debug this issue so I figured I should bring it to your attention,,"jimfb,syranide,zpao,jimfb,gaearon,zpao,zpao",2016-05-05 04:53:00,2016-05-17 00:21:09
IS,DOM property case warning is broken for non SSR,6585,,sophiebits,2016-05-02 17:36:00,2016-05-17 22:06:31
IS,Uncaught TypeError 0 action2 default is not a function if action imported without curly braces,Using React 0 14 8 I see following behavior When I want to import actions for Redux I should import like that import setSomeVar from ' actions js' if I try to import like I'm used to import single React components without curly braces import setSomeVar from ' actions js' after bundling I see following exception on doing this props dispatch setSomeVar someVar I see this exception Uncaught TypeError 0 action2 default is not a function,,"gaearon,gaearon",2016-05-17 21:26:10,2016-05-18 01:34:27
IS,About React Performance,A parent component there are 500 sub components When I re render the parent component they found each subcomponent execution requires 1ms time to hide when I refresh when you need 500ms Excuse me there is no way to handle this scenario Thank you,,zpao,2016-05-18 16:40:02,2016-05-18 17:30:53
IS,submit on form element does not trigger onSubmit,Do you want to request a feature or report a bug Bug What is the current behavior If I have a ref to the form DOM element and call submit on it it does not trigger the onSubmit callback Repro In the above fiddle if you hit enter in the input it properly calls the onSubmit alerts If you click the button which calls this form submit it does not What is the expected behavior form submit should trigger onSubmit Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 Chrome did not test others unknown if broken in previous versions,,,2016-05-18 18:29:35,2016-05-18 19:21:50
IS,Move instrumentation from isomorphic to renderers shared,Per we want isomorphic folder to only contain the code necessary to author React components It should not have dependencies on ReactInstrumentation ReactDebugTool and devtools friends which themselves should be moved to renderers shared The only caller we to ReactInstrumentation we have right now in that folder is onSetState L70 inside ReactComponent We need to move it somewhere inside the renderer e g in the update queue implementation Labeling it as a good first bug because this mostly involves moving files The goal is that files in isomorphic folder don t contain anything that references ReactInstrumentation This is up for grabs but I ll do it myself if no one takes it,,"gaearon,iamdustan,sebmarkbage,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,iamdustan,sebmarkbage,sebmarkbage,sebmarkbage,gaearon",2016-05-18 20:46:37,2016-05-19 12:24:24
IS,RFC ish Ship 15 1 0 and 15 0 3 as is,We have a 15 0 3 dev branch and a 15 1 0 dev branch each published as an alpha React Native is using 15 1 0 alpha in master and soon to be already cut 0 27 rc Ideally we would not ship 15 1 0 as is and would get more into it however it is a real risk to RN to churn while they are in RC While we could say that is tough shit you used an alpha that is really not cool we are all a big happy family and we should work together and we told them to use an alpha So even if I do not think we should do it in an ideal work pragmatically we should probably just publish what we already have as final Since we have 15 0 3 with patch fixes and 15 1 0 on top of that we can ship both easily 15 0 3 changes 15 1 0 changes on top of 15 0 3 Longer term I do not think shipping and maintaining multiple releases is really tenable for us so it is doubtful we would ship 15 0 4 outside of a security release We will need to properly plan what our cadence is and consider a train like model That is tangential to the decision here though so I will write this down my thoughts on this later and we can discuss wherever that is A couple related discussions,,"zpao,zpao,gaearon,zpao,gaearon",2016-05-19 03:41:07,2016-05-19 18:19:48
IS,noscript tags should allow child elements,,,,2016-05-19 22:43:16,2016-05-19 22:52:39
PR,onAnimationIteration only available from v15 and up,This PR makes it clear that onAnimationIteration is only available from React v15 and up as this not clear unless you go digging through the release logs,,"jimfb,gaearon",2016-05-20 16:12:50,2016-05-20 16:33:18
IS,React 15 0 2 state children could be undefined or React element or Array of element,I just can not understand why it is not always be an array that would be much easier to work with since I do not have to check the type each time the children get changed and the performance would likely be better I think,,jimfb,2016-05-20 18:54:45,2016-05-20 18:58:31
IS,React 15 0 2 Production mode,Is NODE ENV still required to change between development and production mode I can t find anything about that in the source code for the 15 0 2 version,,"jimfb,zpao",2016-05-20 19:02:16,2016-05-20 19:05:22
IS,Key warnings should show component stack,In 6771 I made it so that proptypes warnings show the stack of components where the warning occurred We should do the same for key warnings when no key is provided Each child in an array or iterator should have a unique key prop It should not be too hard to use ReactComponentTreeDevtool getCurrentStackAddendum in the same way that proptypes warnings are now using it and to update the unit tests so that they pass with the new format,,sophiebits,2016-05-17 22:47:22,2016-05-20 21:20:08
PR,15 1 0,As we said in 6803 we are going to ship 15 1 0 as it stands today I'm mostly looking to make sure the wording in the changelog is fine In particular the description here for the Perf tooling is really short and could use a little bit more maybe even a followup blog post cc,,"zpao,sophiebits,sophiebits,gaearon",2016-05-20 18:57:46,2016-05-20 23:09:29
IS,npm react 15 0 2 does not satisfy its siblings' peerDependencies,bug What is the current behavior npm install react react dom Errs The package react 15 0 2 does not satisfy its siblings' peerDependencies requirements What is the expected behavior Run npm install react react dom from React documentation without error Repro 1 mkdir repro cd repro 2 npm init default blank answers 3 npm install react react dom,,"zpao,gaearon",2016-05-21 00:40:53,2016-05-21 05:38:26
PR,making 'thinking in react' adhere to ES6 style,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA getInitialState does not work with ES6 style class instantiations class Component extends React Component constructor props this state props,,"ankitml,gaearon,ankitml",2016-05-21 10:46:04,2016-05-21 13:36:08
IS,Support passing of an array of components into ReactDOM render,I would like to do something like this I could not find the answer elsewhere why this is not possible It is similar to 2127 but not the same The algorithm should work the same way as it works now for mounting children inside a component using keys etc I know that it is simple to wrap everything in a div but to me that always felt wrong,,jimfb,2016-05-21 09:35:18,2016-05-21 16:14:14
IS,Option elements do not have selected attribute applied in 15 0,Do you want to request a feature or report a bug Report a bug regression What is the current behavior option elements do not get selected attribute applied If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo of the issue screen shot 2016 05 18 at 14 41 20 What is the expected behavior The currently selected option would have the selected attribute applied Demo of the behaviour in v0 14 8 screen shot 2016 05 18 at 14 38 26 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 0 Worked in v0 14 8,,"gaearon,gaearon,gaearon",2016-05-18 13:43:33,2016-05-21 16:44:37
PR,Update on ES6 classes docs,I have added some examples for the ES6 classes sections of the docs also a little ES7 tip since most of the apps that I have saw are using a set up that supports that,,gaearon,2016-05-21 19:04:59,2016-05-21 19:14:40
PR,Move ReactElementValidator to DEV block,It saves some more bytes in production mode,,"gaearon,jimfb,gaearon,zpao,gaearon,zpao",2016-05-21 22:04:01,2016-05-22 09:01:22
PR,Interactivity and Dynamic UIs Docs page updated with ES6 Example,ES5 example on this page updated with ES6,,"jimfb,jimfb,gaearon,jimfb,jimfb",2016-05-22 09:11:55,2016-05-22 09:32:14
PR,Add permalink,Add permalink for the doc so we can access with '',,"403studio,keyanzhang,jimfb",2016-05-22 23:36:17,2016-05-23 00:56:20
IS,react 15 1 0 devtools error,warning js 8a56 44Warning exception thrown by devtool while handling onUnmountComponent Cannot read property 'type' of undefined since updating to react 15 1 0 I'm getting the above error multiple times image,,"gaearon,jimfb,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-05-23 09:32:04,2016-05-23 16:16:39
IS,Trying to write an event onChange for multiple fields but getting errors,1 Warning Failed propType Invalid prop type of type function supplied to FormControl expected string Check the render method of GenericForm 2 Warning Each child in an array or iterator should have a unique key prop Check the render method of GenericForm See for more information warning warning js 44 warning js 44 Warning String A valid React element or null must be returned You may have returned undefined an array or some other invalid object warning warning js 44 3 Warning String A valid React element or null must be returned You may have returned undefined an array or some other invalid object 4 Uncaught Invariant Violation String A valid React element or null must be returned You may have returned undefined an array or some other invalid object My files are below upld tar gz Please help me out in this if any One,,gaearon,2016-05-19 12:37:57,2016-05-23 16:42:16
IS,Publishing 15 0 3 under a separate dist tag,React Native requires 15 0 3 which is currently published as 15 0 3 alpha 2 Installing this module leads to peerDependency warnings and errors ex npm shrinkwrap actually fails because several packages have peerDeps on react 15 0 0 and 15 0 3 alpha 2 does not match Several people including myself have raised the issue with npm but for the time being could FB publish master as 15 0 3 and use npm is dist tag feature to tag 15 0 2 as latest and 15 0 3 as next or at your own risk,,"syranide,gaearon,syranide,syranide,syranide,zpao,syranide,zpao,zpao,zpao,zpao,gaearon",2016-05-10 10:34:19,2016-05-23 16:44:03
PR,Remove prop types checking in ReactCompositeComponent,Implements 6791 I renamed checkPropTypes to checkContextTypes since it only checks context types for now Moreover now ReactElementValidator is checkPropTypes and ReactCompositeComponent is checkContextTypes are pretty much the same and we can merge them Should I create a separate PR to refactor them or just change them here,,"keyanzhang,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits",2016-05-21 00:00:44,2016-05-23 18:13:09
IS,Possible TypeError in SyntheticUIEvent js,With static analysis we have found this issue on the react is code issues AVTMqSKVtu4QdCAX4XJN On line 29 there is a null check of target but there is no on line 34,,jimfb,2016-05-23 09:54:30,2016-05-23 18:25:02
PR,Removed unnecessary null check,Fixes 6840 target is always non null but this extra null check makes the code harder to read confusing burns CPU cycles and increases byte size and causes static analyzers to complain so we might as well just remove it cc,,"jimfb,sophiebits",2016-05-23 10:15:41,2016-05-23 18:25:02
PR,Extract the type checker into a separate module,Follow up of 6824 The type checker is now a separate module under isomorphic classic types which takes either a React element or an internal component instance As a result ReactCompositeComponent now displays the component stack info when type checking fails Also context type errors are memorized and will only be shown once CC,,"keyanzhang,keyanzhang,jimfb,keyanzhang,sophiebits",2016-05-23 20:54:18,2016-05-24 00:12:13
PR,Add test to ensure 'undefined' children is used,,,"sophiebits,sebmarkbage,sophiebits",2016-05-24 00:12:03,2016-05-24 00:22:05
IS,Prop types validation should not happen twice,Historically we validated prop types at component mount time but we switched to validating them upon element creation because it gives earlier errors and better stack traces We do not want to ever show a message with Failed Composite propType any more so we can remove the code that generates it In addition we should remove this check from fbjs that will be unnecessary after the code cleanup L34 This should mildly improve performance in DEV mode,,sophiebits,2016-05-17 22:51:03,2016-05-24 00:43:42
IS,reactAddonsPerf2 default start is not a function,Hi guys I tried to use the Perf start with the latest version of react addons perf 15 1 0 and return me this error in console reactAddonsPerf2 default start is not a function I used latest version of React and ReactDom Have you any idea Thanks in advance,,jimfb,2016-05-23 15:43:24,2016-05-24 11:14:36
IS,createElement does not warn about props proto being null fails instead,This is a bug in React createElement code React createElement does not warn if props proto is null from Object create null since it believes that to be a plain object L135 originating from 6134 But since it directly accesses hasOwnProperty it fails if such object is passed as props Reproduce What is the expected behavior It should not use hasOwnProperty directly on props if such object is expected React 15 1 0 Browsers All OS All This affects all versions of React but since after 15 1 0 the acceptable shape of props is explicitly defined then it should be explicitly supported as well,,"alitaheri,gaearon,alitaheri,gaearon,gaearon",2016-05-24 07:38:51,2016-05-24 17:55:51
PR,Avoid directly calling hasOwnProperty,Closes 6854,,"alitaheri,gaearon,alitaheri",2016-05-24 12:02:29,2016-05-24 17:55:51
PR,Point people to prod build in perf docs,,,"sophiebits,vjeux,sophiebits",2016-05-24 18:00:53,2016-05-24 18:08:51
PR,Context docs updated with ES6 examples,Used ES6 classes for stateless components in the first half of the article because it then discusses how to use context in functional components so both forms need to be illustrated,,"alexzherdev,jimfb",2016-05-23 21:23:59,2016-05-24 18:27:38
PR,Add Ons Two way binding helpers with ES6 examples,This does not introduce ES6 class components as the section involves mixins Just some ES6 syntax added Please close if not helpful,,"alexzherdev,gaearon,jimfb",2016-05-23 20:38:40,2016-05-24 18:32:48
PR,Fix componentWillUnmount not counted by ReactPerf,This fixes componentWillUnmount not being measured because ReactDebugTool doesn t realize there is a flush going on Also adding tests to check that all lifecycle methods are instrumented,,"gaearon,gaearon,sophiebits,gaearon",2016-05-24 18:38:19,2016-05-24 19:50:08
PR,Remove unknown props in ART,These were ignored before and now warn,,sophiebits,2016-05-25 00:01:49,2016-05-25 00:04:18
PR,Disable PropTypes validation in production builds,Disable PropTypes validation in production builds Fixes 6864,,"jimfb,jimfb,jimfb",2016-05-25 04:09:33,2016-05-25 04:15:32
IS,Performance Disable PropTypes validation in production builds,React can run faster in production builds if it does not check PropTypes Looking at the code I do not see any DEV checks which would prevent PropTypes validation from running in production builds createElement L217 cloneElement L262 We are seeing functions like validatePropTypes and checkType pop up while doing performance analysis on our app,,"jimfb,jimfb,gaearon,gaearon",2016-05-25 02:55:16,2016-05-25 04:19:44
PR,15 0 2 dev,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-05-25 07:04:00,2016-05-25 07:04:18
PR,Do not count the time inside flushes towards lifecycle hooks,Fixes 6842 We keep the existing behavior of testing for matching onBeginLifeCycleTimer onEndLifeCycleTimer calls but we push the current timer onto the stack if we enter a flush This solves an issue with portals which cause updates while a lifecycle timer is already running I chose to subtract the time spent in the flush from the time counted towards the lifecycle method because it would artificially inflate the total time of the component due to all the components inside the portal so it would skew the exclusive table,,"gaearon,gaearon,sophiebits,sophiebits,sophiebits,gaearon,gaearon,sophiebits,gaearon",2016-05-24 19:52:50,2016-05-25 16:39:05
PR,Fix instrumentation in shallow rendering,Previously this threw,,"sophiebits,sophiebits,gaearon,sophiebits,gaearon,sophiebits",2016-05-25 16:06:14,2016-05-25 16:46:50
IS,DOCS Production note needs updated,Could not find a react docs repo or anything so I'm posting it here I just spent the past 30 mins googling how to get webpack to build React in production and the page was not very clear I ended up having to hunt down a production is undefined error and ended up asking on the IRC before I could get a clear answer The CORRECT way to build react in production is to add the following to your plugins array Would be great to get this on the docs Notice that production is a string containing production with LITERAL double quotes Here is the page might be others too in question,,zpao,2016-05-25 19:29:32,2016-05-25 20:16:14
PR,Update to Jest 12 1 1 and Jasmine 2,I took 6769 as a base and updated it to match changes in master so that it merges cleanly,,"gaearon,zpao,gaearon",2016-05-25 18:54:44,2016-05-25 21:07:51
PR,Revert Update shallowCompare to accept nextContext,Reverts facebook react 6661,,sophiebits,2016-05-25 21:37:44,2016-05-25 21:37:48
PR,Make sure cloneElement supports prototype less config,This brings createElement fix from 6855 to cloneElement,,gaearon,2016-05-25 22:10:09,2016-05-25 23:37:18
PR,Warn when element is missing in devtool,Follow up to 6867,,"sophiebits,sophiebits,gaearon,gaearon,keyanzhang,gaearon",2016-05-25 17:20:13,2016-05-26 00:11:57
PR,Fix issues introduced by createElement warning,This builds on top of 6268 I fixed a few style nits and indirection in it and later I realized it introduces a bug in cloneElement As I was tracing this bug I found that it already existed in createElement in 15 x 6879 So I fixed the bug for both cases added more tests and shuffled them around to sit in the corresponding files React Fixed incorrect coercion of ref or key that are undefined in development gaearon in 6880 React Fixed a false positive when passing other element s props to cloneElement ericmatthys in 6268,,"gaearon,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,sophiebits,gaearon,sophiebits,gaearon",2016-05-25 23:33:32,2016-05-26 00:41:25
IS,React createElement type key undefined is handled incorrectly,I believe 5744 introduced a behavioral difference between development and production versions of React We released it as a part of 15 0 and this difference still exists The production behavior hasn t changed However the development behavior diverged after this change What do you expect to appear 0 14 x Development object null Production object null 15 x Development string undefined Production object null The 15 x dev behavior is different because dev code path only checks the existence of a property but not whether it s undefined L130 L133 whereas the prod code path checks for undefined explicitly L135 L136 React cloneElement is not affected because it doesn t include those warnings This doesn t seem like a major problem nobody noticed it in the real world but I think we should fix this I have a related fix in the works so I ll add some more tests and include it,,gaearon,2016-05-25 23:07:00,2016-05-26 00:41:32
IS,New DOM renderer inserts parameters after creation on IE,The new renderer is causing Flash objects to be instantiated before any nested param nodes have been added they are read and parsed at creation and never touched again EDIT I'm assuming the Flash object is loaded immediately upon insertion into the DOM and not at the next tick This only happens on IE AFAIK all versions including Edge Related to the performance special case in the renderer cc,,"syranide,sophiebits,syranide,syranide,sophiebits,syranide,syranide",2016-04-27 11:30:22,2016-05-26 10:04:05
PR,Added React Europe 2015 videos,Linking to the official channel that contains separate playlists for Day 1 Day 2 and Lightning talks,,gaearon,2016-05-26 12:30:25,2016-05-26 12:50:55
IS,PureRenderMixin release process broken,Do you want to request a feature or report a bug Report a bug What is the current behavior Several versions of react addons pure render mixin specifically versions 0 14 4 through 0 14 8 have been published on npm which specify non existent versions of React as peer dependencies 0 14 4 has react 0 14 4 0 14 5 has react 0 14 5 etc I assume this is a bug in the release process for the mixin where it assumes that an equivalent React version will always exist If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template npm i react 0 14 react addons pure render mixin 0 14 will throw a peer dependency warning because react addons pure render mixin resolves to 0 14 8 which wants at least react 0 14 8 which does not exist whereas react 0 14 can not resolve to anything above 0 14 3 What is the expected behavior npm i react 0 14 react addons pure render mixin 0 14 should install the latest 0 14 versions of each package without throwing any warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 0 14 4 through 0 14 8,,,2016-05-26 16:23:58,2016-05-26 16:30:16
IS,Docs enhancement Link to source,I thought it might be useful to be able to jump to the source code right from the documentation E g If ReactDOM render reactdom render section in docs included a link to the source L530 in Github I believe easier access to the source code will increase familiarity with how things work in the background and perhaps induce community involvement I also understand this might add complexity to docs management and it could also be difficult to point to the right source file when e g depends on the platform server client Maybe I'm spoiled with how JSDuck handles it api Ext container Container Any ideas are welcome here,,jimfb,2016-05-26 13:22:04,2016-05-26 17:39:17
PR,Added own property check when deleting listeners,React crash when default object prototype is modified,,gaearon,2016-05-26 08:30:57,2016-05-26 20:14:50
IS,Escaped ampersands in query params within src href attributes,Ampersands in query params within src href attributes are being escaped Currently all attributes are sanitized for the browser using escapeTextContentForBrowser However in the case of src or href attributes this will escape within query parameters Example The attribute name is available until calling quoteAttributeValueForBrowser L106 There would need to a be a degree of refactor to create conditional behavior with consideration given to attributes that might contain urls Possible attributes to alter src href data variations of the above I do not know if this is a bug or if it exists by design for non obvious reasons Versions 0 14 x 15 x,,"syranide,syranide",2016-05-25 18:57:00,2016-05-26 20:22:19
PR,Stop passing null as second argument to document createElement,When using the two parameter variant of document createElement which is used for Custom Elements if null is passed as the second parameter then Firefox will stringify it to the DOM as an is null attribute I do not believe that this causes any manner of problem but it is surprising as exemplified in this discussion thread This change simply changes the call to avoid passing null,,"darobin,gaearon,darobin,gaearon,darobin,gaearon,darobin,gaearon,zpao,darobin",2016-05-26 19:48:59,2016-05-26 20:51:15
IS,autoFocus attribute only works for input like things,Do you want to request a feature or report a bug Report a bug What is the current behavior Adding autoFocus attribute to a react component that is not an input like thing does not have the desired effect If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template fails to work with div but works with input What is the expected behavior I would expect that any focusable element could also receive the autoFocus behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I have not yet bisected the issue please let me know if this is needed,,jimfb,2016-05-25 17:09:45,2016-05-26 20:55:24
PR,update shallowCompare doc for es7 function bind,ES7 function bind breaks the functionality of shallowCompare Both the language feature and the shallowCompare function are behaving as designed Unfortunately they just do not work well together and I am not sure if anything should be changed I believe the only sensible thing to do here is to specifically warn devs to not use the syntax for now,,jimfb,2016-05-26 06:15:09,2016-05-26 23:20:49
PR,Fiber Child Reconciler New Coroutines Primitive,First commit is expanding the structure of child reconciliation The steps are organized around phase rather than type of component I found this helpful for now but I'm sure other structures make sense too New Coroutine Primitive Alternative APIs are possible The important part is getting the implementation details right to have all the pieces available in the reconciler,,"sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sophiebits,zpao,sophiebits,zpao,sebmarkbage,sophiebits,sebmarkbage",2016-05-24 19:02:30,2016-05-27 01:21:08
IS,Bug in controlled input of type number,There seems to be a bug in the way React interfaces with controlled inputs of type number If the input contains an invalid number let is say 2 or 2 then trying to clear the input value by setting it to an empty string does nothing You can check an example to reproduce there The onChange handler will set the controlled value to the value returned by ev target value In the case of an invalid value the input returns an empty string as per html spec states of the type attribute 4 10 5 1 12 so this should actually clear the input but the invalid input stays When setting the input value to an empty string after entering an invalid value it should clear the input content not keep the invalid value Seen in React 0 14 8 15 0 1 15 1 0 on OSX Chrome v50 Firefox 46 0 1,,jimfb,2016-05-27 02:01:02,2016-05-27 02:12:19
IS,Change website to use codemirror JSX mode,Right now we use codemirror is JavaScript mode on the website but there is a JSX mode now so we should start using that instead,,"sophiebits,keyanzhang",2016-05-26 18:08:07,2016-05-27 06:33:04
PR,Docs Switch to codemirror is JSX mode,Fixes 6894 I upgraded codemirror from 3 20 1 to 5 15 2 and switched to their JSX mode Also I tweaked the theme a little bit since there are some code highlighting differences between v3 and v5 This is a huge diff due to changing codemirror is source files but the actual changes are just docs css solarized scss docs js live editor js and docs layouts default html Before screen shot 2016 05 26 at 4 25 07 pm After screen shot 2016 05 26 at 4 25 52 pm,,"keyanzhang,zpao",2016-05-26 23:32:48,2016-05-27 06:33:04
PR,Add ReactNext 2016 conference,Add ReactNext conference to list of conferences,,"ilyagelman,mxstbr,ilyagelman,zpao",2016-05-22 09:33:30,2016-05-27 06:43:00
PR,docs Use existing layout for redirecting html jsx,followup to 6608,,zpao,2016-05-27 06:50:28,2016-05-27 06:50:55
IS,sdfssd,,,,2016-05-27 05:57:14,2016-05-27 07:15:53
IS,Building things upon react is diff algorithm,Since React 0 14 the tree diffing and DOM rendering is decoupled paving the way to projects like Is there a way to give the tree diffing algorithm clues about which operations are fast and which are slow Suppose I have fictitious draw model where just updating a certain property in a node is much more expensive than recreating the entire node Can I tell react this Or that I have situation where I switch A for B but have a really easy way to repurpose A to become B,,"jimfb,iamdustan",2016-05-27 10:44:01,2016-05-27 10:58:57
PR,Update tutorial with reference to autobinding docs,,,"jimfb,jimfb",2016-05-25 17:41:46,2016-05-27 11:07:00
PR,Followup to 6896 add explanation of workaround,Followup to 6896 add explanation of workaround,,"jimfb,gaearon,jimfb,gaearon",2016-05-27 09:59:57,2016-05-27 16:19:25
IS,External javscript in react component,Hi i have problem i wanna use external javascript fabric js in my component during server side render any tips how do it I still have error message fabric is not defined Thank you so much,,jimfb,2016-05-27 18:07:29,2016-05-27 18:22:05
PR,6809 Added warning for using onDblClick instead of onDoubleClick,There is already a warning for unsupported props I just added a more specific warning for using onDblClick,,jimfb,2016-05-26 03:22:46,2016-05-27 22:23:05
IS,Why is onDoubleClick not named onDblClick,the DOM event is dblclick why having diverged from it it adds more confusion in my opinion DblClick was maybe badly named but all the other react events follows the DOM counterpart it makes it really easier to stick to the original names,,"jimfb,jimfb,keyanzhang,gaearon,jimfb",2016-05-19 18:25:56,2016-05-27 22:23:33
IS,Provide an opt in way to easily manage this in event handlers,There is no shortage of places in React where a dev will write something like And so when that button is clicked foo would be called with the object that owns the render method which rendered the button set as this,,"jimfb,gaearon,zpao,gaearon,gaearon,gaearon,gaearon,vjeux,gaearon",2016-05-27 23:23:01,2016-05-28 02:07:00
IS,span cannot appear as a child of tbody,Do you want to request a feature or report a bug bug What is the current behavior I have this in my render function for one of my rows of data tr td Elapsed Time td td i className fa fa clock o i elaspedTime ' ms' td tr So I noticed that react automatically put a span tag around elapsedTime ms which triggers the Dom Validation warning issue of span cannot appear as a child of the tbody If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Not put a span tag around my text Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 0 14 8,,zpao,2016-05-28 02:11:40,2016-05-28 02:31:10
IS,test,test,,,2016-05-28 04:48:58,2016-05-28 08:47:03
PR,Fix style test for Jasmine 2,,,sophiebits,2016-05-28 19:57:13,2016-05-28 19:58:08
PR,Fix line lengths and test for lint test passing,CLA completed grunt test and grunt lint were both failing This pull request remedies that,,"lexjacobs,gaearon,lexjacobs,keyanzhang,lexjacobs",2016-05-27 23:49:56,2016-05-28 21:04:32
PR,Add currentTarget property to SyntheticTouchEvents,Touch events only include the target of the initial touchstart in all subsequent events for that touch This makes it quite difficult to implement UIs where a single touch needs to interact with multiple elements on the screen An example of this would be an onscreen keypad where you want a user to be able to press a key and then drag to another key so that they can correct a mistake before lifting their finger to activate the key This diff adds a currentTarget property to all Touch objects in changedTouches touches and targetTouches The currentTarget is the DOM element at clientX clientY for each touch This may or may not be the original target This currently breaks some of the tests in ReactBrowserEventEmitter test js I would like to get some feedback on the idea of adding currentTarget to touch events before fixing the failures and writing new tests TODO write unit tests fix failures in ReactBrowserEventEmitter test js,,sophiebits,2016-05-29 05:07:07,2016-05-29 06:51:58
PR,Remove getDOMNode from docs,getDOMNode was removed completely on v15 0,,"koba04,jimfb,koba04",2016-05-30 14:48:27,2016-05-30 16:16:15
IS,i cant clone a clone of a child element,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-05-30 18:09:36,2016-05-30 18:27:36
IS,Where to put JS code related to UI but not React,Suppose I render a table in some react component and want to add some features to it Make its columns resizable Bind several keypress events up down to highlight shift up down to select enter to do some processing etc None of these tasks have anything to do with react aspect of the component states props component lifecycle etc In such a scenario where will I write the UI features code 1 Inside Component jsx 2 In some other component js file and import it in corresponding jsx file 3 Some other place entirely Please advise,,,2016-05-30 17:51:30,2016-05-30 19:24:22
PR,Grammar less dependencies fewer dependencies,,,jimfb,2016-05-30 11:57:52,2016-05-31 16:17:14
PR,Remove 'unitless number' warning for 'content' style properties,The 'content' style allows a multitude of value formats some of which would classify as unitless numbers so we should not issue a warning for this property,,"alexzherdev,sophiebits",2016-05-31 10:17:23,2016-05-31 19:50:45
PR,Fiber Transfer everything from Element onto the Fiber and use Tag instead of Stage,This has a few benefits 1 This allows the element to always remain on the young generation 2 The key can be accessed on the fiber which is easier to keep as the same class and is directly accessible in the child reconciliation of every object 3 This conveniently means that we do not have to create a fake element for continuations which was really hacky We can still do the quick bailout of rerendered things using the props object which is also unique Also I added a commit to use Tag instead of Stage for the coroutine phase,,"sebmarkbage,sophiebits,sebmarkbage,gaearon,sebmarkbage,sophiebits",2016-05-27 06:17:17,2016-05-31 20:39:59
PR,Fiber Simple test assertions,I will split the coroutine and incremental testing into their own tests so that I can expand them with more edge cases,,"sebmarkbage,sophiebits,sophiebits",2016-05-31 20:57:04,2016-05-31 21:20:18
PR,Remove css px warning stop appending px to strings,cc can one of you stamp,,"jimfb,sophiebits,sophiebits,jimfb,zpao,sophiebits,sophiebits,jimfb,sophiebits,zpao,jimfb,alexzherdev",2016-05-27 00:46:09,2016-05-31 21:32:28
IS,HTML to JSX not working,Hi just wanted to report that this page is not working ReferenceError HTMLtoJSX is not defined,,"alexzherdev,alexzherdev,zpao",2016-05-30 14:29:33,2016-06-01 16:52:53
IS,React renders elements with is null Firefox,Firefox specific bug Due to 6570 react 15 0 3 populates every element with property is null That is caused by weird Firefox behaviour checking the args number of document createElement e g document createElement 'a' '' a is document createElement 'a' null a is null document createElement 'a' undefined a is undefined Verified with Firefox v46 0 1 react 15 0 3 dev and react 15 1 0,,,2016-06-01 17:39:40,2016-06-01 17:41:34
PR,Add rudimentary test renderer,,,"sophiebits,iamdustan,iamdustan,sophiebits,iamdustan,zpao,sophiebits,cpojer,cpojer,sophiebits,cpojer",2016-06-01 18:11:34,2016-06-01 18:17:10
PR,Add a script for extracting error codes,As we talked in 6874 this is the first step that extracts error codes to a JSON file The script adds any new error messages to the end of the file without changing existing codes The traversal order of files is determined by their path names so that the result is stable I added babel traverse and babylon as new dev dependencies but they are already required L34 L36 by babel core so we actually just lifted them up Thanks for reviewing CC A few things left x Rename files x Require glob patterns rather than copy them Use gulp,,"keyanzhang,iamdustan,iamdustan,keyanzhang,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,keyanzhang,keyanzhang,keyanzhang,keyanzhang,sophiebits,zpao,keyanzhang,keyanzhang,sophiebits",2016-05-26 06:04:16,2016-06-01 18:21:26
PR,facebook react 6863 test case,In 6863 complains of props not getting passed into cloned elements This test case clarifies that props with function values implemented on the cloning element are passed just as well as any other prop reactEurope hackathon,,sophiebits,2016-06-01 09:50:46,2016-06-01 18:24:39
PR,Remove Flux from docs nav,Most people do not use the official Flux implementation or docs so I think this is likely to be more confusing than helpful Maybe later we can add a better comparison of data management solutions,,"sophiebits,sophiebits,sophiebits",2016-06-01 18:31:11,2016-06-01 18:41:35
PR,Replace the implementation of escapeTextContentForBrowser with escape html,While working on 6836 I found that escapeTextContentForBrowser can take up a significant amount of time in server rendering because it gets called for every string child and every attribute value By replacing the current implementation with escape html my server rendering test cases see a reduction of 8 20 in server rendering time depending on how many attributes there are per element and whether or not the values have special characters I do not know what the react policy is on dependencies but it looks like there are other MIT licensed dependencies already so I thought this might be possible,,"aickin,aickin,sophiebits,zpao,syranide,aickin,syranide,aickin,zpao,aickin,aickin,aickin,aickin,sophiebits,aickin,sophiebits,sophiebits,sophiebits",2016-05-25 00:21:39,2016-06-02 00:14:30
IS,Document how to reduce bundle size,I have been trying to optimise my bundle and it seems to me that the standard react import import React from areact' includes more code for backwards compatibility than react itself I have found that including react this way import React from areact lib ReactIsomorphic reduces my bundle size from 177kb to 77kb Can this be documented or better supported It is a significant gain Or have some standard way to import only react that is not going to break in future updates,,zpao,2016-06-02 01:26:45,2016-06-02 03:17:44
IS,props not passing down when not included in description of component,I am unsure if this is a bug or the expected behavior I have a component two components as below I'm using React and React Dom 0 14 7 Babel 6 5 2 and webpack 1 12 4,,,2016-05-25 01:30:31,2016-06-02 04:25:48
IS,React v15 0 2 The node to be removed is not a child of this node,Hi I had a simple code like this After upgrading to React v15 0 2 whenever I click the link I got this message Uncaught NotFoundError Failed to execute aremoveChild' on 'Node' The node to be removed is not a child of this node from this function,,"zpao,zpao,syranide,syranide,alexzherdev,syranide,alexzherdev,zpao",2016-05-19 03:10:59,2016-06-02 16:36:14
IS,Distribute compiled files on NPM package,Right now the NPM package just distributes files that are good to be used with Node js You must precompile them with some build system before you can use them Would be really nice to have the same files of the Bower package distributed in a dist directory both react js and react dom js or something like that as NPM is now also being used for client side package management,,"jimfb,zpao",2016-06-02 13:14:13,2016-06-02 18:03:04
PR,Fallback to legacy set get in old versions of FF,5746 introduced some issues with older 22 versions of Firefox that prevent inputs from being properly updated and fails to fire componentDidMount and any ref callbacks In these old versions of Firefox accessing the property descriptor of a prototype calculated the value which caused it to throw exceptions in certain cases related to the DOM see In this specific case fetching the value of an input or textarea would fail with NS ERROR XPC BAD OP ON WN PROTO which cascaded upwards eventually getting caught by the transaction queue This would prevent any other enqueued actions such as running componentDidMount or establishing refs This fix uses Firefox is deprecated lookupSetter and lookupGetter methods as a fallback which are supported in all versions where the getOwnPropertyDescriptor will fail It has been spot tested on Firefox 4 17 21 and 46 all managed to run all lifecycle hooks and establish refs and were able to set and update the value of inputs One remaining question is what to do when the catch block is reached and the lookup methods do not exist In this case descriptor will be undefined and will break below This actually seems like reasonable behavior to me because if we get that far we are in a bizarre unsupported browser environment and nothing should work,,"andrewimm,jimfb,sophiebits,andrewimm,jimfb,sophiebits,andrewimm,sophiebits,zpao,sophiebits,sophiebits",2016-05-31 19:15:53,2016-06-02 18:35:21
PR,Update link and description of TypeScript support,,,"zpao,zpao",2016-06-03 00:51:18,2016-06-03 17:27:39
IS,Context updates are unavoidable,See Basically when a component supplies getChildContext there is nothing to check and see if the context has actually changed or not not even a As long as you have a getChildContext then it is always a new context The problem with this is that when you re render a React Redux context provider this triggers the update of every single connected component because even though they return a triple equals ReactElement from render it is re rendered because the context has changed Arguably this is partially a React Redux issue because they are always returning a new object from getChildContext but there does not seem to be any mechanism in React at the moment for checking if contexts are the same or not I suggest that React should provide a mechanism like shouldContextUpdate or shallow comparison on context objects or even just changing getChildContext to be like tryGetUpdatedContext return null for no change to check if they have actually changed We have worked around this issue by simply making the context provider the root object and then never re rendering it and forceUpdating the child but this is a bit of a nasty This also relates to caching ReactElements between components We have icons that are a React element and we use the same element global constant in every case to represent the icon it does not use any context It would be nice if we could tell React to ignore context changes when deciding whether or not to update these elements,,zpao,2016-06-03 13:30:38,2016-06-03 17:35:28
IS,Feature let shouldComponentUpdate also return which props triggered the update for non immutable deep comparisons,Currently shouldComponentUpdate shallow deep checks the components props state and returns only a boolean value Then when in componentDidUpdate is triggered because of the proposed update hook we again need to check which prop has actually changed So basically in case of a deep check we are performing the same expensive comparison twice I know with immutable props this problem would not arise but not all react apps can commit to use immutable props Also the style object is often not immutable and therefore despite beeing deep equal would still trigger a re render of the component So I propose to introduce a non breaking change to let shouldComponentUpdate return an array of property names that triggered the update React would have to check,,jimfb,2016-06-03 10:04:00,2016-06-03 17:52:41
PR,Upgrade Flow,Some of this was done in a codemod by Since we are not syncing all the RN stuff in there are more failures there unrelated to ReactElement but for other reasons We should clean those up too since flow should actually be failing right now,,"zpao,zpao,sophiebits,zpao",2016-06-03 19:48:52,2016-06-03 20:17:16
IS,TypeError using ReactCSSTransitionGroup,React 0 14 8 We see this in browser tests but never manually triggered so bug is seemingly timing sensitive component isMounted is true but in these cases ReactDOM findDOMNode this then returns null here L116,,"gaearon,jimfb,jimfb,jimfb,sophiebits,sophiebits",2016-04-26 06:37:21,2016-06-03 20:42:45
PR,Fix null node issue in ReactCSSTransitionGroup,Fixes 6619 Thanks for reviewing CC,,"keyanzhang,sophiebits,sophiebits",2016-06-03 19:53:11,2016-06-03 20:42:45
PR,Use remarkable instead of marked,Test Plan Markdown in homepage works does not allow the malicious link Line highlights in tutorial look correct,,"sophiebits,jimfb",2016-06-03 21:29:14,2016-06-03 21:41:38
PR,Docs Add instruction for downloading babel browser,We could also consider switching from babel browser 5 8 to babel standalone since the former has been deprecated,,"keyanzhang,zpao",2016-06-03 21:06:10,2016-06-03 22:43:32
IS,Server side render,I was wondering if it was possible to render a react component server side without serialising it to a string It should make it possible to trigger state changes without re rendering the whole tree For example I would like to be able to do something like this pseudo code If this is not possible currently would it be difficult to implement,,"aweary,jimfb,mxstbr,jimfb,mxstbr,jimfb,jimfb",2016-06-04 04:20:09,2016-06-04 16:21:33
PR,Fix function declaration in if statement,Firefox does not like these and throws cc for lint for sync,,"sophiebits,sophiebits,chicoxyzzy,sophiebits,jimfb",2016-06-04 02:17:00,2016-06-04 20:37:57
IS,Add support for EventListener interface,It would be nice to have support for the EventListener interface Events EventListener Example on MDN So it wouldn t be necessary to bind the listeners creating unnecessary copies of the callback for each instance of a component making use of Event Delegation Does it make any sense I ve made a working proof of concept in this plunk This is my first approach feature add event interface support tests will be added,,"jimfb,zpao,jimfb,jimfb,zpao,zpao,sebmarkbage,sebmarkbage,alexeyraspopov",2016-05-27 04:40:09,2016-06-04 20:39:02
PR,Docs Error Codes Page,Implements the 2nd part of 6874 The JSON file built by 6882 is now fed to the page CC since this PR modifies the build steps of our docs Thanks A demo can be found here Foo,,"keyanzhang,sophiebits,zpao,zpao,zpao,zpao,zpao,keyanzhang,keyanzhang,zpao,keyanzhang,zpao,sophiebits,sophiebits,keyanzhang,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits",2016-06-01 19:46:24,2016-06-04 21:43:56
IS,Feature request onTransitionStart,I think it is implemented in IE10 and above,,,2016-06-05 18:49:07,2016-06-05 19:08:10
PR,Add periods in the comments to keep the comment format consistent,Did not change commented links and TODO comments,,jimfb,2016-06-05 23:53:06,2016-06-06 02:26:08
PR,Warn that ReactPerf does not work in the production build,This takes 6884 and adds small stylistic changes on top,,"gaearon,gaearon,gaearon,sashashakun,gaearon",2016-06-06 18:32:42,2016-06-06 18:37:46
IS,Perf print method not working in 15 1 0 Cannot read property 'forEach' of undefined,After upgrading to 15 1 0 I'm having trouble using the React Perf tools I have done the following Added to one of my files The failure is on this line flushHistory forEach function flush The same behaviour occurs for all other print method such as printInclusive and printExclusive The same behaviour occurs if I put the commands into my code ie NOT running in the Chrome Console,,"gaearon,gaearon,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun,gaearon,sophiebits,gaearon,sophiebits,sashashakun",2016-05-25 17:57:23,2016-06-06 18:37:55
PR,6871 Add not dev warning for ReactPerf remove dev checking for ReactDebugTool method,Via Steps before PR x 1 Fork the repo and create your branch from master x 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation need to investigate x 4 Ensure the test suite passes grunt test x 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines x 6 If you have not already complete the CLA,,"sashashakun,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,sashashakun,gaearon,gaearon,gaearon,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun,sashashakun,gaearon,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun,gaearon,sashashakun",2016-05-26 07:08:28,2016-06-06 18:46:57
PR,Revert Fallback to legacy set get in old versions of FF,Reverts facebook react 6930,,"sophiebits,zpao",2016-06-06 18:35:28,2016-06-06 18:49:43
PR,Tweak ReactPerf warning message and code style,Tweaked the warning message to add the missing space after the period renamed getFlushHistory to getLastMeasurements because that s how it s called in the public API and made newlines more consistent across different methods This needs to go right after 6884,,gaearon,2016-06-06 18:51:05,2016-06-06 18:59:28
IS,Perf printWasted does not work when component conditionally returns null,After upgrading to React 15 0 1 or 15 1 0 I'm not able to use printWasted from Perf tools React 15 0 1 throws error ReactDefaultPerfAnalysis js 177 Uncaught TypeError Cannot read property 'forEach' of undefined React 15 1 0 warning js 44 Warning There is an internal error in the React performance measurement code We did not expect componentDidMount timer to stop while no timer is still in progress for another instance Please report this as a bug in React I discovered that error is connected with returning null A lot of my components have something like that And when I try to measure one of those components I will get above error Removing conditions from components fixes problem,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-05-26 08:22:43,2016-06-06 20:04:17
IS,react addons perf does not work in IE11,I see error Object does not support property or method 'table' Seems IE does not support console table,,"gaearon,gaearon",2016-06-06 19:57:56,2016-06-06 20:09:41
IS,String with whitespace causes uniteless css warning,What is the current behavior Assigning a style object with content to component results in a unitless CSS warning warning a div tag owner unknown was passed a numeric string value for CSS property content value which will be treated as a unitless number in a future version of React Demo Fiddle with content Demo fiddle with content What is the expected behavior Only throw warnings for CSS properties that need them content could be any string or one of the following values normal none string uri counter attr open quote close quote no open quote no close quote Which versions of React Tested in React 15 1 0,,"alexzherdev,jimfb",2016-05-26 11:54:02,2016-06-07 17:41:23
PR,Fix autofocus for input and textarea,Fix autofocus for input and textarea,,"jimfb,sophiebits",2016-06-07 17:07:13,2016-06-07 19:50:38
IS,Default props for inherited components not working in IE10,Default props declared on a base class are not found by inheriting classes in IE10 This was observed in react 0 14 7 and 15 1 0 The example and codepen below should help reproduce,,"jimfb,jimfb,hzoo,jimfb,jimfb",2016-05-31 18:53:13,2016-06-07 20:07:41
PR,Fiber Add support for simple updates and fiber pooling,This splits the Fiber type into Fiber and Instance This could be two different object instances to save memory However to avoid GC thrash I merge them into one When ReactChildFiber reconciles children it clones the previous fiber This creates a new tree for work in progress The idea is that once flushed this new tree will be used at the root However we know that we will never need more than two trees at a time Therefore my clone function stores the clone on the original Effectively this creates a fiber pool Ideally the alternate field should not be used outside of clone so that everything can work with pure immutability I cheat a bit for now so I do not have to pass both trees everywhere ReactChildFiber is a bit hacky for reuse and does not solve all cases Will fix that once I try to get parity I currently still use parent to backtrack through the work in progress This is probably not going to work though Probably need a parent stack for reconciliation purposes even if we keep the parent pointers for other purposes A separate commit renames unitOfWork workInProgress,,"sebmarkbage,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sophiebits",2016-06-07 05:12:58,2016-06-07 21:30:07
PR,Check for defaultProps in a component is prototype,This is a workaround for defaultProp resolution on IE10 when using ES6 class inheritance Due to the nature of babel is class transform and IE10 weirdness static properties like defaultProps and propTypes are not inherited by subclasses see example below This change allows us to set allows devs to workaround the issue by setting BaseComponent prototype defaultProps instead of BaseComponent defaultProps Related issue 6929 cc,,"jimfb,jimfb,sophiebits",2016-06-07 22:38:58,2016-06-07 22:52:40
PR,Add reactProdInvariant and corresponding babel rewrite pass,Implements 6874 Thanks for reviewing,,"keyanzhang,zpao,zpao,keyanzhang,zpao,keyanzhang,keyanzhang,zpao,iamdustan,zpao,iamdustan,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,keyanzhang,keyanzhang,keyanzhang,sophiebits,keyanzhang,sophiebits,sophiebits,keyanzhang",2016-06-02 05:45:46,2016-06-08 00:11:04
PR,RFC Error code system,This is a work in progress on implementing React is Error Code System error messages Comments and feedback are more than welcome Background We currently have fbjs scripts babel 6 dev expression as a babel pass It rewrites all invariant calls from,,"keyanzhang,zpao,keyanzhang,zpao,sophiebits,keyanzhang",2016-05-25 19:05:30,2016-06-08 00:12:14
PR,Improve error message for components in bad states missing instance,In unknown circumstances possible due to errors thrown elsewhere it is possible for React components to enter a bad state where this instance is unset but component state change can continue to happen This leads to unhelpful error messages like This adds invariants that assert this instance exists If the component is in a bad state we will now instead warn with a more descriptive error message and more importantly the component is name,,"yungsters,sophiebits,yungsters,sophiebits",2016-06-08 00:00:59,2016-06-08 00:23:40
PR,Fiber Minimize abuse of alternate,This avoids using alternate as much as possible and isolates it to the root For anything that is work in progress the alternate field happens to be the same as the currently flushed version To avoid an extra current field on work in progress fibers we can just use the alternate The timing for when this is true might be a bit tricky to reason about so I explicitly pass the current value everywhere from the top That way we can always change this in the future to use an explicit field or we can try to maintain a parallel data structure that remembers which was the current fiber for each wip child,,"sebmarkbage,sophiebits,sebmarkbage,sebmarkbage",2016-06-07 22:05:21,2016-06-08 01:42:18
PR,Fix the typo in the documentaion pages for shallowCompare,Hi this is to fix a typo in the documentation pages for shallowCompare at It does this by iterating on the keys of the objects being compared and returning false true when the value of a key in each object are not strictly equal,,"jimfb,jimfb",2016-06-07 03:55:59,2016-06-08 06:09:50
IS,Warning on input value null,syranide This issue of input vs input value null has been around for over a year now but I still can not understand the thinking behind the reasoning you give to all the issues that raise it I apologise if the following indicates I am misunderstanding something Please clarify for me what I seem to not understand Could you please give an example of where a developer may use input value null for an uncontrolled input Because to me it seems React only sees such if a developer did something like input value x and x happens to be null let x null This in terms of intention means x may be a non null value later This should leave the component as a controlled component My understanding is that React already does this My issue is about the warning it gives Currently React 15 x x gives a warning when it encounters input value null and it says the value should not be null but rather an empty string or undefined depending on whether you want a controlled vs uncontrolled input The release notes for v15 0 0 say React treats this as an intention to clear the input Can this warning be dropped because it may lead developers to having let value value all over their code especially if using async store patterns where values may get set at a later point This leads to the mistake of losing a value of 0 in some instances or all To me it seems like this is something that should be in docs and not a warning in code I have yet to see a case where a developer uses the value prop on an uncontrolled input This is a direct result of lack of cases where a controlled input is changed to an uncontrolled input In that case Reach should encourage developers to be more explicit in their intention by having some flow control mechanism that returns a different component altogether instead of setting the same controlled input to null,,"syranide,jimfb",2016-06-08 09:51:17,2016-06-08 15:10:21
IS,Input tags' values invisible to Sizzle jQuery since v15,Prior to v15 an input tag like input value hello would be found by a Sizzle jQuery query like ' text value hello ' Since v15 the same query returns 0 results If I reduce the query to text and check its value sure enough the output is hello If you are wondering what I'm doing I use Sizzle both directly in my unit tests to assert React output and indirectly in a DOM zipper library also for testing,,"sophiebits,jimfb,jimfb",2016-04-11 08:01:24,2016-06-08 15:18:22
IS,progress requires value to be an attribute but it is a property due to inputs,Now that 1510 has landed we still have one final issue to fix ironically the initial reason for 1510 issuecomment 170229012 issuecomment 170229162 the problem being that value is managed as a property for the purpose of input but progress requires it to be an attribute so that the attribute is correctly removed when null As discussed in the second comment it seems to me that the right approach here is to actually remove all the special property logic from DOMPropertyOperations and instead implement it in the appropriate wrappers instead ReactDOMInput etc Repro Original issue cc,,"syranide,jimfb,syranide,jimfb",2016-02-25 12:09:02,2016-06-08 15:20:17
IS,React 15 props value changed from istring' to '0',image image,,"jimfb,jimfb",2016-04-19 04:17:18,2016-06-08 15:23:20
IS,Setting progress element value to 0 is removed from the markup,Seems like progress max 5 value 0 is not working as expected Here it is in regular HTML Expected rendered an empty progress bar In react however it is rendered as I noticed however setting the value to 0 in componenetDidMount seems to get around this bug same with using 0 Here it is in react,,"syranide,syranide,jimfb,jimfb",2016-05-05 02:55:33,2016-06-08 15:24:13
IS,React 15 x can not work in IE 8,L248 It seems that createElement method will call Object defineProperty without checking canDefineProperty and make IE8 crash even with es5 sham es5 sham throw an error but not catched by react,,"jimfb,zpao,brigand,brigand,brigand",2016-06-08 15:26:06,2016-06-08 15:30:07
IS,React createClass fails when called with a spec created with Object create null,Hi React Team Right now the following code fails Where SkewReact will wrap the input into something that inherits Object before passing that on to the real React createClass This works but means that my API wo not mirror that of React directly which means it will be harder for people to learn,,"jimfb,zpao,jimfb,jimfb,jimfb,jimfb",2016-02-08 19:08:01,2016-06-08 15:35:17
IS,Documentation passing key to React createElement,There is nothing in the documentation that indicates how to pass key s to React createElement Also there is no explanation about props children either especially when using React cloneElement Should the props children be copied or new children passed See also this SO question,,"jimfb,jimfb,jimfb,gaearon",2016-06-08 07:58:31,2016-06-08 16:10:47
IS,Using React 15 under IE dangerouslySetInnerHTML does not work on any SVG tag,Hi Since React15 DOM reconciliation produce deep DOM manipulation instead of setting innerHTML of higher level html DOM node Every DOM mutation is done exactly where it has to be done either for HTML element or SVG element As a side effect when you use dangerouslySetInnerHTML on any SVG element React create the SVG element using document createElementNS then set the innerHTML element of the new element That is pretty cool on any recent browser except IE IE11 does not support innerHTML on any SVG tag There is no script error as assigning an unknown property is always allowed on any Object But nothing is added in the DOM tree for example this stateless component produce an empty svg on IE and the codepen io Please notes that it is partially a regression as dangerouslySetInnerHTML on an svg tag was working before React15 at the initial render the svgPath string was added to the virtual DOM string the whole virtual DOM generated by the render method was added to the real DOM using innerHTML of one of the the parents node It was not working on a props update except setting a key props on the high level svg tag forcing react to use innerHTML of its parent I was doing that without knowing why Now I do know Regards,,"jimfb,sophiebits",2016-06-02 10:40:58,2016-06-08 17:00:03
PR,Fix 6950 work around IE missing innerHTML on SVG nodes,Fixes 6950 where dangerouslySetInnerHTML does not work on any SVG tag I updated setInnerHTML to use the method hashed out by and updated DOMLazyTree is use of node innerHTML to use setInnerHTML instead I was hesitant about updating DOMLazyTree to use the setInnerHTML util but it seemed to make the most sense If it is not appropriate I will just make the workaround local to DOMLazyTree If this looks good I will go ahead and add some tests to make sure it continues to work 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"syranide,syranide,sophiebits,sophiebits,syranide,sophiebits,sophiebits,sophiebits,sophiebits,zpao,sophiebits,sophiebits",2016-06-07 06:45:19,2016-06-08 17:00:03
IS,HTML5 input browser warnings,In my render method I have something like If I first render this input no matter what browser remains silent When I call this setState input 'invalid2' or press any with this input focused it moves cursor at the end and yields a warning screenshot from 2016 06 08 10 45 11 jsfiddle This might be related 6441 It is happening in 15 1 0 I have not tested any other version Is this expected behavior,,jimfb,2016-06-08 08:49:02,2016-06-08 17:49:20
PR,Fix 5839 Add error event to source element,This fixes issue 5839 and is re based code from pr 5861 reactEurope hackathon,,jimfb,2016-06-01 12:27:28,2016-06-08 20:30:27
IS,source onError callback does not work,The error event on source elements does not work Looking at 4370 it seems like there is an onError for video but I can not tell if that is supposed to work for source too The error event is useful so I can deduce which format the browser is using,,"zpao,zpao",2016-01-12 23:27:43,2016-06-08 20:30:35
IS,Warn for all unsupported lifecycles in stateless Components,Example When generating child context with a stateless Component the context is not available to the children,,"jimfb,jimfb,sophiebits,jimfb,sophiebits",2016-05-31 03:24:40,2016-06-08 20:32:43
PR,Warn if childContextType is defined on SFC,Resolves Per the discussion there this only warns for childContextTypes for now reactEurope hackathon,,"aweary,jimfb",2016-06-01 08:08:51,2016-06-08 20:32:43
IS,There is a math error in documentation ref 08 reconciliation,Do you want to request a feature or report a bug bug What is the current behavior See react docs docs ref 08 reconciliation md there is a line This means that displaying 1000 nodes would require in the order of one billion comparisons This is far too expensive for our use case To put this number in perspective CPUs nowadays execute roughly 3 billion instructions per second So even with the most performant implementation we would not be able to compute that diff in less than a second Considering it mentions that CPUs execute 3 billion per second while we require 1 billion comparisons why it come to a conclusion that we would not be able to compute the task in less than a second What is the expected behavior I guess the expected behavior would be either provide the correct CPUs time or update the conclusion Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React It is a documentation bug,,"syranide,jimfb",2016-06-08 09:20:54,2016-06-08 20:53:29
PR,Add period to correctly terminate sentence,The period was left out after the blog post link Not anymore,,jimfb,2016-06-08 14:32:24,2016-06-08 20:59:44
IS,Using React 15 After transformation of outer div removed with attributes,React 15 1 0 Chrome 47 0 2526 80 64 bit FireFox 33 0,,zpao,2016-06-03 09:49:26,2016-06-08 21:22:57
IS,Cannot Click into Select on any version of IE,Nothing happens when I attempt to click into the date select on IE Works on every other browser export function monthsArray return 'January' 'February' 'March' 'April' 'May' 'June' 'July' 'August' 'September' 'October' 'November' 'December' map monthName index let month month name monthName month abbr month name slice 0 3 month number index 1 month padded month number 10 '0' month number toString month number toString return month,,"jimfb,jimfb,gaearon,jimfb,zpao,jimfb",2016-05-23 17:34:18,2016-06-08 21:23:51
IS,How to use testutil for es6 component,I used to run tests for es5 components using,,"zpao,jimfb,jimfb",2016-05-12 10:04:07,2016-06-08 21:24:47
IS,input element rendered before its cursor gets position in mobile browser,input tag bug I am following the official document here In this document when user input event occurs we should controller over input value with state and setState method However when I tried this code below Then it works well If my guess is right it should be fixed Thank you,,"jimfb,jimfb",2016-05-12 04:58:08,2016-06-08 21:25:09
IS,keyboard events do not behave as expected on mobile,onKeyPress is never triggered onKeyDown event key is always Unidentified event keyCode is always 229 event charCode is always 0 event which is always 229 tested on Google Nexus 5 Android 6 0 1 Google Chrome 48 0 2564 95,,"jimfb,jimfb,jquense,syranide,jimfb,jimfb",2016-03-03 14:06:23,2016-06-08 21:27:44
IS,bug componentWillUnmount is called before componentDidMount,React 0 14 3 componentWillUnmount is called before componentDidMount but this must be impossible As additional check calling findDomNode inside componentDidMount causes Invariant Violation findDOMNode was called on an unmounted component code example and output jsbin example console,,"chicoxyzzy,jimfb,sophiebits,sophiebits,gaearon",2015-12-22 23:42:07,2016-06-09 00:50:57
IS,IE11 resets value of textarea when a placeholder is used,Do you want to request a feature or report a bug Bug What is the current behavior When you create a textarea with value and placeholder set and click into it using IE11 the value is reset to empty string If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar What is the expected behavior The value of the textarea stays the same and the cursor is placed at the clicked position Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 0 1 IE 11 Windows 8 It did work in earlier versions,,"syranide,jquense,syranide,jquense",2016-06-07 09:15:03,2016-06-09 01:58:37
PR,Fix IE11 placeholder textContent value bug,Fix IE11 placeholder textContent value bug Pop quiz What does IE11 give you if Apparently placeholder detaches value or something In case you are wondering no this bug shows up in 15 0 1 so it was not caused by my recent value change It was something else introduced prior to v15 Fixes,,"jimfb,jimfb,sophiebits,jimfb",2016-06-09 00:47:19,2016-06-09 01:58:37
PR,Updte tutorial to ja JP,Tutorial is great I am very reference Code examples of the ja JP are some old Add a new chapter of the Controlled components,,jimfb,2016-06-05 18:26:07,2016-06-09 02:20:20
PR,Remove setProps and replaceProps completely,setProps and replaceProps are removed completely on v15 0,,"koba04,jimfb,koba04,jimfb,koba04,zpao,koba04",2016-05-30 14:49:23,2016-06-09 10:53:52
IS,Bug CSSPropertyOperations setValueForStyles does not check for undefined component argument,Version 15 1 0 L195 All other code in that component is tolerant about a missing component argument This changed introduced a breaking bug in and the way it calls CSSPropertyOperations setValueForStyles without a component,,"jimfb,gaearon,jimfb,gaearon",2016-06-09 09:27:08,2016-06-09 11:13:50
IS,Warning is changing a uncontrolled input of type radio to be controlled,I have this code And when I click on radio it gives me warning Warning Test is changing a uncontrolled input of type radio to be controlled Input elements should not switch from uncontrolled to controlled or vice versa Decide between using a controlled or uncontrolled input element for the lifetime of the component More info So its not clear why or is it a bug,,"syranide,syranide,zpao,jimfb,syranide,jimfb,zpao,jimfb,zpao,jimfb,syranide,jimfb,syranide,jimfb,syranide,gaearon,jimfb",2016-05-16 08:07:06,2016-06-09 14:58:42
PR,Fix controlled uncontrolled validation for radio checkbox inputs,Fix controlled uncontrolled validation for radio checkbox inputs Fixes 6779,,"jimfb,sophiebits,aweary,jimfb,jimfb,jimfb,sophiebits",2016-06-09 01:47:14,2016-06-09 14:58:42
PR,Remove console log from test,Remove console log from test,,jimfb,2016-06-09 16:23:39,2016-06-09 16:24:03
IS,React perf tools not work in react 15,This month when I upgrade React 0 14 to React 15 Perf doesnt work anymore I usually use like this thanks,,"syranide,gaearon",2016-06-08 09:08:30,2016-06-09 19:20:54
IS,New React Perf eats a lot of CPU,After migration to React 15 1 0 I noticed that my application is running slower than usual Quick debug with Chrome profiler shows that method purgeUnmountedComponents from ReactComponentTreeDevtool eats around 30 of my application time On every mouse move or click method iterates over huge amount of elements I do not know if that behaviour is desirable reactperfcpu,,"gaearon,gaearon,sophiebits,gaearon,gaearon,gaearon",2016-06-07 09:03:23,2016-06-09 21:00:41
PR,Pin babylon at 6 8 0 for ESLint to work,babel babylon 25 broke our linter Error Unknown node type TypeParameter Upgrading ESLint to 2 x would be the right way to go but we can just pin babylon at 6 8 0 to do a quick fix CC,,"keyanzhang,hzoo,keyanzhang,hzoo,keyanzhang,hzoo",2016-06-09 22:31:50,2016-06-09 23:14:44
IS,Allow objects in key,Do you want to request a feature or report a bug Feature What is the current behavior You need to specify a unique key If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template N A What is the expected behavior It should behave the same as using a unique key string Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A The idea came when I was discussing a module I wrote to take care of this functionality I can not really think of a reason why this behavior should not work out of the box In a regular setting people need to either add an id property to objects in an array to spend a non zero cogintive load figuring out which field or fields will be unique in the set There is no reason why just passing an object should not work In a case where the collection is refetched and therefore all the previous references are lost the elements in the array will tend to be in the same order and therefore should not cause any perf hit I do not know enough to comment on the perf hit for an insert or removal in the middle of the collection SSR should have a similar perf hit which is to say none although the key prop will need to be stripped out of the server rendered markup Is this something worth pursuing,,"gaearon,jimfb",2016-06-10 01:17:14,2016-06-10 11:58:49
IS,Render component only on the server without mounting on the client,Is it possible to have a frozen component that is rendered only on server side without being processed on the client side without calling the render cycle again Let is say I have a CMS that statically generates HTML on the server a legacy system but I want to use react to render the output inside my component structure I used React 15 1 0,,"syranide,syranide,jimfb,jimfb,jimfb,syranide",2016-06-07 14:55:36,2016-06-10 12:16:48
PR,Performance setTextContent should attempt to set TextNode nodeValue where possible,As per title this PR attempts to improve React is TextNode update patch performance by accessing the firstChild nodeValue This can have a big impact on performance where TextNode updates are frequently changing This PR also removes the polyfill for element textContent as this is no longer required for IE9 No new tests were added to this PR as the test coverage already covers this use case let me know if you think this is wrong and I can add tests for use cases that may not have been covered given the changes,,"trueadm,sophiebits,trueadm,sophiebits,syranide,trueadm,jimfb,syranide,trueadm,syranide,trueadm,sophiebits",2016-06-09 15:52:45,2016-06-10 16:57:31
PR,Update 12 context md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Modify a clerical error,,jimfb,2016-06-06 08:49:46,2016-06-10 18:52:10
PR,New marketing copy on homepage,,,"sophiebits,gaearon,sophiebits,sophiebits,gaearon,sophiebits,sophiebits,vjeux",2016-06-11 02:46:25,2016-06-11 02:47:23
IS,how to recover this bug validateDOMNesting form cannot appear as a descendant of form See LoginForm StatelessComponent Connect Form Form form StatelessComponent Connect Form Form form,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,zpao,2016-06-11 07:34:52,2016-06-11 13:35:48
IS,Virtual DOM DeepRenderer,Virtual DOM has a lot of potential in testing But actually only ShallowRenderer uses it in 100 which is great But it is only usable for unit testing Library like Enzyme are great in deep rendering w o real DOM which is huge performance boost in case of functional or and integration testing without real browser But it uses DOM mock which is called jsdom In my opinion it is totally unnecessary because VirtualDOM rendered output is totally usable for testing which ShallowRenderer proves So I made little hacky but fully working patch to ShallowRenderer which allows to render children also PR here So my propose is introduce something like DeepRenderer in test utils I can modify my patch Is it worth to skip jsdom Will it be noticable perf boost How to name that renderer How the API should look like,,"lasekio,gaearon,lasekio",2016-06-11 13:00:58,2016-06-11 13:47:36
IS,allowFullScreen not working,it seems that it is not possible to pass this attribute like in 2041 test script note is camelCase only for attribute names with an hyphen it would be clearer if so,,,2016-06-11 08:08:12,2016-06-11 13:51:34
IS,Regression SyntheticEvent no longer available in the handler,Do you want to request a feature or report a bug Bug probably a major regression What is the current behavior SyntheticMouseEvent used be the first argument passed to event handler it is not now If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is a simple case to reproduce it Unless it is intended behavior change otherwise this looks like a regression Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React It used to work until 0 14 8 seems to be introduced in 15 0 0 and affect all following versions,,zpao,2016-06-11 05:09:45,2016-06-11 14:12:26
PR,Fix Japanese Italian Korean tutorials,Go through the drill got a following error image But English version is right image,,"keyanzhang,keyanzhang",2016-06-12 00:52:06,2016-06-12 07:03:13
PR,Proposal to update marketing copy,This is a bikeshed followup to 7012 I felt like rephrasing them a little bit Please feel free to reject Sorry I didn t do this before 7012 got merged,,"gaearon,gaearon,gaearon,gaearon,gaearon",2016-06-12 02:05:26,2016-06-12 13:24:09
IS,Feature Request PropTypes deny,When writing out propTypes to ensure the accuracy of my components it is sometimes necessary that a component not receive a particular prop as it may cause problems with the component receiving props or lead to other confusion I suggest the following which would then output a warning like Warning Failed propType prop 'onChange' was specified in 'MyComponent' and should not be used Check the render method of 'MyComponentParent',,"keyanzhang,aweary,aweary,jimfb",2016-06-12 08:33:29,2016-06-12 22:42:05
IS,Dispatch synthetic events and define custom ones,Right now you can only dispatch native events to the DOM nodes but there is not any way to dispatch synthetic events on the Virtual DOM nodes I would like to be able to dispatch synthetic events in addition I would like a way to define custom event listeners Usecase For example I have a component decorator that adds a resize event on a DOM element when it get resized I would like to be able to dispatch the resize event to such element and be able to listen to it using onResize Example This is very inconvenient and not flexible We would need a way to dispatch synthetic events and be able to listen to them using the onSomething properties I think it would be a great addition to React,,jimfb,2016-06-13 13:27:24,2016-06-13 15:07:21
IS,How to handle propTypes undefined in production,I am aware that Note that for performance reasons propTypes is only checked in development mode prop validation In development mode we have models collections of propTypes e g This is sub optimal because it would require updating each instance where propTypes are used to declare data shapes Is there an environment variable that would force to keep propTypes but disable validation Can you suggest an alternative approach to this issue,,gaearon,2016-06-13 16:23:16,2016-06-13 16:40:19
IS,ReactPerf throws production is not defined error,I'm using webpack to build my react project react 0 14 6 and somehow it is throwing production is not defined ReferenceError in ReactPerf Because in my webpack setting I was injecting the NODE ENV which was working fine before any advice on that screen shot 2016 06 13 at 11 11 05 am screen shot 2016 06 13 at 11 11 05 am,,gaearon,2016-06-13 18:11:51,2016-06-13 18:21:20
PR,Wordsmith the homepage some more,Based on feedback from and me image,,sophiebits,2016-06-12 02:05:46,2016-06-13 19:40:18
PR,Add symbol to identify a ReactTestMount instance,cc this is needed for the pretty printer,,cpojer,2016-06-14 04:29:49,2016-06-14 05:50:28
IS,bug breaking change CSSTransitionGroup in React 15 1,I hope this is the correct place to file this issue its definitely related to the ReactCSSTransitionGroup but it could be also related to React Router Im using React Router with ReactCSSTransitionGroup in order to provide an animation while the user navigates between routes in my app for instance to provide a nice fancy login animation I also use a HOC library I wrote redux auth wrapper to secure my routes with authentication authorization checks The HOC performs redirects by using redux state data about user authentication and dispatching redirects typically via redux actions but can use the React Router context as well In 15 0 2 the HOC works perfectly and then upon upgrading to 15 1 there are infinite redirection loops Its not clear to me if using the transition group in this way is wrong obviously a concern is that both the pages are briefly rendered and the HOC which uses componentWillMount componentWillReceiveProps to trigger the redirect is forcing another redirection But it seems like the cWRP is being called as it is trying to be unmounted and is continually causing cWRP to triggered I have created a sample repo at When you use the master branch everything works as expected click to the Foo link and type user name and then should the welcome text then moving to the the 15 1 upgrade branch and re npm install and try to perform the same process will result in an infinite redirect loop beware of crashing your tab browser I typically open a new window open chrome dev tools and as soon as it loads and starts looping using the pause script button in the console I have only tested this in Chrome version 51 0 2704 84 Thanks Let me know if there is anything else I can do to help,,"gaearon,gaearon,gaearon,keyanzhang,gaearon",2016-06-12 23:06:40,2016-06-14 16:05:58
PR,Update 03 interactivity and dynamic uis md add missing semicolon,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,zpao,2016-06-11 04:46:54,2016-06-14 17:55:38
IS,onChange not work corectly,onChange work like a onInput but onInput does not work React v 0 14 7,,jimfb,2016-06-14 17:47:02,2016-06-14 18:00:34
PR,Add React Amsterdam conference to the list,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"operatino,jimfb",2016-06-13 13:06:11,2016-06-14 18:02:14
PR,Fix 6970 make document of test utils up to date,The find scry methods which returns DOM component in react 0 13 now returns DOMElement in react 0 14 and later,,zpao,2016-06-06 05:49:58,2016-06-14 18:09:20
PR,Update readme to latest React description,Just copied the stuff from 7012 to the readme Also deleted the line about React Native since it would be redundant Let me know if I need to fix anything,,"zpao,jimfb",2016-06-11 04:12:01,2016-06-14 19:46:21
PR,Revert Remove setProps and replaceProps completely,Reverts facebook react 6921 issuecomment 226028119 explains why,,"zpao,chicoxyzzy,zpao",2016-06-14 21:56:08,2016-06-14 22:02:01
PR,Move null input value prop warning into devtool add stack trace,Move null input value prop warning into devtool add stack trace,,"jimfb,sophiebits,sophiebits,jimfb,sophiebits,jimfb,sophiebits,zpao",2016-06-14 23:12:24,2016-06-14 23:34:39
PR,15 next,not for merge This is mostly a trial run of everything that would go into the next v15 release using the tool I'm building more on that later There is no manual curation here and the tool is not complete but I can say confidently that this would be a minor release Actual plan for releasing this triple check that all the PRs that should be here are will require another triage pass will possibly re run entire process revert part of 6859 for the valid element check close this PR without merging instead push 15 dev branch or maybe call it 15 next to match the milestone update milestone for all cherry picked PRs to ensure we do not get mixed up with other things that might get merged targeted for another version bump the version ship as 15 2 0 rc 1 or alpha this part is interesting if we picked up more changes we would only change the prerelease part of the version even if it is a semver bump required change make sure tests pass,,"zpao,keyanzhang,zpao",2016-06-08 18:47:01,2016-06-15 00:59:01
PR,15 dev fixups,Minimal changes on top of all of the cherry picked PRs I will also re shrinkwrap but will do in a standalone commit because that is a noisy change enough deps have changed that blowing away the shrinkwrap file reinstalling then re shrinkwrapping is safest,,"zpao,zpao",2016-06-15 00:54:24,2016-06-15 01:20:07
PR,remove unintended words from comment,Looks like it was unintendedly added after merging and to master,,"chicoxyzzy,zpao,chicoxyzzy",2016-06-15 01:18:32,2016-06-15 01:28:48
IS,Exception thrown from render method suppressed in JSX expression,Hi please refer following code My question is why the exception is suppressed There is no error message thrown to console It is difficult to find the error because JSX skips the render which threw the exception or any other better approaches to capture such accident Thanks,,"jimfb,jimfb,jimfb",2016-06-14 23:59:18,2016-06-15 01:37:48
PR,Remove setProps and replaceProps from src,refs issuecomment 226028119,,"koba04,zpao,koba04",2016-06-15 01:24:50,2016-06-15 05:11:37
PR,Remove setProps and replaceProps from docs,refs issuecomment 226028119,,"koba04,zpao,koba04",2016-06-15 01:24:23,2016-06-15 05:13:26
IS,React does not repeat propType warnings for multiple renders of same named component,Bug When React renders a component with invalid props it logs a warning If the same named component is rendered again with the same invalid props there is no warning Demonstration Why it is an issue for me When I am testing my react components with jasmine karma and webpack all components end up being referred to as t I am not 100 sure why This means that when I am testing propType validation subsequent tests that have different components with the same named prop will not log warnings,,"aweary,gaearon,jimfb,jimfb,gaearon",2016-06-15 12:05:40,2016-06-15 15:52:42
IS,componentWillMount is called before render,Hi together Learning React at the moment and not sure if I'm not unterstanding a core part of React or this is a bug My idea was to create a simple login and do not show the login window if the user is already logged in Authentication is handled via Firebase so here is a small snippet of my code So my problem is the following componentWillMount should be called before render so if the user is already logged in the new state is loggedIn true and so it only renders the backend and not the login form but unfortunately this new state in componentWillMount is not taken before render and it actually renders the login form Thanks for the answer cheers Martin,,"gaearon,aweary,jimfb,jimfb",2016-06-15 14:38:14,2016-06-15 16:01:10
IS,HTML attributes order and object keys order,Do you want to request a feature or report a bug bug What is the current behavior React rendered html depends on order of keys in props for example You can see that href and class attributes are reversed This is critical when you have isomorphic application and two different renders nodejs on server and something on client What is the expected behavior Rendered html must not depend on order of keys in any objects Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 nodejs 5 11 chrome actual In some cases node5 x can change order of keys and we get a warning about checksum mismatch on client because of two different html,,jimfb,2016-06-15 14:45:08,2016-06-15 16:08:56
IS,ReactDOMServer renderToStaticMarkup should not cause 'iterator should have a unique key prop' warning,Do you want to request a feature or report a bug It is more of a bug I do not think this behaviour should occur but it is not a problem in production What is the current behavior Warning appears Warning Each child in an array or iterator should have a unique key prop Check the render method of List See for more information If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Fiddle I will paste the code here too just in case What is the expected behavior No warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Fiddle uses React 15 0 1 Tested in Chrome on Ubuntu I did not test previous versions of React but I suspect it is always been this way Notes If I'm not mistaken the HTML generated via renderToStaticMarkup cannot be updated by React because the essential DOM attributes are stripped away This means that key s should not be necessary because React will never need to match up the elements during a re render Supplying key s that will never be used just to avoid a warning is tedious Ergo warning should be suppressed when JSX is rendered via renderToStaticMarkup,,jimfb,2016-06-14 18:23:56,2016-06-15 17:25:23
PR,update style README md,this PR adds some styles to the start intro of the README md thanks smile,,jimfb,2016-06-13 08:48:52,2016-06-15 18:16:50
IS,TypeScript definitions,There are no official or blessed TypeScript definitions for React and ReactDOM and Jest There are definitions in DefinitelyTyped repo and But these type definitions are outdated and DefinitelyTyped is outdated too in favour of Typing which has some advantages over DT I want to create type definitions for Typings and create a PR to use them instead of hardcoded poor quality definitions from React repo 1 2 3 This will help to reuse type definitions for React repo L30 L57 and any React applications made by TypeScript developers My current plan is to create up to date Typings TypeScript definitions for each React ReactDOM No plans for Jest because I prefer tape So before I start Do you prefer type definitions to be official or community driven Do you have any suggestions or corrections to my plan,,"chicoxyzzy,zpao,chicoxyzzy,chicoxyzzy",2016-05-28 00:56:04,2016-06-16 01:55:41
PR,Merge pull request 1 from facebook master,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA update,,,2016-06-16 04:21:42,2016-06-16 04:22:34
PR,Warn if people mutate children,Warn if people mutate children,,"jimfb,sebmarkbage,jimfb,jimfb,sophiebits,jimfb,sebmarkbage,jimfb,jimfb,keyanzhang,jimfb,jimfb,syranide,jimfb,syranide,jimfb,sophiebits",2016-06-08 19:51:39,2016-06-16 05:22:31
PR,Add offsetX and offsetY properties to SyntheticMouseEvent,My first pull request Not sure it is acceptable Thanks,,"syranide,syranide,syranide,aweary,jimfb,jimfb,syranide,aweary,gaearon",2016-06-10 06:55:37,2016-06-16 06:10:39
IS,Cannot access this or props,Do you want to request a feature or report a bug Seems like a bug Not sure What is the current behavior Unable to access props if the function is defined outside If the current behavior is a bug please provide the steps to reproduce What is the expected behavior Expected Behavior is having access to the props Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am working with 15 1 0 though I believe this is present in older versions as well,,"syranide,jimfb,jimfb",2016-06-16 11:50:37,2016-06-16 15:22:08
IS,OnChange randomly misses keys on IE if typing very quickly,I have a simple search bar controlled text input with autocomplete When I type text very quickly I do get onKeyDown events but every now and then the corresponding onChange event goes missing For example if I type foobar the input field may end up showing foobr This happens only on IE tested with IE11 on Windows 7 and I have not seen this on any other browser Here is a fiddle showing the issue and a log Note that onKeyDown handler sees that a but not the onChange handler The fiddle includes a timer which in real code triggers an AJAX call which is somehow important for this issue if I remove the timer I cannot reproduce this issue any more The React version in the fiddle is 15 1 0 but this happens on 0 14 3 too,,"syranide,syranide,jquense,syranide,jimfb,syranide,jimfb,jquense,jimfb,syranide,jimfb,jquense,jimfb,jquense,jquense,jquense,gaearon,jquense,vjeux,syranide,jquense,jquense,jquense",2016-06-13 11:10:25,2016-06-16 15:30:07
IS,The document of test utils is out of date,In react 0 14 the following methods will return DOMElement instead of ReactComponent 1 scryRenderedDOMComponentsWithClass 2 findRenderedDOMComponentWithClass 3 scryRenderedDOMComponentsWithTag 4 findRenderedDOMComponentWithTag But the guide page of test utilities findrendereddomcomponentwithclass still says it will return ReactComponent You can check props of a ReactComponent but can not do the same thing on DOMElement so I think we would better make it up to date to avoid make people get confuse,,jimfb,2016-06-06 05:21:48,2016-06-16 15:33:18
IS,About onDoubleClick Event Bug,When I use 'onDoubleClick event I found a problem and if I do not move the mouse Double click has been found onDoubleClick Event is not triggered,,"jimfb,jimfb",2016-05-30 14:48:57,2016-06-16 15:56:46
PR,Standardise format of the three state questions,The original format follows the template 1 x if x then probably is not state 2 y if y then probably is state 3 z if z then it is not state This caused both me and a hallway tester to do a double take The proposed reformulation allows the answers to follow the same template In the same spirit it uses the same contraction pattern in the last answer it is not state it is not state This has the welcome side effect to make the lack of probably stand out more,,"jimfb,jimfb,jimfb,jimfb",2016-06-15 06:47:56,2016-06-16 17:35:19
IS,Warn when there is more than one instance of ReactPerf in the page,gaearon I normally bundle React and all its add ons in a different file from my application but when using ReactPerf I forgot of including it in the same bundle of React and ReactDOM so I noticed I was receiving an empty array from ReactPerf functions every time I was using them and that is because ReactDebugTool is different for the application and for React which means flushHistory is also different What do you think about warning the user if there are more than one instance of ReactPerf ReactDebugTool in the page,,"gaearon,gaearon",2016-06-10 04:19:27,2016-06-16 18:42:31
IS,Expose minified React with addons that includes TestUtils and Perf,Do you want to request a feature or report a bug Feature Requested feature I am currently upgrading from React 0 14 7 to 15 1 0 and have noticed that our test suite is running considerably slower In 0 14 7 it was running in about 4 minutes and with 15 it is running in about 15 minutes I created a custom version of react with addons min js that does not remove TestUtils and Perf which brought the time down to about 3 minutes My request is to expose a react with addons file that is minified but also includes TestUtils and Perf Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 1 0 yes in React 0 14 7 our test suite was not slowed down,,"gaearon,gaearon,gaearon,gaearon",2016-06-09 22:31:15,2016-06-16 18:43:42
IS,Difference in render count and instance count,I'm trying to measure the time React takes to bootstrap when I hydrate SSR on the client side so In the printExclusive results I see a difference in render count and instance count sometimes one is double of the other img width 719 alt screen shot 2016 06 05 at 10 34 10 am src Does this mean my initial renders are being wasted If so how do I detect why that is happening Also is the printed time for each count or overall,,"gaearon,jimfb,gaearon,gaearon",2016-06-05 05:07:21,2016-06-16 18:44:29
PR,Simplify ReactPropTypes js,,,"gaearon,gaearon",2016-06-16 21:59:03,2016-06-17 01:21:02
PR,Sort package json,sort the package json for more beatiful to look,,"aweary,keyanzhang",2016-06-17 02:03:36,2016-06-17 02:35:35
PR,update babel core to 5 8 34 in tutorial docs,,,"nikolas,keyanzhang,jimfb,Daniel15,zpao",2016-06-16 20:33:59,2016-06-17 03:50:14
IS,No tests found,Trying to run grunt test on version 16 0 0 alpha return no tests found image,,"aweary,aweary,zpao,cpojer,aweary,cpojer,Daniel15,Daniel15,Daniel15,zpao",2016-06-01 10:16:42,2016-06-17 06:35:10
IS,Browser unresponsive while controlled text input containing large amount of text is focused,How to reproduce 1 Go to 2 Paste a long text 10k chars is a good fit add 100k and the whole tab will freeze for a good amount of time into the text input of the TODO app An Application 3 Try to scroll while the text input is still focused Really bad scrolling performance repositioning the cursor takes a second or so until rendered In contrast pasting the same text into a non controlled component like the markdown editor right below A Component Using External Plugins doe not yield the above issue,,"syranide,jimfb,syranide,jimfb",2016-06-17 08:39:43,2016-06-17 08:47:38
IS,passing function in setState receives empty object even with no initial state,In react if you dont have initial state via getInitialState we usually have this state to be null this setState can receive function with the following signature function prevState On initial call it seems that React is initializing this to an empty Object prevState even though that is indeed still empty thus subsequent access to the state after setState returns now returns an empty object Is this an intended behavior,,"aweary,jimfb,aweary",2016-06-16 23:15:21,2016-06-17 15:13:58
PR,Specify possible need for C compiler,Closes 3744,,"zpao,jimfb,sebmarkbage,jimfb,zpao",2016-06-17 17:19:50,2016-06-17 18:34:04
PR,flow annotate accumulate accumulateInto and forEachAccumulated,Trying to start adding flow types to files in React I needed to add a script to package json in order to run flow flow bin is already a dependency I had to rewrite the implementation a bit Flow does not recognize Test Plan npm run script flow npm run script test accumulate Reviewers,,"vjeux,zpao,keyanzhang,vjeux",2016-06-16 15:27:53,2016-06-17 20:07:40
IS,Performance worsening between version 15 0 2 and 15 1 0,Hey folks I'm the maintainer of react virtualized I have recently been focused on trying to squeeze better FPS out of the components while scrolling To help with this I created a test harness that scrolls a lot and measures FPS while doing so The test harness lets me measure different versions of react virtualized and different versions of React in order to compare their performance While testing I have discovered a consistent drop in performance between React 15 0 2 and 15 1 0 15 1 0 being slower I have observed this for Chrome Safari and Firefox latest versions OS X 10 11 4 and so I wanted to share it with you Perhaps I'm doing something silly Test harness React 15 0 2 React 15 1 0 Instructions to reproduce Load the page Open the console Click anywhere on the body to start the test Wait for it to complete and it will log average FPS and total time information The test will run a minimum of 5 times potentially longer until it satisfies the confidence interval Upon completion it will print the average frame rate across the test Source code In case it is helpful here is the test code Test case Test runner,,"bvaughn,gaearon,aweary,bvaughn,gaearon,gaearon,gaearon,bvaughn",2016-06-17 22:53:40,2016-06-17 23:04:52
PR,15 dev,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-06-18 06:30:07,2016-06-18 08:23:50
PR,flow isTextInputElement,Flow does not keep track of the fact that elem exists if nodeName is truthy so I had to rewrite it a bit We do not actually need to toLowerCase as we can check against the upper case According to jresig in 2009 both input and textinput are always capitalized so this should be a safe change It also minifies into a smaller code Test Plan npm run flow Careful inspection of the code Reviewers,,"vjeux,vjeux,vjeux",2016-06-18 10:43:18,2016-06-18 10:46:07
IS,Transform JSX in the browser,Now Babel removed browser js from babel core React Getting Started documentation is using browser js of babel core 5 8 23 Do you have any plan for supporting JSX transformer for the browser Will it be deprecated Thanks,,"koba04,zpao,kittens,jimfb,zpao,zpao,jimfb,mxstbr,zpao,Daniel15,zpao,zpao,Daniel15,jimfb,zpao,zpao,gunn,Daniel15,gunn,Daniel15,Daniel15",2015-11-18 06:30:48,2016-06-19 02:41:50
IS,A proposition to refactor for Isomorphism,Hey guys just wanted to leave this here as a proposition for the project Chris,,"jimfb,keyanzhang,gaearon",2016-06-19 18:23:43,2016-06-19 19:15:08
PR,Remove injectMixin,The only callsite left was removed here commitcomment 17570210 but the code to handle it remained Test Plan tbgs and ibgs make sure there is no callsites Reviewers,,"vjeux,sophiebits,vjeux,sophiebits,sebmarkbage",2016-05-22 01:58:48,2016-06-19 19:57:27
PR,flow type KeyEscapeUtils,The only call site ensures that the value is not null L44 key is stringified inside of createElement so we are guaranteed to receive a string right now L142 Test Plan npm run flow Reviewers,,vjeux,2016-06-19 18:56:11,2016-06-19 19:58:21
IS,React and displayName property,I have the following piece of code Where did the displayName property came from and how it was assigned TestComponent I have looked everywhere and can not find it,,keyanzhang,2016-06-19 18:39:03,2016-06-19 22:42:39
PR,flow type adler32,This one is trivial Test Plan npm run flow Reviewers,,vjeux,2016-06-19 19:02:43,2016-06-20 13:35:59
IS,bug Invariant Violation when using with react addons transition group,I m working on a Rails project that uses the react rails gem We have React 15 1 0 and a pre made modal component that requires react addons transition group 15 0 1 among other things When the modal loads I get the following error Uncaught Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is render method or you have multiple copies of React loaded details When I try to close the modal I get this error Uncaught TypeError Cannot read property 'componentWillEnter' of undefined I m not having any trouble using React in other components I ve already deleted and reinstalled my node modules folder Is this a known issue Any tips I have already reviewed the following resources and attempted to debug per their suggestions to no avail topic reactjs sJaIoLSQCSQ,,"aweary,gaearon,gaearon",2016-06-16 20:07:44,2016-06-20 16:44:32
PR,Bug Fix Sample Project reloads on empty form submission,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Returning false ensures that the page does not reload when one of the input fields is empty Consequently this prevents form data from being cleared on page reload,,"jimfb,aweary,aweary,aweary,jimfb",2016-06-20 19:49:53,2016-06-20 20:16:48
IS,Sites Using React disappeared,I can not find the page Sites Using React in this repo is wiki,,"keyanzhang,keyanzhang",2016-06-20 15:00:02,2016-06-21 00:17:55
IS,Component re renders itself without checking into shouldComponentUpdate,I have a component which re renders itself without checking condition inside the shouldComponentUpdate Its a large app so cant provide any fiddle Here is the screenshot of console where arerender' is getting printed before ishouldComponentUpdate' untitled 1,,"gaearon,syranide,aweary,thymikee,keyanzhang",2016-06-20 09:20:12,2016-06-21 02:12:25
IS,Call other props' checkType in the validation function,For example we have Tag has the signature as function checkType isRequired props propName componentName location propFullName but whatever I pass to it as arguments it always returns null Am I doing something wrong here or is it impossible to check the type this way Thanks,,keyanzhang,2016-06-18 20:50:38,2016-06-21 10:25:29
IS,keyboard events not delivered on divs,Hi While normal DOM allows to catch keyboard events on any focused element and for example to make a lt DIV gt focusable you just need to set 'tabIndex' on it React is synthetic event system does not deliver keyboard events on such elements Can this be fixed,,,2016-06-21 12:18:46,2016-06-21 12:31:35
PR,cleanup Move ReactStateSetters inside of addons link,The only callsite of ReactStateSetters is in LinkedStateMixin which lives in addons link Better move it there to avoid cluttering the other folder Test Plan None Reviewers,,"vjeux,jimfb,sophiebits",2016-06-20 14:12:36,2016-06-21 14:09:09
IS,Composition type compoent,I write this BaseInput output some code from draft js problem here when you click set another value button the input did not change And I know I should not use defaultValue in BaseInput component But if not the compostion type does not work correct And I browser document again really do not know how to do it Have any idea BaseInput output Update change defaultValue to value You can see effect here demo video,,"aweary,zpao,keyanzhang",2016-06-20 15:19:58,2016-06-21 18:55:31
IS,wrap state and props with getter and setter,In development if the state or props accidentally get directly manipulated a warning will pop up Though this is a pretty dumb mistake it does happen occasionally Some tools like flow can detect this but not every uses them,,jimfb,2016-06-21 17:30:10,2016-06-21 19:56:59
PR,docs Update share button,,,zpao,2016-06-21 23:17:38,2016-06-21 23:21:10
PR,fix webcomponent example issue 7056,fixes issue 7056,,"jimfb,jimfb",2016-06-16 19:08:33,2016-06-22 17:30:04
IS,dist react dom js cannot get React SECRET DOM DO NOT USE OR YOU WILL BE FIRED,In version 15 1 0 npm installed react dom has dist react dom file which imports React DOM related stuff from React However require areact' does not have React SECRET DOM DO NOT USE OR YOU WILL BE FIRED property since react does not export it As a result we cannot use dist react dom and it is totally useless,,"keyanzhang,keyanzhang,keyanzhang,syranide,keyanzhang,gaearon,syranide,gaearon,zpao,zpao",2016-06-21 02:03:20,2016-06-22 19:17:57
PR,webcomponents should use attachedCallback instead of createdCallback,I think createdCallback worked with the webcomponents polyfill but not with the actual browser Or maybe the spec behavior changed in some subtle way Anyway attachedCallback seems to work in Chrome but createdCallback does not work anymore so we should update the docs,,"jimfb,jimfb",2016-06-22 18:38:11,2016-06-22 19:42:50
PR,Resolve refs in the order of the children,React makes no guarantees about ref resolution order Unfortunately some of the internal Facebook component APIs specifically layer dialogs currently depend on the ref resolution order Specifically the assumption is that if the layer dialog is placed as a last child by the time it mounts or updates the refs to any previously declared elements have been resolved With the current ReactMultiChild this is usually the case but not always Both initial mount and an update of all components satisfy this assumption by the time a child mounts or updates the previous children s refs have been resolved The one scenario where it isn t true is when a new child is mounted or replaced during an update In this case the mountComponent call used to be delayed until ReactMultiChild processes the queue Therefore for newly mounted components attachRef gets enqueued too late and previously existing children resolve their refs first even when they appear after newly mounted components This subtly breaks the assumption made by our dialog layer APIs Demo fiddle img width 195 alt screen shot 2016 06 22 at 17 10 32 src This PR changes the mountComponent to be performed inside ReactChildReconciler updateChildren just like receiveComponent and unmountComponent This ensures that attachRef calls are enqueued in the order the children were processed so by the time the next child flushes the refs of the previous children have been resolved img width 175 alt screen shot 2016 06 22 at 17 10 52 src This is not ideal and will probably be broken by incremental reconciler in the future However since we are trying to get rid of mixins in the internal codebase and layered components are one of the biggest blockers to that it s lesser evil to temporarily make ref resolution order more strict until we have time to fix up the layer APIs to not rely on it and are able to relax it again which would be a breaking change Reviewers Is this a breaking change Personally I don t think so because ref resolution order is indeterministic in fact that s the issue I m trying to fix here We used to resolve refs in a specific order in almost all cases except mounting So I think it s hard to even accidentally rely on the existing behavior However in theory I can imagine something breaking in a ref heavy code So I m torn,,"gaearon,gaearon,gaearon,sebmarkbage,gaearon,gaearon",2016-06-22 16:13:13,2016-06-22 21:28:06
PR,Add autoFocus to list of whitelisted dom element props,Add autoFocus to list of whitelisted dom element props,,"jimfb,jimfb,sophiebits,syranide,jimfb,sophiebits,syranide",2016-06-22 01:00:03,2016-06-22 21:30:16
IS,Remove HAS SIDE EFFECTS logic,This is the followup we need to do after 6406 to remove dead code,,"zpao,syranide,jimfb,syranide",2016-06-06 20:49:42,2016-06-22 23:12:32
PR,Remove dead HAS SIDE EFFECTS logic,Remove dead HAS SIDE EFFECTS logic Fixes 6979,,"jimfb,jimfb,jimfb,zpao",2016-06-07 17:30:11,2016-06-22 23:12:32
PR,flow type deprecated,Test Plan npm run flow Reviewers,,"vjeux,gabelevi",2016-06-19 18:13:49,2016-06-23 15:46:24
PR,flow add some typings to utils,,,"chicoxyzzy,vjeux,vjeux,vjeux,vjeux,chicoxyzzy,vjeux,vjeux,chicoxyzzy,vjeux,chicoxyzzy,keyanzhang,keyanzhang,vjeux,chicoxyzzy,keyanzhang,chicoxyzzy,chicoxyzzy,vjeux",2016-06-23 01:08:18,2016-06-23 16:16:37
IS,Documentation for this state mutation seems contradictory,In the documentation for the component API it says NEVER mutate this state directly as calling setState afterwards may replace the mutation you made Treat this state as if it were immutable However the documentation for ES6 Classes es6 classes says The API is similar to React createClass with the exception of getInitialState Instead of providing a separate getInitialState method you can mutate this state in the constructor Perhaps it would be possible to make this exception to this state mutation more clear,,"aweary,zpao,aweary",2016-06-23 17:28:42,2016-06-23 19:44:36
PR,Clarify purpose of state property in ES6 classes,Resolves 7108 how does this look I figured clarifying that the this state assignment was just like the return value of getInitialState would be sufficient since no one assumes getInitialState is mutative,,"aweary,zpao",2016-06-23 18:35:10,2016-06-23 19:44:36
IS,TextField type eq number is bug,TextField type number I input any String type eg eee It is accepted is React 15 1 0 windows 10 chrome 51,,keyanzhang,2016-06-23 09:39:45,2016-06-23 21:25:46
IS,Bug Safari Messages Copying text puts comment tags in clipboard,This is reproducible in OSX Safari Mac Messages app using React 15 1 0 Run the example fiddle in Safari Copy Hello World by triple clicking on the text Paste the text in Messenger app It will paste Hello react text react text 3 World in the chat window Pasting the same clipboard content elsewhere outputs Hello World this bug report composer for example,,"jimfb,jimfb,zpao,zpao,zpao",2016-06-23 12:39:58,2016-06-23 22:16:41
IS,ES 6 Target,We are targeting ES 6 compliant modern browsers such as latest version of Chrome Safari 10 etc and would like to leverage this to reduce the size of React build using the latest version of React Is this already something that is possible if so how Are there other options to reduce the size of React such as setting node environment variable to production,,"keyanzhang,gaearon",2016-06-24 01:38:55,2016-06-24 01:51:48
PR,flow selfDebugID makes sense only in dev mode,See discussion r68317347 and discussion r68317421,,"chicoxyzzy,chicoxyzzy",2016-06-24 03:46:49,2016-06-24 03:58:26
PR,test,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-06-24 17:57:12,2016-06-24 18:06:21
IS,react,,,,2016-06-24 22:40:37,2016-06-24 22:40:45
IS,this props and NextProps the same after parent state changes,I am changing the parent state of a component from a nested child after passing a callback method down through props This is working as expected as the state is being changed and my components are updating properly However while optimizing my rendering I noticed that for this particular prop settings it ends up being the newest prop in both componentWillReceiveProps and shouldComponentUpdate So on my parent component I have a setting object like so All behavior works as expected except for the incoming props and old props being the same,,aweary,2016-06-25 20:33:09,2016-06-25 22:30:55
IS,DefaultProps for React Stateless function,Pls help resolve the error in stateless function This works if I provide hello Hello name World Returns error TypeError Cannot read property 'name' of undefined I tried this based on the following in the documentation This simplified component API is intended for components that are pure functions of their props These components must not retain internal state do not have backing instances and do not have the component lifecycle methods They are pure functional transforms of their input with zero boilerplate However you may still specify propTypes and defaultProps by setting them as properties on the function just as you would set them on an ES6 class,,"aweary,keyanzhang,chicoxyzzy,keyanzhang,chicoxyzzy,chicoxyzzy,keyanzhang,chicoxyzzy,chicoxyzzy,keyanzhang",2016-06-26 03:30:03,2016-06-26 04:16:11
IS,refs is undefined,React 15 1 0 Im getting undefined in console What could be the possibilities I'm also using react rails,,keyanzhang,2016-06-26 08:38:35,2016-06-26 08:56:40
PR,Added elementOf checker to ReactPropTypes,In short this PR aims to provide support for Single Child of a given type From the official ReactJS docs page single child we can use React PropTypes element to validate a single child With React PropTypes element you can specify that only a single child can be passed to a component as children I tried to find something that would validate the type of the given element but it seems that it is not possible as of today With this PR you can do,,"alansouzati,aweary,alansouzati,alansouzati,gaearon,alansouzati,gaearon,alansouzati,gaearon",2016-06-24 21:53:41,2016-06-26 18:35:50
IS,ReactCSSTransitionGroup add transition lifecycle hooks,I'm using ReactCSSTransitionGroup to implement a simple nested expand collapse UI Since I'm animating element height and you can not animate to an auto value in CSS I need to get the auto height from the DOM and set it as an explicit height Then because of the nesting when a child expands or collapses I need to communicate this height change to the child is ancestors I'm also using the iScroll library to implement scrolling and when any height transition completes I need to refresh the iScroll component This is easy to implement with CSS transitions and ReactCSSTransitionGroup but it does require that ReactCSSTransitionGroup notify its child component when transitions begin and end much the way the low level ReactTransitionGroup calls lifecycle hooks on its child I propose that ReactCSSTransitionGroup call the following functions on its child component where animationType is 'appear' 'enter' or 'leave' componentWillTransition is called just before the first CSS transition class e g 'example enter' or 'example leave' is added to the element and componentDidTransition is called just after both CSS transition classes are removed from the element I have implemented this with a few simple code changes to ReactCSSTransitionGroupChild js Please see pull request 5915 Feedback is welcome,,"gaearon,gaearon,gaearon,gaearon",2016-01-25 14:56:33,2016-06-26 18:55:32
IS,Add more detail to missing key warning,I have a component in which I must be using an array and not setting keys because I get this warning,,"troydemonbreun,troydemonbreun,troydemonbreun,gaearon",2016-03-02 00:46:11,2016-06-26 20:12:40
PR,Fix 6153 Warning for PropTypes with the wrong case,Re based code from 6255 The warning outputting twice issue in that PR has since been fixed in react itself The cache that he added has been removed as it would hit a lot of false positives multiple components using the same proptypes,,"wali-s,aweary,wali-s,gaearon,gaearon",2016-06-01 08:59:40,2016-06-26 22:06:49
PR,Fix tests from 6158 to use Jasmine 2,When merging I didn t notice it uses old test format Fixing these to unbreak master,,"gaearon,zpao",2016-06-27 00:38:11,2016-06-27 00:38:45
IS,shallow rendering propTypes validation,We are working towards 0 warnings for our React components tests and I thought just using shallow would allow us to stop mocking passing tons of useless props for propTypes validation But the first level of component even though it is not really rendered propTypes validation still occurs is that normal,,"keyanzhang,keyanzhang,graue",2016-06-24 16:31:20,2016-06-27 01:08:24
PR,6599 context does not update using unstable renderSubtreeIntoContainer,This PR contains a failing test case for issue 6599 unstable renderSubtreeIntoContainer does not update the context when updating an already mounted component For reference a minimal fiddle illustrating the issue,,gaearon,2016-05-30 18:18:09,2016-06-27 01:27:01
PR,Update 03 interactivity and dynamic uis ru RU md,replace next page entry,,"dotu,alexzherdev,gaearon",2016-06-27 12:51:45,2016-06-27 13:33:02
PR,Call componentDidLeave after setState in ReactTransitionGroup,If the developer uses the componentDidLeave hook to call setState and remove the react transition group component then the setState in handleDoneLeaving in ReactTransitionGroup js will generate the warning Warning setState Can only update a mounted or mounting component To fix that we just need to place componentDidLeave call after the setState in handleDoneLeaving so any setState called by the user will be placed in the queue after the setState in handleDoneLeaving or use isMounted,,"aweary,aweary,aweary,aweary,aweary,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon",2016-06-20 10:47:16,2016-06-27 15:10:20
IS,jest react django rest test implementation,Rookie question I have the code below for which I would like to create a test case class APIInstanceView extends React Component I get a ReferenceError DJANGOURL rest apis instance api is not defined How and where should I define the DJANGOURL rest apis instance api Thanks,,keyanzhang,2016-06-27 14:05:33,2016-06-27 16:12:23
PR,Remove tick and flush pending styles in ReactCSSTransitionGroup,I believe the tick variable in ReactCSSTransitionGroupChild is there because it is approximately the period of a 60hz frequency The process to apply a transition using ReactCSSTransition is a Add the base css class b Wait for 17ms c Add the active class If the frame rate is slow less than 60hz the tick of 17ms will not work because the browsers will discard the style changes in a and just apply c Browsers batch the styles as an optimisation so maybe there are other cases where the timeout will not work To fix that we can force the browser to flush the pending styles calling a property that needs the styles to be computed or calling getComputedStyle someProperty This actually removes the need for the tick timeout Doing that we also remove the need for this queueClass approach To be honest maybe even with the current approach there will never be more than one element in this queue because the next phase appear enter leave will just be activated once the callback passed to componentWillAppear Enter Leave is called So if you think that this solution is plausible I can continue and remove the queue Obs As pointed in 6495 we would be able to solve the same problem using requestAnimationFrame because then the browser know that needs to compute the styles before the next repaint but then we would still need to keep track of the frame id to cancel it when the component is unmounting Flushing the styles manually can simplify the code,,gaearon,2016-06-20 07:08:43,2016-06-27 17:37:53
PR,Make unexpected batch number a warning,This was added to catch internal errors in React but does not seem to be doing much good except frustrating people more when their apps throw 6895 FB internal t11950821 Until more proper error boundaries land let is make this a warning,,"sophiebits,jimfb,sophiebits",2016-06-27 20:09:28,2016-06-27 20:39:23
IS,context does not update using unstable renderSubtreeIntoContainer,I use ReactDOM unstable renderSubtreeIntoContainer to render a portal The context of root component will be updated and passed to children if this props highlightColor is changed This is right I can access the correct context in the ModalPortal component in the first render And after that the context passed to ModalPortal does not change any more when the context of root component changed But I can access the correct context in the Modal every render what is wrong with my code,,"gaearon,gaearon",2016-04-24 10:45:32,2016-06-27 22:29:43
PR,Fix renderSubtreeIntoContainer to update context,This includes a failing test case from 6924 should now be passing and should fix 6599 Reviewers,,"gaearon,gaearon,sophiebits,sophiebits,sophiebits",2016-06-27 00:14:50,2016-06-27 22:29:43
PR,Reword invariant message about empty tags fixes 7065,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-06-17 21:35:54,2016-06-27 22:30:09
IS,Invariant violation error message improvement,Do you want to request a feature or report a bug Error message bug What is the current behavior Uncaught Invariant Violation img is a void element tag and must not have children or use props dangerouslySetInnerHTML Check the render method of Component Name provide the steps to reproduce and if possible a minimal demo of the problem via or similar template found in Chrome but should be universal,,"jimfb,zpao",2016-06-17 21:15:13,2016-06-27 22:30:16
PR,Docs Explain usage of ES6 static get to define propTypes and defaultProps,I prefer using static get declarations inside a class to define propTypes and defaultProps Other developers using ES6 may also prefer this style,,"chicoxyzzy,chicoxyzzy,aweary,chicoxyzzy,aweary,gaearon,gaearon",2016-06-27 21:10:52,2016-06-28 01:00:51
IS,Global event handlers on document body or other containing element run BEFORE react event handlers,I have discovered that if I add global event handler with document body addEventListener 'click' in a component I cannot stop it with ev stopPropagation inside React event handler because global native event handler runs BEFORE the react one I'm able to stop it only if I set it with window addEventListener I think it is a bad behaviour Is React setting all synthentic events on window instead of specific DOM elements Can it be fixed,,gaearon,2016-06-21 11:26:14,2016-06-28 02:29:03
IS,Refs object is not extensible,I wanted to drop my string based refs bindings and replace them with callback based ones however when I tried to replace ref email with ref ref this refs email ref I received an error TypeError Ca not add property email object is not extensible I did not find any informations about this in docs but I found other issue in which did what I tried to do ref c this refs 'wrapper' c and I assume that back in 22 Sep 2015 it worked now it does not Did something change and refs object became nonextensible Is assigning refs manually through callbacks to this refs considered a bad practice now,,"syranide,gaearon",2016-06-28 08:34:32,2016-06-28 10:00:31
PR,Remove unnecessary check,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA This seems faster because you are not assigning a variable then doing a check then possibly assigning another variable You are just assigning one variable,,"zwhitchcox,zwhitchcox",2016-06-28 20:53:00,2016-06-28 21:24:31
PR,Remove unnecessary check,This seems faster because you are not assigning a variable then doing a check then possibly assigning another variable You are just assigning one variable,,"zwhitchcox,zpao,zwhitchcox,jimfb,jimfb,sebmarkbage,zwhitchcox,zwhitchcox",2016-06-28 21:23:59,2016-06-29 00:15:22
IS,Validate proptype definitions sooner,Right now we validate some of our proptype definitions but we do not surface the issue until that component class is consumed We should instead validate these in DEV only as warnings when the class in created This means that a call to React PropTypes onOf 'foo' results in an immediate warning logged This is a relatively contained bit of code so would be a good candidate for somebody looking to start contributing to React,,"zpao,antoaravinth,zpao,antoaravinth,jimfb,troydemonbreun,troydemonbreun,gaearon,troydemonbreun,gaearon",2015-11-14 03:56:04,2016-06-29 00:31:23
PR,String fromCodePoint 183,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Updated to a more recent and reliable function Not necessary but should improve JS coding style,,"aweary,gaearon",2016-06-28 16:03:24,2016-06-29 00:33:04
PR,docs english fixed 404s in the tips md files,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,zpao,2016-06-29 06:21:10,2016-06-29 06:38:32
PR,optimize update function efficiency,Similar to 7141,,zwhitchcox,2016-06-29 17:25:05,2016-06-29 18:36:50
IS,Allow indirect children in ReactTransitionGroup,ReactTransitionGroup calls transition related lifecycle hooks like componentWillLeave on its direct children This is inconvenient when a child component is wrapped by a third party decorator such as connect or injectIntl because the decorators may return their own components the outermost of which will be the direct child of ReactTransitionGroup and receive the lifecycle calls Would it be possible to let descendants register themselves in their constructors for instance to receive these calls This would save app developers the hassle of writing a wrapper component that sits between ReactTransitionGroup and the animated child just to intercept the hooks and pass them on in the presence of intermediate wrapper components,,gaearon,2016-06-29 17:09:56,2016-06-29 19:34:01
PR,utilize unshift function,It seems simpler to use unshift rather than pushing all the elements and then reversing the array and probably faster,,"zwhitchcox,aweary,zwhitchcox",2016-06-29 20:19:59,2016-06-29 20:46:33
IS,Quick removal and addition of animated CSS class results in no animation,I am trying to call setState flash false followed by setState flash 'up' which should remove the flash class from the DOM element and add it again therefore triggering the css animation defined on that class it only works the first time This is not working as expected unless I introduce some timeouts The first time the class is added the animation is triggered But subsequent calls to componentWillReceiveProps fail to trigger the animation I'm not sure if this is an issue with the way React updates the DOM or an inherent limitation of CSS animations I know React has some specialised utilities for animations but I would rather keep the code below if there is any way to fix it Stat js,,"gaearon,aweary,gaearon,gaearon,jquense,jquense",2016-06-29 00:22:30,2016-06-29 21:08:13
IS,Bug Data Attributes not supported on Script element,Currently if I do the following then the resulting script element does not have the custom data attribute This is problematic because many libraries use this to add data on load eg api keys etc Data attributes appear to be supported on other elements are they being specifically stripped for Scripts If so why,,"jimfb,gaearon",2016-06-30 00:11:51,2016-06-30 00:31:03
IS,css minus positioning with z index not working inside a component,Ok so I got an img that is inside a component and I want to position it between two component so that where one component end and a new begins should be in the middle of the img I can position the img but the component that does not hold the img is positioned on top of the img and z index does not work to bring the img to front Any idea what I can do Many thanx AAR,,zpao,2016-06-30 10:04:17,2016-06-30 16:44:12
IS,Setting autoFocus on an input warns,Do you want to request a feature or report a bug Bug What is the current behavior Warns when autoFocus is set Steps to reproduce 1 Render an input with the autoFocus prop set 2 See that it spit out a warning Demo What is the expected behavior Setting autoFocus should not warn when set on a input Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am seeing this warning in the 15 2 0 rc It did not warn in 15 1 0,,zpao,2016-06-30 17:18:35,2016-06-30 17:48:05
PR,Fiber Host Container Fiber and Priority Levels,Basically I'm working on the top level nodes I use a fiber for that That is nice because it allow us to nest them inside the tree for things like portals It also allows me to reuse the child reconciliation for the top level The current thing wo not quite work because there needs to be two fibers even at the top level Work in progress I might just to another mutable top level node that is not a fiber It also has a priority feature which searches the current tree not the work in progress since that no long exists after a flush for the highest priority work to do next This is a key component of this architecture The priority flag represents the highest priority in the subtree Pending state updates will have priority associated with themselves on the fiber itself There is currently no priority associated with the pending props themselves which means that they get the same priority as anything deep in the tree Pending props is kind of an edge case I think that the only time that happens is if you have a high priority update which leads to update a lower priority tree so that the update in that tree gets deprioritized But I'm not completely sure how this will work yet Maybe they should only ever exists on the work in progress nodes When a new change comes in we reset and rescan the tree That change could have been a higher priority or higher earlier in the tree than what we are currently working on We can probably avoid this reset rescan for new changes which has lower priority Currently this reset throws out the work already done to the tree so we will need to start look at the alternate tree to see if there was already any work done there that we can reuse We can use pending props for that,,"sebmarkbage,sophiebits,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits",2016-06-14 01:10:26,2016-06-30 21:28:05
PR,group warnings for unknown DOM properties,7152 May need to refactor but I think this is the idea,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-06-30 04:08:49,2016-06-30 23:13:32
IS,Group warnings for unknown DOM properties,I just ran React Bootstrap doc page on master and saw a ton of warnings from 6800 jun 30 2016 01 55 That page is really long so maybe it s an edge case but at the very least I think we should group props from the same element into a single warning For example these warnings could become one img width 993 alt screen shot 2016 06 30 at 01 53 11 src,,"gaearon,gaearon,gaearon,gaearon,gaearon,akre54,gaearon,akre54,zpao",2016-06-30 01:03:13,2016-06-30 23:14:28
PR,Fiber Host Side Effects,This adds a linked list of side effects and calls the host environment with those side effects after a tree has fully reconciled Also a rudimentary DOM renderer Review individual commits,,"sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sophiebits",2016-06-30 07:46:41,2016-06-30 23:35:38
IS,E MessageQueue JNI java lang OutOfMemoryError,ListView JNI has leak issue 07 01 09 32 48 427 27066 27066 com qianmi I dalvikvm heap Forcing collection of SoftReferences for 2048 byte allocation 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm heap Clamp target GC heap from 65 051MB to 64 000MB 07 01 09 32 48 567 27066 27066 com qianmi D dalvikvm GC BEFORE OOM freed 31K 2 free 64488K 65543K paused 141ms total 141ms 07 01 09 32 48 567 27066 27066 com qianmi E dalvikvm heap Out of memory on a 2048 byte allocation 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm main prio 5 tid 1 RUNNABLE 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm group main sCount 0 dsCount 0 obj 0xa63054b0 self 0xb9439510 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm sysTid 27066 nice 0 sched 0 0 cgrp fopen error 2 handle 1216474048 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm schedstat 97098912821 28759895218 664778 utm 7827 stm 1882 core 0 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at android util SparseIntArray put SparseIntArray java 123 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react uimanager events TouchEventCoalescingKeyHelper addCoalescingKey TouchEventCoalescingKeyHelper java 55 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react uimanager events TouchEvent init TouchEvent java 73 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react uimanager events TouchEvent obtain TouchEvent java 45 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react uimanager JSTouchDispatcher handleTouchEvent JSTouchDispatcher java 78 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react ReactRootView dispatchJSTouchEvent ReactRootView java 152 07 01 09 32 48 567 27066 27066 com qianmi I dalvikvm at com facebook react ReactRootView onInterceptTouchEvent ReactRootView java 128 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTouchEvent ViewGroup java 1822 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTransformedTouchEvent ViewGroup java 2176 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTouchEvent ViewGroup java 1877 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTransformedTouchEvent ViewGroup java 2176 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTouchEvent ViewGroup java 1877 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTransformedTouchEvent ViewGroup java 2176 07 01 09 32 48 571 27066 27066 com qianmi I dalvikvm at android view ViewGroup dispatchTouchEvent ViewGroup java 1877 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at com android internal policy impl PhoneWindow DecorView superDispatchTouchEvent PhoneWindow java 1925 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at com android internal policy impl PhoneWindow superDispatchTouchEvent PhoneWindow java 1379 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android app Activity dispatchTouchEvent Activity java 2396 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at com android internal policy impl PhoneWindow DecorView dispatchTouchEvent PhoneWindow java 1873 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view View dispatchPointerEvent View java 7307 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view ViewRootImpl deliverPointerEvent ViewRootImpl java 3172 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view ViewRootImpl deliverInputEvent ViewRootImpl java 3117 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view ViewRootImpl doProcessInputEvents ViewRootImpl java 4153 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view ViewRootImpl enqueueInputEvent ViewRootImpl java 4132 07 01 09 32 48 575 27066 27066 com qianmi I dalvikvm at android view ViewRootImpl WindowInputEventReceiver onInputEvent ViewRootImpl java 4224 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at android view InputEventReceiver dispatchInputEvent InputEventReceiver java 171 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at android os MessageQueue nativePollOnce Native Method 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at android os MessageQueue next MessageQueue java 125 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at android os Looper loop Looper java 124 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at android app ActivityThread main ActivityThread java 4745 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at java lang reflect Method invokeNative Native Method 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at java lang reflect Method invoke Method java 511 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at com android internal os ZygoteInit MethodAndArgsCaller run ZygoteInit java 786 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at com android internal os ZygoteInit main ZygoteInit java 553 07 01 09 32 48 579 27066 27066 com qianmi I dalvikvm at dalvik system NativeStart main Native Method 07 01 09 32 48 579 27066 27066 com qianmi E InputEventReceiver Exception dispatching input event 07 01 09 32 48 579 27066 27066 com qianmi E MessageQueue JNI Exception in MessageQueue callback handleReceiveCallback 07 01 09 32 48 735 27066 27066 com qianmi I dalvikvm heap Clamp target GC heap from 65 063MB to 64 000MB 07 01 09 32 48 735 27066 27066 com qianmi D dalvikvm GC FOR ALLOC freed 5K 2 free 64500K 65543K paused 155ms total 155ms 07 01 09 32 48 735 27066 27066 com qianmi I dalvikvm heap Forcing collection of SoftReferences for 1464 byte allocation 07 01 09 32 48 883 27066 27066 com qianmi I dalvikvm heap Clamp target GC heap from 65 063MB to 64 000MB 07 01 09 32 48 883 27066 27066 com qianmi D dalvikvm GC BEFORE OOM freed 0K 2 free 64500K 65543K paused 150ms total 150ms 07 01 09 32 48 883 27066 27066 com qianmi E dalvikvm heap Out of memory on a 1464 byte allocation 07 01 09 32 48 883 27066 27066 com qianmi I dalvikvm main prio 5 tid 1 RUNNABLE 07 01 09 32 48 883 27066 27066 com qianmi I dalvikvm group main sCount 0 dsCount 0 obj 0xa63054b0 self 0xb9439510 07 01 09 32 48 883 27066 27066 com qianmi I dalvikvm sysTid 27066 nice 0 sched 0 0 cgrp fopen error 2 handle 1216474048 07 01 09 32 48 883 27066 27066 com qianmi I dalvikvm schedstat 97386148088 28787572885 664905 utm 7858 stm 1882 core 0 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang AbstractStringBuilder enlargeBuffer AbstractStringBuilder java 94 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang AbstractStringBuilder append0 AbstractStringBuilder java 124 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang StringBuffer append StringBuffer java 278 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io StringWriter write StringWriter java 123 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter doWrite PrintWriter java 623 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 601 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 579 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 660 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 722 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 691 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 31 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang Throwable printStackTrace Throwable java 329 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang Throwable printStackTrace Throwable java 305 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at android os MessageQueue nativePollOnce Native Method 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at android os MessageQueue next MessageQueue java 125 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at android os Looper loop Looper java 124 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at android app ActivityThread main ActivityThread java 4745 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang reflect Method invokeNative Native Method 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at java lang reflect Method invoke Method java 511 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at com android internal os ZygoteInit MethodAndArgsCaller run ZygoteInit java 786 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at com android internal os ZygoteInit main ZygoteInit java 553 07 01 09 32 48 887 27066 27066 com qianmi I dalvikvm at dalvik system NativeStart main Native Method 07 01 09 32 48 887 27066 27066 com qianmi E MessageQueue JNI java lang OutOfMemoryError 07 01 09 32 48 887 27066 27066 com qianmi D AndroidRuntime Shutting down VM 07 01 09 32 48 887 27066 27066 com qianmi W dalvikvm threadid 1 thread exiting with uncaught exception group 0xa6304288 07 01 09 32 49 035 27066 27066 com qianmi I dalvikvm heap Clamp target GC heap from 65 064MB to 64 000MB 07 01 09 32 49 035 27066 27066 com qianmi D dalvikvm GC FOR ALLOC freed 7K 2 free 64500K 65543K paused 140ms total 140ms 07 01 09 32 49 035 27066 27066 com qianmi I dalvikvm heap Forcing collection of SoftReferences for 1464 byte allocation 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm heap Clamp target GC heap from 65 064MB to 64 000MB 07 01 09 32 49 183 27066 27066 com qianmi D dalvikvm GC BEFORE OOM freed 1K 2 free 64500K 65543K paused 149ms total 149ms 07 01 09 32 49 183 27066 27066 com qianmi E dalvikvm heap Out of memory on a 1464 byte allocation 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm main prio 5 tid 1 RUNNABLE 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm group main sCount 0 dsCount 0 obj 0xa63054b0 self 0xb9439510 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm sysTid 27066 nice 0 sched 0 0 cgrp fopen error 2 handle 1216474048 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm schedstat 97671320880 28795985813 664987 utm 7888 stm 1882 core 0 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java lang AbstractStringBuilder enlargeBuffer AbstractStringBuilder java 94 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java lang AbstractStringBuilder append0 AbstractStringBuilder java 124 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java lang StringBuffer append StringBuffer java 278 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io StringWriter write StringWriter java 123 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter doWrite PrintWriter java 623 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 601 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 579 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter write PrintWriter java 660 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 722 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 691 07 01 09 32 49 183 27066 27066 com qianmi I dalvikvm at java io PrintWriter append PrintWriter java 31 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at java lang Throwable printStackTrace Throwable java 329 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at java lang Throwable printStackTrace Throwable java 305 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at com umeng analytics b a DataHelper java 156 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at com umeng analytics d a InternalAgent java 303 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at u aly af a CrashHandler java 43 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at u aly af uncaughtException CrashHandler java 34 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at java lang ThreadGroup uncaughtException ThreadGroup java 693 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at java lang ThreadGroup uncaughtException ThreadGroup java 690 07 01 09 32 49 187 27066 27066 com qianmi I dalvikvm at dalvik system NativeStart main Native Method 07 01 09 32 54 183 27066 27071 com qianmi I dalvikvm threadid 3 reacting to signal 3 07 01 09 32 54 215 27066 27071 com qianmi I dalvikvm Wrote stack traces to ' data anr traces txt',,,2016-07-01 09:48:00,2016-07-01 09:48:49
IS,Option Labels,Bug Clicking on the label associated with a radio button does not trigger onChange react 15 0 2 Chrome Version 51 0 2704 103 64 bit,,alexzherdev,2016-06-30 23:14:29,2016-07-01 16:43:47
IS,Potential Issue with How Components are Imported,So consider the following Everything works Now unless I am not understanding at a fundamental level export and module exports are essentially the same so why does react recognize the latter but not the first Is this a me thing or a you thing,,"alexzherdev,zpao,gaearon",2016-07-01 17:39:33,2016-07-01 18:19:20
IS,Ship v15 2 0,The next release of React will be v15 2 0 We shipped an RC to npm last week React Native v0 29 went to RC this week using our RC but we should ship final before they do so RN is only using final versions I think we have another week before their branch cut but ideally we get out sooner We have not heard of any issues so we are going to assume that this is in good shape I'm planning to ship React 15 2 0 on Monday June 27 cc not sure who is running RN release this time around but feel free to cc them Todo x Pull in other PRs 7098 7153 x write changelog zpao x actually ship zpao keyanzhang blog post about error codes keyanzhang,,"zpao,zpao,gaearon,zpao,SimenB",2016-06-24 21:17:10,2016-07-01 19:14:43
IS,fix webcomponents example,The ReactComponent WebComponent ReactComponent interop example is currently partially broken In Chrome 51 x the custom element is createdCallback To get this to work the createdCallback function can be moved to an attachedCallback Pull request coming soon,,zpao,2016-06-16 19:03:16,2016-07-01 21:57:29
PR,Unshare not actually shared files,This moves some files out of shared that are not actually shared with isomorphic They are specific to the renderers Some of these could be thought of as generic but are probably bad practice anyway such as forEachAccumulated,,"sebmarkbage,sophiebits,sebmarkbage,sophiebits,sebmarkbage",2016-07-02 01:23:36,2016-07-02 02:16:52
IS,run function automatically,hi guys i have a component by which i proceeded to find in the page but after render component inner function is called where is wrong tip i want search by press enter key,,mxstbr,2016-07-02 09:16:39,2016-07-02 10:06:35
PR,Add PropTypes symbol to reusable components doc,React PropTypes symbol was added in 15 2 0,,STRML,2016-07-02 12:57:42,2016-07-02 19:54:47
PR,WIP Gulp conversion,Starting work on converting the build process tooling from Grunt to Gulp which would resolve 4927 and is relevant to 6656 Progress x gulp lint x gulp flow x gulp version check gulp build x gulp build react dom gulp release I think we should keep the tasks in separate files as I think this makes things more manageable than one giant gulpfile Regardless it would be trival to combine them back into one file if desired Would you like to do the conversion in one fell swoop Or would it be better to merge smaller PRs to slowly convert to Gulp,,"maxdeviant,sebmarkbage,maxdeviant,maxdeviant",2016-07-02 16:01:52,2016-07-02 20:03:58
PR,Removed transitionAppearTimeout to remove warning,Removed the prop transitionAppearTimeout from addons transitions ReactTransitionGroup in order to remove a warning when passing unknown props to DOM elements,,"gaearon,gaearon,gaearon",2016-07-01 20:12:26,2016-07-02 22:25:12
IS,setState Cannot update during an existing state transition,hi guys i have a component by which count character word a div now when component will be render i got a lot duplicate warning in chrome console tool Warning setState Cannot update during an existing state transition what can i do for fix this problem finally i want return states thanks,,maxdeviant,2016-07-02 23:55:15,2016-07-03 00:06:57
IS,Getting a warning using ReactCSSTransitionGroup in react v15 2 0,Bug What is the current behavior When using ReactCSSTransitionGroup in react v15 2 0 it warns me about an unknown prop passed to the DOM element created by this component span Demo What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React V 15 0 2 OS tested on OSX El capitan It worked on previous versions,,"gaearon,gaearon,gaearon",2016-07-01 19:44:09,2016-07-03 22:12:57
IS,Error in production but not in devlopment,I have no idea about this error only occured in production version Is there anything wrong Many thanks Here are some of the information image Uncaught Invariant Violation Minified React error 119 visit for the full message or use the non minified dev environment for full errors and additional helpful warnings reactProdInvariant app fbd84ee js 245 addComponentAsRefTo app fbd84ee js 56072 attachRef app fbd84ee js 56292 ReactRef attachRefs app fbd84ee js 56311 attachRefs app fbd84ee js 5030 notifyAll app fbd84ee js 18972 close app fbd84ee js 56181 closeAll app fbd84ee js 8395 perform app fbd84ee js 8342 batchedMountComponentIntoNode app fbd84ee js 21215 batchedUpdates app fbd84ee js 55156 batchedUpdates app fbd84ee js 2137 renderNewRootComponent app fbd84ee js 21384 renderSubtreeIntoContainer app fbd84ee js 21463 render app fbd84ee js 21484 selectHandler 0 8a2eff5 chunk js 17182 fireChange 0 8a2eff5 chunk js 6169 onMenuSelect 0 8a2eff5 chunk js 5837 onClick app fbd84ee js 41524 onClick app fbd84ee js 41745 invokeGuardedCallback app fbd84ee js 11203 executeDispatch app fbd84ee js 10771 executeDispatchesInOrder app fbd84ee js 10794 executeDispatchesAndRelease app fbd84ee js 6357 executeDispatchesAndReleaseTopLevel app fbd84ee js 6368 forEachAccumulated app fbd84ee js 22458 processEventQueue app fbd84ee js 6534 runEventQueueInBatch app fbd84ee js 55275 handleTopLevel app fbd84ee js 55286 handleTopLevelImpl app fbd84ee js 55368 perform app fbd84ee js 8329 batchedUpdates app fbd84ee js 55158 batchedUpdates app fbd84ee js 2137 dispatchEvent app fbd84ee js 55445,,gaearon,2016-07-04 03:18:53,2016-07-04 12:00:25
IS,LinkedIn React users group proposed Angular is jobs on subcription,Hello I just subscribed to the LinkedIn React users group and I thought you would like to know that it is currently administered by an Angular guy who proposed to look for Angular jobs on subscription Not really what one might expect linkedin react group subscription,,gaearon,2016-07-04 12:11:42,2016-07-04 13:20:53
IS,ReactDOMServer renderToString presence of onClick handler causes errors on async update,The code produces errors Warning React can not find the root component node for data reactid value 0 If you are seeing this message it probably means that you have loaded two copies of React on the page At this time only a single copy of React can be loaded at a time Uncaught TypeError Cannot read property 'firstChild' of undefined But if I remove onClick handler the errors go away See demo,,"jimfb,sophiebits,jimfb,jimfb,gaearon,rricard,rricard,rricard",2015-11-15 17:18:30,2016-07-04 14:47:01
PR,Trigger a proper no op warning for async state changes on server,This commit fixes 5473 ReactDOMServer renderToString presence of onClick handler causes errors on async update This commit performs the following changes Adds a getUpdateQueue method to ReactServerRenderingTransaction ReactReconcileTransaction ReactNativeReconcileTransaction and ReactTestReconcileTransaction Make the ReactCompositeComponent call this getUpdateQueue instead of using ReactUpdateQueue that was unwanted at certain moments on server On ReactServerRenderingTransaction dispatch ReactUpdateQueue is methods while rendering and ReactNoopUpdateQueue is methods afterwards Added a test that mimics the case presented in 5473 with setState and replaceState,,"rricard,rricard,rricard,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,rricard,gaearon,rricard,rricard,gaearon,rricard,rricard,gaearon,gaearon,rricard,rricard,gaearon,gaearon,gaearon,gaearon,gaearon,rricard,gaearon,rricard,rricard,rricard,rricard,gaearon,aweary,rricard,rricard,vjeux,rricard,rricard,rricard,aweary,gaearon,gaearon,gaearon,rricard,rricard,aweary,rricard,gaearon,rricard,gaearon,gaearon,rricard,aweary,gaearon,rricard,gaearon,rricard,zpao,zpao,vjeux,gaearon,rricard,rricard,rricard,rricard,gaearon,gaearon,rricard,rricard,rricard,gaearon,gaearon,gaearon,rricard,rricard,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,rricard,rricard,rricard,rricard,rricard,rricard,rricard,gaearon,gaearon,rricard,rricard,gaearon,gaearon,gaearon,rricard,rricard,rricard,gaearon,rricard,rricard,rricard,rricard,rricard,rricard,gaearon,rricard,rricard,rricard,rricard,gaearon,rricard,rricard,rricard,rricard,gaearon,rricard,graue,gaearon",2016-06-27 08:55:30,2016-07-04 14:47:01
PR,Remove Danger dangerouslyRenderMarkup as it is dead code,I may have missed something Travis will tell but I think this function was dead code,,"gaearon,gaearon,zpao",2016-07-05 01:34:45,2016-07-05 02:25:06
IS,Why React removes tabindex property,Why React removes tabindex property defined like that div tabindex 0 in the component I found out that this is working div tabindex return 0 My misunderstanding or bug UPDATE It is my fault proper tabindex property is with camelCase tabIndex,,,2016-07-05 07:36:47,2016-07-05 07:44:25
PR,flow fix flattenChildren type,Make the debug attribute optional Test Plan npm run flow Reviewers,,"vjeux,keyanzhang,vjeux,keyanzhang,chicoxyzzy,chicoxyzzy,zpao,vjeux",2016-06-23 21:44:59,2016-07-05 16:18:49
PR,Inline dev only requires,This is inspired by s work in 7178 but without Rollup He noticed ReactComponentTreeDevtool and some other devtools get included into prod build This fixes it Unfortunately it s way too easy to regress on this Maybe we should have a way of marking certain files as dev only and then failing the build if they end up in production bundle,,"gaearon,vjeux,zpao,vjeux,gaearon,zpao,keyanzhang",2016-07-05 16:20:20,2016-07-05 17:20:12
PR,flow isTextInputElement,I had to cast into any because flow does not think that checking the lowercase version of nodeName is a valid way to refine the variable from HTMLElement to HTMLInputElement I'm also not confident enough in changing the implementation to an instanceof HTMLInputElement to please flow It also takes care of the null check in the process The nodeName condition was not useful since the two branches are checking it against concrete values and actually makes the type different since nodeName is not a boolean per se I replaced them with if conditions to make it clearer what it actually did instead of doing boolean logic tricks It is unclear why I had to type supportedInputTypes see this internal post for a discussion The only difference in behavior is that I now explicitely convert to boolean the object dereference via Test Plan npm run flow Careful inspection of the code Reviewers,,"vjeux,gabelevi,vjeux,vjeux,gaearon,syranide,vjeux",2016-06-19 17:45:53,2016-07-05 17:22:56
PR,Don t bundle DebugTool in production,Most of this diff is indentation I am removing all DEV checks from ReactDebugTool and ReactDOMDebugTool code Instead I am conditionally requiring them in production ReactInstrumentation debugTool and ReactDOMInstrumentation debugTool would now be null after this change Why I am doing this 1 Debug tools are not currently used in production at all All calls to debugTool are guarded by DEV 2 When we add a PROFILE build we can change the same condition to include PROFILE There s nothing here that would make it harder in the future 3 We are currently bundling unnecessary noops with method names and strings in production and as we add more events they will keep growing img width 1280 alt screen shot 2016 07 05 at 18 40 10 src In the future we might allow attaching devtools in production Let s do it when we actually have a use case for it Right now it s weird because we have these constraints that don t actually end up getting used This makes debug tool architecture more confusing to whoever who will be adding the PROFILE build Even when we allow this it is likely that the actual DebugTool would be external code There is no need for it to live inside React The default broadcasting DebugTools are good for development but I don t see why they are useful in prod Let s just keep it simple for now and let the code reflect our real usage Debug tools are only called in development environment now This reduces build size a bit If we are concerned about stray debugTool calls that would blow up in production we can lint against using debugTool outside a DEV block We don t add new calls very often though so I m not sure if it s worth it,,gaearon,2016-07-05 18:02:24,2016-07-05 18:41:45
IS,Deprecate calling PropTypes validators in production,We want to strip the code that implements PropTypes validation functions in production This doesn t mean React PropTypes won t exist just that the functions will throw in production every time I did an initial attempt at this in 6401 but it s too much of a change because people might be calling PropTypes in production right now for introspection and we d need to deprecate calling them in production before actually turning them into shims that throw errors suggested issuecomment 224386567 a good first step we should pass an extra argument to propType checkers We would warn if that argument is not passed or if passed does not match our secret value This way we can detect if somebody manually calls PropTypes validators and warn with console error in production If you d like to work on this please comment here so we don t have many people implementing this at the same time You would need to 1 Pass an extra argument to prop type checkers 2 In production warn inside the prop type checkers if they don t receive the expected extra argument 3 The warning should say something like You are manually calling React PropTypes validation functions in a production build This is deprecated and will not work in the next major version 4 Don t forget to write tests You can peek at 6401 to see how to write tests that simulate production environment 5 Send a PR and we ll discuss further,,"gaearon,aweary,gaearon",2016-06-27 17:31:49,2016-07-05 19:02:50
PR,Warn if PropType function is called manually,Resolves so I added a new file ReactPropTypesSecret that is used internally to verify that a propType function is not being called manually For the tests I basically reused what you had in 6401 as far as structure goes Everything should be passing I was not sure if we wanted to dedupe this errors If so I'm thinking we would have to track it by componentName or something Let me know what you think,,"aweary,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,aweary,aweary,aweary,gaearon,aweary,gaearon,gaearon,aweary,aweary,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,aweary,gaearon,gaearon,aweary,aweary,gaearon,aweary,gaearon,gaearon,gaearon,aweary,gaearon,aweary,gaearon,aweary,aweary,gaearon,aweary,gaearon,gaearon,aweary,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,aweary,gaearon,aweary,gaearon,aweary,sophiebits,gaearon,gaearon,sophiebits,aweary,jedwards1211",2016-06-27 19:44:32,2016-07-05 19:02:50
IS,Bug Missing React element for debugID triggered by ReactDOMServer renderToStaticMarkup,As of React v15 2 0 the provided fiddle is throwing the Missing React element for debugID warning which has been described as an internal i e not user facing React warning This warning was not present in React v15 1 0 I make no claim that this is a sane usage pattern only that it exists in real world components L157 and that it is an unexpected failure case,,"gaearon,gaearon,gaearon",2016-07-05 19:12:47,2016-07-05 19:15:19
IS,React strips 'for' property from label tag and issues a warning,Do you want to request a feature or report a bug BUG What is the current behavior React is flagging a warning and stripping the 'for' property from label tag If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Should not strip for and not issue a warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 2 0 with Chrome Fedora23,,aweary,2016-07-05 19:58:59,2016-07-05 20:02:30
PR,Revise ResponderTouchHistoryStore Error Handling,Touch behavior is inconsistent across different platforms and ResponderTouchHistoryStore currently fatals when assumptions are broken In addition the behavior differs between development and production This pull request does a few things to make ResponderTouchHistoryStore easier to deal with Adds Flow to keep the TouchEvent Touch and TouchRecord types straight Changes behavior to be consistent across environments This means either always throwing or never throwing and making use of warning and console error as appropriate When an orphaned move or end event is received print debug information and ignore it instead of crashing and burning Reviewers Test Plan Ran grunt test and flow src successfully Verified touch gestures continue to work in production apps,,"yungsters,sophiebits,sophiebits",2016-06-29 03:33:04,2016-07-05 20:15:59
PR,Gulp lint flow and version check,In light of is comments on 7172 I am opting for smaller PRs to convert the grunt tasks over to gulp These tasks should be unaffected by the changes in 7164 and 7168 I also decided on a different approach for splitting the tasks after discovering that storing the tasks themselves in individual files will be deprecated issuecomment 202614391 in gulp 4 The task bodies are now stored in separate files but registered with gulp in the main gulpfile This also makes the dependencies between different tasks much clearer The grunt tasks with the same name have been adjusted to wrap the new gulp tasks Converted Tasks x gulp lint x gulp eslint x gulp flow x gulp version check This PR would progress 4927 and 6656,,"maxdeviant,zpao,keyanzhang,maxdeviant",2016-07-02 20:02:13,2016-07-05 20:30:09
PR,change tutorial script success error is deprecated,tutorial script included following jQuery script success error There are deprecated in jQuery 1 8 so I replaced them success done error fail,,zpao,2016-06-28 16:18:11,2016-07-05 20:39:03
PR,docs Import warnings that currently live in gists,The goal is to make it so we are not locked in to these existing as a gist on on any single person is account This way if we want to make changes to the contents while 1 person is unavailable it is totally doable There are other ways we could solve that easiest if we wanted to keep this on github is a standalone repo with each warning getting a file Downside There is currently some discussion happening on the gists which could be helpful and it is a slightly longer turnaround to updating the content Not sure what we should do about that if anything I grepped for all the unique fb me links in master 15 stable matches and opened all of them These 4 were the ones that do not already link to some part of our docs 1 currently links to a specific issue which is probably ok Only some minor changes were made to keep formatting and markdown consistency We should probably do a pass over previous version 0 14 0 13 should be enough and do the same I can do that if we want to take this,,"zpao,gaearon,zpao",2016-07-02 22:13:51,2016-07-05 20:52:58
PR,Move error boundaries test into reconciler,The src core folder moved while this PR was pending so this file did not move with it Let is get rid of this annoying top level folder,,"sebmarkbage,gaearon",2016-07-02 00:04:13,2016-07-05 22:09:13
PR,Use hardcoded value for PropType secret,Addresses is concern issuecomment 230585137 cc,,"aweary,gaearon,sophiebits,sophiebits,maxdeviant,aweary,zpao,gaearon,gaearon,gaearon",2016-07-05 20:15:10,2016-07-05 23:22:01
PR,Pass shouldHaveDebugID flag to instantiateComponent,This allows us to remove a hack that was added in 6770 That hack caused 7187 and 7190 so this is an alternative fix to the same problem,,"gaearon,gaearon,gaearon,sophiebits,gaearon,sophiebits,gaearon,gaearon,sophiebits",2016-07-05 20:05:11,2016-07-05 23:22:25
IS,Form submit button has empty values in 15 2 0,Do you want to request a feature or report a bug This is a bug What is the current behavior screen shot 2016 07 03 at 4 12 19 pm screen shot 2016 07 03 at 4 11 15 pm If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Using 15 2 0 react and react dom What is the expected behavior screen shot 2016 07 03 at 4 13 05 pm screen shot 2016 07 03 at 4 13 10 pm Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React In 15 2 0 extra attributes name and value with empty values are added to the submit button of a form It works in 15 1 0,,zpao,2016-07-03 09:10:46,2016-07-05 23:39:44
PR,Do not detach value from defaultValue for submit reset inputs,Fixes 7179 This intentionally ignores both submit and reset inputs from the value detaching code I'm mostly certain that the only result of the code there for these input types was to set the value to an empty string if no value was provided This is because that is what the value was however browsers do show a default text for value less inputs of those types since they are actions These default values are not actually accessible the DOM afaict so we do not have a good indication apart from looking at the value in props But since it does not appear to matter I just skip this step entirely Test Plan jsfiddle in 7179 no longer shows empty submit input cc,,"zpao,jimfb,syranide,syranide,zpao,jimfb,jimfb,jimfb,zpao,jimfb,zpao,jimfb,sophiebits,jimfb,syranide",2016-07-05 22:49:28,2016-07-05 23:39:44
IS,NPM problem,Hello i am new to react and i am testing it on a project but whne i do the npm install i get this i do not know what to do now about the react 15 2 0 on the package json,,"zpao,keyanzhang",2016-07-05 22:23:57,2016-07-06 06:13:41
IS,Weird behaviour when 'is' prop is present,Do you want to request a feature or report a bug Bug What is the current behavior I have this example As you can see adding the 'is' prop breaks the rendering of class prop maybe other parameters as well What is weird that is is not reserved word in JS How I got the is prop there is another story but this behaviour is definitely weird Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 0 1 and Chrome not tested other,,gaearon,2016-07-06 12:19:18,2016-07-06 14:01:37
IS,enhancement HTML XML comment support for JSX,Feature Support XML comments in JSX Current status Currently the only way to insert comments into JSX flow is to wrap them in JS In context,,gaearon,2016-07-06 14:13:42,2016-07-06 14:17:30
IS,RFC Make Refs Opt in,Note This is my personal proposal Please don t announce it anywhere as React dropping refs Higher order components solve many problems of mixins however they come with their own problems The most painful one in my experience is that they hide the ref of the wrapped component so they can t be treated as transparent wrappers This is well described in 4213 As we prepare for de emphasizing createClass and mixins I think it s important that we treat higher order components as first class pattern in React and provide full support for it without clashes with existing features This means we need to fix refs to work well with higher order components In the community I see that people embrace stateless functional components even though they don t have public instances and don t support refs pointed at them I think that this is a good indication that refs are moving from being a commonly needed feature to an escape hatch and so it can be further de emphasized by becoming opt in What Doesn t Change div ref works like before and provides node in a callback StatelessFunctionalComponent ref works like before and provides null in a callback Classes Opt Into Exposing a Ref In the spirit of issuecomment 115019321 I propose that this ref becomes an opt in API on every class component If you want your components to be reffable that is to expose their public instances as refs you need to manually call it in your constructor This lets the component choose which methods it wants to expose imperatively and which are still considered implementation details Downsides Migration Cost This would be an easy enough codemod for most components just add this ref this to any class component But it s still a cost considering some of those components are on npm and out of your control Arguably most third party components don t provide imperative methods anyway but this will cause some trouble Potential for Misuse I can imagine people doing this ref this and then WrappedComponent ref this ref in the render method This could get confusing but I don t see any easy way to prevent or warn about this Too Much Freedom Technically you d be able to pass this ref 42 this ref findDOMNode this or other weird things Maybe we could limit possible values to React public instances and null On the other hand the ability to only provide a subset of methods as described in Providing Explicit Imperative APIs seems useful Other Considerations this props ref We could have provided ref inside this props as this props ref I would argue that we don t want to do this for two reasons We want React to still manage it partially by calling this ref null when component unmounts Otherwise it s too easy to introduce memory leaks Having magic behavior for one of the props would be unexpected We don t want this props to transfer the ref over to the child as that would be unexpected in most cases What do you think cc react core,,"gaearon,gaearon,jimfb,gaearon,sebmarkbage,sebmarkbage,glenjamin,acdlite,acdlite,gaearon,sebmarkbage,sophiebits,gaearon,gaearon,gaearon,gaearon",2016-06-06 16:34:24,2016-07-06 14:21:17
PR,Add failing test demonstrating a ReactPerf warning,Related issue 6949 When using ReactPerf from a component I'm getting results back from Perf getWasted measurements but I'm seeing this warning crop up too cc I simplified the component that I shared in the issue issuecomment 230371009 for this failing test The use case that led me to stumble into this is using a react component as a test fixture to benchmark re render performance programatically The simplified test component cycles through a single state change and resolves in componentDidUpdate before checking the console error output The warning is actually firing in the componentDidMount hook as soon as ReactPerf start is called here is another jsfiddle with the simplified version,,"gaearon,gaearon",2016-07-05 19:53:52,2016-07-06 15:39:41
IS,Input elements always rendered with name attribute,Do you want to request a feature or report a bug This is a bug I think What is the current behavior When rendering input type without name attribute it will render input type name to the DOM 2016 07 06 at 09 49 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is the example with the regression using React 15 2 0 2016 07 06 at 09 49 What is the expected behavior No name attribute rendered if it is not provided Here is the expected behavior with React 15 1 0 2016 07 06 at 09 54 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Regression v15 2 0 Good v15 1 0,,"okonet,syranide,syranide,okonet,alexzherdev,okonet,alexzherdev",2016-07-06 07:58:37,2016-07-06 17:11:46
PR,Do not render name attribute on INPUT if it is not supplied,Closes 7198 Thanks for pointing out where to look,,"okonet,zpao",2016-07-06 09:21:55,2016-07-06 17:11:47
IS,select behaviour should be consistent with DOM when option s values are identical,This is created as opposite to 6959 There is a bug in React and it should be fixed to match DOM behaviour instead of solution proposed in 6959 See issuecomment 228578350,,"chicoxyzzy,chicoxyzzy,jimfb,chicoxyzzy,aweary,chicoxyzzy,aweary,chicoxyzzy,chicoxyzzy,aweary,chicoxyzzy,chicoxyzzy,aweary,jimfb,aweary,chicoxyzzy,jimfb,chicoxyzzy",2016-07-06 15:53:56,2016-07-06 17:40:11
PR,Add React PureComponent,This provides an easy way to indicate that components should only rerender when given new props like PureRenderMixin If you rely on mutation in your React components you can continue to use React Component Inheriting from React PureComponent indicates to React that your component does not need to rerender when the props are unchanged We will compare the old and new props before each render and short circuit if they are unchanged It is like an automatic shouldComponentUpdate,,"sophiebits,gaearon,gaearon,sophiebits,sophiebits,sebmarkbage,vjeux,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,syranide,jimfb,STRML,gaearon,sophiebits,sebmarkbage,gaearon,Andarist,gaearon,sophiebits,gaearon,koba04,gaearon",2016-07-05 21:05:31,2016-07-06 20:24:44
PR,Make ReactPerf start work during reconciliation,Currently ReactPerf start and ReactPerf stop calls don t work correctly during reconciliation As far as I know this was occasionally the case before 15 x too they weren t working reliably Generally we advise that people call ReactPerf methods from the console but React components for this appears to be a popular pattern so it s best we support it I took the failing test from 7191 and built this PR on top of it This should fix the problem so people can write measurer components like this Why didn t this work before We used to only start and stop timers while isProfiling is true However this doesn t work correctly if the user flips isProfiling during reconciliation Then we have mismatching begin end timer calls To fix this I decided to always measure methods regardless of whether we are in profiling mode I suppose calls to performanceNow can t be expensive can they And we are only doing this in DEV anyway The logic is changed so that we don t record the measurements if isProfiling is false So we just make them and throw them away This lets us avoid writing the logic to recover from isProfiling flipping in the middle of reconciliation,,"gaearon,gaearon,gaearon",2016-07-06 15:37:55,2016-07-06 22:21:52
IS,Any reason to use null instead of undefined for default state Using default would allow using es6 default values,Not really an issue but Any reason to use null instead of undefined for default state Using default would allow using es6 default values,,"gaearon,gaearon,aweary,aweary,gaearon,gaearon,gaearon,aweary,gaearon,aweary",2016-07-06 18:23:03,2016-07-06 23:13:09
PR,rm duplicate line,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-07-07 09:01:15,2016-07-07 12:26:17
IS,Feature request merge className prop on the outermost container of a component,We can use className prop on any HTML element but not an a custom react component Requesting to support this feature as it simplifies the component usage when there is a need to apply additional styles without having to wrap the component in an external DIV,,"zpao,gaearon",2016-07-07 17:13:55,2016-07-07 17:46:24
PR,Make ReactPerf start work during reconciliation,Currently ReactPerf start and ReactPerf stop calls don t work correctly during reconciliation As far as I know this was occasionally the case before 15 x too they weren t working reliably Generally we advise that people call ReactPerf methods from the console but React components for this appears to be a popular pattern so it s best we support it I took the failing test from 7191 and built this PR on top of it This should fix the problem so people can write measurer components like this Why didn t this work before We used to only start and stop timers while isProfiling is true However this doesn t work correctly if the user flips isProfiling during reconciliation Then we have mismatching begin end timer calls To fix this I decided to always measure methods regardless of whether we are in profiling mode I suppose calls to performanceNow can t be expensive can they And we are only doing this in DEV anyway The logic is changed so that we don t record the measurements if isProfiling is false So we just make them and throw them away without pushing them into the array This lets us avoid writing the logic to recover from isProfiling flipping in the middle of reconciliation I also changed the host history tool to only record DOM operations while profiling Previously they were recorded into an array before being discarded at the end of the flush Finally I fixed a few places ART and error boundaries where warning assertions weren t true They started firing because we now measure regardless of isProfiling This is actually good because it means we re testing that ReactPerf doesn t get confused by bad event ordering during our whole test suite,,"gaearon,gaearon,sophiebits,gaearon",2016-07-06 22:24:44,2016-07-07 18:41:30
IS,Would like to make sure the lifecycle of React and usage of jQuery datatable with React,Hey guys I'm a freshman of React and facing some problems now I would like to fetch some data from server and show them in a table I create some features to deal with the loading and error statues I would like to render a spinner when the data is loading an error message if there are some error occured and the datatable if everything works perfectly But here is the issue in which place should I run the 'ProductRun' function which initialized the datatable I tried to put it in ComponentDidMount and componentWillUpdate but nothing works I even trie to put it into the render function but still got nothing Anybody can show me a way to let it work Really appreciate Here is the component,,zpao,2016-07-07 21:39:35,2016-07-07 22:33:20
IS,feature Not connection on react view and the RCTBridgeModule,Not connection on ReactView and the RCTBridgeModule Since that we want to create a ads just like the canvas ad on Facebook But we find out the RCTBridgeModule can not callback to the reactView,,zpao,2016-07-08 02:52:41,2016-07-08 06:30:18
IS,setState in componentWillMount causes TypeError when rendering with renderToString and preceded by a component that renders with renderToString,Calling setState in componentWillMount of a component causes the error when rendering server side with ReactDOMServer renderToString and preceded by a component that renders content using ReactDOMServer renderToString or ReactDOMServer renderToStaticMarkup Causes TypeError with 0 14 8 and 15 0 0 rc 2 Works with 0 13,,"gaearon,aweary,aweary,jimfb,aweary,sophiebits,aweary",2016-04-06 11:57:00,2016-07-08 17:52:14
PR,Wait for pending transactions from ReactServerRenderingTransaction,Resolves The issue I found with 6423 was that there were pending actions from a ReactServerRenderingTransaction so after it reverted the batching strategy after the first transaction any updates that the pending transaction s may have had queued were batched with ReactDefaultBatchingStrategy which caused it to fail This PR simply tracks the number of pending ReactServerRenderingTransaction instances and only reverts the batching strategy once the final transaction has finished,,"aweary,gaearon,gaearon,gaearon,aweary,aweary,gaearon,gaearon,gaearon,aweary,aweary,gaearon,aweary,aweary,zpao,aweary",2016-06-13 19:41:23,2016-07-08 17:52:14
PR,Fix unmounting performance regression in V8,As reported in 7227 unmounting performance regressed with React 15 It seems that delete has become much slower since we started using numeric keys Forcing dictionary keys to start with a dot fixes the issue It only seems to help Chrome and doesn t appear to affect other browsers significantly It also only seems relevant to the use case of unmounting many nodes,,"gaearon,gaearon,gaearon,gaearon,sophiebits,sebmarkbage,zpao,sophiebits,trueadm,gaearon,syranide,gaearon",2016-07-09 00:14:19,2016-07-09 00:32:20
IS,Not show,Report Bug Not enable the react tab in developer tools React 15 2 0 and Chrome image,,maxdeviant,2016-07-08 20:23:26,2016-07-09 01:32:04
IS,Performance regression for removing rows from large table,In my javascript frameworks benchmark I ran into a performance regression for react To reproduce open the react js 15 2 version and open the console Repeat three times the following Click Create 10 000 then click Clear You will get a result like that runLots took 1905 0000000000005 clear took 1997 0249999999996 runLots took 1813 8500000000004 clear took 4208 895 runLots took 1806 864999999998 clear took 401 119999999999 Now repeat the same for react js 0 14 8 and you will get something like that unLots took 2938 8900000000003 clear took 399 2250000000013 runLots took 2726 365 clear took 383 45500000000175 runLots took 2872 625 clear took 381 7250000000058 Measurement on Chrome 51 on MacOS 10 11 5 on a MBP 15 Notice that clear is a lot slower for the first two runs for React v 15 but the third clear run performs about the same for both react versions The source code can be found in the repository of my benchmark,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-07-08 19:57:35,2016-07-09 10:50:36
IS,hey,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-07-09 21:49:45,2016-07-10 00:27:07
IS,This page is not found,cannot found which is in If you want to use JSX the Getting Started guide shows how to set up compilation,,gaearon,2016-07-10 09:48:27,2016-07-10 10:04:53
IS,TestUtils shallow renderer triggers componentWillReceiveProps does not trigger componentDidUpdate,In the following test I rerender a component with different props using 3 different methods and I get 3 different results I am not sure if they are the intended behaviour or not I think renderIntoDocument is behaving like I would expect componentDidUpdate is triggered only by ReactDOM render componentWillReceiveProps is triggered by ReactDOM render and by TestUtils shallow renderer I am not sure how to test this feature using renderIntoDocument I think it is not possible I would expect componentDidUpdate to be triggered by the shallow renderer as well I am using Node 6 0 and React 15 2 0,,,2016-07-04 05:37:35,2016-07-11 00:03:17
IS,Custom properties are not set in style objects,When using CSS custom properties as inline styles React logs the following to the console in dev mode Warning Unsupported style property color accent Did you mean colorAccent Check the render method of 'Hello' Demo This is logged in lib CSSPropertyOperations js from warnHyphenatedStyleName and warnValidStyle before it More importantly than the warning though the styles are not applied to the elements on the client side in both dev and production They are applied in a server rendering and maybe initial client render but not on the client side if those elements are taken out of the DOM and put back in from state changes See 932 for more info This affects me on chrome and react 15 2 1,,zpao,2016-07-10 23:26:30,2016-07-11 02:09:46
PR,Fixed all eslint warnings,Warnings included Missing semicoln warnings Line exceeding 120 characters Used FB is styling guidelines Signed off by Usman Ajmal syedusmanajmal gmail com,,"keyanzhang,keyanzhang,zpao,keyanzhang,zpao",2016-07-11 19:24:00,2016-07-11 23:07:18
PR,Blog post for error codes,Mostly just took what sent me and tweaked a couple sentences links screen shot 2016 07 08 at 16 20 19 fullpage,,"zpao,zpao,sophiebits,sophiebits,sophiebits,zpao,keyanzhang,sophiebits",2016-07-08 23:21:02,2016-07-12 00:41:42
PR,Fixed all eslint warnings,Warnings included Missing semicoln warnings Line exceeding 120 characters Signed off by Usman Ajmal syedusmanajmal gmail com,,"zpao,zpao,zpao,zpao,zpao,zpao,zpao",2016-07-08 23:59:34,2016-07-12 00:47:42
IS,Not to expand 'border' style property,Current behaviour passed in style property I want the shorthand style property remained unexpanded as Outlook 2007 dose not support style properties like border width border color etc Also I found this expanding operation by React is done here react src renderers dom shared CSSProperty js but it is not configurable Any ideas Thanks in advanced,,"syranide,sophiebits",2016-07-11 03:40:28,2016-07-12 03:40:32
PR,Reformat event names in Media Events section,Event names in Media Events section has been reformatted conformed to event names in Mouse Events section This makes the documentation more readable,,zpao,2016-07-12 15:08:54,2016-07-12 17:10:29
PR,Remove uneccesary colon,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Only use a colon after a statement that is a complete sentence like Grammer Girl says,,zpao,2016-07-10 00:53:18,2016-07-12 18:19:07
PR,Update 05 reusable components md,Updating the Autobinding section with the relevant part from the v0 13 0 update autobinding,,"alexzherdev,zpao",2016-06-29 21:24:07,2016-07-12 18:37:02
IS,ReactPerf TotalTime measurement,We were relying on the total time output from ReactPerf printWasted to measure performance of our components to prevent degradation This is working in v14 to v15 but in 15 1 there is no more ReactDefaultPerfAnalysis What is the replacement functionality for this Is this expected to come back in a future release,,"zpao,gaearon",2016-06-16 18:05:54,2016-07-12 18:53:08
PR,Add link to video chat with,Ping,,"kentcdodds,sophiebits,kentcdodds,kentcdodds,sophiebits",2016-07-12 21:35:55,2016-07-12 21:42:19
PR,Update benchmarks to be more realistic polymorphically,Previously the extract components script would create the same number of layers of composites as the page it captures but it would output a new class for each time any composite is used since we do not want to replicate all the component logic I changed the script to output a single type for each type in the input and each generated component takes an index for which output it should return This should be closer to how the original code behaves especially with respect to VM function call lookups where the amount of polymorphism makes a difference I re recorded the benchmarks with the new scripts They run significantly faster This is probably in part due to the changes here but also the page I captured has changed somewhat in the meantime and there seem to be slightly fewer components in the hierarchy so they are not really comparable But going forward we can use this benchmark which should be more accurate I also included an identical copy that uses stateless functional components so we can test optimizations to those later,,"sophiebits,sophiebits,gaearon",2016-07-13 02:32:21,2016-07-13 02:32:51
PR,Test renderer improvements,Adds update newElement and unmount and makes children reorders and composite type swapping work Part of 7148 cc,,"sophiebits,iamdustan,sophiebits,cpojer,josephsavona",2016-07-13 04:28:13,2016-07-13 05:35:31
IS,Error messages omitting relevant components displayName,Please forgive me if this appears more like a rant than a feature request but I have searched and can not find any explanation for why some error messages are displayed without any displayName from the component responsible and this is driving me insane Every component in my project has an explicit displayName specified I do this for debugging I am rendering a bunch of immutable props I changed one of the prop types from a List to a Map and I see Warning Using Maps as children is not yet fully supported It is an experimental feature that might be removed Convert it to a sequence iterable of keyed ReactElements instead Obviously I missed something which could be easily fixed if I knew where it was even just the component is name This message is not only frustrating but it is taunting I know where the problem is but I wo not tell you feel makes it infuriating Looking at the stacktrace behind it is useless as well because it is as usual a never ending list of React function calls with no mention of any of my source files I have spent countless time hunting down errors like this that would have taken only moments if I knew the name of the component responsible It would be infinitely more helpful if the displayName field appeared in more debug output,,"keyanzhang,keyanzhang,keyanzhang",2016-07-13 03:39:48,2016-07-13 15:29:42
PR,Warn for using maps as children with owner info,fixes 7257 cc,,"keyanzhang,sophiebits",2016-07-13 05:14:20,2016-07-13 15:29:42
IS,Unknown prop warning ignore undefined,Warning Unknown prop on tag Remove this prop from the element These are emitted even if the property value is undefined Should undefined perhaps be treated as not existing perhaps That is how it is intended AFAIK,,"syranide,jimfb,jimfb,syranide,jimfb,jquense,syranide,jquense",2016-07-13 11:56:47,2016-07-13 15:34:23
PR,Add a new blog post about mixins,,,gaearon,2016-07-13 15:52:05,2016-07-13 16:40:53
PR,Fix typos in Mixins Considered Harmful,Going to accumulate typos here so we fix them in a single batch,,"gaearon,gaearon",2016-07-13 17:16:39,2016-07-13 17:46:21
IS,support for referrerPolicy attribute,Warning Unknown prop referrerPolicy on a tag referrerPolicy is defined by the WHATWG HTML for e g a elements the a element Also see,,,2016-07-13 08:46:58,2016-07-13 18:56:57
PR,Add referrerPolicy to HTMLDOMPropertyConfig,Resolves I think this is all that needs to be done I did not see any other place to whitelist test the property but let me know if there is,,"aweary,zpao",2016-07-13 15:52:50,2016-07-13 18:56:57
PR,Renaming ReactDOM,Rename React with ReactDOM mentioned here,,"mertkahyaoglu,zpao",2016-07-13 11:42:56,2016-07-13 19:59:02
PR,Update 03 interactivity and dynamic uis md,fixed a typo,,"zpao,alexzherdev,zpao,zpao",2016-06-06 06:54:04,2016-07-13 20:14:41
PR,docs Follow up to 6972 update docs code,,,zpao,2016-07-13 20:17:03,2016-07-13 20:17:09
IS,Can a react state set up to a Set object,Like following code it will change the state directly but by the official note image,,"syranide,syranide",2016-07-13 03:09:19,2016-07-13 20:21:33
IS,colors,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-07-13 20:06:33,2016-07-13 20:25:41
PR,Fix 7099,Fix for 7099,,"troydemonbreun,zpao,troydemonbreun,zpao,troydemonbreun",2016-07-12 17:53:53,2016-07-13 20:28:14
IS,Value of input range incorrectly rounded after mounting step attribute ommited,Do you want to request a feature or report a bug Bug What is the current behavior React at the beginning rounds input type range value to 0 or 1 and then looks at step parameter which is 0 1 for example The result is incorrect value of input after component mounts When I put value attribute after step attributes it works fine If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo Comment or uncomment line 13 and 14 to see the difference What is the expected behavior To always look at step parameter and then round the value if required Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 1 0 Opera Chrome Firefox Yes works in v 0 14 0,,"syranide,sophiebits,troydemonbreun,sophiebits,sophiebits,troydemonbreun",2016-06-22 08:17:01,2016-07-13 20:28:24
IS,SVG xmlns attribute,Do you want to request a feature or report a bug bug What is the current behavior The following error is raised Warning Unknown prop xmlns on svg tag If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template create an a component with and svg tag and set the xmlns attribute What is the expected behavior No warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 2 0,,"brianreavis,gaearon,zpao",2016-07-02 22:15:06,2016-07-13 20:29:39
PR,Mixins Considered Harmful Add mixins property to context example,First of all very nice post about mixins Thanks and everyone involved smile I think that the Link component mixins property is missing,,"syranide,syranide,gaearon",2016-07-13 20:12:51,2016-07-14 09:43:47
IS,Unit test failures on React 15 2 1,Bug Unit tests using shallow rendering fail on 'TypeError Cannot read property 'onSetDisplayName' of null' I can not seem to get TestUtils into jsfiddle but here is the build output and code snippet What is the expected behavior Unit test should run normally Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 2 1 has this issue 15 2 0 does not,,"zpao,gaearon,gaearon,gaearon,gaearon,gaearon",2016-07-09 00:10:11,2016-07-14 11:02:39
PR,Fix TestUtils crash with NODE ENV production,I caused it with 7189 We generally don t recommend running TestUtils in production environment but this is technically a regression Fixes 7231,,"gaearon,gaearon,zpao",2016-07-11 10:52:17,2016-07-14 11:02:39
IS,React Redux Sortable problem,Hello I'm trying to sort list of elements each with unique key in aplication based on React and Redux For sorting I'm using and it works really good until I save my sort order to redux store After my store changes it triggers re rendering elements which swap them back to previous positions probalbly because React can would detect that Sortable already made that change in DOM It all works well when I use Math random for keys but I would really like to avoid that Can I force React to detect that keys in displayed list already changed it is order,,"gaearon,alexzherdev",2016-07-13 07:47:26,2016-07-14 12:30:07
IS,TodoApp example on main page,On the main page where the TodoApp stands What do you think PS sorry could not find a better place than here to post this idea,,zpao,2016-07-14 10:49:15,2016-07-14 17:01:24
PR,Add Design Principles to the docs,This adds a new Contributing subsection to the Docs I plan it to be short How to Contribute basically our Contributing md Design Principles this PR Code Conventions todo Implementation Overview todo This PR adds Design Principles I don t want to sit on this forever so I figured let s start with this and I ll add the rest as I write it,,"gaearon,alexzherdev,gaearon,gaearon,zpao",2016-07-14 19:22:39,2016-07-14 19:37:28
PR,Removed context masking to allow pure intermediate components to implement a context aware shouldComponentUpdate,I am using context to propagate locale and routing information My problem is that some pure components stop subtree rendering when the context changes because pure components only check state and props This is a problem for many people as per issue 2517 I reasoned that not masking the context for intermediate components would be better than masking and the defined contextTypes would only be used for validating not for filtering This is similar to how propTypes work where the properties specified are validated but the ones not specified are still available to the component i have updated the tests to reflect this update Since components that are not interested in context would typically not use the context argument not masking the context would not cause any existing component to break unless said components explicitly are checking that the context param is undefined This would however create an opportunity for a refinement of pure component say a ContextAwarePureComponent which would compare state props and context in shouldComponentUpdate allowing context updates to cause re renders of pure components I am currently running in development with this patch using radium and some react bootstrap components and did not experience any issue,,"jquense,zpao,zpao",2016-07-07 16:30:19,2016-07-14 20:04:43
PR,Minor tweaks to Design Principles,Tweaks,,gaearon,2016-07-14 20:29:07,2016-07-14 20:29:11
IS,how to pass parameter in click event when I am binding this in the constructor,I m binding this to the class in the constructor like this class Header extends Component constructor props super props this dosometing this dosometing bind this dosometing id console log id and write code in render onClick this dosometing id is right,,keyanzhang,2016-07-15 04:01:58,2016-07-15 05:57:45
PR,Added osx support to travis ci,,,"maxdeviant,zpao",2016-07-15 06:48:52,2016-07-15 18:33:12
IS,Docs request adding support for new HTML elements,e g 6717,,aweary,2016-07-15 17:25:28,2016-07-16 00:40:44
PR,Clarify the section about dogfooding,This section has gotten some negative response and I realize I phrased it in a bad way assuming everyone is familiar with our open source philosophy I rephrased it to make the meaning more explicit and hopefully dispel some concerns,,gaearon,2016-07-16 13:54:06,2016-07-16 14:02:20
PR,Eagerly evaluate inline requires in Jest,I inlined some requires in 7188 to fix the build size regression However this caused an issue with Jest due to it resetting module registry between tests This is a temporary fix to 7240 It should be reverted as part of 7178 Test plan 1 Verify 7240 is fixed by following its repro instructions You would need to build React and copy build modules into its node modules react lib 2 Verify a React example e g basic click counter in the repo runs with minified and unminified React 3 Check that the minified build size has not increased Reviewers Yes I know it s super ugly The upside is I know Jest a little better now,,"gaearon,zpao,gaearon,gaearon,gaearon,keyanzhang,cpojer,gaearon,cpojer,gaearon,gaearon,gaearon,zpao",2016-07-11 10:38:39,2016-07-16 19:51:25
IS,input type 'number' defaultValue someValue is not working correctly in Chrome,input type 'number' defaultValue someValue does not work correctly in Chrome When user type in a decimal point the point will disappear and the caret will be be reset to the beginning of the input If you keep typing in twice the value of input will disappear However if a input has no defaultValue it seems to work fine I have put together a fiddle page to demo the bug I think it has something to do with the internal state management of an uncontrolled component When the first is typed it does not get to target value chrome may have trimmed the unnecessary from the value because it is type is number React pushing target value back to input causing the to disappear and caret position reset Now if two are typed in the value is no longer a valid number and Chrome may return '' for target value causing the input to be reset,,"syranide,jimfb",2016-07-18 13:29:48,2016-07-18 16:17:57
IS,help for getting rid of the use case of TimerMixin in React Native,Do you want to request a feature or report a bug help request What is the current behavior I want to replace TimerMixin in my React Native with something else Given that Dan has talked about downsides of using mixins I still cannot find a solution for my use case,,zpao,2016-07-18 14:39:25,2016-07-18 17:17:55
PR,Update index md,fix wrong suffix because can not find the files change html to md,,zpao,2016-07-18 09:52:17,2016-07-18 17:19:13
IS,Attributes from html element,Hi I m new with react I wanted to implement simple feature But I need to accesses html element properties before it was rendered for example I have html code And I want to access mydata from myCustomobject and that two instances was rendered with different data I think it s possible to set attributes for myCustomobject before replacing div I have not found in documentation how to do it right now Thank you,,brigand,2016-07-17 15:36:10,2016-07-18 17:19:55
IS,After updating to React 15 2 react flexbox grid is throwing lots of similar warnings,Do you want to request a feature or report a bug Unknown props secondary primary on div tag What is the current behavior Unknown props xs md on div tag Remove these props from the element For details see in div created by Col in Col created by Index in div created by Row in Row created by Index in div created by Index in div created by Index in Index created by Connect Index in Connect Index created by ReactRouterProxy in ReactRouterProxy created by RouterContext in div created by Template in div created by Template in div created by Template in Template created by ReactRouterProxy in ReactRouterProxy created by RouterContext in RouterContext created by Router in Router in Provider If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"syranide,gaearon",2016-07-19 03:23:49,2016-07-19 09:47:52
PR,prevent spamming warnings related to performance measurement code,Preventing spamming warnings related to React performance measurement code,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-07-18 19:33:20,2016-07-19 10:46:12
IS,React devtools 15 1 0 ctor timer error,bug Warning displayed in console about internal error of React performance measurement code screen shot 2016 05 23 at 9 21 08 am 15 1 0 Google Chrome,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-05-23 13:26:11,2016-07-19 18:43:25
PR,Upgrade to Jekyll 3,This rebases finishes the work from 6606 There are 2 notable differences 1 Every page has a permalink field This makes sure that page url works right in the layout and the og url actually points to a URL with html not otherwise dead links 2 Reverts the change in 6606 which used layout sectionid and instead just uses the scope config to make sure we actually assign it to every page Test Plan Build over existing gh pages branch and look inspect diff Minimal differences,,"zpao,zpao",2016-07-19 22:14:48,2016-07-19 23:34:00
IS,,,,,2016-07-20 01:58:27,2016-07-20 02:30:59
IS,Facing problem with react webpack installation,I have followed the steps as it is in npm install save react react dom babel preset react babel loader babel core webpack main js bundle js module bind 'js babel loader' But got the error like the shared screen Please how can solve this Or is there any proper installation guide for React Redux webpack issue,,"milesj,mxstbr,mxstbr,gaearon,gaearon",2016-07-20 06:03:02,2016-07-20 08:34:38
IS,PropTypes More informative warning in createElementTypeChecker,Do you want to request a feature or report a bug Enhancement What is the current behavior Element type checker is not as informative as the other ones What is the expected behavior It would be nice to provide the actual type of the prop passed similarly to other type checkers I e instead of Invalid prop Prop supplied to Component expected a single ReactElement say Invalid prop Prop of type type supplied to Component expected a single ReactElement Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Seeing this on 15 2 1 but I think it is also applicable to previous versions I know the general intention is to move away from prop types but if there is not a specific reason for the current behavior I can look into making this more pretty,,"alexzherdev,gaearon,RaitoBezarius,alexzherdev,RaitoBezarius",2016-07-19 09:58:44,2016-07-20 18:16:55
PR,Mention actual prop type in element type checker,Fixes 7302,,"alexzherdev,gaearon",2016-07-20 17:35:16,2016-07-20 18:16:55
PR,Switch Travis CI to Trusty Beta,Trying out to see if we can make the website build again,,"zpao,alexzherdev,zpao,sophiebits,sophiebits,zpao,zpao",2016-07-20 00:43:16,2016-07-20 18:47:17
PR,Remove context masking to allow pure intermediate components to implement a context aware shouldComponentUpdate,Same as 7213 but this time on master I am using contexts to propagate locale and routing information My problem is that some pure components stop subtree rendering when the context changes because pure components only check state and props This is a problem for many people as per issue 2517 I reasoned that not masking the context for intermediate components would be better than masking and the defined contextTypes would only be used for validating not for filtering For properties components define propTypes but they can still get properties that they do not define The same reasoning can be applied to contexts whereby through contextTypes a component defines what it expects to be in the context but not implying that nothing else can be in the context i have updated the tests to reflect this update Since components that are not interested in context would typically not use the context argument not masking the context would not cause any existing component to break unless said components explicitly are checking that the context param is undefined This would however create an opportunity for a refinement of pure component say a ContextAwarePureComponent which would compare state props and context in shouldComponentUpdate allowing context updates to cause re renders of pure components I am currently running in development with this patch using radium and some react bootstrap components and did not experience any issue,,"zpao,sebmarkbage,jimfb,aweary,jedwards1211,jedwards1211,sophiebits",2016-07-08 07:19:32,2016-07-20 22:09:50
PR,Add babel plugin transform class properties,,,"keyanzhang,sophiebits,sophiebits",2016-07-20 23:26:45,2016-07-21 00:39:10
PR,Improve warning in ReactUpdateQueue,Now it references name correctly for ES2015 class components 7127 fixed ReactNoopUpdateQueue diff 109c4407d9919fdeda99c9eedd2099beR26 but not ReactUpdateQueue,,"keyanzhang,gaearon",2016-07-21 07:33:09,2016-07-21 11:41:31
IS,SVG in react component is not animating,I'm seeing an issue with a SVG I have inside a react class The class is as follows It renders the SVG fine but the path elements are not animating as they should I'm on React and React Dom 15 2 1 Thanks,,"keyanzhang,keyanzhang",2016-07-21 07:41:38,2016-07-22 11:11:33
IS,Documentation Links in documents text are wrong,Do you want to request a feature or report a bug Bug What is the current behavior 404 error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template 1 Open a page from docs like this one 2 Click on any link like 3 See 404 error page What is the expected behavior The correct link should be Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The problem occurs on many doc pages since file names are changed to include numbers I guess,,gaearon,2016-07-22 14:39:45,2016-07-22 14:45:35
PR,Fix grammatical error in create apps with no configuration html,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA It is worth repeating there is no configuration files It is worth repeating there are no configuration files,,zpao,2016-07-22 17:31:59,2016-07-22 18:04:55
PR,Correct grammatical error subject verb agreement,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA It is worth repeating there is no configuration files or complicated folder structures It is worth repeating there are no configuration files or complicated folder structures,,"gaearon,gaearon",2016-07-22 18:07:39,2016-07-22 18:13:11
PR,Host our own images for the blog use https links,Fixes 7337,,zpao,2016-07-22 18:29:08,2016-07-22 19:36:07
IS,Stop using imgur for images in blog post,is using imgur for image hosting We should just put those on our site like we have for previous posts While making sure we maintain control it will also ensure that those images are served over HTTPS which they are not currently We could fix that by updating the img srcs but we should probably just host them anyway img width 355 alt image src,,"zpao,zpao,vjeux,gaearon,zpao,vjeux",2016-07-22 18:03:24,2016-07-22 19:38:26
PR,Blog post Fixed typo in post,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"theseyi,gaearon,zpao",2016-07-22 17:45:45,2016-07-22 19:40:46
IS,Type of input field is not correctly updated in Safari,Do you want to request a feature or report a bug This is a bug report What is the current behavior In Safari the type of input field is not updated properly Consider the example linked below It is a React component that display a button and an input field The type of input field will be toggled between file or text by clicking the button The change of input type is not being reflected I believe this is an issue with Safari Setting the type property in Safari does not affect what is being rendered If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The input type should be changed as in Chrome and Firefox Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 1 0 ReactDOM 15 1 0 Browser Safari 9 1 1 Chrome 51 0 2704 103 Firefox 47 0 OS OS X 10 11 5,,"syranide,aweary,zpao",2016-06-29 04:47:39,2016-07-23 01:38:29
IS,Warning when changing the type and value of an input field,In my render method I have something like screen shot 2016 04 07 at 6 07 45 pm Is this expected behavior,,"jimfb,sophiebits,sophiebits,gaearon,jimfb,aweary,nhunzaker,sophiebits,nhunzaker",2016-04-07 22:08:21,2016-07-23 01:38:29
PR,Avoid validation warning when inputs change type,For controlled inputs updateWrapper was getting called before the type prop had a chance to update This could lead to a case where switching from the text to number type caused a validation error that would prevent the proper input value from being assigned This commit moves the call to ReactDOMInput updateWrapper below updateProperties to avoid this situation Fixes 6441 Also worth mentioning this does not fix 7144 It looks like Safari still does not like it when you change an input is type to file period That may require using a key as others have suggested,,"nhunzaker,sophiebits,nhunzaker,sophiebits",2016-07-22 11:55:00,2016-07-23 01:38:29
PR,Codemod tests from createClass to ES2015 classes,Codemodded automatically using explanation of the new es2015 class transform with property initializers Reviewers details summary codemod log summary details Then I reverted some non test files and things under src isomorphic classic class,,"keyanzhang,sophiebits,keyanzhang,sophiebits,keyanzhang,sophiebits,sebmarkbage",2016-07-20 20:57:02,2016-07-23 22:22:35
IS,Higher Order Components not reacting to change in props,I am trying to implement basic filtering functionality using Higher Order Components The HOC looks like filter js,,"brigand,gaearon",2016-07-24 11:09:22,2016-07-24 12:05:26
IS,z index of interaction,say we have it will come on top of other components It is something like z index of interaction is this a problem or it is just the way react works,,syranide,2016-07-25 09:16:07,2016-07-25 12:45:48
IS,this transferPropsTo is not a function,Hi Can you help me Uncaught TypeError this transferPropsTo is not a function React v0 14 7,,gaearon,2016-07-25 16:25:50,2016-07-25 16:56:00
PR,WIP Chore add commitplease with jquery style checks,Hello react js is a fast moving project with many contributors Would you perhaps want to have a common commit message style Some projects like jQuery and Angular js have a consistent commit history by using a style This PR introduces a new devDependency module called commitplease Once you npm install any git commit automatically checks that the message that you enter follows a certain style jQuery style by default Here is a general idea of how it looks record We could discuss details if you really would like that and or which style guide you would prefer,,zpao,2016-07-25 10:22:13,2016-07-25 18:17:48
IS,Respect my autocomplete values,Bug Currently React transforms any non off value given to the autoComplete property to off Example JSX input type password autoComplete new password placeholder Password required Rendered HTML input type password autocomplete off placeholder Password required Besides the obvious case of on there are also semantic detail values that are a valid part of the spec These values when passed to the autoComplete property should be respected and left alone Tested in React 15 2 0,,"zpao,zpao,zpao",2016-07-25 17:28:54,2016-07-25 18:57:45
PR,Wording change in doc,According to this ownership the word parent should be changed to owner,,zpao,2016-07-25 12:28:04,2016-07-25 18:59:15
PR,Update docs zh cn,This pr update some document in Chinese to new state,,"zpao,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,zpao,keyanzhang,keyanzhang,zpao,keyanzhang",2016-07-13 01:22:11,2016-07-25 19:23:45
PR,transient dependencies transitive dependencies,I think that is what you meant although with npm dependencies are kind of transient P,,"amasad,amasad,gaearon,amasad,zpao",2016-07-23 03:54:48,2016-07-25 23:16:11
PR,Added ReactNL conference,Added ReactNL to the list of conferences Check out for details,,zpao,2016-07-23 14:02:13,2016-07-25 23:17:05
PR,fix doc for React Native mountComponent,,,zpao,2016-07-20 01:55:53,2016-07-25 23:19:15
PR,Added link to HyperDev version of tutorial app 1,This adds a remix link to a version of the React tutorial on HyperDev some users might prefer this as they get a copy of the code that just runs without any setup and they can edit it straight away I can add maintainers to the HyperDev project like with the React JSFiddle examples,,"zpao,zpao,zpao",2016-06-13 15:02:14,2016-07-25 23:29:42
PR,Remove unused unmountIDFromEnvironment,I got rid of the need for this a few months ago,,sophiebits,2016-07-13 04:30:59,2016-07-26 06:34:22
IS,Possibility to return multiple elements from render,This can be seen as an extension of 7353 I'm asking if in the light of 5753 it would be possible to return an array with multiple elements and maybe strings too from render Currently it is already possible to return an array with a mix of elements strings from a block in JSX Could the same comment wrapping method from 5573 allow for this also for render methods Motivation is that it is sometimes hard to get layout to work as expected if one has to wrap the list of elements in some other element and the alternative is to write plain functions instead of react components to produce the expected result It would be syntactically nice to be able to componentize multiple output components,,gaearon,2016-07-26 10:33:54,2016-07-26 11:04:59
PR,more helpful error message,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA eg const Feedback message inErrorState instead of const Feedback message inErrorState,,battaile,2016-07-26 17:00:01,2016-07-26 18:30:01
PR,Create 02 displaying data zh TW md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"jackson-huang,keyanzhang,keyanzhang",2016-07-15 02:37:51,2016-07-26 20:45:12
IS,IE10 IE11 becomes unresponsive after updating use element inside a SVG,This is a bug that can be reproduced in IE10 and 11 The UI will become unresponsive after the first update of the use element Visit and click toggle the button It works fine in Chrome Firefox but in IE the browser becomes unresponsive after the first click There is no error thrown I was able to reproduce it in all 15 x x versions and in 0 14 8 on Windows 7 IE10 11 modern ie editions,,zpao,2016-07-26 16:35:19,2016-07-26 23:04:20
PR,PropTypes distinguish nullable from optional object field,This gives a more precise message no type semantics change to the case of passing a field in an object but whose value is null Before Would scream Required prop foo was not specified in MyComp Now it will be Required prop foo was specified in MyComp but its value is null Works as expected in nested objects This fixes the issue of a component transitively passing a null specifying the correct field to the child but have the child tell it that it did not provide the prop Optional field and nullable are two different things anyway,,"chenglou,gaearon,chenglou,sophiebits,chenglou,keyanzhang,sophiebits,chenglou,chenglou,sophiebits",2016-07-16 02:30:21,2016-07-26 23:26:52
IS,I have some questions about the movies in 'React Examples' could you help me,'use strict' var ReactNative require areact native' var StyleSheet ReactNative var MAX VALUE 200 import type StyleObj from 'StyleSheetTypes' Question 1 What is the 'StyleSheetTypes' where is it come from Question 2 What is the 'StyleObj' function getStyleFromScore score number StyleObj if score 0 return styles noScore var normalizedScore Math round score 100 MAX VALUE return color 'rgb ' MAX VALUE normalizedScore ' ' normalizedScore ' ' 0 ' ' var styles StyleSheet create noScore color ' 999999' module exports getStyleFromScore Could you help me Thank you very much,,zpao,2016-07-28 09:15:06,2016-07-28 16:05:47
PR,Fix incorrect doc location,Sorry I did not notice that 7284 was not in the right folder cc,,"keyanzhang,zpao",2016-07-28 06:23:22,2016-07-28 18:03:07
IS,Data in a keyed list of option s in a select being mangled unpredictably,I'm going to close this issue immediately since I do not have a reproducible test case We have hit this issue exactly once that I know of but the code is so simple that we suspect a React bug may be the cause I'm hoping that documenting this might help someone else who stumbles across it in the future Do you want to request a feature or report a bug Report a bug Reduced code sample We are not referring to the STATES module anywhere else in the application i e we are pretty certain it is not being mutated accidentally What is the expected behavior The list of states is the list of two letter state abbreviations in order AL AK AZ What is the current behavior The list of states is being intermixed with some other unknown data It ends up looking something like this Notably we do not have the strings BUT FROM in all caps anywhere in our codebase at all Then again it does not look like React does either Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 1 0 Chrome 51 0 2704 103 OSX,,zpao,2016-07-29 01:16:58,2016-07-29 01:17:03
PR,build ReactTestRenderer package,Reading s blog post on Jest 14 this morning and the import from React internals stuck out to me The goal is that we can change the public blog post to the following sooner rather than later,,"iamdustan,zpao,zpao,zpao,iamdustan,iamdustan,sophiebits,iamdustan,zpao,zpao,iamdustan,sophiebits,cpojer,iamdustan",2016-07-27 13:52:15,2016-07-29 04:39:05
IS,react automatically remove vendor prefix in inline style,Do you want to request a feature or report a bug bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior react can render css vendor prefix Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I tried v0 14 x and v0 15 x the result is the same,,syranide,2016-07-29 09:19:37,2016-07-29 09:37:41
IS,Some inline SVGs not rendering in IE 11,I'm in the process of upgrading a project from React 0 10 0 to 15 2 1 Strangely some of our inline SVGs have stopped rendering in IE 11 after the upgrade Here are before and after screenshots as well as the SVG elements themselves In this example the little red alert icon renders fine in IE 11 with the old React alert visible But it is missing with the new React alert invisible With the old React here is how the SVG element for this alert icon appears in the HTML If you want to see these in action put in a bogus email password at both of the following URLs in IE 11 Old React New React Any ideas what could be causing this Note that the little G icon for the Google button is also an inline SVG yet it renders fine with both versions of React,,"zpao,zpao,zpao",2016-07-26 22:59:17,2016-07-29 18:02:40
PR,Add Do not Call PropTypes warning,This warning was introduced in 7132 This document should be available by,,"gaearon,zpao,gaearon,zpao,zpao,zpao",2016-07-07 21:56:16,2016-07-29 19:04:33
PR,docs Add permalink to PropTypes warning page,Followup to 7219 which was created before the Jekyll 3 upgrade which needs the permalink field,,zpao,2016-07-29 19:13:41,2016-07-29 19:14:01
IS,Ship 15 3 0,No estimated date yet but wanted to make sure we have something to track non cherry picking actions that will be required set up to point to,,"zpao,zpao,zpao,zpao",2016-07-07 22:23:11,2016-07-29 19:22:45
IS,JSX shorthand property syntax,Hello I have searched for similar issues but did not found one sorry if this is a duplicate Let say I have following component I'm aware about spread operator but it is not comfortable sometime For example if I do not want to revalidate Header when text property is changed,,zpao,2016-07-29 19:12:45,2016-07-29 19:58:24
PR,docs add permalink for newly translated page,cc just FYI,,"zpao,keyanzhang",2016-07-29 23:20:40,2016-07-29 23:24:43
IS,Bound function has no access to this refs,Seemed when a function is bound to the component class it can no longer access this refs see following simple case where bar works but foo did not I would expect the two should behave the same any idea,,syranide,2016-07-29 09:55:36,2016-07-30 05:11:28
IS,Implicit returns in a method,Can I return this without using areturn fullnames',,keyanzhang,2016-07-31 03:28:32,2016-07-31 03:34:42
PR,Avoid Member not found exception in IE10,In IE10 custom change events raise Member not found when accessing 'cancelBubble' To circumvent this the SyntheticEvent class now checks for typeof event cancelBubble 'unknown' This eliminates this exception and maintains the expected bubbling functionality I would never heard of typeof x 'unknown' before but it seems to be a goofy JScript thing I discovered it in the jQuery issue tracker I have confirmed that this preserves bubbling functionality from IE9 11 Safari Chrome and Firefox This technically is not a problem on master but it fixes the issue for 15 stable and I'm sort of curious what other events have this same issue,,"nhunzaker,syranide,nhunzaker,syranide,nhunzaker,syranide,nhunzaker,syranide,nhunzaker,syranide,syranide,nhunzaker,nhunzaker,syranide,mxstbr,nhunzaker,alexzherdev,nhunzaker,nhunzaker,nhunzaker,syranide,nhunzaker,syranide,syranide,sophiebits,nhunzaker,nhunzaker,nhunzaker",2016-07-23 15:13:48,2016-07-31 20:59:51
IS,PureComponent breaks hot reload,Seems switching from Component to PureComponent breaks hot reloading error messages below it can be reliably reproduced in any project simply switching back to Component will fix the problem,,"syranide,gaearon,gaearon",2016-08-01 03:10:45,2016-08-01 10:35:18
IS,Reusable Components we probably are doing it wrong,I have been using React for business projects since 2015 I built 2 large 1 medium and many small apps One of my dreams is to create reusable components that can be shared across projects and still support highly customization even if the CSS framework changes I mean I want to support Bootstrap Foundation Semantic UI raw styles and other frameworks that I do not know To do it I discovered that we should be highly explicit and should not make styling assumptions For example Advantages As it is a simple example you probably wo not see any advantages But I will try to list some 1 Creating a formal API helps you thinking about how to apply styles in the next project as Button defines some types that every app needs you do not need to think about possible styles a Button have you just use it 2 For every project you will use the same API when you back to the project weeks or months later you will know how to use it 3 Pulling fixes is easy as npm update 4 Upgrading is easy as npm install my reusable component latest and then updating just one file 5 You can build a platform of Buttons on top of ReusableButton e g BootstrapButton FoundationButton SemanticButton etc instead trying to cover every use case inside a Button you use the power of composability,,"hnordt,hnordt,aweary,hnordt,aweary,hnordt,syranide,hnordt,syranide,hnordt",2016-08-01 15:16:25,2016-08-01 15:49:56
IS,Binding in react,I recently read an article rjun07a binding callbacks in react components 9133c0b396c6 x2t0839fs on Medium about binding in react Basically explaining how you should bind functions inside of the constructor of stateful components to prevent unnecessary rerenders in a component It shows how using arrow function and bind causes function creation on the spot and makes it seem like new props are being received continuously even when it may not This is bad and prevents optimizations according to the article So great I know I should bind in constructor but what about binding methods with parameters not just calling them in stateful and stateless components Say theres something like the following It throws an error because the call evaluates immediately to a number when it should be a function This makes sense and the only way around this I have been able to go around this is using an arrow function in the onClick doSomething 5 6 and that will run But this will cause unnecessary rerenders that the article explained So how could you do this better and prevent unnecessary rerenders in stateless and stateful components,,"brigand,hnordt,aweary,milesj,aweary,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,milesj",2016-07-31 16:27:33,2016-08-01 17:25:16
IS,The url to references of react and react dom on tutorial docs is showing undefined,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"zpao,zpao",2016-08-01 09:37:40,2016-08-01 17:54:30
PR,Rename Devtool to Hook,Now devtool stands for our chrome extension and our internal stuff are called hook s Module name changes Note is a temporary compatibility fix for React Native www,,"keyanzhang,gaearon,keyanzhang,gaearon,zpao",2016-07-29 23:46:24,2016-08-01 18:42:34
PR,Eliminate all lint warnings,No huge deal if this is rejected for git blame reasons but I saw these warnings from grunt lint enough that I figured I would send out a PR killing the noise,,"nhunzaker,zpao,nhunzaker",2016-08-01 12:30:33,2016-08-01 20:17:58
IS,React Firebug not playing nicely together,It is not clear where the blame for this one lies yet but there have been a couple reports of React not working when Firebug is used This only seems to affect v0 14 and not 0 13,,"zpao,ericnakagawa,zpao",2015-10-23 16:08:03,2016-08-01 22:27:58
PR,Run all website images through Imageoptim,As I was doing 7339 I noticed the images there were decently large I started running them through imageoptim v1 6 2b3 default config and then decided to do that on everything and that is where we are This might not be worth it since we will be paying for it in git history size 3x because cherry picking built docs but it is a substantial win for the actual website Saved 3 5MB out of 15 5MB 36 2 per file on average up to 87 1,,"zpao,vjeux,zpao",2016-07-22 20:21:39,2016-08-01 22:37:09
PR,Use context parameter of ajax in documentation,This is essentially synonymous with the current code but adds clarity Setting context this as a parameter of ajax has the same effect as calling bind this on both success and error while being a bit more explicit Plus it only needs to be written in one place instead of two,,zpao,2016-07-28 02:36:22,2016-08-01 22:41:20
PR,contentType in the handleCommentSubmit react tutorial,contentType 'application json' The change is required made to wait for 30minutes figuring out what to do Finally adding that solved my problem,,"zpao,zpao",2016-07-20 11:47:41,2016-08-01 23:02:10
PR,Change trackedTouchCount invariant into a console error,Doing to ResponderEventPlugin what 7143 did to ResponderTouchHistoryStore This changes the invariant that currently fatals React Native environments when touch events are misfired to instead fail gracefully via console error Reviewers Test Plan Ran grunt test and flow src successfully,,"yungsters,sophiebits,yungsters,yungsters",2016-08-02 05:29:56,2016-08-02 05:42:30
IS,ReactTestRenderer outputs undefined html tag,We are currently starting test coverage with Jest and are using the ReactTestRenderer to compare against Snapshots We are running into this issue here I have a simple component just rendering a prop Leaving PropTypes out for now if we pass someAttribute as a string instead of a number the snapshot is generated as expected with the number 1 instead of the tag undefined Am using React ReactTestRenderer v 15 3 0,,"sophiebits,zpao",2016-08-01 15:45:58,2016-08-02 17:01:07
IS,How to transform stateless component into stateful harmlessly,I want to request a feature Now when I transform a stateless Component into stateful it is awful to have all those git diffs I want a better way to write stateless and statefull Component which can be switched harmlessly with as less diffs as possible Or maybe someone can recommend a better way to construct code,,zpao,2016-08-02 07:06:39,2016-08-02 17:12:57
IS,Question How to update context from the descendant component,I want to use context to pass down some data from parent to some descendant components But i also need to update that context from the descendant component like when clicking on descendant component I find there is no document to tell how to do this so i am wondering that if this is a anti pattern,,gaearon,2016-08-02 04:48:05,2016-08-02 19:07:53
IS,componentDidUpdate running before render flushes,I have been trying to write a simple transition component for React Router that looks like this The idea is to fade in each new child component through CSS by changing the class between Active and Hidden I have noticed for small child components componentDidUpdate will run before the new DOM is flushed resulting in no transition at all A work around seems to be to put the setState under componentDidUpdate in a setTimeOut this setState stage 'active' 1,,"gaearon,gaearon",2016-05-08 00:27:02,2016-08-02 19:15:20
IS,Add Text and View components,With default rendering into span and div in the browser This small change can enable universal React components react intl badly need it The next step is to port StyleSheet to the browser and allow style to accept it That is all we need for the start,,zpao,2016-07-30 01:04:02,2016-08-02 19:15:26
PR,Update componentWillReceiveProps docs,The previous example shows a incorrect use case for state likesIncreasing is a good candidate to be calculated on render or in a custom method instead being saved as state,,"hnordt,hnordt",2016-08-02 19:37:08,2016-08-02 19:39:03
IS,Date input with defaultValue regression in 15 2,On Chrome browser or webview on Android an input type date with a defaultValue specified does not show the defaultValue with react 15 2 but it works in 15 1 I have tested on multiple devices including tablets and phones My phone has chrome 51 0 2704 81 It works ok on Chrome desktop browser With React 15 1 screenshot 20160708 194606 With React 15 2 screenshot 20160708 194726 Additionally if you tap the blank date field and select the date which is what the defaultValue was set to it leaves the field blank and no onChange event is triggered Test case input type date defaultValue '2016 07 08' Inspecting the elements rendered on the Android device via chrome devtools the 15 1 version renders as input type date The 15 2 version renders with the value in the element input type date value 2016 07 08 This also affects input type time and possibly other types but I have only tested date and time,,"syranide,gaearon,sophiebits,nhunzaker,keyanzhang",2016-07-09 00:22:29,2016-08-02 19:56:05
PR,Fix input with type date time etc issue on mobile browsers,Fixes 7233 In short iOS Safari acts weird when dealing with HTML5 input types assigning node defaultValue does not let the browser update the UI so we will need to set node value to a dummy value then reset it Reviewers Test Plan output should work on iOS Safari and other mobile browsers I tested with iOS Safari iOS Chrome and Android Browser,,"keyanzhang,sophiebits,sophiebits,sophiebits,nhunzaker,nhunzaker,sophiebits,nhunzaker",2016-08-01 23:59:36,2016-08-02 19:56:05
PR,docs Use npmcdn,fb me has been annoying and not really a CDN It also requires being a Facebook employee to ship a release which surely wo not always be the case npmcdn allows us to ship a new version and have it immediately available which was always one of my concerns with other services they are great but usually on some small delay Let is make the switch for most of our links I kept everything here using full version specs though perhaps we could use the version less URL in the readme to always fetch latest Todo x jsfiddles tutorial repo cc,,"zpao,gaearon,gaearon,zpao",2016-08-01 19:32:02,2016-08-02 20:44:06
PR,Specify files field for npm packages,I had some rogue rej files get published last release I cleaned those up but for the future this is good regardless,,"zpao,vjeux,sebmarkbage,zpao,sebmarkbage",2016-08-01 22:32:17,2016-08-02 22:11:45
PR,Fix JSON in package json,JSON is stupid and unforgiving This fixes the thing I broke in 7396,,zpao,2016-08-02 23:04:34,2016-08-02 23:05:03
IS,Bug onClick firing when radio button is selcted with arrow keys,Current behaviour the onClick handler is being fired when a radio button is selected using the arrow keys Expected behaviour onClick not fired when navigating radio buttons with arrow keys Example js output Click radio 1 the press down or right to navigate to second radio box ReactEvent is logged to console alert appears Tested with React 15 0 3 15 0 1 Chrome 51 OS X,,"brigand,brigand,zpao",2016-08-02 22:38:32,2016-08-02 23:51:02
IS,react dom package no longer listed in npm registry,This page 404s and react dom does not show up via search on npmjs com either The package is still linked from zpao is npm profile zpao is npm profile Is this an npm issue,,"aweary,zpao,zpao",2016-08-02 03:11:31,2016-08-03 00:53:14
IS,I can not fire onTouchEnd and onTouchCancel events,Hello I'm trying to create horizontal scroll and having an issue I create two buttons and for each button I add events onTouchStart onTouchEnd and onTouchCancel When event onTouchStart triggers I change margin for container which contains all scrollable elements And onTouchEnd and onTouchCancel need to stop this scroll But these events do not trigger and I can not stop scroll In which cases events may not trigger I use chrome v40 OS Ubuntu 14 01 react 15 0 2 I tested it in Chrome device mode This is my code,,ericnakagawa,2016-08-02 15:24:46,2016-08-03 14:28:27
PR,docs Use appropriately sized og image,I helped somebody with sizing images to avoid cropping on FB and realized we did not even follow the recommended guidelines images Our share attachments on FB and the preview in composer were always suboptimal a small square or scaled cropped image respectively This changes it to use the recommended minimum size of 1200x630 I just kept it minimal keeping the logo at the same size and adding space around It still does not say React anywhere but I think that is ok the rest of the attachment does Before Composer img width 489 alt image src Story img width 526 alt image src After Composer img width 491 alt image src Story img width 523 alt image src,,zpao,2016-08-03 19:36:07,2016-08-03 21:08:44
IS,Bug ReactTestUtil Simulate toLowerString mutating event type,Current behaviour ReactTestUtil is returning nodes with event type cast to lower case strings This is causing test failures in several external repos react select being a public facing example As far as i can tell the issue appears to be that this type mis match is causing DOM nodes to not to return the same node that was initially called Expected behaviour ReactTestUtil should return the proper event type cast to string Steps to verify Clone npm install npm test verify tests fail and react and react addon test util are using v15 3 0 Replace line 429 node modules react lib ReactTestUtils js with fakeNativeEvent type eventType toString run npm test and verify tests pass Tested with React 15 3 0 Chrome 51 OS X,,"zpao,zpao",2016-08-03 21:09:54,2016-08-03 22:46:06
PR,dont mutate event type name just pass it through,This resolves an issue with mutating the type string that was causing some third party test failures Closes 7418,,zpao,2016-08-03 21:12:03,2016-08-03 22:48:00
PR,Merge pull request 1 from facebook master,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA pull,,,2016-08-04 00:59:52,2016-08-04 01:05:04
IS,Missing polyfill in IE with 15 2 3,Using 15 2 3 and getting this error in IE11 as suggested here seems to fix the problem I believe this issue was introduced in moving from 0 14 3 to 15 2 3 but I have not reverted to the older React to verify this Should not React itself include this polyfill,,"zpao,zpao",2016-08-04 11:28:03,2016-08-04 19:03:35
IS,Inline style not working dynamically,Do you want to request a feature or report a bug Report a bug What is the current behavior The style props is in component but is not render in the DOM Console images What is the expected behavior Render in the dom style visibility hidden Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Version React 15 3 0,,,2016-08-05 13:08:42,2016-08-05 13:59:51
PR,Relay blog post,cc,,josephsavona,2016-08-05 17:51:58,2016-08-05 17:55:07
IS,Infinite loop in IE10 with number input,From an internal thread I'm debugging an issue in IE 10 where React could go into an infinite loop thus hanging the main thread This is not observed on IE 11 Chrome nor Firefox Here is a minimal reproducible fiddle js output On IE 10 press back space in number input or override the current number with anything else select all press any key Observe IE 10 main thread hangs immediately The issue seems to be caused by setting 'NaN' into type number input I have not fully figured out why but avoiding setting non numeric string as value can mitigate this issue My speculation is that due to how IE 10 raises propertychange event whenever input value is set from JS If you set a non numerical value to number input value is reset to empty string upon retrieval So we enter a loop of retrieving empty string parseInt setting 'NaN' propertychange retrieving empty string setting 'NaN' again because 'NaN' '',,"sophiebits,nhunzaker,sophiebits",2015-11-24 00:35:10,2016-08-05 18:21:39
PR,Fiber Various minor tweaks and a few big ones,See individual commits,,"sebmarkbage,sebmarkbage,sophiebits,vjeux,sophiebits,sophiebits,sophiebits,sebmarkbage,sophiebits,vjeux,acdlite,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage",2016-07-12 01:18:34,2016-08-05 21:40:28
PR,Fix link formatting on Relay blog post,Fix malformed markdown,,josephsavona,2016-08-05 20:51:58,2016-08-05 21:54:34
IS,How to import some addons from react with addons,I want to require react lib ReactMount and react lib ReactInputSelection from precompiled reactjs But I got none,,"keyanzhang,zpao",2016-08-07 07:39:11,2016-08-07 20:46:37
IS,Pass default parameter values in function,I got this error after updating react native and react i think this is right syntex but i dont know why this error is coming,,gaearon,2016-08-08 11:26:47,2016-08-08 11:51:51
IS,React 15 2 shows warnings for unknown props on root level components,Probably not a bug but a very unpleasant change for many When passing props to root components i e div is a is etc if it is an unknown prop there is now a large stack trace displayed For those of us using cljs libs such as om reagent we frequently leverage passing props around with args and into div quite a bit to write components that can take open ended markup content It would be very painful to go back and refactor many of our components to not do this and as it is now with 15 2 we have to deal with massive amounts of obnoxious stack traces that make development extremely unpleasant screen shot 2016 08 08 at 2 15 57 pm Not to show warnings 15 1 and prior did not display this behavior,,"gaearon,gaearon",2016-08-08 20:34:10,2016-08-08 20:54:56
IS,Feature request change the default shouldComponentUpdate to shallowCompare,I understand it is not backward compatible but I guess most people use this pure component approach in the majority of their components,,zpao,2016-08-08 16:15:17,2016-08-08 21:50:59
PR,Doc change a word in Doc,I feel use iseeking' is better in this context Maybe the original author of this paragraph had a typo,,"zpao,zpao",2016-08-08 12:16:41,2016-08-08 23:10:28
PR,Capitalize AJAX,,,zpao,2016-08-06 00:42:43,2016-08-08 23:24:30
PR,Update gitignore to use gitignore io,This PR removes all ad hoc gitignores in favor of gitignore io which generates a complete gitignore files based off of,,"zpao,zpao",2016-08-08 22:03:32,2016-08-09 16:09:31
PR,fix batchedUpdates return value,When I used ReactDOM unstable batchedUpdates with redux middleware to fix this issue it breaks redux middleware return value,,"sophiebits,zpao,sophiebits,sophiebits,sophiebits",2016-08-08 16:39:48,2016-08-09 17:26:29
PR,Bundle DOM renderers into their individual UMD bundles,Instead of exposing the entire DOM renderer on the react js package I only expose CurrentOwner and ComponentTreeDevtool which are currently the only two modules that share state with the renderers Then I package each renderer in its own package That could allow us to drop more server dependencies from the client package It will also allow us to ship Fiber as a separate renderer The total size for react min js react dom min js is 5kb larger because of the overlap between them right now I would like to see what an optimizing compiler can do to this Some of that is fbjs stuff There should not need to be that much overlap so that is something we can hunt We should keep isomorphic absolutely minimal so there is no reason for other React clones not to use it There will be less overlap with Fiber I like this strategy because it encourages us to keep isomorphic really minimal However another strategy that we could do is package the isomorphic package into each renderer bundle and conditionally initialize it if it has not already been initialized That way you only pay an overlap tax when there are two renderers on the page but not with one It is also easier to just pull in one package The downside is the versioning stuff that the separate npm package would solve That applies to CDNs as well ReactWithAddons is a bit weird because it is packaged into the isomorphic package but has a bunch of DOM dependencies So we have to load them lazily since the DOM package gets initialized after cc,,"sebmarkbage,sophiebits,gaearon,sebmarkbage,zpao,sebmarkbage,zpao,zpao,zpao,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,zpao,sebmarkbage,sebmarkbage,yiminghe,sebmarkbage,yiminghe,zpao,sophiebits",2016-07-01 20:00:50,2016-08-09 19:39:04
PR,Fix trailing build issues,I screwed up my push in 7164 Here is the remaining pieces,,sebmarkbage,2016-08-09 19:48:24,2016-08-09 19:52:16
PR,Include React itself in the list of build shims,Without this we end up bundling all of the isomorphic React into the DOM bundle This was fixed in 7168 too but I will just do an early fix to ensure that 7168 is purely an npm change,,sebmarkbage,2016-08-09 21:33:31,2016-08-09 22:33:34
PR,Remove unused createHierarchyRenderer,This has not actually been used in the past 3 years and nobody on the team even remembered that it existed,,"zpao,sophiebits",2016-08-09 22:40:15,2016-08-09 23:03:24
IS,Memory leak in React 15 3 0 non production server side rendering,A memory leak appears to have been introduced to server side rendering in React 15 3 0 when NODE ENV production With NODE ENV development the size of the heap grows proportionally to the number of requests received This was confirmed in both Node v6 3 0 and v0 12 3 Also it was confirmed to work correctly in React 15 2 0 To reproduce Start the app configured for server side rendering with NODE ENV development or just not production Inspect the V8 heap before and after hitting your server with a number of requests I used heapdump to take the snapshots and wrk to hit my app with a bunch of requests Load the snapshots into chrome dev tools profiler Here is what I see img width 1278 alt screen shot 2016 08 02 at 12 47 34 pm src The culprit appears to be the react children mutation warning L18 onBeforeComponentMount saves a reference to a given React Element and all of its props in the elements object but the cleanup steps onComponentHasMounted or onComponentHasUpdated are never called on the server and thus the elements object is ever growing Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 3 0 react dom 15 3 0 node 6 3 0 0 12 3 express 4 0 0,,"zpao,gaearon,gaearon,keyanzhang",2016-08-02 20:26:19,2016-08-10 18:50:18
PR,Fix memory leak in ReactChildrenMutationWarningHook for SSR,Fixes 7406 Thanks for providing such a detailed investigation Reviewers,,"keyanzhang,gaearon,gaearon,gaearon,gaearon,keyanzhang,gaearon",2016-08-03 00:08:20,2016-08-10 18:50:18
PR,Prevent performance regression in DEV due to warning arguments,Expensive arguments shouldn t be calculated if the warning does not fire This fixes a few cases where that calculation might be more expensive than usually In my testing this brings down average row click time in Power Editor from 300ms to 220ms in DEV vs 40ms in prod,,"gaearon,gaearon,gaearon,jimfb,sahrens,sahrens,zpao,gaearon",2016-08-10 12:58:57,2016-08-10 18:52:46
PR,Fix unmounting performance regression in DEV,This is the same issue as was previously fixed by 7232 but in DEV Test plan 1 Grab 2 npm run build dev 3 Mount 10K nodes then clear Before this change 6 seconds After this change 2 seconds This seems only relevant for Chrome,,"gaearon,vjeux,sophiebits,gaearon,gaearon,sophiebits,gaearon,gaearon",2016-08-10 14:23:42,2016-08-10 19:14:59
IS,Inline Style including important are ignored,If you set a style backgroundColor red it works as expected but backgroundColor red important will be ignored just like in this example,,zpao,2016-08-10 09:13:39,2016-08-10 21:31:52
PR,Remove unnecessary indirection and events from the hooks,Removing some additional DEV regressions This does two things Removes unnecessary indirection with nested function in the tree hook Replaces onSetOwner onSetDisplayName and onSetText with one event We can do this now easily because we track elements This gives me 1 5x improvements in both mounting and unmounting time in DEV I tested with,,"gaearon,gaearon,gaearon,sophiebits,sophiebits,gaearon,gaearon,sophiebits,sophiebits",2016-08-10 19:50:51,2016-08-10 23:19:09
PR,Fiber Mock ReactDOM for Fiber Tests,We currently write all our tests against the DOM implementation I need a way to run the Fiber tests against it But I do not want to take on any package dependencies on Fiber modules yet There is a problem with jest right now where you can not globally mock modules that already exist So I have to add a global call to jest mock Luckily we already have a way to test the useCreateElement paths using a feature flag I wo not activate this flag in travis until it passes but the idea is to run all three variants in travis I'm not sure that invoking rAF and rIC synchronously is the best way to test this since it does not capture the backwards compatibility aspect I e the fact that people might be relying on the synchronous nature in real apps too It is a start Ideally jest would have these built in,,"sebmarkbage,sebmarkbage,sophiebits",2016-07-06 19:12:52,2016-08-11 00:44:36
PR,Build renderers into their individual npm packages,Builds on top of 7164 with one commit This copies modules into three separate packages instead of putting it all in React The overlap in shared folders gets duplicated This allows the isomorphic package to stay minimal It can also be used as a direct dependency without much risk This also allow us to ship versions to each renderer independently and we can ship renderers without updating the main react package dependency,,"sebmarkbage,zpao,zpao,zpao,zpao,zpao,sebmarkbage,sebmarkbage,zpao,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,zpao",2016-07-02 09:00:16,2016-08-11 01:17:49
PR,Build React DOM Fiber package,Builds on top of 7164 This builds a react dom fiber js bundle which exposes ReactDOMFiber This allows early experiments with the new Fiber reconciler I now enable it in the Fiber example I also expose it in the npm package through react dom fiber,,"sebmarkbage,sebmarkbage,zpao,zpao,gaearon",2016-07-02 19:15:28,2016-08-11 01:45:14
IS,Warning React attempted to reuse markup,Do you want to request a feature or report a bug bug What is the current behavior It says Warning React attempted to reuse markup in a container but the checksum was invalid This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting React injected new markup to compensate which works but you have lost many of the benefits of server rendering Instead figure out why the markup being generated is different on the client or server client div data reactroot server div data reactroot Server side React render was discarded Make sure that your initial render does not contain any client side code As one can see the client and server parts are equal so I do not know what is it complaining about What is the expected behavior That it would complain about unequal strings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The latest React 0 15 3,,,2016-08-11 14:36:49,2016-08-11 14:46:38
PR,Consolidate hook events,Our DEV performance suffers because we have too many hook events right now I want to cut down on their number and be stricter in the future about adding more events I removed onInstantiateComponent onSetParent onComponentHasMounted onComponentHasUpdated onBeginReconcilerTimer onEndReconcilerTimer Instead I added onBeforeUnmountComponent and moved parentID into onBeforeMountComponent As a result we now have a very simple and small hook event footprint for reconciliation onBeforeMountComponent and onMountComponent onBeforeUpdateComponent and onUpdateComponent onBeforeUnmountComponent and onUnmountComponent Basically a pair of events for every operation we support This will reqiure changes to RN and WTF integration,,"gaearon,gaearon,sophiebits,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon",2016-08-11 15:49:16,2016-08-11 18:35:51
PR,Require the isomorphic React instead of internals from renderers,This stops using internals of the isomorphic package inside of renderers This puts our renderers on equal footing with any other renderer built on top of the isomorphic package This is needed for flat builds It also lets us get rid of a bunch of special cases in the build scripts It also allow us to just copy the source files into React Native instead of having to build first to resolve the special cases Because React Native uses providesModule too and has an alias for React which uses the npm package,,"sebmarkbage,gaearon,sebmarkbage,sebmarkbage,sophiebits",2016-08-11 20:01:04,2016-08-12 01:56:55
IS,Bug with embedded slides iframe,Do you want to request a feature or report a bug bug What is the current behavior Google slides does not enter full screen mode when the allowfullscreen attribute is set to a truthy value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I expect the slides to display full screen Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am trying this in chrome and firefox I am using the latest jsfiddle available react version and in my application react 15 1 0,,"aweary,aweary",2016-08-11 06:57:22,2016-08-12 02:11:39
PR,Use aliasify everywhere instead of browserify global shim,I already had to aliasify to have better control over the requires so we might as well do it everywhere for consistency This probably makes it easier to rebase the rollup work too Aliases seems to be how you solve this in that world since you can not just swap out the expression in an ES import,,"sebmarkbage,sebmarkbage,zpao",2016-08-12 02:43:31,2016-08-12 03:17:37
IS,Unable to run Babel code without serving HTTP file source file,I am new to reactjs and trying to install babel to run babel code without serving HTTP file By following the Package Manager I have installed it with browserify as but when I access it from this does't work I have very trouble Please Help me to solve it Thank You in advance,,zpao,2016-08-11 15:13:30,2016-08-12 03:20:16
IS,In IE11 an input with type search does not trigger React is change event when clicking the clear button,Do you want to request a feature or report a bug Bug What is the current behavior In Chrome Firefox Edge etc when using an input with type isearch' clicking the clear button the X on the right triggers the React onChange event In IE11 and probably earlier versions the onChange event does not fire even though the input is cleared onInput DOES get fired in IE11 when the search box is cleared js console output What is the expected behavior The React onChange event will consistently fire in IE11 as well Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 1 is definitely affected Not sure if it worked previously IE11 is affected but other browsers including Edge do not appear to be,,nhunzaker,2016-08-12 01:06:59,2016-08-12 03:29:27
IS,Element migration from one parent to another,Do you want to request a feature or report a bug Feature request What is the current behavior Currently there is no high performance way to move a rendered element from one parent to another It causes a lot of overhead because it requires a full mountComponent in the new place even if we reuse the component instance itself Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React All Why we need this I am trying to optimize one specific case I need to render a component invisibly in order to measure it is dimensions After that I need to render same component in the visible area Currently I need to buy an overhead in my case 15 50ms to do so where in fact when done in pure DOM it is a simple appendChild call with almost no overhead To be more specific here I am talking about react virtualized library and more specific it is CellMeasurer component which can become 50 faster if we can avoid that overhead,,"gaearon,gaearon,aweary",2016-08-10 11:20:58,2016-08-12 04:17:05
IS,Problematic code in Tutorial,In this page pollInterval 2000 caused the browser to load api comment every 0ms instead it should be pollInterval 2000 to load every 2 seconds,,zpao,2016-08-12 03:47:23,2016-08-12 12:35:49
PR,WIP Improve performance of hooks in DEV,WIP,,"gaearon,vjeux,gaearon",2016-08-12 12:03:02,2016-08-12 13:27:21
PR,Improve DEV performance in Chrome,This consistently improves DEV performance in Chrome Before this change This only seems to help DEV in Chrome I did not observe any significant difference in PROD in Chrome or in either build in Firefox or Safari Normally it would be too much dogscience but I feel the wins for Chrome DEV most common use case are significant they are consistently reproducible and it kinda makes sense to use numbers anyway,,"gaearon,sophiebits,gaearon",2016-08-12 16:06:44,2016-08-12 17:34:46
IS,Better error message on ReactElementValidator type error,Currently createElement throws the warning Warning React createElement type should not be null undefined boolean or number It should be a string for DOM elements or a ReactClass for composite components It would be more helpful if the warning actually said what value was passed e g Warning React createElement 5 is an invalid value for type It should be a string for DOM elements or a ReactClass for composite components,,"aweary,edvinerikson",2016-08-12 18:44:07,2016-08-12 19:01:43
PR,Remove ReactDOMInstrumentation,Its events are not being used anywhere so this is effectively dead code,,"gaearon,sophiebits",2016-08-12 13:29:51,2016-08-12 19:09:27
PR,Fix ReactComponentTreeHook getRegisteredIDs to work with inlined components,I broke this in 7463 parseInt cuts off text at the end Changing to just use negative numbers instead,,"gaearon,zpao,sophiebits",2016-08-13 14:49:21,2016-08-13 18:36:21
PR,Do not define key or ref dummy props if none were provided,This fixes another DEV only performance regression introduced in 15 x The idea here is that extra defineProperty getters are slow Let s only add them when we know user supplied key or ref Otherwise the user wouldn t expect to find them in props anyway Chrome before I m too lazy to format Safari results but they show similar improvements although smaller,,"gaearon,vjeux,vjeux,gaearon,sophiebits,sophiebits,gaearon",2016-08-13 03:15:59,2016-08-13 18:36:57
PR,Fix typo in changelog,,,aweary,2016-08-11 08:41:44,2016-08-13 18:45:04
IS,injectEnvironment called twice react test renderer and react dom,Trying to test a very simple React component using Material UI through Jest and react test renderer I'm stuck because ReactCompositeComponent injectEnvironment can only be called once It looks like react test renderer calls injectEnvironment but so does react dom which is in my actual application imported somewhere within a Material UI module which is in turn imported by my component code This may not really be a 'bug' in React or react test renderer per se though one could imagine other dependencies somehow loading react dom as well causing the same issue I created a test case at which may provide some more context react 15 3 0 react dom 15 3 0 react test renderer 15 3 0,,"gaearon,gaearon,sophiebits,sophiebits,aweary,sophiebits,sebmarkbage,sophiebits,gaearon,aweary,gaearon,gaearon,cpojer,gaearon",2016-07-31 16:58:24,2016-08-13 18:45:19
IS,alternatives to dangerouslySetInnerHTML methods,Hi I have read alot of warnings about dangerouslySetInnerHTML api but what react can suggest instead on official page there are examples with simple strings like div First middot Second div But i do not know how to implement this methods on such wide spread cases like displaying text with inner markup from database like p span text0 span p or even more complicated In my case this is a text created from tinyMCE editor How can i display it properly without dangerouslySetInnerHTML p s i saw different plugins like htmlparser2 or similar but they are not much popular stars count is less then 100,,vjeux,2016-08-10 14:02:49,2016-08-13 20:41:35
PR,Use ES6 Map in ReactComponentTreeHook if available,This makes DEV unmounting consistently faster in Chrome Firefox and Safari It s because purgeUnmountedComponent becomes less intensive and doesn t use delete s Browsers that don t have Map or Array from will fall back to using objects We may want to try the same pattern for other global maps that we write read often Chrome before,,"gaearon,gaearon,gaearon,sophiebits,sophiebits,gaearon,syranide,aweary,gaearon,sophiebits,gaearon",2016-08-13 16:27:35,2016-08-13 20:43:18
PR,Reduce React load time by 3 7ms in Node,The creation of the DOM factories with mapObject is a relatively expensive operation in Node It is accounting for 10 of the require load time across the various builds I saw some improvements from only unwrapping createDOMFactory but the bulk of the gains are from removing mapObject I ran a few benchmarks that only focused on load times using node 6 3 1 and jsc 11601 7 2 source Each test was run 100 times engine build before avg p90 ms after avg p90 ms node react js development 29 14 30 22 07 23 node react js production 23 30 24 19 99 21 node dist react with addons js 29 61 30 25 95 27 node dist react with addons min js 20 06 21 17 55 18 node dist react js 21 83 22 17 91 18 node dist react min js 15 08 15 12 33 13 jsc dist react with addons js 8 48 9 8 35 9 jsc dist react with addons min js 6 04 6 5 93 6 jsc dist react js 5 75 6 5 46 6 jsc dist react min js 4 07 4 3 96 4 This change also reduced the gziped size of the bundles Raw size can also be reduced by renaming createDOMFactory to something shorter This change is GCC safe see discussion in 5759 I'm also investigating adding a babel transform to inline the result of keyMirror and keyOf,,"zertosh,vjeux,sophiebits,vjeux,vjeux,zertosh,zertosh,zpao,cpojer",2016-08-14 01:09:42,2016-08-14 02:30:07
PR,Remove last use of mapObject,As per issuecomment 239652425,,"zertosh,vjeux,gaearon,vjeux",2016-08-14 03:05:54,2016-08-14 03:13:56
PR,use Object is for checking mutated children,fixes 7424,,"chicoxyzzy,zpao,zpao",2016-08-06 13:31:59,2016-08-14 10:26:35
PR,Add propsTypes and defaultProps example for stateless functions,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"TanaseHagi,zpao,zpao,aweary,aweary",2016-08-10 08:50:44,2016-08-14 17:04:47
PR,Avoid indexOf during unmounting a root in the hook,Addresses s concerns in discussion r74694607,,"gaearon,gaearon,sophiebits,sophiebits,syranide,gaearon,gaearon,syranide,sophiebits",2016-08-14 12:27:29,2016-08-15 14:47:54
IS,why not add catch block in function renderValidatedComponent,like this,,"aweary,gaearon",2016-08-08 02:59:16,2016-08-15 16:32:31
PR,Fix flow,ReactElement requires a generic argument now and the return function of render is a ReactTestInstance and not a ReactElement Test Plan,,"vjeux,vjeux,vjeux,gaearon",2016-08-14 23:30:18,2016-08-15 17:04:22
PR,Transform keyMirror to object literal,I was hoping that avoiding keyMirror during load would have a more dramatic effect but I can not tell if it is noise or not The p90 did not move and I'm always reluctant to sell something solely based on averages Results using the same benchmark from 7493 with 100 iterations engine build before avg p90 ms after avg p90 ms node react js development 22 67 23 22 32 23 node react js production 20 41 21 19 83 21 node dist react with addons js 26 79 29 26 20 27 node dist react with addons min js 18 17 19 5 18 03 19 node dist react js 18 73 19 18 02 19 node dist react min js 12 87 13 12 48 13 It does result in some modest size improvements Given the low impact of this PR it wo not hurt my feelings if it does not get merged,,"zertosh,gaearon,vjeux,zpao,zertosh,vjeux,zpao",2016-08-15 07:30:34,2016-08-15 17:12:47
PR,Fix for 7170,Fix for 7170,,"troydemonbreun,troydemonbreun,troydemonbreun,aweary,troydemonbreun,aweary",2016-08-12 21:45:35,2016-08-15 18:38:54
IS,HTML5 number input uncontrolled mode issues when changing defaultValue,Do you want to request a feature or report a bug bug What is the current behavior Providing a defaultValue to an HTML5 number input causes the element to enter into some sort of semi controlled mode Changing the defaultValue should be a noop after the element has been mounted but it seems to set a property in the element and break the behavior of the uncontrolled component If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem See this fiddle and try to enter 1e8 What is the expected behavior 1e8 should show up in the input box since some DOM property is being changed when the provided defaultValue is changed I think the DOM is trying to programmatically set the input to an interim value that is not a real number like 1e and then wipes it out and resets to an empty string which is caught in the onChange handler and persisted back to the defaultValue effectively losing the input Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest React latest Chrome,,"nhunzaker,aweary,aweary",2016-08-15 19:53:36,2016-08-16 03:31:11
PR,docs React Children toArray changes keys,As noted by in 5541,,"sophiebits,sophiebits",2016-08-14 07:56:31,2016-08-16 06:43:33
PR,Fix slow performance of PropTypes oneOfType on misses,It used to be slow whenever a type miss occurred because expensive Error objects were being created For example with oneOfType number data passing a date would create an Error object in number typechecker for every item The savings depend on how much commonly you used oneOfType and how often it had misses If you used it heavily you might see 1 5x to 2x performance improvements in DEV after this fix Thanks to for ideas on how to fix this,,"gaearon,sebmarkbage,sophiebits,gaearon,sophiebits,chicoxyzzy,sophiebits,gaearon,chenglou,aweary,gaearon",2016-08-16 23:25:59,2016-08-17 09:04:56
PR,Update onlyChild invariant message,,,"sophiebits,Daniel15",2016-08-17 19:59:46,2016-08-17 20:03:31
PR,Warn if using React unmountComponentAtNode on a different React instance is tree,As has been closed I tried to provide a fix for 1 If the node is a valid DOM node e g is of type Node ELEMENT NODE Node DOCUMENT NODE or Node DOCUMENT FRAGMENT NODE see 1 2 and if the node has been rendered by React e g has the data reactid or data reactroot attribute see issue 72004747 3 and if ReactDOMComponentTree getInstanceFromNode returns null 4 then this element has been rendered by a different React instance and we show a warning 1,,"sophiebits,sophiebits,sophiebits,aweary,syranide,aweary,sophiebits,sophiebits",2016-08-10 04:39:57,2016-08-18 00:20:36
IS,How to test onSelect,TestUtils allows the simulation of several types of events but I could not find a way to simulate the onSelect event in an input element Am I looking in the wrong place How can I test the onSelect event Thank you,,aweary,2016-08-18 13:13:02,2016-08-18 14:46:15
PR,Update 09 2 package management md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-08-18 06:32:36,2016-08-18 14:52:07
IS,Chromium fails on inline style wouldisplay',Do you want to request a feature or report a bug bug What is the current behavior When using inline style for display ' relative absolute flex ' it fails to add it to the DOM Every attribute is added except display Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 1 0 Chromium 51 0 2704 49 OS ubuntu 16 04 64bit,,"aweary,alexzherdev,aweary",2016-08-18 12:59:23,2016-08-18 15:00:51
IS,Chromium fails on inline style wouldisplay' revisited,Do you want to request a feature or report a bug bug revisited What is the current behavior I posted this bug before with an error in my description The correct bug is When using inline style for display 'flex' it fails to add it to the DOM display block and variants all work like they should I cannot reproduce the bug with jsfiddle Jsfiddle adds display flex correctly and it is the same browser working example in jsfiddle Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 0 Chromium 51 0 2704 49 OS ubuntu 16 04 64bit,,,2016-08-18 15:42:40,2016-08-18 15:58:31
PR,Fix ReactTestInstance toJSON with empty top level components,Since ReactTestInstance toJSON does not support the case where getHostComponentFromComposite returns null The component has rendered an empty node the following code throws This patch makes ReactTestInstance toJSON return null when the top level component has rendered an empty node,,"Morhaus,aweary,sophiebits",2016-08-18 15:19:26,2016-08-18 20:02:09
PR,Fix header link generation for non English docs,Adjusted the regex used when auto generating links to docs headers An example of the issue being fixed can be seen in discussion r70165133 If this PR is merged I can update my Russian PRs with proper hrefs For existing docs I have gone through and made sure all the links are working in all of the available languages some of them had to manually create a name X anchors to be referenced I removed those and replaced the corresponding references with new auto generated links What I have not been able to fix in this fix is that when links are generated with Markdown is link syntax text link they have their hrefs URL encoded so ReactElement ReactElement react will have a href of react EC 97 98 EB A6 AC EB A8 BC ED 8A B8 I argue that this drawback does not defeat the purpose of this PR though as this is only applicable for our internal links which prior to the fix looked something like anyway as seen in the PR above The sign near headers themselves will still have a proper unicode href which can be copy pasted and shared nicely Also went ahead and fixed some of the broken links already present in some of the translations,,"alexzherdev,zpao",2016-08-14 17:41:55,2016-08-18 21:55:50
IS,ReactDOMComponentTree precacheNode triggers render,React v15 2 0 I'm trying to optimize my application with server side rendering using ReactDOMServer renderToString The problem is that React in browser always triggers render methods for all components even when the root data react checksum is the same Since my page is quite big it results in a few seconds lag when JavaScript arrives scrolling is frozen interestingly it happens in Chrome and Firefox but not in Safari I tried to track it down in the React source ReactMarkupChecksum canReuseMarkup returns true so the mounting jumps to L44 which looks good but I'm still getting these initial rerenders Is this expected behavior I can not find detailed explanation how this works I could provide some working example Or do you have some tips how to prevent this initial lag Thank you,,"zpao,sophiebits",2016-07-15 18:52:48,2016-08-18 22:23:25
IS,After server side renderToString component claims it isMounted,If you keep a this reference at the componentWillMount lifecycle method of a component that is then rendered with renderToString then this isMounted true later on The documentation however claims that server side components are not really mounted since componentDidMount is never called I think this behavior changed in React 0 14 but that might be wrong,,"jimfb,sophiebits,lasekio,jimfb,jimfb,aweary,aweary,gaearon,aweary,sophiebits",2015-11-04 00:44:01,2016-08-18 22:33:07
IS,dangerouslySetInnerHTML and large amounts of markup,I have to display a large amount of markup generated on the server inside a Component It is A LOT of markup around 10 000 li a a li and dangerouslySetInnerHTML takes a long time It stalls the page for several seconds and sometimes crashes Chrome I assume that this happens because react parses the HTML and creates elements for everything Is there a way around this behaviour ps I also tried creating the li s as you normally would that takes way to long as well,,,2016-08-19 13:21:56,2016-08-19 13:33:06
IS,Proposal Stateful functional components,Functional components are awesome for numerous reasons In React there is no way to declare stateful equivalents of functional components as of today This is a feature proposal which introduces a backwards compatible solution for including an optional observable state map object in a functional component Example In the example above state changes can easily be tracked by using an ObservableMap object The initial value of the counter is 42 and it can be incremented or decremented by clicking one of the rendered buttons As soon as the state changes the stateful functional component calls itself resulting in a re render of the component If no initial state is provided then state should be assigned an empty ObservableMap instance Furthermore if an immutable variant of ObservableMap was made time travel debugging could be made possible,,,2016-08-19 13:30:13,2016-08-19 17:31:34
PR,Upgrade to fbjs v0 8 4,While this will happen naturally for fresh installs we want to ensure this is the minimum version,,zpao,2016-08-19 17:34:07,2016-08-19 17:40:03
PR,Improve validateDOMNesting message for whitespace,For 5071,,"sophiebits,sophiebits,gaearon,sophiebits,gaearon",2016-08-17 21:03:30,2016-08-19 18:45:14
IS,Missing React element for debugID warning when testing components with Jest,Do you want to request a feature or report a bug Report a bug What is the current behavior When testing components Warning ReactComponentTreeDevtool Missing React element for debugID 1 when building stack is shown when calling TestUtils renderIntoDocument If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template npm install npm test What is the expected behavior According to 7187 this is an internal warning and should not be displayed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 2 1 react addons test utils 15 2 1 react dom 15 2 1 I did not receive this warning on 15 2 0,,"gaearon,cpojer,gaearon,gaearon,cpojer,gaearon,cpojer,gaearon,gaearon,gaearon,gaearon,cpojer,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,cpojer,cpojer,gaearon",2016-07-10 10:25:38,2016-08-19 19:02:21
IS,Ship 15 3 1,I will ship this in a little bit x update 15 next with latest semver patch issues x ship update fbjs 0 8 x need x write changelog,,zpao,2016-08-19 17:14:05,2016-08-19 19:05:22
PR,Avoid Member not found error in IE,Explanation discussion and similar change as 7343 Addresses 7320,,"aweary,gaearon,gaearon",2016-08-03 00:08:54,2016-08-19 20:43:34
PR,Not for merge Add a few new assertions,I m debugging issuecomment 236403307 and seeing some weird stuff like element type changing midway so I m adding some assertions in the hope that they ll blow up and tell me what s wrong,,"gaearon,gaearon",2016-08-01 20:40:58,2016-08-19 23:57:03
PR,Add missing KeyUp eventType,As mentioned by here issuecomment 240876383,,"AgtLucas,sophiebits,AgtLucas",2016-08-20 00:58:33,2016-08-20 01:03:35
IS,firefox hack for onSelect is leaky without a noop onKeyUp,Do you want to request a feature or report a bug Bug What is the current behavior Right now React provides a cross browser workaround for the onSelect event In Firefox the selectionchange event does not fire L198 L211 so React hacks around this by evaluating the selection after both keydown and keyup which is smart However if you have not added an onKeyUp handler to your component the keyup part of the selection listening hack for Firefox wo not ever fire Which means if you happen to be doing something in onKeyDown that changes the selection it wo not be caught by keyup as expected such that the next time keydown fires the onSelect handler will be triggered via the keydown part of the hack since React thinks the selection has changed Example You place your cursor at the end of a sentence onSelect fires thanks to mouseup render updates the selection You backspace the last character onKeyDown you handle deleting the character and preventing default onSelect does not fire because on change has not taken place yet as expected render updates the selection You backspace another character onKeyDown you handle deleting another character onSelect fires thanks to onkeydown but its internal state is comparing it to the selection before it was updated by render so it is out of date Not expected If you add a noop handler for onKeyUp this problem goes away since onSelect will always fire after rendering thanks to keyup and then it will never fire incorrectly due to keydown An example is in Draft js this onKeyUp handler L268 actually does not do anything Except without the onSelect handling would not stay in sync in Firefox What is the expected behavior Ideally I would think that the keyup event hack would still fire even without having to have the developer add a onKeyUp noop to their contentEditable component Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 in Firefox,,sophiebits,2016-07-08 02:19:21,2016-08-20 01:03:46
IS,react router Router no longer defaults the history prop to hash history,Totally new to react and stuff and had to get a node application which uses react Ironed out most errors except for the 2 shown in the picture Any pointers will be great as I am a total newbie to both node n react Thanks react error,,"gaearon,gaearon,gaearon,gaearon",2016-08-20 11:27:52,2016-08-20 11:47:57
IS,Missing React element for debugID warning when triggering a render in componentWillMount,Do you want to request a feature or report a bug Bug What is the current behavior As reported by in issuecomment 230349514 React is displaying a warning Warning ReactComponentTreeDevtool Missing React element for debugID 2 when building stack when another component is rendered in componentWillMount If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template JSFiddle What is the expected behavior According to this warning is against internal bugs in React it is not meant for users source issuecomment 230272365 so this warning should not be triggered Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 2 0 no issue with React 0 14 7,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-07-05 10:37:50,2016-08-20 23:29:39
IS,Investigate recent performance regressions in DEV,The development build has become much slower lately likely due to some new warnings or perf measurements I intend to look into this next week,,"gaearon,gaearon",2016-08-04 18:12:41,2016-08-21 09:55:14
PR,Fix minor typo in README md,,,"AgtLucas,aweary",2016-08-21 17:31:41,2016-08-22 01:36:54
IS,Set state to select is defaultValue can not work,,,"aweary,aweary",2016-08-19 01:40:23,2016-08-22 14:45:35
IS,dangerouslySetInnerHTML wo not set all HTML,Have come across an issue with dangerouslySetInnerHTML When I set the HTML to table tr td Hello World td tr table It renders correctly In my situation I need to render tr td Hello World tr td But dangerouslySetInnerHTML strips out the tags I think because it is missing the outer table tags Please see the attached link for an example Any Suggestions workarounds fixes would be awesome,,"vjeux,vjeux",2016-08-22 06:14:27,2016-08-22 16:03:07
IS,babel node ReactComponentTreeDevtool js causes ReactDOMServer renderToString to fail,While following a server side react tutorial I encountered a runtime error caused by ReactComponentTreeDevtool Specifically the purgeDeep function seems to be problematic under certain conditions react lib ReactComponentTreeDevtool js line 47 User Code img width 258 alt screen shot 2016 07 24 at 3 49 40 pm src img width 532 alt screen shot 2016 07 24 at 3 47 01 pm src Stack Trace screen shot 2016 07 24 at 3 41 00 pm Offending Code img width 453 alt screen shot 2016 07 25 at 8 21 17 am src Resolution Adding a check for undefined childIDs before the traversal react lib ReactComponentTreeDevtool js line 47 resolves the issue see below img width 772 alt screen shot 2016 07 25 at 8 19 57 am src screen shot 2016 07 24 at 4 02 23 pm Additional OS OS X Yosemite 10 10 5 Node 4 4 7 Run on babel node via babel cli 6 11 4 Let me know if there is any additional information I should provide e g dev dependencies Thanks,,"gaearon,gaearon,gaearon",2016-07-25 15:22:56,2016-08-22 19:42:33
PR,Request to allow controlled checkboxes to remove checked when assigned null,We hit a snag on a project where a piece of state backing a checkbox was set to null instead of false and the checkbox checked state was not reflected in the UI Steps to reproduce 1 Visit 2 Click toggle to show the checkbox 3 Check the checkbox 4 Click toggle to hide the checkbox 5 Click toggle to show the checkbox it should be checked 6 Click Reset Expected The checkbox is no longer checked Actual The checkbox is checked Here is a recording of the behavior toggle It looks like this happens because null returns a controlled input to the initial checked state inst wrapperState initialChecked it was mounted with L78 To me this is inconsistent with the behavior of other attributes If given null the attribute is removed L1064 Additionally if input checked is assigned null directly it becomes unchecked This PR configures ReactDOMInput to respect null for controlled checkboxes It will only ever fallback to initial mounted value on undefined If a change like this is impossible could there be a warning or additional documentation along the lines of tips controlled input null value I'm happy to follow up with an issue if so I will even write the docs if given a formal stance,,"nhunzaker,aweary,nhunzaker,syranide,syranide,jimfb,nhunzaker,syranide,nhunzaker,syranide,nhunzaker,syranide",2016-08-19 15:30:10,2016-08-23 00:29:48
PR,Fiber Fix initial mount starvation problems,The priority level gets reset at the wrong time because I rely on mutating it at the wrong point This moves it to the end of completed work as a second pass over the children to see what the highest priority is This is inefficient for large sets but we can try to find a smarter way to do this later E g passing it down the stack This bug fix revealed another bug that I had flagged before that we are finding work to do in the current tree instead of the working tree For trees that were paused e g childInProgress trees this wo not work since do not have a current tree to search Therefore I fixed findNextUnitOfWorkAtPriority to use workInProgress instead of current,,"sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage",2016-08-09 02:23:47,2016-08-23 01:27:45
PR,add explicit link to,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,jimfb,2016-08-23 07:06:52,2016-08-23 16:30:12
IS,Range input value not set on initial render in 15 2 0,Do you want to request a feature or report a bug This is a bug What is the current behavior When rendering a range input element the value of the input is not set on the initial render You have to call render again for the value to get picked up If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I have created a demo here The demo includes a component called Test which simply renders an range input component by passing some props There is an update button which calls setState and should trigger the render There are also console log statements which show the values being used during the render When you run the demo you will notice that you have to click the update button twice before the input value updates The strange thing is that it seems to have something to do with the min and max attributes of the input There is a commented out line where it does var max 100 and that seems to work fine on initial render But when it references the state value it does not work What is the expected behavior The input value should be set properly on initial render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This affects React 15 2 0 It works fine in 15 1 0 I have only tested on the latest Chrome,,"syranide,syranide,syranide,syranide,troydemonbreun,zpao",2016-07-02 09:22:31,2016-08-23 17:37:58
IS,input Unable to enter a decimal,input type number step 01 min 1 max 9999 defaultValue 1 00 the input Unable to enter a decimal,,"keyanzhang,zpao",2016-08-23 02:42:48,2016-08-23 17:39:55
IS,Update html table without refresh table,Let we have database table name hr tbl employee we open our webpage which have html table with all employee records so when we insert a record in hr tbl employee in database CronTrigger call after 30 second get the new row insert in table but table should not refresh html table just add new row at the top same for delete a row and update when delete a row from webpage then it should delete from frontEnd and from database but table should not refresh please anyone have simple solution then tell me Regards Ehsan Fida,,zpao,2016-08-23 10:17:18,2016-08-23 17:45:49
PR,Add playsInline as an allowed HTML property,This patch allows playsInline as an attribute The WHATWG has unprefixed webkit playsinline as playsinline see and iOS 10 now uses it,,"zpao,zpao,syranide,zpao",2016-08-18 06:19:08,2016-08-23 17:47:51
PR,Show React events in the timeline when ReactPerf is active,This was released in React 15 4 0 Read the blog post profiling components with chrome timeline When you open the page with react perf or manually call ReactPerf start this emits console time ings which are interpreted specially by Chrome and maybe other browsers I haven t checked Seems like a nice way to visualize what is being mounted updated unmounted It looks like this in Chrome Timeline img width 639 alt screen shot 2016 08 23 at 21 42 17 src Yay or nay,,"gaearon,gaearon,vjeux,gaearon,gaearon,vjeux,vjeux,vjeux,vjeux,gaearon,gaearon,vjeux,vjeux,gaearon,vjeux,gaearon,gaearon,gaearon,gaearon,vjeux,vjeux,gaearon,gaearon,vjeux,shaneosullivan,vjeux,gaearon",2016-08-23 20:43:34,2016-08-24 17:40:16
PR,Joinable as alternative to classnames,Joinable works in a similar way to classnames but there are differences Thought this would be a good place to provide an alternative,,gaearon,2016-08-24 17:52:46,2016-08-24 18:05:28
IS,Did not expect componentDidMount timer to start while render timer is still in progress for another instance,Not sure this should be filed as a bug or if this is intended behaviour in which case it would be more of a feature request for something that we lost since the last few versions Which is more specific error logging Since the last few version this error shows up too many times without any usable stack trace There is an internal error in the React performance measurement code Did not expect componentDidMount timer to start while render timer is still in progress for another instance This mainly occurs when a prop or state is not defined This would not be a big problem if I could stacktrace it but in this case I cannot lead it back to any related component I have to go off on what I changed last I do use redux and the stacktrace does go back to createStore and then connect but this should not be related since this error shows up regardless of which element has an undefined property It is also often accompanied by Uncaught TypeError Cannot read property ' currentElement' of null How do I debug this error Or are there plans to improve this,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-07-25 14:57:30,2016-08-24 18:18:32
PR,Ensure lifecycle timers are stopped on errors,This fixes 7349 and removes a special case for error boundaries that is now unnecessary The perf impact on DEV is minimal because try finally is separated into a function,,"gaearon,vjeux,vjeux,sophiebits,gaearon,vjeux,vjeux,vjeux,gaearon,gaearon,gaearon,vjeux,vjeux,vjeux,vjeux,gaearon,vjeux,gaearon,vjeux,gaearon,gaearon,gaearon,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,gaearon,gaearon,gaearon,gaearon,gaearon,sophiebits,vjeux,gaearon,gaearon,vjeux,gaearon,sophiebits,gaearon,gaearon",2016-08-23 19:19:34,2016-08-24 18:18:32
IS,bug Problems of using react addons perf,When trying to use react addons perf 15 1 0 in Google Chrome it is found that after Perf start error messages displayed Warning There is an internal error in the React performance measurement code Did not expect ctor timer to start while componentDidMount timer is still in progress for another instance Warning There is an internal error in the React performance measurement code We did not expect componentDidMount timer to stop while no timer is still in progress for another instance Please report this as a bug in React After I typed Perf stop and try to use getWasted this error message displayed ReactPerf js 239 Uncaught TypeError Cannot read property 'updateCount' of undefined,,"aweary,syranide,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon",2016-06-02 08:54:41,2016-08-24 18:20:51
IS,basic jsx precompile is not working,Hi I have downloaded the script from you mentioned starter kit And then referred those file in index html ReactJS components are not rendering I got one console error img width 541 alt reactissue src I have referred the online link I am new to reactJS Please help me How to resolve this error Regards Thangavel E,,"gaearon,gaearon,gaearon,gaearon,gaearon",2016-08-25 10:38:48,2016-08-25 11:31:47
IS,ReactJS components are not rendering in AJAX,Hi I have used the AJAX for load the ReactJS components html file But that components are not rendering i have explained the sample in below link How to achieve this Regards Thangavel E,,keyanzhang,2016-08-25 09:28:11,2016-08-25 13:58:55
IS,dom property warning,why object not support prop clsid,,"gaearon,gaearon",2016-08-25 13:53:29,2016-08-25 14:38:45
PR,Update flow to 0 31,Updated flowconfig from www flowconfig Updated package json flow bin Ported changes from the flow 0 31 deploy on www D3743417,,"vjeux,sophiebits,vjeux,gaearon",2016-08-25 03:17:21,2016-08-25 16:43:28
PR,Type ReactPropTypeLocationNames,,,vjeux,2016-08-14 23:50:58,2016-08-25 17:46:15
PR,Type ReactPropTypeLocations,,,vjeux,2016-08-14 23:49:47,2016-08-25 17:46:26
PR,Type canDefineProperty,,,vjeux,2016-08-14 23:45:16,2016-08-25 17:46:49
IS,DefaultProps not replacing undefined function props,BUG What is the current behavior The default function A given in static defaultProps A is not replacing a function prop that is not defined while the defaultProps works for a string Minimal example What is the expected behavior When calling this props A no Uncaught TypeError this props A is not a function appears and it returns the value returned by the defaultProp A Versions I tried with 15 1 0 and 15 3 1 and had the same result Do not know about the other versions,,,2016-08-25 15:07:51,2016-08-25 21:38:35
PR,Type ReactErrorUtils,,,"vjeux,vjeux",2016-08-25 18:42:10,2016-08-25 22:23:13
PR,Type ReactElementSymbol,,,vjeux,2016-08-25 18:41:55,2016-08-25 22:23:29
PR,Type ReactPropTypesSecret,,,"vjeux,vjeux",2016-08-14 23:48:40,2016-08-25 22:26:39
PR,Type ReactComponentTreeHook,For this one I wanted to type a non trivial piece of the codebase and ran into the fact that we do not have types for ReactElement nor ReactInstance so I had to create them I will add comments inline,,"vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,aweary,millermedeiros,millermedeiros,vjeux,sebmarkbage,vjeux,vjeux,sebmarkbage,vjeux,gaearon,vjeux",2016-08-15 03:29:49,2016-08-25 22:27:03
PR,support error boundaries on ReactTestRenderer,transaction checkpoint and transaction rollback was missing from ReactTestReconcileTransaction so every time I tried to generate snapshots tests with jest for components that implemented unstable handleError I would get the following error this diff fixes the error,,"millermedeiros,millermedeiros,sophiebits,millermedeiros,sophiebits,millermedeiros",2016-08-25 07:42:45,2016-08-25 22:35:55
PR,Fix lint errors,In Type ReactComponentTreeHook 7504 I merged even though travis did not report green travis for all the fb repos has been backlogged like crazy since this morning by manually doing npm test and npm run flow but I did not ensure that lint was all green millermedeiros pinged me about it so here is a quick fix,,"vjeux,vjeux",2016-08-25 23:12:56,2016-08-26 02:16:34
PR,Type ReactComponentEnvironment,,,"vjeux,vjeux,vjeux",2016-08-25 18:45:11,2016-08-26 03:08:21
PR,Test flow CI integration,There were flow errors checked in but for some reason CI was still green yet it seems that we do have a flow check on travis L96 This PR breaks flow and I will use it to debug what is going on,,"vjeux,vjeux,vjeux,vjeux,vjeux,vjeux",2016-08-21 16:23:51,2016-08-26 03:08:36
IS,isRequired nesting validation functions,How is it possible to implement adding a generic isRequired variant to a custom validation function without including the checks for null and undefined into the function itself Prior to 15 3 0 I just had an isRequired validator that wrapped another validation function and called it if the value was present Now it is no allowed anymore to call validations function directly so how to nest them,,"gaearon,gaearon,gaearon,gaearon",2016-08-26 11:26:45,2016-08-26 12:26:16
PR,Remove unneeded declare,It turns out that we do not need it flow is smart enough to realize that the function is declared in the two branches,,"vjeux,sebmarkbage,vjeux,vjeux,vjeux,sebmarkbage",2016-08-26 02:57:48,2016-08-26 15:42:03
PR,Type ReactChildrenMutationWarningHook,,,vjeux,2016-08-26 03:17:30,2016-08-26 21:46:57
PR,Type ReactInvalidSetStateWarningHook,,,vjeux,2016-08-26 03:19:51,2016-08-26 21:47:15
PR,Type ReactDebugTool,,,"vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,gaearon,vjeux,gaearon",2016-08-26 17:22:53,2016-08-26 21:48:00
IS,onFocus and onBlur events on input elements cause issues,Do you want to request a feature or report a bug bug What is the current behavior When I use onFocus or onBlur events on an input element in my React app if in the onBlur or onFocus event handler I set the input is value to an empty string I get TypeError TypeError property value is non configurable and can not be delete OR TypeError Uncaught TypeError Cannot delete property 'value' of HTMLInputElement Looking at the stack trace it is because it is trying to delete the value and detach the onPropertyChange handler when onFocus or onBlur is called attachEvent onpropertychange d A addEventListener propertychange d 1 function f A delete A value A detachEvent A detachEvent onpropertychange d A removeEventListener propertychange d Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 1 All browsers I frankly am not able to reproduce this locally on any browser but we are seeing this error happen 1000s of times in our bug tracking system I know this is probably not very helpful but I figured I can at least see if anyone else has run into this Happy to close this issue if you feel there is not enough information,,,2016-08-04 01:44:46,2016-08-27 00:51:54
PR,doc npm ls react is a better advice,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Refs Must Have Owner Warning npm ls react is a better advice than npm ls grep react,,aweary,2016-08-17 19:25:36,2016-08-27 06:04:00
PR,Type ReactPerf,We need to export FlushHistory type and I submitted a PR on flow to fix the type of console table which is too restrictive I'm already starting to see the benefits of flow I can look at random variables in the code and flow knows what shape the objects are It is really useful to try and understand what is going on img width 566 alt screen shot 2016 08 27 at 12 09 14 pm src,,vjeux,2016-08-27 19:10:51,2016-08-27 21:12:54
PR,Type ReactInstrumentation,Flow does not really support the concept of variables that are non null but only inside of a DEV block There is an internal post about it and the conclusion is that we should force it to be non null and trust the developer to put the proper DEV checks in place,,vjeux,2016-08-27 19:41:12,2016-08-27 21:13:18
IS,Warnings of anti patterns in render,Do you want to request a feature or report a bug Right now when you use setState within render you will get tons of warnings I Imagine this is quite expensive for two reasons mainly 1 Warnings render every time i e setState is an anti pattern 2 Rendering the message will make the browser go crazy What is the current behavior The current behavior makes a warning message render on each setState This causes the browser to crash if setState is being rendered on functions declared within the render method If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template The bug is quite easy to reproduce just make an function within your render method of which calls setState Make it so if you have for an instance onChange event you will get the error reproduced What is the expected behavior You will get tons of warnings in your console browser will most likely freeze and you will need to force exit chrome browser Suggestion I really want to help out on this I feel like I need to contribute back to React after using it extensively My walkthrough would be similar to this 1 Find out if React has any calls that finds out if it has rendered once 2 Out of that trigger warning once or trigger the warning on the first render 3 Experiment and see if we can make an exception or similar so the current build does not crash perhaps reset to the previous state if we can do something like that and then print a message that the state resets to the previous one ES,,"aweary,aweary,aweary",2016-08-21 11:56:44,2016-08-27 21:32:18
PR,Remove keyMirror in ReactPropTypeLocations,This one involves a bit more work as I added phantom flow types to a bunch of places where the type is a ReactPropTypeLocations even though those files are not flow yet A good side effect is that ReactPropTypeLocationNames keys are now correctly typed this means that they cannot go out of sync without breaking flow img width 532 alt screen shot 2016 08 27 at 8 31 21 pm src,,vjeux,2016-08-28 03:37:38,2016-08-28 17:30:15
PR,Remove keyMirror in ComponentLifeCycle,See rationale in,,vjeux,2016-08-28 02:54:10,2016-08-28 17:30:34
PR,Remove keyMirror in SpecPolicy,As discussed in my RFC,,"vjeux,vjeux,vjeux",2016-08-28 02:47:02,2016-08-28 17:30:59
PR,Remove keyMirror in ReactMultiChildUpdateTypes,As mentioned in I'm going to kill this instance of keyMirror and use a plain string instead with a type union The current type union is unused right now but when I type ReactMultiChild I will use it,,"vjeux,vjeux,vjeux,vjeux",2016-08-27 22:06:11,2016-08-28 17:31:30
PR,Type ReactOwner,Incrementally type ReactInstance by adding the types of attach detachRef I moved isValidOwner as a function inside of the file since it is never used externally,,"vjeux,flarnie,vjeux,flarnie",2016-08-27 21:10:21,2016-08-28 17:31:49
PR,Type PooledClass,This one was really interesting to type as it is doing a lot of unusual JavaScript Fortunately flow is now pretty kick ass and I have been able to mostly type it The only missing piece is that it wo not check the constructor arguments If you are a fb employee you can follow the discussion here,,"vjeux,gaearon,vjeux,gaearon,vjeux,vjeux",2016-08-26 21:40:12,2016-08-28 17:43:13
PR,Remove the Mixin layer of indirection on ReactMultiChild,As mentioned in issuecomment 242952042 we can remove the Mixin layer of indirection as it only exports a Mixin and I find it confusing,,"vjeux,sebmarkbage,gaearon,sophiebits,sophiebits,sophiebits,gaearon,sophiebits,sebmarkbage",2016-08-28 19:55:05,2016-08-28 23:46:39
PR,Remove the Mixin layer of indirection on ReactCompositeComponent,As mentioned in issuecomment 242952042 we can remove the Mixin layer of indirection as it only exports a Mixin and I find it confusing,,"vjeux,gaearon",2016-08-28 19:55:17,2016-08-28 23:46:53
PR,Type Transaction,This one is interesting because we have transaction objects being passed around everywhere in the codebase but there is actually no Transaction class It is a mixin that comes to life by being Object assigned to the prototype of a real class before class was cool Therefore we can not just say var Transaction require 'Transaction' transaction Transaction because it would be the object that contains a mixin and not an instance of a transaction The trick I use is to export TransactionType and alias it to Transaction in the file as it does not actually require transaction In case they do we will figure it out but in the few files I looked at it does not seem to be the case For the perform function it actually typechecks pretty well img width 715 alt screen shot 2016 08 26 at 3 22 06 pm src,,"vjeux,vjeux,vjeux,sebmarkbage,vjeux,vjeux,sebmarkbage,vjeux,vjeux,vjeux,sebmarkbage,vjeux,vjeux,sebmarkbage",2016-08-26 22:28:40,2016-08-28 23:47:27
PR,Changed to document documentMode,Line 124 of ChangeEventPlugin js isInputEventSupported isEventSupported 'input' wouldocumentMode' in document document documentMode 11 Is incorrectly returning false in non IE browsers when paired with some 3rd party code specifically wouldocumentMode' in document Is returning false because 3rd party code is setting document documentMode to undefined This is causing these errors on input fields Uncaught TypeError activeElement detachEvent is not a function TypeError Uncaught TypeError Cannot delete property 'value' of HTMLInputElement A better check in this case is document documentMode As this would still accomplish the intended check while minimizing conflicts with other codebases I have found a couple of other instances of this issue 7421 5920,,"gaearon,aweary,gaearon,gaearon,aweary",2016-08-28 15:19:46,2016-08-29 11:33:36
IS,wouldocumentMode' in document check giving inconsistent results,Bug What is the current behavior Line 124 of ChangeEventPlugin js isInputEventSupported isEventSupported 'input' wouldocumentMode' in document document documentMode 11 Is incorrectly returning false in non IE browsers when paired with some 3rd party code specifically wouldocumentMode' in document Is returning false because Google Tag Manager in this case is setting document documentMode to undefined This is causing these errors on input fields Uncaught TypeError activeElement detachEvent is not a function TypeError Uncaught TypeError Cannot delete property 'value' of HTMLInputElement A better check in this case might be document documentMode As this would still accomplish the intended check while minimizing conflicts with other codebases I have found a couple of other instances of this issue Which versions of React and which browser OS are affected by this issue Chrome 52 React 15 3 1,,"gaearon,zpao",2016-08-26 23:17:07,2016-08-29 16:51:01
PR,docs re position comments to account for code sample width,This addresses the issue where these comments are running off the screen 2016 08 29 102338 681x318 scrot,,"nikolas,zpao",2016-08-29 14:25:01,2016-08-29 17:08:07
PR,Remove non standard 'icon' property 7430,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA The above is done,,zpao,2016-08-15 21:06:58,2016-08-29 17:33:28
IS,HTMLDOMPropertyConfig contains non standard icon property,Do you want to request a feature or report a bug Report a bug What is the current behavior The HTMLDOMPropertyConfig object includes an icon property L85 in a section title Standard Properties but icon isn t an attribute supported by any standard HTML element icon is not included in the HTML4 or HTML5 specs List of HTML4 attributes List of HTML5 attributes attributes 1 Mozilla Developer Network includes icon in its list of attributes but specifies the only element to use icon is the obsolete command element command isn t supported in any desktop or mobile browser Browser compatibility What is the expected behavior The icon property might be better placed in the section titled Non standard Properties L174 L202 or removed altogether The documentation html attributes for HTML attributes could omit icon too I encountered this issue when working with TypeScript and I opened an issue about the React type definition at Because React itself includes icon custom interfaces which extend DefinitelyTyped s React HTMLAttributes L1968 cannot include a non string icon property Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React icon was added in a React 0 4 0 alpha in 2013 The commit message mentions mostly this was to better support some HTML5 stuff it s possible icon was part of a draft of the HTML5 standard at the time but was omitted in the final spec,,"zpao,nhunzaker,zpao,aweary,zpao,aweary",2016-08-05 02:17:19,2016-08-29 17:33:40
PR,Ignore bundle js for examples,,,"enaqx,zpao,zpao",2016-08-14 17:45:19,2016-08-29 17:34:46
IS,I'm getting 100s of new inapplicable prop warnings please make this less painful for developers,Passing userland non applicable props to div s button s input s etc is already widespread in my large codebase because I have a lot of components that add on various properties e g for Bootstrap but I want to pass the rest of the props through in case any are applicable I saw no reason to waste CPU time memory my own time cloning the props and deleting the component specific props until now Example code at the bottom of this post I am trying hard to contain my anger about this now I have to painstakingly change 100s of components to get rid of the slew of new React warnings about inapplicable props Did the React team really not expect people to write components this way I certainly do not remember seeing thorough explanations why we should not do this in the documentation even the Unknown Prop Warning page says You should ensure that your DOM elements do not have spurious props floating around without any justification This is unkind to developers So how about providing some kind of global switch or flag prop that makes DOM elements delete all of the inapplicable props Or a codemod that wraps all object spread props to DOM elements in a filter function Example,,"jedwards1211,jimfb,jimfb,jedwards1211,jedwards1211,jimfb,jedwards1211",2016-08-29 18:02:54,2016-08-29 18:17:54
IS,Warn if checkbox changes controlledness,We should be warning if a controlled component becomes uncontrolled or vice versa I thought this was fixed in but apparently it was either not fixed for checkbox components or maybe I subsequently broke it in or similar Regardless we should fix it Demo of case that should warn,,"jimfb,jimfb,jimfb",2016-08-23 00:29:10,2016-08-29 18:23:30
PR,Warn if input changes controlledness also for null 7544,Resolves 7544 Introduced consistent validation for null value checked for all types of inputs text checkbox radio and added some more tests Currently there are not any warnings for changing controlledness for textarea and select is this something we should add cc,,jimfb,2016-08-29 17:44:06,2016-08-29 18:23:30
PR,Adds minor additions clarifying questions I had reading intro tutorial,Apols if the edit is too minor Rob,,"gaearon,gaearon,zpao,aweary,zpao",2016-08-28 15:30:14,2016-08-29 22:34:49
IS,Documentation Issues with react addons shallow compare Package,We were previously using the shallowEqual method from the react lib implementation which was used in the following way Using the Chrome dev tools I was able to discover the method signature that was expected image I think we need to better document this method somewhere either in the npm package page or on the addons page to help out others wanting to make this transition,,"zpao,zpao,zpao",2015-11-03 15:36:52,2016-08-29 22:45:24
PR,Corrected to match multiline JSX styling 7317 7550,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA comments to issue 7317 Updated JP doc examples to match other languages Reformat to match JSX multi line style 7550,,zpao,2016-08-29 20:36:07,2016-08-29 22:50:23
PR,Add line breaks to examples on 10 1 animation docs per issue 7317,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA comments to issue 7317 Updated JP doc examples to match other languages,,"zpao,zpao",2016-08-24 01:05:59,2016-08-29 22:51:13
PR,Fix bug in controlled form component doc,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA When passing an onChange handler as an input prop you generally want to call the handler with the component bound to this This code snippet is actually broken handleChange is call to setState will break Cannot read property isetState' of undefined Fixed to set this properly Stepping back a level this flow is so common that I wish there were a more succinct compact way to get this behavior,,zpao,2016-08-29 20:29:40,2016-08-29 23:06:55
PR,s npmcdn unpkg g,npmcdn com is moving to unpkg com Same backend one less letter in the domain name This is primarily to avoid any possible future naming disputes with npm Inc Also unpkg com runs on a bigger CloudFlare plan so we have more room to grow Happy to answer any questions you may have,,zpao,2016-08-30 01:30:14,2016-08-30 02:45:31
PR,Cleanup ReactErrorUtils,I'm pretty far from completely understanding what this is doing but generally I think it is something like this 1 Brings both implementations of invokeGuardedCallback in line We do not return the return value Nobody uses it and when we were using events it was not happening anyway 2 Flow got unhappy that we were not passing an EventListener as the 2nd arg to add removeEventListener Seems that making that return type void helped it believe the right thing This seems to make Flow happy internally not sure what the difference for that is This still might not be technically right though we should make sure it is cc,,"zpao,zpao,vjeux,vjeux,sebmarkbage,vjeux",2016-08-30 02:29:34,2016-08-30 03:44:47
IS,Components that render non empty noscript s can not re render,Do you want to request a feature or report a bug Bug from a React user is perspective Why does this matter This matters in the context of server side rendering I want to have the structure where my page template contains noscript style yesscript display none style noscript Then JS disabled users will see the static one JS enabled users will see the dynamic one and everyone will be happy If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template open the JS console then click the Re render button in the fiddle What is the current behavior Uncaught Invariant Violation Unable to find element with ID 3 What is the expected behavior The button should update to Re render 1 as it does when you remove set includeNoscript false Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I tried 15 3 1 in Chrome 52 Linux I understand why it is happening so I do not think the browser or OS is an issue The JSX for the fiddle seems not to work in Firefox but I can reproduce the non minimal version of the problem there too I do not know much about how the rehydration process works but it seems like a reasonable solution might be to pass right over noscript s when rehydrating if JS is enabled they wo not be visible anyway In Chrome and Firefox at least the noscript setting seems to be constant mod a refresh so we do not have to worry about changing between renders It seems to me like this might deserve a fix in trunk but I would also appreciate any workaround short of rendering a noscript App noscript and outputting the whole page twice which I would really prefer not to do,,syranide,2016-08-29 21:52:18,2016-08-30 12:44:52
IS,Using React 15 under Edge dangerouslySetInnerHTML does not work on any SVG tag,Hi everyone This issue is following 6950 The fix works on IE11 Unfortunately it does not under Edge It seems that Edge is implementing innerHTML property on SVG tag but in an inefficient way Using it appends SVG text in the DOM tree as it can be seen using the inspector but Edge does not render anything Unless you modify the svg string in the inspector See the codepen updated to use React 15 3 under Edge to see that issue Of course if we enforce Edge to use the hack it works I do not know how to enforce it except browser sniffing grr,,"aweary,aweary,aweary",2016-08-25 18:12:17,2016-08-30 14:32:14
IS,Bug onChange fires too often when using range sliders,React version 15 3 0 Chrome version 52 0 2743 116 m 64 bit Current behavior React fires onChange events for input with type range even when the browser is input change event does not fire Example Try it here Expected behavior Observe the console output while dragging the sliders For the first slider the behavior is incorrect and it fires onChange while dragging the slider For the second slider the behavior is correct and can be seen as a workaround for the incorrect behavior Reference,,aweary,2016-08-30 14:13:51,2016-08-30 14:39:10
PR,Remove keyMirror in PropagationPhases,See rationale in img width 528 alt screen shot 2016 08 28 at 10 54 34 am src,,"vjeux,gaearon,zpao,gaearon,vjeux,gaearon",2016-08-28 17:54:49,2016-08-30 16:44:14
PR,Remove keyMirror in TopLevelTypes,This is the last callsite of keyMirror It removes 0 5k gzipped The only trick with this one is that ReactTestUtils actually iterates over the list of all the events Instead of duplicating the logic I used the Enum feature of flow that lets us statically extract out the type from the dynamic value Inside of react dom we are no longer requiring the file directly so it does not bloat the file size and we still get to have static typing best of both worlds img width 531 alt screen shot 2016 08 28 at 11 19 50 am src,,"vjeux,vjeux,vjeux,gaearon,vjeux,gaearon,gaearon,vjeux",2016-08-28 18:39:50,2016-08-30 16:50:16
PR,tutorial md Corrects bug commentNodes not defined,I can not believe no one has mentioned this before but maybe people are just reading along versus typing along and are not actually triggering the bug When I run the status quo code I see img width 394 alt screen shot 2016 08 30 at 4 51 54 am src It is possible I have erred I'm reading the tutorial after all For the code as written to work violates my principle of least surprise radar Why would the JSX know to throw to the right context and know that when the sought name is not a property to treat it as a function without some level of interface on top of the JS primitives e g get or set,,"brigand,zpao",2016-08-30 08:59:11,2016-08-30 17:41:43
PR,Kill keyOf,See discussion here for the rationale It does not have a big effect on file size img width 538 alt screen shot 2016 08 30 at 10 31 49 am src,,"vjeux,gaearon,vjeux,gaearon,gaearon,gaearon,vjeux,vjeux,gaearon,vjeux,milesj,gaearon",2016-08-30 17:45:36,2016-08-30 18:03:05
PR,Move shared logic into AbstractReconcileTransaction to avoid mistakes,not the first time that someone forgets to implement checkpoint and rollback on a ReconcileTransaction see 7558 and 6689 so I decided it was worth moving the shared logic into an AbstractReconcileTransaction I kinda followed the same pattern used on Transaction js export a Mixin property but in this case a plain object would probably be fine Note that the ReactNativeReconcileTransaction was also missing the checkpoint and rollback not sure if intentional or not not familiar with the React codebase PS maybe someone have a better name for it and or knows a better folder to place it cc,,"millermedeiros,sophiebits,millermedeiros",2016-08-25 23:07:28,2016-08-30 18:54:04
PR,Add 'as' keyword 7543,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"aweary,aweary,aweary",2016-08-26 23:04:28,2016-08-30 22:14:46
PR,Add checkpoint rollback to ReactNativeReconcileTransaction,kinda of a follow up to 7558 and 7567 I could not find a way to easily add tests for it createReactNativeComponentClass js does not allow passing the lifecycle methods would have to shave too many yaks and I'm busy with other tasks but I believe this is the expected behavior cc,,"millermedeiros,sophiebits",2016-08-30 22:35:39,2016-08-30 22:42:36
IS,Support of as on Link for PreLoad,rel preload is the new functionality in latest browsers to preload the content However Reactjs currently strips as on Link Here is the warning we get Unknown prop as on link tag Remove this prop from the element For details,,"zpao,aweary",2016-08-22 22:31:51,2016-08-30 23:08:38
PR,Improve error boundaries tests,this is kinda of a follow up to 7558 where said Can you make a custom componentDidMount instead of mocking putListener This current test wo not verify that the queue is reset if we were to refactor the events system and how putListener works Also no need for the parens within render issuecomment 242525014 the new tests makes sure the methods are executed in the proper order and do not rely on EventPluginHub anymore the wouldoes not register event handlers for unmounted children' test still uses EventPluginHub since it looks like it makes sense to leave that check there also removed some parentheses and wrapped some lines,,"millermedeiros,sophiebits,aweary,sophiebits,millermedeiros,sophiebits,sophiebits,millermedeiros,sophiebits",2016-08-26 01:22:33,2016-08-31 03:02:56
IS,SetState state updates the status of the value of the array of attributes the original array length will be added to the length of the original array,SetState state updates the status of the value of the array of attributes the original array length will be added to the length of the original array The value inside the original array is Push into the f8a8fdad d7e4 42f6 a2a5 b147817885a2,,,2016-08-31 02:55:08,2016-08-31 05:17:32
PR,fix for issue 6887,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"gaearon,gaearon,gaearon,gaearon,gaearon",2016-05-26 17:39:55,2016-08-31 13:36:16
IS,ensureScrollValueMonitoring issue,By having our app wrapped with Sentry error catching service we have encountered a bug which may not be React specific but some kind of a workaround for it should be done With that in mind I'm not sure how to tackle it yet L363 TypeError Cannot use 'in' operator to search for 'pageX' in null which occurs during mounting a root component into the DOM using React 15 It happens really rarely in Chrome so far caught only there on versions 49 and 50 both Mac and Windows With thousands renders of our app daily we got only 7 such hits in the past 3 days I have tried to search any info how document createEvent 'MouseEvent' can return null but could not find any viable info With React is popularity is odd too me that nobody has filled this issue earlier which leds me to think that maybe our usage is somehow different than others and the only thing 'kinda' special is that our app is running inside an iframe,,"Andarist,syranide,Andarist,syranide,syranide,syranide,Andarist,syranide,Andarist,Andarist,gaearon,Andarist,gaearon",2016-05-26 10:32:12,2016-08-31 14:25:18
PR,Guard ensureScrollValueMonitoring against popup blockers overriding document createEvent,Fixes 6887 cc,,"Andarist,gaearon,gaearon,Andarist,gaearon",2016-08-31 13:07:22,2016-08-31 14:25:19
PR,Copy all SVG child nodes when using setting innerHTML in IE,This is a followup to 6982 which missed half the nodes We missed this because the test that was written depended on broken JSDOM behavior will report shortly Test Plan is broken in IE11 currently using 15 3 1 only see every other bar works same code patch applied on master I also renamed the test file to fit our convention,,"zpao,sophiebits,sophiebits",2016-08-30 19:19:10,2016-08-31 18:50:58
PR,WIP Strip Multiple Warning messages,This is work in progress as you already see and there is some parts left I dunno how you want this to be internal wise Right now we are making an global var to check if the warning has rendered once but I do not like the solution If we were to do this at similar places where we output hundreds of warning messages it will easily be polluted Any input on this So far we need to do make warnings warn once on every warning or call that warns on each render I'm not 100 known with the internal build yet if someone could link me videos podcasts where they go through everything in the React build I would be very thankful Furthermore as mentioned earlier I do not like to make warning messages as this I do not know if React has a way of figuring out if we already have rendered if that is isMounted or not Despite that I have looked some places and it says that you are planning to depreciate this I would very much like help from people if they want to join inn on this Previously I said that I wanted to do this alone but as this is open source help is always great I have just started so what is left is the following Perhaps create another module which will render an warning once based on the arguments from getInternalInstanceReadyForUpdate This module will compare against callerName and every callerName to see if say setState has been called already in render This module has to be universal so perhaps double checking that createClass uses similar methods would be good If not we will do something similar to what I have started on something else Cheers,,aweary,2016-08-27 21:28:46,2016-08-31 21:29:06
IS,ref callbacks with renderToString not being called,The bug i'm experiencing is that ref callbacks are not called after mount when using renderToString From the documentation React supports a special attribute that you can attach to any component The ref attribute can be a callback function and this callback will be executed immediately after the component is mounted The referenced component will be passed in as a parameter and the callback function may use the component immediately or save the reference for future use or both My expectations are that the ref callbacks would be called after mount for both client side rendering and server side rendering using renderToString,,"gaearon,gaearon",2016-08-31 20:19:33,2016-08-31 22:46:48
PR,Add more specific link to react addons shallow compare readme,This simply makes sure we link to the specific docs in the readme that we generate for npm I was reminded in 5378 that we added this page,,zpao,2016-08-29 22:44:42,2016-08-31 22:53:30
PR,Remove describe from tests,Most of our test files only have one describe block with the name being the name of the file This is not useful and is only noise in the test files It turns out that jest does not require it I ran the following codemod And had to manually fix two files where backtick were not properly re printed by recast This is working both on jest 12 and jest 15,,"vjeux,vjeux,cpojer,vjeux,vjeux",2016-08-31 23:14:40,2016-08-31 23:25:41
IS,Bug with embedded slides iframe on mobile,Do you want to request a feature or report a bug bug What is the current behavior Google slides does not show full screen mode button The allowFullscreen attribute is set to a truthy value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I expect the slide to display full screen on mobile Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am trying this in chrome and safari I am using the latest jsfiddle available react version and in my application react 15 1 0,,"aweary,brigand,zpao,aweary,aweary",2016-08-30 12:07:14,2016-09-01 00:36:03
PR,Update to jest 15,Jest 15 has just been released and is way more awesome This pull request updates jest from version 12 to 15 Right now there is a fix in jest around Symbol that has not been released yet so this will break CI and cannot be merged it But once it ships by the end of the day we will be good to go See comments inline for all the changes I have done,,"vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,zpao,zpao,zpao,zpao,vjeux,vjeux,zpao,cpojer,vjeux,zpao,vjeux,cpojer,cpojer,vjeux,brigand,cpojer",2016-08-31 22:26:13,2016-09-01 01:56:54
IS,browser js 49Warning react router Router no longer defaults the history prop to hash history Please use the hashHistory singleton instead,browser js 49Warning react router Router no longer defaults the history prop to hash history Please use the hashHistory singleton instead hashHistory d2843af3 b65a 1085 68f8 bb81e24c36dc 0394c02c 02a5 8fcb 24ad 53aa9b73aa3d,,aweary,2016-09-01 02:26:56,2016-09-01 02:39:53
PR,Remove String prototype split polyfill warning,String prototype split is a ubiquitous part of the ES3 spec Tracking back I can not see a specific reason to include it in the required polyfills did I miss anything,,"nhunzaker,chicoxyzzy,syranide,aweary",2016-09-01 12:33:13,2016-09-01 13:44:36
PR,Remove the Flow experimental strict type args option,Remove the experimental strict type args since it is defaulted to true L142 and should be removed in the future from what I understood,,"vjeux,gabelevi",2016-09-01 17:01:51,2016-09-01 18:40:08
IS,onContextMenu stopPropagation does not work,I bind onContextMenu to a div and call event stopPropagation in event handle but it still reach to contextMenu event handle of document,,"Andarist,aweary",2016-08-26 08:23:51,2016-09-01 19:14:54
PR,add events code walkthrough video link,I think if we do another one of these it would be good to turn this into a list but this is good for now Thanks cc,,"kentcdodds,aweary",2016-09-01 19:15:55,2016-09-01 19:23:41
PR,Small flow fixes,Needed for www and correctness,,"sophiebits,sophiebits,vjeux,sebmarkbage,zpao,sophiebits,sebmarkbage,vjeux",2016-09-01 22:52:51,2016-09-02 00:26:08
IS,Click events not being triggered with ios touch devices,Possible bug I have created this JS Fiddle css js output On desktop if i click anywhere on the components or outside of the components I get the Clicked alert which is expected as on mount I have registered the click event onClick in the Hello component If I try the same thing on a ios touch device im using an ipad mini model A1432 ios 9 3 2 The click events are not triggered when i touch the react components Hello and HelloOther But if I touch outside of the components the alert comes up Whats interesting is that if i add cursor pointer css to the components they will then get triggered Looks like its some sort of regression around this issue I have tried react versions 0 14 to 15 x same issue,,"aweary,aweary,aweary",2016-09-02 01:20:35,2016-09-02 01:30:40
PR,docs translate doc 11 advanced performance to chinese,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang,keyanzhang",2016-08-27 14:43:14,2016-09-02 02:59:30
IS,kou hello,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-09-02 09:48:21,2016-09-02 09:58:13
IS,96069836,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-09-02 09:46:47,2016-09-02 09:58:20
IS,kou hello,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-09-02 09:45:28,2016-09-02 09:58:25
IS,Bug when using React in net is WebBrowser,We use React for our web application and it works well But also we have some Office add ins that use System Windows Forms WebBrowser and the problem occurs in these add ins When we try to show select tag application show script error like this image When we go to the mentioned line of code we see the following This function is located in DOMLazyTree js While debugging we found out that tree node for select is object Object and looks like parentNode insertBefore does not accept this node We tried to increase IE version according to this guide browser emulation and it shows the following string image which refers to IE 11 but with no luck This error only occurs in MS Office environment Word Add in Excel Add in etc When you try to use net is WebBrowser component on Windows Form application it works correctly Do you have any ideas how we can use select tag in this case,,"gaearon,gaearon,zpao,syranide,gaearon",2016-08-31 13:11:59,2016-09-02 11:21:43
IS,Unable to select disabled elements with the disabled psuedo selector in CSS,Do you want to request a feature or report a bug Bug What is the current behavior Unable to select disabled form elements in CSS via disabled psuedo selector Currently I have to use the disabled attribute selector I am creating the disabled form element in JSX as such label disabled input type 'checkbox' disabled label If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I expect to be able to select disabled elements via the css disabled psuedo selector Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am new to React and have not tested multiple versions against this issue I have verified it does not work on versions dist react with addons js,,aweary,2016-09-02 14:40:21,2016-09-02 15:38:38
IS,In tutorial comments json is used as file name while in the address it is comments,Do you want to request a feature or report a bug Bug What is the current behavior Confusing If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template In above link the file is named comments json while in the code api comments is used What is the expected behavior The file name should be consistent Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React All versions,,aweary,2016-09-02 08:48:18,2016-09-02 15:42:35
PR,Generate SimpleEventPlugin data structures at runtime,We used to copy and paste the same big blob many times in order for it to work with keyOf which is no longer a constraint This pull request takes a list of all the events as string and generate those data structures at runtime It reduces the size of React by 1k post gzip and flow is able to extract the structure out of it img width 526 alt screen shot 2016 08 30 at 11 30 50 am src img width 775 alt screen shot 2016 08 30 at 11 34 33 am src,,"vjeux,gaearon,sophiebits,vjeux,sophiebits,vjeux,gaearon,zpao,gaearon,sophiebits,gaearon,aweary,kentcdodds,kentcdodds,sebmarkbage,gaearon,sebmarkbage,gaearon,sebmarkbage,vjeux,sophiebits,sophiebits",2016-08-30 18:34:51,2016-09-02 19:57:18
PR,Type EventPluginRegistry,This commit takes the first incremental step towards adding type checks to the event code A couple of issues came up There is an issue with the SyntheticEvent type Flow declares a SyntheticEvent type L277 L293 that lacks the non public properties which are used in React internals To solve this I declared a class that extends SyntheticEvent This class can be expanded as we add Flow types to more places where SyntheticEvent instances are referenced I'm happy to change this if folks prefer a different approach Some options I considered Override the SyntheticEvent declaration with our own declaration Pro We can use 'SyntheticEvent' as a type just like we are used to when working in any other codebase Pro No need to import any type since it is a declaration Pro Only one version of SyntheticEvent less confusion Con Could get out of sync with real implementation Con Duplicates part of the type declared in Flow Import the SyntheticEvent class and use that as the type Pro Keeps type definition in sync with the real implementation Con Declaration overrides implementation so I'm not sure this would work Con Have to remember to import the type Declare a separate type called ReactSyntheticEvent that extends SyntheticEvent Pro Stays in sync with the Flow SyntheticEvent type less duplication Pro Differentiates this type from the Flow SyntheticEvent type less confusion Pro No need to import any type since it is a declaration Con Could get out of sync with real implementation I also ran into an issue where a variable was only non null when ' DEV ' is true similar to PR 7586 The work around is to force it to be typed non null and add a comment documenting the reason At this time Flow does not have a better way to deal with the situation Next steps Specific type for the wouldispatchConfig' property of SyntheticEvent More detailed types for PluginName and PluginModule Lastly note that I renamed some variables to follow the convention of reserving PascalCase for classes enums and Flow types,,"flarnie,aweary,flarnie,vjeux,vjeux,vjeux,vjeux,zpao,flarnie,vjeux,vjeux,vjeux,gaearon,vjeux,vjeux",2016-09-02 16:10:57,2016-09-02 20:53:44
PR,Type ReactRef,Nothing out of the ordinary on this one,,"vjeux,vjeux,vjeux,vjeux,gaearon,gaearon,gaearon,gaearon,vjeux,vjeux,andreypopp,vjeux,gaearon,vjeux,vjeux,vjeux,gaearon,zpao,zpao,sophiebits,sophiebits,vjeux,vjeux,gaearon,gaearon,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,gaearon",2016-08-29 00:38:52,2016-09-02 21:16:33
PR,Restore coverage in Travis,We disabled coverage in Travis because the implementation was crashing Since we upgraded to Jest 15 the entire coverage implementation is brand new so we should give it another try,,"vjeux,vjeux,vjeux,vjeux,cpojer,aweary,zpao,vjeux,vjeux,cpojer,cpojer,vjeux,gaearon,zpao,vjeux,zpao,vjeux,vjeux",2016-09-01 02:52:23,2016-09-02 21:23:58
PR,Remove describe from tests,Most of our test files only have one describe block with the name being the name of the file This is not useful and is only noise in the test files It turns out that jest does not require it and removed it from the tutorials I ran the following codemod And had to manually one two file where backtick were not properly re printed by recast,,"vjeux,zpao,vjeux",2016-09-02 21:27:56,2016-09-02 21:53:17
IS,Fix coverage testing and enable it again,It was introduced in 5713 but I disabled it in d138b286db4fcb7137f9267a30ec64b657d3cfb4 because we consistently got test failures on master They appear to be caused by processes running out of memory due to coverage instrumentation overhead We should figure out a way to add the coverage reporting back I ve heard from there are potential optimizations to be made in Jest to help mitigate this overhead We can look into helping Jest deal with this If there is a way to increase memory cap for React tests on Travis maybe we could do that too One thing I wasn t sure about is removing set e in d138b286db4fcb7137f9267a30ec64b657d3cfb4 It was only present in if branch that used to handle the master so I removed it to be consistent with the else branch that handles the PRs However I m not sure why it was there in the first place and maybe we should add it back I d love to learn more about this Let s keep this issue open until we have a specific plan to integrate coverage again without being red all the time,,"gaearon,cpojer,keyanzhang,vjeux",2016-03-18 01:22:36,2016-09-02 22:02:58
PR,Convert CallbackQueue to a class,It turns out that flow cannot type this with a function constructor prototype overrides Turning it to a class makes flow happy and has minimal impact on the output In open source we already use the loose version of the class transform and internally we have one that is outputting even less code if you have preventMunge in the header See discussion in,,"vjeux,sophiebits,sophiebits,vjeux,flarnie,vjeux,vjeux,sophiebits,vjeux,vjeux",2016-09-02 22:11:23,2016-09-02 22:27:44
PR,Type ReactCurrentOwner,Simpler than ReactOwner,,"vjeux,zpao,vjeux,vjeux,zpao",2016-09-02 22:34:05,2016-09-02 23:29:24
PR,Flow bool boolean,Let is be consistent,,"zpao,vjeux,vjeux",2016-09-02 23:25:03,2016-09-03 00:35:15
PR,Use proper render method in static markup event listener test,The renderToStaticMarkup test that checks for event listeners was using the wrong render method,,"nhunzaker,gaearon,fson,gaearon",2016-09-03 15:43:15,2016-09-03 16:29:12
PR,Link to Create React App,We solved most of the major pain points and I think it s time to make it more prominent,,"gaearon,gaearon",2016-09-03 16:24:50,2016-09-03 17:13:30
IS,ReactComponentTreeHook should not end up in the production build,I noticed it s getting included in production builds again but it shouldn t be Filing this to track it because we specifically fixed it recently and we re regressing on this Likely related to 7168,,gaearon,2016-08-13 20:33:21,2016-09-03 21:32:20
PR,Do not bundle ReactComponentTreeHook in production,Fixes 7492 This was a build size regression introduced in 7164 This should go in 15 4 0 if we ship in 7164 in it so I ll tag as patch just in case Feel free to remove the tag if not necessary,,"gaearon,vjeux,zpao,gaearon",2016-09-03 15:54:32,2016-09-03 21:32:20
PR,autofocus should warn with autoFocus as alternate name,3248,,"aweary,aweary",2016-08-11 15:34:02,2016-09-03 23:48:56
IS,Unknown prop warning on allowed props,In some of my jest snapshot test I see this warning I use jest 14 1 0 and react 15 3 1,,"aweary,aweary,aweary,aweary,aweary,gaearon",2016-08-29 00:58:59,2016-09-05 01:51:48
IS,numeric string value for CSS property MsFlexGrow,Do you want to request a feature or report a bug Bug What is the current behavior A warning a span tag owner Box was passed a numeric string value for CSS property MsFlexGrow value 6 which will be treated as a unitless number in a future version of React If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior It should not warn Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 1 Aside is it MS or Ms case I get a warning for both,,"brigand,aweary,brigand",2016-09-05 00:31:59,2016-09-05 02:58:38
IS,String refs cause incorrect warning in ReactTestRenderer,If you attach a ref to an element using a string ref 'foo' and use ReactTestRenderer you get the Stateless function components cannot be given refs warning See issuecomment 237816352 This is because getPublicInstance returns null and attachRef requires that the instance be non null in the warning invariant I think we can either return a simple instance instead of null or use some additional check in attachRef to see if we are dealing with ReactTestRenderer The first option seems reasonable given the comment in the current code cc,,"aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,sophiebits,gaearon,aweary,gaearon,sophiebits,gaearon",2016-09-02 16:31:14,2016-09-06 08:49:20
PR,skip null ref warning for ReactTestRenderer,Resolves as far as the warning goes assuming that toJSON is not going to be implemented in other renderers,,"aweary,gaearon,aweary,sophiebits,aweary,sophiebits,gaearon,sophiebits,sophiebits,gaearon,sophiebits,gaearon",2016-09-05 03:29:52,2016-09-06 08:49:20
PR,Remove unnecessary var declaration,,,"gaearon,kentcdodds",2016-09-06 15:15:18,2016-09-06 15:31:47
IS,unwanted focus event triggered after blur,Do you want to request a feature or report a bug Bug What is the current behavior After blur event triggered in componentWillUpdate unwanted focus event triggered after render If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar What is the expected behavior When input box is focused and a key is pressed input box should blur But it does not Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 1,,zpao,2016-09-06 12:20:36,2016-09-06 16:43:51
PR,Fix the HTML for package management,I do not think we nead react js and react dom js in package management and the bundled file is bundle js,,zpao,2016-09-04 16:39:32,2016-09-06 16:58:17
PR,Migrate input value change fix from 16 0 0 alpha,This PR backports work done by to fix several event issues for React 15 x Additionally addressing issue 3659 It is a blend of his work with newer updates from master Should fix 3659 and a couple of others,,"nhunzaker,jquense,nhunzaker,aweary,jquense,nhunzaker,aweary,jquense,nhunzaker,sophiebits,jquense,jquense,sophiebits,jquense",2016-07-19 13:45:17,2016-09-06 17:37:51
PR,Use Arrow Functions for jest blocks,I wrote it live,,"vjeux,gaearon",2016-09-06 02:36:34,2016-09-06 22:18:42
IS,Mouseenter events triggered at disabled form element,Do you want to request a feature or report a bug bug What is the current behavior When mouse enter disabled form element trigger mouseenter events but it not trigger mouseleave when mouse leave from the element If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template js output First button rendered by react What is the expected behavior Do not trigger mouseenter events when form elements disabled Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 0 Yes,,aweary,2016-09-07 08:54:12,2016-09-07 14:38:18
IS,Bug Missing warnings about unknown props unknown DOM properties,Actual Missing warnings for unknown DOMProperties in development Missing warnings for unknown props in development Expected Unknown DOMProperties log warnings Unknown props log warnings Affected Versions Software Version Test React 15 3 1 15 3 0 seems to work as intended Runtime node 6 5 0 Link Affected Browsers Chrome tested Link,,"aweary,aweary",2016-09-07 15:32:14,2016-09-07 15:38:17
PR,Flow type event plugins,Type SimpleEventPlugin and TapEventPlugin Fills in the 'any' holes that were left in DispatchConfig type and the type annotations in EventPluginRegistry Adds polymorphic PluginModule type and related types Uses hack to support indexable properties on 'Touch' type in TapEventPlugin The issue in TapEventPlugin is that the code is accessing one of four possible properties on the 'Touch' type native event using the bracket accessor Classes in Flow do not support using the bracket accessor unless you use a declaration and the syntax key Type Type 1 The downside of using that here is that we create a global type which we may not need in other files Other options Use looser typing or a ' FixMe' comment and open an issue with Flow to support indexing on regular classes Rewrite TapEventPlugin to not use the bracket accessor on 'Touch' I thought the current implementation was elegant and did not want to change it But we could do something like this,,"flarnie,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,flarnie,flarnie,flarnie,vjeux,vjeux,vjeux,flarnie,flarnie,flarnie,flarnie,vjeux,vjeux,vjeux,vjeux",2016-09-06 16:35:25,2016-09-07 19:40:45
PR,Trim and inline ReactInstanceHandles,React IDs have been killed and there was one call site left in a test I trimmed down the implementation to keep only what is actually used and inlined it inside of the test so we do not get more people using it in the future,,"vjeux,sophiebits",2016-09-07 21:03:51,2016-09-08 03:03:56
PR,Type ReactHostOperationHistoryHook,In order to properly type an Operation we need to change the call site from having two arguments one for type and one for payload into an object that contains both This is not a perf regression because we were already constructing this object in the first place and does not change the emitted event so should not affect the dev tools None of the call sites are actually flow ified so it is not technically used but once we will it will make sure that we do not send random strings and payload through those very generic methods,,"vjeux,vjeux,sophiebits,vjeux,sophiebits,vjeux,vjeux",2016-09-07 02:09:59,2016-09-08 03:08:10
PR,Adding the published ReactRally videos section,ReactRally came and went and it was splendid Videos now linked,,"GantMan,aweary,zpao,GantMan",2016-09-08 15:11:18,2016-09-08 15:17:39
PR,Update 14 communicate between components md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA To demonstrate multiple arguments bind this arg1 arg2 also not to pass in more than what handleClick needed namely props or maybe even just pass single item itself etc Going to change the kor file after review,,"exiadbq,aweary",2016-09-08 13:02:12,2016-09-08 15:20:25
PR,Move from createClass to ES classes using react codemod transforms class,I run react codemod transforms class js to src directory which is for moving React codebase to ES classes components ref 7321,,"koba04,zpao,sophiebits,koba04",2016-09-08 09:03:08,2016-09-08 17:38:44
PR,Move mouse event disabling on interactive elements to SimpleEventPlugin Related perf tweak to click handlers,Eliminates DisabledInputUtils in favor of filtering out mouse events for disabled interactive elements in SimpleEventPlugin I have published the build of this branch with a test page here Drawback and a question ReactTestUtils Simulate now allows disabled inputs to receive mouse events This made it necessary to use ReactTestUtils SimulateNative when I updated the tests I'm not sure what to do about this It is as if React TestUtils Simulate is bypassing SimpleEventPlugin Is this expected Click bubbling performance tweak I noticed that there is a fix for click event bubbling in iOS iOS does not allow click bubbling for non interactive elements so a workaround is made by adding a local listener explained here But now there is a check for interactive elements So this fix can be filtered down to non interactive elements significantly reducing listener attachments I have summarized this and included Chrome JS Profiler snapshots here More background A while back I submitted a fix for disabled inputs in IE 6215 At the time I believed that the fix could happen closer to the event system but lacked familiarity with it 7616 yielded a video deep dive on the event system which was super helpful in understanding this part of React Thanks kentcdodds gaearon and spicyj not mentioned for noise,,"nhunzaker,aweary,nhunzaker,nhunzaker,sophiebits,nhunzaker,sophiebits,nhunzaker,nhunzaker,aweary,aweary,nhunzaker,sophiebits,aweary,nhunzaker,nhunzaker,nhunzaker,aweary,sophiebits,nhunzaker,sophiebits",2016-09-02 14:36:41,2016-09-08 18:47:52
PR,Revert Add unknown property warning for use of autofocus,Reverts facebook react 6461 See issuecomment 245727376 for the reasoning,,zpao,2016-09-08 20:21:42,2016-09-08 20:43:58
IS,Edge File input inside a label keeps reopening the file explorer window,Do you want to request a feature or report a bug I want to report a bug What is the current behavior When using a input type file inside a label on MS Edge the file explorer window keeps reopening When this happens the only way to close Edge is by killing the process If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Place a input type file inside a label like this What is the expected behavior When the file explorer window is closed either by selecting a file or by cancelling the file explorer window should be closed and remain closed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React version 15 3 1 Browser MS Edge OS Windows 10 I did not test previous React versions,,"aweary,zpao,aweary,aweary,aweary,zpao",2016-09-08 17:44:20,2016-09-09 14:49:20
PR,docs Optimize images in docs with ImageOptim saved 3 5MB,Saved 3 5MB out of 15 5MB 36 1 per file on average up to 88,,"ivanzotov,zpao",2016-09-09 14:14:06,2016-09-09 16:45:39
IS,Issue with input and formatting the value to the state,Do you want to request a feature or report a bug I want to report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template In this case I am trying to format the value from the input with a thousand separator Here is a Codepen with the problem What is the expected behavior When using Intl NumberFormat isv SE' the values should be as following 100 should be 100 works 1000 should be 1 000 works 10000 should be 10 000 does not work 100000 should be 100 000 does not work Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Unaware of this has worked in previous version of React but I am using React 15 1 0 and React Dom 15 1 0 Tested in latest version of Chrome and Firefox,,zpao,2016-09-09 11:54:41,2016-09-09 16:51:03
PR,Docs Fix tutorial line highlights,This line form should be highlighted L574,,zpao,2016-09-09 04:57:20,2016-09-09 16:54:03
PR,Update 14 communicate between components ko KR md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Apply the same change made in 7680,,"exiadbq,aweary,zpao",2016-09-09 01:31:17,2016-09-09 18:22:56
IS,Allow generators that yield components in place of arrays,Do you want to request a feature or report a bug Feature What is the current behavior Generators are silently discarded If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This is allowed Notice how I can write if conditions and switch statements without having to instantiate an empty array push elements into it as needed and then return an array at the end generators take care of all of that for you Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React n a,,"jimfb,sophiebits,syranide,sophiebits,syranide",2016-08-20 21:34:04,2016-09-09 20:59:45
PR,jest 15 1 1,we exclude test files from the coverage report by default now,,aaronabramov,2016-09-10 17:48:21,2016-09-10 22:09:14
PR,Fix Flow,Because CI does not correctly check flow was able to introduce a flow error The fix is really simple fortunately,,"vjeux,vjeux,flarnie",2016-09-10 22:28:26,2016-09-10 22:57:06
PR,Fix Flow errors in Event Plugins,Due to a typo in PR 7667 where I put 'DispatchConfig' when the type was 'EventTypes' there were some flow errors being thrown Then PR 7642 fixed a bug in SimpleEventPlugin and added some untyped methods which threw more flow errors Last while fixing this I fixed two eslint errors in the SimpleEventPlugin test,,"flarnie,vjeux",2016-09-10 22:48:01,2016-09-10 23:44:09
IS,React cloneElement this props children this props copies the children into the this props children of children itself,please run the js fiddle given above cloneElement copies the children into props children of the child itself and if the child also renders its children using the same method an infinite loop is established and the browser maximum call stack size is exceeded Ideally while cloning the children property of the props of the child should be left untouched,,"arshabh,gaearon,arshabh,gaearon,arshabh",2016-09-10 16:03:44,2016-09-11 06:54:31
PR,rfc Support nested arrays of styles for inline styling prop,This is already a supported feature in ReactNative 1 You can write This diff makes the smallest possible tweak to add support for this feature if we get a nested array then merge the nested arrays into one object and handle it the same as before Because the merging only happens when the style prop is an array there should be little or no effect on performance when using the old syntax Even so I would like to have more robust testing before landing this It would be easier to test and benchmark this change if we pulled the diffing logic from the method updateDOMProperties out into a separate module Perhaps before adding this feature we could pull out the logic for diffing the 'prevProps' and 'nextProps' into a separate module used by ' updateDOMProperties' test and benchmark that module Then we could more easily add test cases for the new syntax that this would support Or perhaps I'm over thinking it and this could be landed before doing refactoring Test plan existing unit tests lints flow all pass note there are some flow errors on master which I plan to fix in a separate PR None are introduced by this change though added unit test for 'flattenStyleArray' method added example in examples file,,"flarnie,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,flarnie,vjeux,sebmarkbage,syranide,flarnie,syranide",2016-09-10 22:12:14,2016-09-12 15:19:08
IS,React thinks that my input is readonly but it is not,I want to report a bug I have an input the value of which is set from this state And this value is manipulated using onKeyDown event In my console i have the next error Warning Failed form propType You provided a value prop to a form field without an onChange handler This will render a read only field If the field should be mutable use defaultValue Otherwise set either onChange or readOnly Check the render method of TimePicker So my input is not readonly it gets edited which means that this error is nonexistent To reproduce this you could add an input with value from this state and onKeyDown handler and no onChange handler Something like this The expected behavior would be the same but without console error My component works exactly as i expect React v15 3 1,,"syranide,syranide,syranide,aweary",2016-09-12 10:59:32,2016-09-12 16:42:39
IS,Unable to transform const layout rest props into ES5 via babel,I ran into this error when I ran react code Warning Unknown prop dataFrameworkName on h1 tag Remove this prop from the element For details see So I jump to the link and replaced the code with the first good example listed in the page After that I can not pass the babel transpiling any more The error is And the transpiling will stuck at the spread operator What is the expected behavior Pass the transpiling Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React babel 6 14 0 babel preset es2015 6 14 0 babel preset react 6 11 1,,aweary,2016-09-12 18:13:37,2016-09-12 18:25:53
PR,Add support for class inheritance on IE10,Fixes 6929 See for more details,,"jimfb,zpao",2016-09-12 07:57:15,2016-09-12 18:56:49
PR,Fix benchmarks,They got broken at some point due to us no longer putting ReactDOMServer guts into react min js This fixes them and adds some instructions for first time users like me,,"gaearon,sophiebits,sophiebits,zpao,gaearon",2016-09-12 18:50:53,2016-09-12 18:58:00
IS,Anyway to retrieve a field is meta object externally,Hi all I was hoping to retrieve a field is meta attribute after the field has been rendered so that I can know if a field has an error or not I'm actually wrapping a field in a pop up so that it can be edited later so I want to know whether the field has an error so that they use is allowed to continue For example let fieldReference Field name name component CustomComponent code to be run later after the field has been rendered and user inputs value console log fieldReference meta error I'm finding that I cannot reference the meta object But I can access the meta object in in the CustomComponent field is there anyway without storing my own variables to access the meta or input objects if I have a reference to the field,,zpao,2016-09-12 19:21:07,2016-09-12 19:25:34
PR,Proper font family for docs search box 7706,This is a straight forward change to font family of search input on docs unifying it with the rest of the page Before img width 244 alt screen shot 2016 09 13 at 00 27 48 src After img width 248 alt screen shot 2016 09 13 at 00 27 38 src,,"thymikee,zpao",2016-09-12 22:56:36,2016-09-12 23:29:46
IS,Search box on website is wrong font,It does not match the rest of our text I think a font family inherit in the right place in the stylesheet should fix this image,,"sophiebits,zpao,thymikee,zpao,thymikee,zpao",2016-09-12 21:46:41,2016-09-12 23:31:16
IS,Class Name Manipulation is not native,This page currently suggests an external dependency in npm for what should be provided by React Can we instead include these 10 lines of code into React and eliminate this external dependency,,"aweary,gaearon",2016-09-12 23:56:31,2016-09-13 02:58:52
PR,Add Russian translation for introduction of tips,gaearon I would like to translate all tips into Russian let me know if this is a good style for it,,ivanzotov,2016-09-09 20:51:53,2016-09-13 10:36:16
PR,Update OWASP link in docs for dangerous innerHTML,Fixes the 404 in the docs to the OWASP pdf I have added the 2013 edition since the 2016 version is not out yet,,"amanvir,jimfb",2016-09-13 06:59:33,2016-09-13 12:29:09
IS,False positive mutation warning,Given the following test case This is probably caused by this mutation check L34 which was introduced in 15 3 0 but it does not work for NaN because NaN NaN,,"zpao,vjeux,aweary,jimfb,gaearon,gaearon",2016-08-04 12:52:04,2016-09-13 13:25:31
PR,Change ReactChildrenMutationWarningHook to Object freeze children,Alternative of 7410 that fixes 7406 This should also fix 7424 and 7426 the false positive warning Saving and comparing the shadowChildren is pretty expensive we can Object freeze the JSX children instead Benchmark Reviewers,,"keyanzhang,keyanzhang,jimfb,jimfb,keyanzhang,gaearon,gaearon,keyanzhang,gaearon,gaearon,jimfb,gaearon,keyanzhang,keyanzhang,gaearon,keyanzhang,gaearon,keyanzhang,gaearon,sophiebits,gaearon,gaearon,keyanzhang,gaearon,keyanzhang,gaearon,zpao,gaearon",2016-08-10 00:13:20,2016-09-13 13:25:32
PR,Implement createNodeMock for ReactTestRenderer,This lets users pass in an optional testOptions object as the second argument to ReactTestRenderer create that allows for custom mocking behavior As of now that only includes createNodeMock which accepts the current element and should return a mock ref object The testOptions is stored on the component instance so it does not leak between instances cc,,"aweary,aweary,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,aweary,aweary,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,aweary,gaearon,gaearon,gaearon,gaearon,edvinerikson,aweary,aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,aweary,gaearon,gaearon,aweary,gaearon,aweary,gaearon,aweary,cpojer,aweary,cpojer,aweary,cpojer,aweary,aweary,gaearon,aweary,gaearon,aweary,aweary,gaearon,aweary,gaearon,aweary,aweary,gaearon,aweary,gaearon,gaearon,sophiebits,gaearon,sophiebits,gaearon,aweary,gaearon",2016-09-02 22:37:41,2016-09-13 14:09:20
IS,attach react component to already rendered DOM which is not rendered by react on server,I would like to keep traditional server side rendering not react rendering with node and attach client side code I believe the following statement might help to achieve that I wonder if any work is being done Or any help or guide on how to mix server rendered content via server side template such as jinja2 with react at the moment would be greatly appreciated states that ReactDOM render does not modify the container node only modifies the children of the container In the future it may be possible to insert a component to an existing DOM node without overwriting the existing children,,"gaearon,gaearon",2016-09-13 11:50:58,2016-09-13 17:07:25
PR,BeforeInput is fired with a wrong text at a wrong time on IE,This patch addresses a typing issue with Japanese IME on Internet Explorer The issue is related to the known issue about Korean IME documented in draft js but different Korean issue is not addressed by this patch This patch also adds a new testcase to cover BeforeInputEventPlugin Repro steps 1 Open IE11 and navigate to 2 Turn on Japanese IME and type Japanese text on the 'Tell a story' box Issue description The 1st candaidate is always committed even when we try to commit the 2nd or later candidate Since facebook com is using draft js this issue can be reproed on the NewsFeed Post box of facebook com Root cause Fix React creates a browser independent beforeInput event to match W3C spec from the combination of the existing events e g compositionstart keyup textnput and etc The problem is that in IE onBeforeInput is fired with a wrong text at a wrong time Basically React uses textInput events to create beforeInput However IE fires an event named textinput all lowercases that is not useful due to a couple of IE is incorrect behaviors as below 1 With Japanese IME after one or more implicit commits when a user ends composition a textinput is fired but it contains only the last composition text 2 With Japanese IME a textinput event does not contain an ideographic character U 3000 when a user hits a space key not in composition state As a fallback React stores a text of a target element at compositionend or additional keyboard mouse events and fires beforeinput at compositionend with the stored text One of the additional events is keyUp with keyCode 32 With Korean and Chinese IME a space key is one of keys to end composition With Japanese IME however a space key does not mean the end of composition but just switching candidates As a result the first candidate is stored as a fallback text and it is displayed even if a user selects the 2nd or a subsequent candidate The fix is that we do not use additional keyboard mouse events if composition event is available IE9 11 fires composition events even though its event data is not correct It is good enough to use as a time to store a fallback text,,"msmania,gaearon,sophiebits,msmania,sophiebits",2016-06-23 16:30:52,2016-09-13 18:15:18
PR,Lint for ReactART,This PR is for adding ReactART into ESLint targets and fixing ESLint errors,,"koba04,aweary,koba04,aweary,zpao,koba04",2016-09-13 14:20:25,2016-09-13 21:47:04
PR,Fiber Refactor Pending Work Phase and Progressed Work,This drops the findPendingWork and replaces it with just going through the normal flow It avoids lots of duplication and makes it a lot easier to think about It changes childInProgress to progressedChild with a priority flag The priority flag indicates if we should use the progressedChild or the current child This finally actually fixes the starvation issues properly cc,,"sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage",2016-09-02 04:10:32,2016-09-13 22:24:52
PR,Fiber setState,workInProgress yay puns Implements setState for Fiber Updates are scheduled by setting a work priority on the fiber and bubbling it to the root Because the instance does not know which tree is current at any given time the update is scheduled on both fiber alternates Need to add more unit tests to cover edge cases A few questions I have How to deal with the circular dependency between ReactFiberScheduler and ReactFiberBeginWork I'm using a closure to lazily access the scheduler but seems like there may be a better way How to queue update callbacks The only way I could think to do it was to add another field to Fiber so I have punted on this for now How to access the fiber from the updater I decided to use a private field on the instance Could also create a new updater for each instance and close over its fiber but that seems wasteful Should I put setState related tests in their own module I think I should but not sure I discussed with before working on this PR Based on Compare view fibersetstate,,"acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,sebmarkbage",2016-07-24 02:08:15,2016-09-13 22:31:15
PR,Fiber Animation priority work,Adds the ability to schedule and perform high priority work In the noop renderer this is exposed using a method performHighPriWork fn where the function is executed and all updates in that scope are given high priority To do this the scheduler keeps track of a default priority level A new function performWithPriority priority fn changes the default priority before calling the function then resets it afterwards,,"acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite",2016-08-10 22:23:27,2016-09-13 23:46:33
PR,Unify branches in cloneFiber,,,"sophiebits,sebmarkbage",2016-09-13 22:37:52,2016-09-14 00:42:15
IS,Bug False Positive plain object Warning,There is a bug in the logic for determining if props is a plain object This bug results in a false positive flooding the console with hundreds of instances of this warning Expected props argument to be a plain object Properties defined in its prototype chain will be ignored The code that is failing is in ReactElement js Line 210 in the v15 3 1 branch L210 line number is probably different in master config proto null config proto Object prototype This fails when the props object is created in one iframe but uses an instance of React from another frame Each browser window tab frame has it is own instance of the Object constructor For instance document querySelector 'iframe' contentWindow Object Object always results in false Check out this demo which shows the false positive warning message,,"sophiebits,gaearon,sophiebits,aweary",2016-09-13 17:42:15,2016-09-14 02:15:07
PR,Remove plain object warning for createElement cloneElement,Fixes 7718 by removing the warning altogether as suggested by This is basically an exact revert of 17683e Pull Request 6134,,sophiebits,2016-09-14 00:43:33,2016-09-14 02:15:07
PR,Clean up ReactTestRenderer,This breaks out ReactTestTextComponent and ReactTestEmptyComponent into their own files so the main ReactTestRenderer js file is a little cleaner I also implemented ReactTestRenderer with an ES6 class flow types cc,,"aweary,aweary,aweary,sophiebits,gaearon,sophiebits",2016-09-13 15:20:49,2016-09-14 02:20:41
PR,Fix Russian translation of introduction to be more technical,,,ivanzotov,2016-09-14 07:06:02,2016-09-14 10:23:57
PR,Russian translation for inline styles of tips,,,"ivanzotov,gaearon,gaearon,gaearon,ivanzotov",2016-09-13 16:34:14,2016-09-14 10:26:36
IS,Prop type is invalid it must be a function,Hi When declaring the prop types of a component if one of those props definition is undefined React gives a very confusing error when the component is rendered image Here is js console a link to reproduce it just hit the Run button in the console,,,2016-09-14 10:29:00,2016-09-14 10:31:41
PR,Russian translation if else in JSX of tips,I will change prev link here and next link of inline styles after merge 7717,,"ivanzotov,gaearon,gaearon,gaearon,ivanzotov,gaearon,gaearon,gaearon",2016-09-14 06:51:11,2016-09-14 12:05:21
PR,Update ignores in flowconfig,This ensures we ignore relative to our project root and wo not be tripped up by issues where checkouts in other places result in Flow passing when it should not eg on Travis CI where the checkout path is home travis build facebook react,,"zpao,zpao,zpao,sophiebits,vjeux",2016-09-13 22:28:15,2016-09-14 21:57:31
IS,Blacklist Opera in developer plugin notice,Opera is sending Chrome in the user agent but we do not have a plugin release for Opera so we need to massage the browser detection to not show the warning Relevant code L75,,"jimfb,jimfb",2016-09-14 21:55:38,2016-09-14 22:08:21
IS,JSX alternative syntax for passing JSX content to props,Silly but succinct example That is in these prop elements which have no other purpose for their attributes they can optionally specify valueless attributes These become the parameter names of a function and that function is then is passed to the prop Once again it maps exactly to the previous example If no attributes are specified as in eg2 then there is nothing variable for the content to depend on and hence it can just be a simple value rather than a function returning a value I found a prior issue that seemed to be asking for something similar but was not as precisely mapped to existing concepts Here I'm not talking about anything that changes the model just a way of staying in JSX and reducing the mental overload of switching syntaxes when writing reading trees,,"aweary,jimfb,zpao,zpao",2016-09-14 20:26:15,2016-09-14 22:25:32
IS,Event dispatch fails after unmounting,What is the current behavior Repro Click Click Me Fails with React DOM tree root should always have a node reference What is the expected behavior No failure and event dispatch stops Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 1 Chrome 52 OS X Not certain if this has worked before Maybe related 7103 and 7661,,"zpao,sebmarkbage,sophiebits",2016-09-14 21:47:03,2016-09-14 23:00:21
IS,Fix Flow issues introduced in 7716,We missed this because Flow was not being run properly on Travis but now that it is it is clear that 7716 introduced a bunch of new Flow failures Most of these should not be too bad and I like to say you break it you buy it so this one is for you There were a couple other pre existing Flow issues that is going to fix so mostly this should just be the TestRenderer issues,,"zpao,aweary,vjeux,vjeux,zpao,aweary",2016-09-14 22:09:12,2016-09-15 16:44:56
PR,Resolve flow errors with ReactTestRenderer,Resolves,,"aweary,aweary,zpao,aweary,aweary,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,gaearon,aweary,gaearon,gaearon,aweary,sophiebits,aweary,sophiebits,aweary,sophiebits,aweary,sophiebits,aweary,vjeux,aweary,aweary,aweary,gaearon,vjeux,zpao,sophiebits,zpao",2016-09-14 22:34:52,2016-09-15 16:44:56
PR,Simplify event phases Use explicitly 'captured' and 'bubbled',It is just a simplification of event phases discussed in this awesome video I hope you meant this kind of simplification but I'm not sure about ReactNativeTreeTraversal It is my first PR here so I will fix anything that looks wrong and sorry for possible newbie fails and thanks for the awesome video,,"gaearon,sophiebits",2016-09-15 14:03:24,2016-09-16 06:24:56
IS,No error is shown when use a undefined variable,I use react with webpack When I use a variable in my component like props children instead of this props children the component fail silently No errors is shown,,"gaearon,gaearon,nhunzaker,gaearon,gaearon,gaearon,gaearon,gaearon",2016-08-30 19:10:43,2016-09-16 21:11:32
PR,Revert ReactMultiChild to plain object,Reverts changes made in that ended up being breaking for ReactART and RN See conversation here r79073698 cc,,"aweary,sophiebits",2016-09-16 21:42:51,2016-09-17 15:40:23
IS,upgrade to react 15 3 1 some warning,since upgrade to react 15 3 1 always reported such information,,gaearon,2016-09-16 17:06:36,2016-09-17 18:43:59
IS,Will react call children components' render when it calls parent component is render,spicyj I'm implementing a wizard framework and the basic design is like below wizard container contains previous next buttons and several wizard pages wizard container maintains a ref to the current wizard page when the next button is clicked on wizard container submit of the current wizard page is invoked thru the ref here is the sample code of a wizard page the problem is that see I'm using Object assign to set new state in the current wizard page and I can see that every time I click the 'Next' button on the wizard container the alert box pops up saying 'current wizard page is re rendered' However the child component of the wizard page is not I have an alert box on BusinessInfoForm is render function as well I can understand that for the child component which is BusinessInfoForm since the passed in prop remains the same prestine boolean true there is no need for it to re render So the behaviour kind of makes sense However when a parent Component gets re rendered should not all its children component all get destroyed all re constructed again but it seems like all the children components are cached and are only re rendered when needed I know that I may call forceUpdate to force children components re render or simply pass in a new object instead of Boolean I'm more interested in how react framework is designed than finding a solution for that yeah I know I can debug the source code but I do not want to go that far Cheers,,"gaearon,gaearon,gaearon",2016-09-17 12:57:01,2016-09-18 09:33:06
IS,Problem on iOS10 with select element,I have a bug on iOS10 with Safari I do not know if it is a react problem or react router but this is my problem You could reproduce it with this repo At the beginning of this website you will have two links Home and Select Click on Select then change the value on this select element to anything It will change this select with a new one If you click on Home you should have this image There is no select on this page but you still see this select open There was no problem with iOS 9 3 5 13G36,,aweary,2016-09-18 00:04:14,2016-09-18 15:57:15
IS,Ca not isomorphically check propTypes in react dom stream SSR without warnings in React 15 2,react dom stream helpfully checks propTypes while rendering static HTML to a stream But of course React 15 2 warns in this case on a user Html Component with propTypes head Warning You are manually calling a React PropTypes validation function for the head prop on Html This is deprecated and will not work in the next major version You may be seeing this warning due to a third party PropTypes library See for details The page at that link advises 3rd party libraries to use external PropType libraries but that wo not work in this case because react dom stream is trying to call the propTypes the user has put on their components rather than providing helpers like the 3rd party libraries the author of that page seems to be considering e g ImmutablePropTypes To prevent these errors the user would have to remove the propTypes on their components or replace the usages of React PropTypes in their own code with some other library If they were using 3rd party components that declare propTypes they would be out of luck Is there an intended solution to this or was this conflict unanticipated,,"jedwards1211,gaearon,jedwards1211,gaearon,gaearon",2016-09-18 21:27:39,2016-09-18 21:39:20
PR,Russian translation for self closing tag of tips,,,"ivanzotov,ivanzotov,ivanzotov",2016-09-14 15:56:08,2016-09-19 10:39:46
PR,Russian translation for max numbers of jsx root nodes,,,"ivanzotov,gaearon,gaearon",2016-09-15 10:37:15,2016-09-19 10:45:09
PR,Russian translation for style props value px of tips,,,ivanzotov,2016-09-15 15:52:51,2016-09-19 10:57:42
PR,Fix links and ids for tips in russian docs,,,ivanzotov,2016-09-19 14:36:56,2016-09-19 14:50:26
PR,docs fix scope in forms example,handleChange needs to get bound to this in order to call this setState,,"nikolas,aweary,nikolas,aweary",2016-09-16 19:18:50,2016-09-19 15:13:16
IS,React github page localization issue,hello im korean Im being helped by React korea page but page sidebar is not translated only english sidebar elements moved to the US when clicked this is not only Korean issue Japanese i hope to be issue solved Thanks,,zpao,2016-09-18 09:34:12,2016-09-19 16:37:38
IS,Ship 15 3 2,I just shipped 15 3 2 rc 1 It should be safe to just go straight from that to final but I wanted to get it published first And just in case I do not get to it tonight this is here to remind me to ship final Just need to write the changelog,,"zpao,zpao",2016-09-15 23:48:47,2016-09-19 20:57:26
PR,docs Update React Rally 2016 videos link,Followup to 7681,,zpao,2016-09-19 21:25:57,2016-09-19 21:26:32
IS,redux realworld,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-09-19 21:46:20,2016-09-19 21:46:32
PR,gulp Change areact modules' to copy areact lib' into areact native lib',Unless I'm missing something files like ReactElement js were not being copied into react native lib Is there another recommended way of using a react fork with react native,,"sebmarkbage,sebmarkbage",2016-09-20 03:23:31,2016-09-20 05:01:19
IS,Proper Pattern for Controlled Input type number with blank initialization,Say I'm building a controlled React NumInput element that returns input type number value this props value What is the proper way to initialize it if I want to start off with a blank value 0 is not equivalent to '' and anything I can think to pass in throws errors Is this an anti pattern I do not want to just hack a text input because I would like to take advantage of built in min max step functionality Passing Warning Failed prop type Invalid prop value of type string supplied to NumInput expected number Passing null Warning value prop on input should not be null Consider using the empty string to clear the component or undefined for uncontrolled components Passing undefined Warning NumInput is changing an uncontrolled input of type number to be controlled Input elements should not switch from uncontrolled to controlled or vice versa Decide between using a controlled or uncontrolled input element for the lifetime of the component,,"aweary,aweary,aweary",2016-09-20 20:23:40,2016-09-20 21:00:51
IS,React throws warning concerning unique key prop when collection has only one element,Do you want to request a feature or report a bug bug What is the current behavior 1 Create list of elements which contains just one element Element key is undefined 2 Render list properly 3 React throws warning VM60 react with addons js 22809 Warning Each child in an array or iterator should have a unique key prop If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This is an example What is the expected behavior Expected behavior list contains just one element therefore key is unique Warning should not be displayed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Appeared in the following versions react 15 3 1 react dom 15 3 1 This worked in previous version react 15 0 2 react dom 15 3 1,,"syranide,karczk,karczk,aweary",2016-09-20 09:03:59,2016-09-20 21:11:33
PR,Adjust code to handle more availability of function name,As noted in using node v6 5 fails some tests This is due to the status quo where function name is not well supported point to L765 which is the function name we are picking up I changed a couple places in our code which were falling back to function name to actually attempt to differentiate between cases where that is useful It is not useful for the React createClass cases since that will always be Constructor Instead I check if we have a displayName property instead of just using truthiness which seems to be good enough to differentiate Tangential we should probably consolidate so we do not duplicate this code Originally it was pretty simple but we have had to add more checks and it is gotten longer It is slightly different in these 2 places but close enough and we can just use the same thing in both places Test Plan Run tests in both node v6 5 4 x Pass consistently,,"zpao,keyanzhang,sophiebits,zpao,keyanzhang,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,zpao,aweary,sebmarkbage,vjeux,sebmarkbage",2016-09-06 18:30:16,2016-09-20 21:23:46
IS,bug React onChange Synthetic Proxy events are being recycled issue when handler is debounced,What is the current behavior Confirmed as of 0 14 7 but also happens today in 15 3 2 expect to get e target get null without the debounce works as expected possibly related to for react 9,,zpao,2016-09-20 15:14:00,2016-09-20 22:19:49
IS,Request The Top Level API should allow context passing,Hi I know the Context is flagged as an experimental feature hence why it is missing from the Top Level API but I find myself having to pass context to a legacy compatible component in a mixin Is it something that could be looked into Thanks,,jimfb,2016-07-28 14:01:58,2016-09-20 22:37:54
IS,deleting decimal values in number inputs,So I already chimed in about the problems here But there is another issue where you type out your number such as 123 45 and then start deleting and once you delete that 4 the cursor jobs all the way over to the left I think the problem has to do with the fact that d is not considered a valid number I'm not sure if this came from react or the browser The specified value 0 is not a valid number The value must match to the following regular expression d d d d eE d,,"aweary,nhunzaker,nhunzaker",2016-09-20 22:42:20,2016-09-20 23:06:55
IS,Safari error navigator userAgent indexOf is not a function,TypeError navigator userAgent indexOf is not a function In 'navigator userAgent indexOf 'Chrome' ' 'navigator userAgent indexOf' is undefined,,"aweary,aweary",2016-09-20 09:31:00,2016-09-20 23:59:17
PR,babel plugin Avoid circular dependency of 'object assign' on itself,The transform object assign require js plugin replaces usage of Object assign with require 'object assign' But it needs to make sure the current file is not object assign itself Otherwise a circular dependency will be introduced,,,2016-09-20 20:51:12,2016-09-21 00:31:40
IS,jsfiddle from official website not working,Do you want to request a feature or report a bug bug What is the current behavior does not work the code is not executed there are two files loaded from the Facebook servers but they both return a 5xx error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Go to and then click the link at the bottom to go to and then click on the link to jsfiddle in the text Check out this jsFiddle to see an example of reconciliation in action What is the expected behavior that there is some generated output in the result pane Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome latest stable Mac OS Safari Mac OS,,"gaearon,gaearon",2016-09-21 12:12:02,2016-09-21 12:42:49
PR,Update broken JSFiddle in Why React blog post,Fixes 7782,,gaearon,2016-09-21 12:42:37,2016-09-21 12:42:49
IS,Notification Index Please ignore this issue,How to refer to the DOM element within JSX props without using ref same as you know that this refer to option1 so you can pass the value directly without using this keyword,,"enaqx,jimfb",2016-09-20 12:44:32,2016-09-21 15:44:54
IS,API suggestion Extend React Component prototype,As a component library author there are constantly use cases where I want every single component to have one or more of the same properties Polymer handles this by exposing the Polymer Base Will most likely become Polymer Element in 2 0 static method Examples Themes Styles Props Behaviors I know the recommended best practice is to use HOC but wrapping or even decorating every single component gets tedious and is to implicit to library consumers much like context and cloneElement Merging props is messy and not always reliable depending on the use case I know I'm not the only one who would benefit from something like this just search the React Discuss forums,,"gaearon,gaearon,aweary,gaearon,gaearon,aweary,gaearon,gaearon,gaearon,gaearon",2016-09-21 16:15:12,2016-09-21 17:52:35
IS,onBlur does not work if header tag clicked,Do you want to request a feature or report a bug Bug What is the current behavior textarea onBlur does not work if header tag or one of its children was clicked If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo What is the expected behavior blur event should be triggered when focus has gone from textarea whatever element I click Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 2 Chrome Windows 10 It did not work in 15 2 1 also,,,2016-09-21 17:25:39,2016-09-21 18:37:41
IS,Flickering of UI while scrolling in React App,Do you want to request a feature or report a bug bug What is the current behavior I have built a react web app using React Redux that is being rendered in a webview I have a long paginated list to be rendered It shows a flickering kind of behaviour in loading the UI when I scroll up or down on that page When I scroll too fast it takes a second or two to render the UI properly Also this problem is found in the Android webview only but not on browser If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is the link of the screencast I recorded What is the expected behavior There is should not be any flickering while scrolling be it webview or browser Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 1 0 redux 3 5 2 Android Webview,,"gaearon,gaearon",2016-09-21 18:34:26,2016-09-21 20:39:29
PR,modify manual PropType calls warning,To indicate that code will not work in production with the next major release,,"jedwards1211,gaearon",2016-09-20 14:00:20,2016-09-22 13:59:01
PR,Blog This Week In React 1,First post for This Week In React a new weekly publication that features interesting projects event updates and interviews from the React community,,"ericnakagawa,zpao,acdlite,zpao,zpao,zpao,zpao,zpao,zpao,zpao,zpao,acdlite,ericnakagawa,ericnakagawa,sophiebits,ericnakagawa,aweary,zpao,sophiebits,vjeux",2016-09-21 21:49:57,2016-09-22 17:14:04
IS,Receive outside events without leaving React is system,This is a feature request Right now the only way to respond to outside world events is to leave the React is event system and add a native DOM listener This is bad since it will require more mental overhead when you have to work with this you need to think about your event listener receiving a native event or a react synthetic event It will also simply not be possible for computed SyntheticEvent s e g onChange It also makes it very hard for react events handlers to interrupt the DOM handlers Consider the following example where it is not intuitive why the React listener can not stop propagation to the document Spoiler React also listens on document that is why you would have to use SyntheticEvent nativeEvent stopImmediatePropagation An example for when you want to deal with outside events is a simple drawing tool that must listen on keyup to stop the drawing process To solve this problem I propose a new public API something like an EventRoot It should behave like a regular DOM Node so that you can addEventListener and removeEventListener but it is callbacks will receive the SyntheticEvent It will get called when triggering a two phase dispatch It respects the capture and bubble order as well as stopPropagation Everything you would expect when listening on document For the above example you would only have to replace document with the new event root The stopPropagation can now correctly be applied,,"philipp-spiess,aweary",2016-09-22 22:41:22,2016-09-22 23:21:17
PR,Update tutorial md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-09-23 00:12:15,2016-09-23 01:26:12
IS,Problems when changing value of uncontrolled number input in Chrome,Do you want to request a feature or report a bug BUG What is the current behavior Here is JSFiddle just try to edit the default value 2 34 to something else like 3 45 As soon as i insert dot cursor stars to jump in input Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React It is not working in Chrome v53 on React v15 3 2 and also v15 3 1 I did not try to go very far back but i tried it on old JSBin with React v0 13 2 and that worked On Firefox it is correctly working,,,2016-09-23 17:19:10,2016-09-23 17:27:46
IS,Use camelCase for event type name,Do you want to request a feature or report a bug Feature What is the current behavior event type returns the original all lowercase event type name Description As a library or component author it would be nice to receive the event type as camelCase in the same way React requires the name to be camelCase when passing it through as a prop This would allow authors to pass through props easier and allow people to still hook into these events Example Usage This is totally doable right now but would require a third party add on or function to keep track of new events added to React It would be nice if React just provided the camelCase name for us,,"jimfb,sophiebits,sophiebits,sophiebits,sophiebits",2016-09-16 18:55:23,2016-09-23 18:54:18
IS,Input elements should not switch from uncontrolled to controlled when disabled readonly,Do you want to request a feature or report a bug bug What is the current behavior Input Elements that are readOnly disabled which are updated with a value after the inital render produce a warning Child is changing an uncontrolled input of type text to be controlled Input elements should not switch from uncontrolled to controlled or vice versa Decide between using a controlled or uncontrolled input element for the lifetime of the component If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem What is the expected behavior no warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React not browser related its behaving correctly i just got a warning in my dev console,,"syranide,troydemonbreun,jimfb,syranide",2016-09-19 14:45:11,2016-09-24 04:51:30
PR,Fix for 7767,Fix for 7767,,"troydemonbreun,jimfb,jimfb",2016-09-23 21:33:58,2016-09-24 04:52:24
IS,JSX Spread tag proposal,This is a feature request It is a common request from developers to allow returning multiple elements from inline expressions in JSX A use case for this would be this pseudocode This is almost as simple as the naive solution at the very top and it produces the exact effect most developers are after variable number of arguments to createElement with no need to create keys or wrap elements into dummy tags,,"syranide,aweary",2016-09-23 23:30:47,2016-09-25 20:36:06
IS,Being warned about manually calling a React ProptTypes validation function,I do not think I am though Component But I get a warning about every proptype defined on that component,,,2016-09-26 12:56:47,2016-09-26 13:05:26
IS,How to pass inline CSS variables,I tried style ' border color' ared' or style ' borderColor' ared' and get warnings I do not think React support them yet,,aweary,2016-09-26 08:30:50,2016-09-26 13:21:08
IS,using propTypes,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-09-26 08:08:12,2016-09-26 14:58:30
PR,Change API from top level api html to top level api zh CN html,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"jinmmd,zpao",2016-09-22 05:48:09,2016-09-26 17:39:04
PR,Change from tutorial html to tutorial zh CN html,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"jinmmd,zpao",2016-09-22 03:49:39,2016-09-26 17:39:34
PR,Introduce facts tracker,We want to be able to track various things like number of files that are flowified number of tests passing with Fiber This introduces a tool that lets you do that The API is very simple you execute the script with a list of tuples key value and it is going to create a facts branch and put a txt file for each fact and values over time Test Plan This is tricky to test because Travis only exposes the private variables github token when it processes a committed file and not on branches The reason is that otherwise anyone could send a pull requests that does echo GITHUB TOKEN and steal your token Given this constraint I did all the work using two of my repos and am sending this pull request that should work as is fingers crossed but we wo not be able to test it out until it is committed Note that once this lands I'm going to kill those two repos,,"vjeux,zpao,zpao,zpao,zpao,zpao,vjeux,vjeux,vjeux,vjeux,vjeux,zpao,vjeux,zpao,zpao,vjeux,vjeux,vjeux,zpao",2016-09-15 22:06:33,2016-09-26 19:58:51
PR,Update 07 forms ko KR md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA fix spelling,,"zpao,aweary,zpao",2016-09-26 09:46:45,2016-09-26 21:02:33
PR,Update travis yml to use GITHUB USER NAME and GITHUB USER EMAIL,See issuecomment 249677880 for discussions,,vjeux,2016-09-26 20:01:25,2016-09-26 21:47:16
PR,Track fiber tests,Use the newly added tracking system to track the number of fiber tests that are passing failing I first tried to modify the grunt lint rule for it and send the output in stdout but unfortunately grunt displays the rule done messages there I had like 30 lines of js already and I figured I could just write 3 lines of bash and it would work the same Let me know if you want me to use another approach for it Test Plan Run the commands that have been introduced in this commit but the facts tracker one Run echo FIBER TESTS and make sure it prints 666 1434,,vjeux,2016-09-26 21:46:42,2016-09-26 21:54:27
IS,React Children map does not work with Function as Child Components,If I create a component that accepts functions as its children I'm not able to use React Children map to map through them it returns nothing I instead have to just use props children map but that throws an error if there is only one child Here is a JS Bin illustrating the issue output I'm not sure if this is a bug or intended functionality or if it is just not recommended to build components this way The JS Bin example is using React 15 1 but I'm experiencing this on 15 3 1 as well,,"syranide,jimfb,sebmarkbage",2016-09-25 23:02:53,2016-09-27 04:37:39
PR,Refactoring PooledClass,I found duplicated code in PooledClass I think that Static Pooler can merge several pooler method,,"aweary,gaearon,gaearon",2016-09-27 13:13:31,2016-09-27 13:51:23
IS,Shape validation does not recognize deconstructed props attributes,Bug Shape validation does not recognize deconstructed props attribute 'bar baz' PropType is defined but prop is never used react no unused prop types Failing example with deconstructed props,,"syranide,aweary",2016-09-27 15:10:07,2016-09-27 15:24:05
IS,Manipulating DOM in componentDidUpdate,Hi this is more like a question I would like to open a discussion regarding DOM manipulation in componentDidUpdate I'm creating a React plugin It has to do some DOM calculations because CSS is not powerful enough to cover everything this plugin needs to do The problem is I need to adjust some CSS properties depending on the return value of getBoundingClientRect of some other DOM element rendered by the same component So technically we have 3 options 1 Calculate getBoundingClientRect in componentDidUpdate and calling setState with calculated values I'm afraid of the infinite loop that could happen in certain cases so I would not go for this one 2 Do it like in 1 and play a bit with shouldComponentUpdate but this seems very complex and not readable A lot of questions pop up that are dependent on the certain use case 3 Update DOM from componentDidUpdate This is the solution I decided to go for it works it is simple stable and works as intended However I feel I'm on the edge so I wanted to double check that this is an OK way of doing things Is it OK to manipulate DOM in componentDidUpdate It is called everytime render is done and I'm OK with throwing away my changes because for next render I will modify DOM again Here is a part of the code,,"karczk,aweary",2016-09-23 08:00:40,2016-09-27 15:49:24
IS,Bug v0 14 8 Shallow rendering does not work properly with React Stateless Function Components,Bug React Stateless functions cause a cyclic rendering when shallow Rendered Expected Test case should pass,,"gaearon,gaearon",2016-09-15 18:12:46,2016-09-27 16:16:34
PR,Move How to Contribute to documentation and update it,I m working on adding more sections to Contributing on the website I imagine the final structure like this x How to Contribute x Design Principles Code Conventions I want to do this in another PR Implementation Overview I want to do this in another PR This PR moves most content from CONTRIBUTING md to a new How to Contribute section on the website making it more prominent I also took an opportunity to update some its parts to better reflect our contributing workflow and add some tips,,"gaearon,vjeux",2016-09-27 19:45:23,2016-09-27 22:20:49
PR,Fix total count in flow tracker,When you put the output of a bash command in a variable it replaces the n with a space Using ls instead of echo fixes it Test Plan Run Make sure that it outputs 221,,"vjeux,zpao,vjeux,vjeux",2016-09-26 21:52:58,2016-09-27 23:20:50
PR,React dom invalid aria hook,Currently React treats all aria props as custom props There are 46 ARIA attributes we can easily enumerate all of them and verify that an aria prop on an element exists in the spec states and properties I have included the list of props from the upcoming ARIA 1 1 Working Draft I work with one of the editors of this specification It is currently taken about 3 years to update from 1 0 to 1 1 We should not expect any churn in this list of props in the short or mid term future,,"jessebeach,aweary,jessebeach,aweary,jessebeach,aweary,zpao,jessebeach,aweary,aweary",2016-09-15 18:15:36,2016-09-28 01:53:14
PR,Reduce confusion in testing documentation,Just wanted to add some clarity to this page and link to the react tutorial on Jest is website to give people more information Also changed enzyme is definition from library to utility to help reduce the confusion Hope this makes sense to everybody See cc,,"cpojer,aweary,cpojer,aweary,cpojer,aweary,vjeux,vjeux,gaearon,lelandrichardson",2016-09-28 01:19:34,2016-09-28 02:08:02
IS,Do not trigger warnings when a prop is null,Do you want to request a feature or report a bug Bug What is the current behavior When you have an unexpected prop in a component but that prop is not meant to be generated on the HTML DOM so that is set to null React triggers this warning The actual use case is to have a reusable component called Anchor and it would be either Link activeClassName 'is active or a activeClassName null Here is our actual code L25 In the HTML output there is no any activeClassName attribute for the second case so there should not be any react warning Example reproducing it I have reproduced the issue in a simple example here js console output What is the expected behavior Do not warn when a prop is defined to null and therefore never generated in the DOM Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React version 15 3 0 OS Ubuntu and Mac OS X Chromium and Google Chrome,,"jimfb,jimfb",2016-09-28 09:45:05,2016-09-28 10:06:11
IS,Tests errors when compiling on Linux aarch64,Do you want to request a feature or report a bug bug but probably on still unsupported arch What is the current behavior I'm trying to compile react on linux aarch64 and get this two tests errors What is the expected behavior Pass all tests Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Linux aarch64 arm64 and react version 15 3 2,,keyanzhang,2016-09-27 16:27:11,2016-09-28 14:47:14
PR,typos fix,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"KyleAMathews,gaearon",2016-09-28 16:22:56,2016-09-28 16:27:25
IS,context always empty object,I'm trying to set a context in my React App but somehow i can not acces context from childrens This is the parent class All the console log is return an empty object am i doing something wrong,,aweary,2016-09-28 18:34:57,2016-09-28 18:40:03
PR,Note that getInitialState is not used in ES6 classes in docs,per Adding Note that getInitialState is not used in es6 classes,,"zpao,zpao",2016-09-15 23:00:57,2016-09-29 02:07:29
PR,Bailout if the element and the context is unchanged properly,Currently We use to check if a context is changed before bailing out L130 but we create a new context L673 everytime a compnent is updated regardless the origin context provided by the consumer is unchanged As a result would always return false unless the context is undefined That is when there is a context a component would never be bailed out Specifically If we use react redux react router react intl or any other lib which provides a context we would get no bailout optimization To fix this I suggest we use shallowEqual instead of But I am not sure it would introduce a breaking change or not I have made this change in this PR along with a test,,,2016-09-28 09:03:55,2016-09-29 03:31:40
PR,Add Codebase Overview,I'm not sure it is worth writing another Internals Guide because I feel like this covers most questions and gives good starting points for the stack reconciler If not I can do it though,,"gaearon,gaearon,vjeux,gaearon,sebmarkbage,cpojer,sebmarkbage,gaearon,gaearon",2016-09-29 03:49:42,2016-09-29 10:33:57
PR,Fixed bug with updating TextNode in IE8 7824,Fixes 7824,,"syranide,syranide,syranide,syranide,syranide,syranide,syranide,syranide",2016-09-28 22:49:21,2016-09-29 17:49:58
PR,Fix mistakes in the codebase overview,,,"ivanzotov,gaearon,ivanzotov,gaearon",2016-09-29 20:50:34,2016-09-29 21:38:14
PR,Improve perf of getting capitalized event,Bitwise operations are faster than toUpperCase I applied that to the forEach loop where we are getting event types We know every event name so it is safe to use bitwise operations here I know that we wo not get a lot of perf from that little change but some ms are good too Benchmark console using benchmark js Result on my MBP 1 item Technique Ops sec toUpperCase 19 145 910 bitwise 83 779 805 bitwise array 87 807 680 bitwise array cached 87 726 636 forEach on all items Technique Ops sec toUpperCase 60 439 bitwise 73 086 bitwise array 62 633 bitwise array cached 68 193,,syranide,2016-09-30 01:24:45,2016-09-30 13:17:26
PR,Update babel link,,,zpao,2016-09-30 10:01:07,2016-09-30 20:39:23
PR,Fixes 7824,Re submitting this PR since I messed it up Sorry for the mess,,"syranide,jimfb",2016-09-29 18:03:19,2016-10-01 02:03:49
IS,React fails to update TextNode in IE8,Do you want to request a feature or report a bug Bug What is the current behavior React fails to update text nodes in IE8 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This is as close as I could get to a reproduction I think JSFiddle itself does not work in IE8 though so it is masking the real problem which you can see here image What is the expected behavior DOM updates does not throw error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 1 Internet Explorer 8 Not sure if it ever worked I have a feeling it did not I will be submitting a PR for this shortly as I know you are not actively supporting IE8 any more but it is actually a pretty simple fix I hope I outlined the issue well enough,,"syranide,syranide,syranide,syranide",2016-09-28 22:15:08,2016-10-01 02:04:01
PR,Fixes a bug that prevented classname from being set on web components,During development on our platform we found out that we could not set the classname on a web component Here is a jsfiddle demonstrating the bug What causes this bug to occur is that ReactDOM sets properties on web components using setValueForAttribute but never setValueForProperty which does some marshalling with the className property My change adds an extra check to see whether a property is part of the DOMProperties and if so to set the property as opposed to the attribute I have made sure to add add update remove tests,,,2016-10-01 14:06:07,2016-10-01 14:12:40
PR,Fixes a bug that prevented classname from being set on web components,During development on our platform we found out that we could not set the classname on a web component Here is a jsfiddle demonstrating the bug What causes this bug to occur is that ReactDOM sets properties on web components using setValueForAttribute but never setValueForProperty which does some marshalling with the className property My change adds an extra check to see whether a property is part of the DOMProperties and if so to set the property as opposed to the attribute I have made sure to add add update remove tests,,gaearon,2016-10-01 14:13:00,2016-10-01 14:52:18
IS,React lets access from the DOM to internal instances,current behavior In ReactDOMComponentTree js internalInstanceKey gives easy access to React internal instances even if the property name is randomly generated For instance the following piece of code lets access to the redux state placed in context,,"gaearon,gaearon",2016-10-03 10:40:22,2016-10-03 11:34:46
PR,POC remove internal instances exposition on DOM,Possible fix from 7846,,gaearon,2016-10-03 10:59:46,2016-10-03 11:35:00
PR,Add unknown property warning for use of autofocus,Resolves 3248 Resubmission of 6461 cc,,"hkal,aweary,hkal,aweary,hkal,aweary",2016-09-10 18:09:43,2016-10-03 14:51:44
PR,Docs to ES6 Displaying data Multiple Components pages 3710,,,"jimfb,jimfb,gaearon",2016-05-22 18:11:51,2016-10-03 18:25:00
PR,Update Reusable Components and Forms Docs to ES6,Update Reusable Components and Forms Docs to ES6,,gaearon,2016-05-22 21:11:39,2016-10-03 20:03:22
PR,Tutorial ported to ES6 classes or stateless functions,Issue reference Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"ankitml,alexeyraspopov,zpao,gaearon,zpao,milesj,ankitml,jimfb,zpao,gaearon",2016-05-23 17:47:08,2016-10-03 20:08:33
PR,Add Ons Animation updated with ES6 examples,,,"alexzherdev,alexzherdev,gaearon",2016-05-23 16:32:38,2016-10-03 20:32:12
PR,ES6 Porting 'Keyed Fragments' 10 6 Create Fragments,Reference Issue Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"ankitml,jimfb,gaearon",2016-05-23 20:06:32,2016-10-03 20:48:39
PR,migrated 08 1 more about refs md to stateless functional components,Reference Issue Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"ankitml,jimfb,ankitml,gaearon",2016-05-23 20:28:11,2016-10-03 20:52:55
PR,Update remarkable to 1 7 1,Fixes a subtle XSS hole,,sophiebits,2016-10-03 18:04:21,2016-10-03 21:22:06
PR,Community tab,This changes the support tab into the community tab and moves the current community resources section there along with keeping the original support page We can change the content of the community stuff later this PR is just handling the layout,,"lacker,sophiebits,lacker,zpao,lacker,sophiebits,lacker,sophiebits,lacker,zpao,lacker,zpao",2016-10-03 20:37:25,2016-10-03 21:40:54
IS,Master UMD builds don t work as CommonJS using Webpack alias config,Not sure what s up yet but putting this up so I don t forget to check it later In the past I could put this into Webpack config Many people do that to improve build times This works with 0 14 x and 15 3 0 but not in master Most likely related to recent changes It fails like this img width 760 alt screen shot 2016 08 12 at 14 55 55 src Seems like it claims to be a UMD shim but assumes global environment whereas a true UMD shim would detect environment and fallback to require when available cc,,"gaearon,sebmarkbage,sebmarkbage,gaearon,zpao,gaearon,zpao,zpao,gaearon",2016-08-12 13:57:22,2016-10-03 22:49:10
PR,Fix UMD bundles making safe to use as required modules,I think this fixes the problem There is a giant comment in there explaining why and how I want to stress that this is a short term solution It works and the reasoning is sound but I'm not happy that we need this It is probably time to start using webpack to bundle but that would have taken me much longer to go do Byte wise this should be fine We are just adding the code that you can see in there Since we do this after the bundle process is done that require areact' is not analyzed Todo x Look for any other expected globals in shims x Use this in other bundles x Look into the RequireJS situation I honestly do not care much about that but we should probably make it work It would require rejiggering the wrapper since we could not execute the UMDed module immediately cc react core Fixes 7482 Test Plan Made a hello world app with webpack and aliased react and react dom Ran the same hello world using the dist files directly so React ReactDOM were globals,,"zpao,aweary,zpao,gaearon,zpao,gaearon,zpao,zpao",2016-09-30 18:41:42,2016-10-03 22:49:10
PR,Fix minor typo in closing H1 tag,In docs docs 05 reusable components md there was an extra character in two closing h1 tags Removed the extra v from the tag,,aweary,2016-10-03 22:30:13,2016-10-04 00:07:56
PR,Make sure createElement warns,This is common when forgetting to export anything from a file,,sophiebits,2016-10-03 23:37:50,2016-10-04 00:24:58
IS,Unable to add css to react app,I am making a react js app I am trying to add bootstrap css to my app following is my code webpack config js Please help me solving this issue,,gaearon,2016-10-04 05:13:13,2016-10-04 08:34:56
PR,simplify npm link script a little bit,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA We do not need to remove the folders before linking the modules,,gaearon,2016-10-04 10:05:51,2016-10-04 11:12:12
PR,Update 04 multiple components md missing brackets after map method,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA added missing map bracket,,gaearon,2016-10-04 09:38:20,2016-10-04 11:19:44
PR,Refactor ShallowRenderer,I have refactored ReactShallowRenderer for readability which is not changing the behavior If this was merged I will add type annotations with Flow,,"koba04,gaearon,koba04,gaearon,aweary,koba04,koba04,gaearon,koba04",2016-09-15 12:52:16,2016-10-04 11:28:06
PR,Documentation to Stateless and ES6 components tooling integration,Reference Issue Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"ankitml,zpao,ankitml,ankitml,gaearon",2016-05-23 20:46:57,2016-10-04 11:51:34
PR,Update example to ES6 syntax,This PR updates the example found in the README file to ES6 If you guys are interested in updating all the examples to ES6 just ping me and I can help out Thanks,,"brigand,syranide,gaearon,gaearon,gaearon",2016-06-18 02:53:42,2016-10-04 11:53:12
PR,Fix confusing variable names,I think the variables is ReactElement not ReactComponent,,"koba04,gaearon,koba04",2016-10-04 10:33:50,2016-10-04 11:53:30
PR,Do not allocate an array if no before input events,Mostly following up on issuecomment 244517229 BeforeInputEventPlugin returns null null a lot I think every time an event dispatches I also think this leads to a bunch of null empty checks later down the event pipeline that could be eliminated though I did not address them here maybe they would get easier to identify as Flow types trickle down This also saves an array on every single event dispatch which may or not be substantial but the fix is straightforward so I thought I would give it a try,,"nhunzaker,aweary,nhunzaker,nhunzaker,aweary,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker",2016-09-10 15:33:52,2016-10-04 14:02:09
IS,SVG with xlinkHref breaks tab key focus on Safari 10,Do you want to request a feature or report a bug Bug report What is the current behavior On Safari 10 Given a document with 2 input fields separated by an svg that uses a xlinkHref when focusing the first and pressing the tab key the focus is not switched to the second input Instead the address bar or another browser element gets focused I am not sure if this is an issue with React or with Safari but I could not reproduce it on Safari without using React so I am opening this issue here If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Try to use the tab key to jump from the first to the second input field What is the expected behavior Pressing the tab key sets focus on the second input field works fine on other browsers Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Safari Version 10 0 11602 1 50 0 10 OSX 10 11 6 React 15 3 2,,"aweary,aweary,aweary",2016-10-03 19:39:04,2016-10-04 14:38:09
PR,Separate new docs,This moves a bunch of old docs into docs docs old as a temporary measure so we can focus on the new ones The new ones are in docs docs The sidebar looks like this now img width 250 alt screen shot 2016 10 04 at 15 36 19 src Below it there s still all old content so we can quickly look at it when necessary img width 227 alt screen shot 2016 10 04 at 15 37 09 src My intention is that we remove the old guides and tips one by one but make sure that every time we delete a file we have all its content somewhere in new files We can mostly move Reference files as is into the new docs but it would be nice to fix staleness when we see it At the end we should end up with just one docs folder and the old content gone Then we ll do a separate pass to set up redirects Sounds reasonable,,gaearon,2016-10-04 14:39:13,2016-10-04 16:36:47
PR,docs Fix initial state example for React createClass,In the example there was a typo with setting initial state using getInitialState method,,gaearon,2016-10-04 17:18:32,2016-10-04 17:43:50
PR,Installation instructions,This PR combines the information from the downloads tab and the getting started page into one document The home page used to have two calls to action downloads and getting started I do not think we need both of those because they are kinda similar I think we should make one of them take the tutorial instead For now that points to the old tutorial but we can update it once the new one is in There are probably useful details I'm still missing here so I would appreciate feedback I wish there was better advice for people who do not want a single page app but also do not already have a build pipeline set up Also I updated the fiddle to use ES6 classes so feel free to look at that too,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker",2016-10-04 00:18:31,2016-10-04 17:52:31
PR,No whitespace warning,Resolves 6995 Includes some misc lint fixes Will squash if accepted cc,,"hkal,hkal,hkal,syranide,hkal,gaearon,hkal,hkal,chicoxyzzy,syranide,hkal,aweary,sophiebits",2016-06-20 03:18:48,2016-10-04 18:03:19
IS,Relax validateDOMNesting warning for whitespace in table,See issuecomment 224477058 since we stopped wrapping text in spans we should loosen the validation in validateDOMNesting a little I think it should probably be fine to have whitespace anywhere in the tree,,"sophiebits,syranide,jimfb,syranide,agiron123,syranide,hkal,aweary,sophiebits",2016-06-08 09:23:35,2016-10-04 18:03:32
PR,Update the homepage with ES6,Sending this against master because it is independent and self contained A few changes to unpack here Updated it to use babel standalone because it is much newer This is already done in 7668 but since that did not get merged yet I'm just doing it here and we can clean up other places as part of 7864 There were no other places where this particular hosted file was used Changed homepage examples to use ES6 classes Changed code editor to only show JSX transform but eval code with JSX ES2015 Verified the eval would code has ES2015 by console log ing it Tweaked the examples for better readability Changed the render to be at the top of Todos example so that you see it immediately and it matches what you see on the screen Updated main README too Trimmed extra newline at the beginning from the examples Here is how it looks now img width 955 alt screen shot 2016 10 04 at 18 44 45 src img width 950 alt screen shot 2016 10 04 at 18 44 53 src img width 949 alt screen shot 2016 10 04 at 18 46 31 src Compiled JS view img width 639 alt screen shot 2016 10 04 at 18 55 47 src,,"gaearon,lacker,lacker,lacker,acdlite,gaearon,acdlite,gaearon,gaearon,gaearon,lacker",2016-10-04 17:56:29,2016-10-04 18:33:09
IS,Declaring react as,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2016-10-04 21:34:15,2016-10-04 21:34:39
PR,Update comment to refer to correct method name,Fixes a small typo copy paste error in Reusable Components docs,,gaearon,2016-10-04 21:40:31,2016-10-04 21:53:26
PR,Auto build new docs on Travis,new docs should build to,,"sophiebits,vjeux,gaearon",2016-10-04 23:17:35,2016-10-04 23:23:15
IS,react addons transition group creates multiple copies of React,Scenario Have a react library my own code that is using react addons transition group During webpack build process React gets bundled twice I am including react in my webpack build process and react addons transition group which does require areact lib ReactTransitionGroup' Apart from increased build size this is fine in webpack build process However when I try to use the react component that I built in another project angular project using ngReact where I load React globally for ngReact library it creates an issue as there are multiple copies of React refs must have owner Problem It now comes down to which React I am using The one I have globally or the one that gets bundled with react addons transition group Has anybody else encountered this issue Is there a workaround Is there a plan to make react as peer dependency and not require it directly I'm sure that will be a major change but asking it anyways Please correct me if I have mis understood the problem in anyways PS Sorry about the previous issue accidentally hit ENTER and github created the issue,,"gaearon,gaearon",2016-10-04 21:57:02,2016-10-05 05:47:03
PR,removing version specific cdn link,In accordance to if version is removed it will default to the latest version,,gaearon,2016-10-05 05:06:47,2016-10-05 11:16:41
PR,Update README md to use jsx for syntax highlighting,Github now supports jsx syntax highlighting in their markdown documents So I have updated the main README md to use jsx instead of js,,"brigand,aweary",2016-10-05 18:36:02,2016-10-05 19:13:11
PR,Type shouldUpdateReactComponent,Flow does not like that we put null check conditions into variables as it loses track of them I rewrote the logic a bit and took extra care of minimizing the extra work The only place where I could not make it better is for the typeof prevElement which is duplicated twice but I'm guessing that is not so bad I had to update some ReactNative files as they use the baked in flow definition which clashes with the internal one I'm not sure if this is fine,,"vjeux,vjeux,vjeux,gaearon,vjeux,sebmarkbage,sebmarkbage,sebmarkbage,vjeux",2016-09-07 16:49:13,2016-10-05 19:13:30
PR,Remove aggressive red from blockquote notes,cc,,"hramos,vjeux,gaearon",2016-10-05 18:06:23,2016-10-05 20:53:47
PR,Removing parent child references in props section of tutorial,For reference Owner ownee vs Parent child terminology in the tutorial is not quite right,,,2016-10-05 20:55:51,2016-10-05 21:29:55
IS,Documentation inconsistencies around Parent Child vs Owner Ownee,Do you want to request a feature or report a bug Bug Looking at the documentation here ownership it describes the difference between a parent child relationship compared to an owner ownee relationship In the tutorial here using props It talks about the parent child relationship when it should be an owner ownee relationship Is the owner ownee terminology commonly used I feel like most of the time when I read tutorials I only read about parent child relationships even if the parent is passing props down to the child which would be an owner ownee relationship I'm happy to make whatever changes need to be made in the documentation Tagging and,,"gaearon,gaearon,gaearon",2016-09-22 17:56:00,2016-10-05 21:30:55
PR,JSX Docs JSX In Depth and React Without JSX,This creates two new documents JSX In Depth attempts to describe all of JSX covering the occasionally relevant edge cases and weird bits It should be a document you can go to to get your weird JSX questions answered React Without JSX just explains how to use React without JSX Some docs in the old site are now obsoleted JSX Spread Attributes and JSX Gotchas along with a number of the JSX specific tips are just part of JSX In Depth now I just removed the translations of the no longer there docs Dunno what else to do with them Thanks for answering a zillion of my JSX questions in person this afternoon But still I'm sure I am mis explaining some things here so I would appreciate a sharp eyed review of this content,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,keyanzhang,lacker,lacker,keyanzhang,keyanzhang,lacker,lacker,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,gaearon,lacker,lacker,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,sophiebits,sophiebits,lacker,lacker,lacker,lacker,vjeux,vjeux,lacker,lacker,lacker,vjeux,lacker,lacker,vjeux,lacker,lacker,lacker,lacker,sophiebits,sophiebits,sophiebits,lacker,lacker,sophiebits,lacker,vjeux",2016-10-05 04:34:23,2016-10-05 21:39:38
PR,Fix npm package builds,Fixes both parts of 7880 and then the same for react native renderer ensures we packages lib in react test renderer make sure we run npm pack on the compiled packages not the original src cc,,"zpao,sophiebits",2016-10-05 21:09:54,2016-10-05 22:32:39
PR,Add Hello World and Introducing JSX,This adds Hello World Introducing JSX A stub I plan to finish later today Rendering Elements The next planned section are Components and Props Lifecycle and State Classes and Functions Please feel free to fix up anything because I'm not a native speaker,,"gaearon,sophiebits,sophiebits,vjeux,sophiebits,vjeux,sophiebits,sophiebits,vjeux,hramos,gaearon,sophiebits,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,gaearon,acdlite,gaearon,aweary,montogeek,gaearon,lacker,lacker",2016-10-05 16:04:45,2016-10-05 23:37:41
PR,Mobile layout for docs,This PR refers to 7833 Provides a basic mobile layout for React docs page,,"thymikee,lacker,thymikee,thymikee,hramos,thymikee,thymikee,hramos",2016-10-04 19:29:13,2016-10-06 00:02:47
PR,Website Add Facebook Open Source footer,Replace the old footer with the one we have adopted in the GraphQL and React Native websites for consistency I would like to get two review passes on this one technical pass in terms of integration into the existing codebase and one content pass to cover what links should be included and under which sections We will likely need to come back to this and update the links as we expand the docs Preview page content ommitted for clarity screencapture 127 0 0 1 4000 react index html 1475615476564,,"hramos,lacker,lacker,hramos,vjeux,hramos",2016-10-04 21:17:09,2016-10-06 00:33:58
IS,ReactTestRenderer 15 4 0 rc 1 missing files,Installing ReactTestRenderer 15 4 0 rc 1 from npm just brings down an index js file the referenced lib folder does not exist,,"aweary,zpao,aweary",2016-10-05 06:45:16,2016-10-06 02:09:31
PR,Update Thinking in react,This now uses modern React style codepen for the code examples and I fixed some capitalization here and there for consistency,,"lacker,lacker",2016-10-06 00:31:09,2016-10-06 02:25:52
IS,Thinking in React Tutorial Update,Thinking in React is one of the most important and well written tutorials for beginners and even for advanced developers I would like to update it to ES6 and increase the readability Also I would like to replace JSFiddle with the React docs highlighter First suggestions Should I continue or it does not worth the effort,,"hnordt,lacker,lacker",2016-10-05 18:47:12,2016-10-06 03:40:06
PR,Switch example in Installation to CodePen,We have been using CodePen elsewhere so let is introduce it early on,,"hramos,hramos",2016-10-06 01:45:33,2016-10-06 09:28:15
PR,Sample markup fix,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-10-06 13:12:11,2016-10-06 19:40:06
PR,Update Open Graph metatags to use a blog is excerpt as the description,With this PR in place sharing a React blog post on social media will render the blog post excerpt is as part of the share preview replacing the current generic description We also use the correct 'article' value type and update the 'title' accordingly to show React Blog Test plan This is an excerpt of the meta tags generated for a blog post,,"hramos,hramos",2016-10-06 02:18:54,2016-10-06 20:55:59
PR,Update Community Videos Page,Removed Thinking in React link as tagtree tv no longer exists Reordered videos placing introductions to React and React Native at the top followed by F8 conference appearances leaving screencasts and podcasts at the end of the list Updated descriptions and titles to appear consistent Updated the way timestamps are presented under podcasts screencapture localhost 4000 react community videos html 1475711528845,,"hramos,lacker,hramos",2016-10-05 23:55:15,2016-10-06 22:03:28
PR,Minor mobile layout fix,Removes the Twitter embedded timeline from the Community page when viewed in mobile In mobile this embedded timeline made it hard to scroll past and reach the Community Resources TOC This also adds padding underneath the mobile navigation in order to gain some separation before the footer,,hramos,2016-10-06 22:28:10,2016-10-07 00:01:21
PR,New Top Level Menu Item Tutorial Tutorial ported from is Internal Course,added top level 'Tutorial' section added a 2 images to help illustrate tutorial ran through the tutorial and made small edits for clarity,,"ericnakagawa,gaearon,vjeux,ericnakagawa,gaearon,vjeux,sophiebits,sophiebits,ericnakagawa,lacker,gaearon,ericnakagawa,ericnakagawa,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,sophiebits,ericnakagawa,sophiebits,lacker,ericnakagawa",2016-10-04 22:30:34,2016-10-07 00:40:09
PR,Check for shady dom,Long time lurker first time contributor go easy on me Closes 7325 This checks to see if Polymer is using shady dom by looking into the useNativeShadow property exposed by Polymer L44 The property is set if the user requests to use the shadow DOM and the browser they are using supports it Polymer uses a similar check L308 in their test suite for shady dom cc,,"gaearon,gaearon,gaearon,aweary,gaearon,gaearon,gaearon,jimfb,gaearon,gaearon,gaearon,gaearon",2016-08-21 04:38:59,2016-10-07 12:09:37
PR,use npm run script in PULL REQUEST TEMPLATE,I think it is better to use npm run script than to use grunt command directly How to Contribute page is also using npm run script development workflow,,"koba04,gaearon",2016-10-07 13:14:05,2016-10-07 13:23:38
IS,Inconsistent State after setState in ComponentDidMount,I'm working with a library which needs to be initialized in componentDidMount according to their documentation but I am not getting the expected results when I update the state like so When I view the object in the debugger I find my state was updated on the object ChartContents with the newly created chart but when I try to access it it returns the empty object it was initialized with I did also see the eslint warning and I was wondering how to solve this problem Thanks console,,"aweary,aweary,syranide",2016-10-05 19:19:26,2016-10-07 14:12:16
IS,Detect click outside View component in react native,I want to compress a View component if I clicks outside that View Is there any way of doing this,,aweary,2016-10-07 11:20:32,2016-10-07 15:01:46
PR,Update 08 working with the browser md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Corrected typo in getInitialState line,,,2016-10-07 13:53:53,2016-10-07 15:11:51
PR,Update 08 working with the browser it IT md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Corrected typo in getInitialState line,,,2016-10-07 14:13:02,2016-10-07 15:12:12
IS,bug select value NO sometimes selects last value in dropdown,When using select value NO with same value multiple times the selection differs Here is a fiddle example of the issue In chrome it selects the first option with the value NO Testing on iPhone it selects the last option with the value NO Is there a solution to this being consistent and always selecting the first option with the NO value,,"syranide,syranide,aweary",2016-10-07 08:18:47,2016-10-07 15:32:51
PR,Add Rendering Elements Components and Props State and Lifecycle guides,Note there is a gif there but obviously it is not animated on the screenshot see screen capture in comments below,,"gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,acdlite,lacker,lacker,acdlite,acdlite,lacker,lacker,acdlite,lacker,lacker,lacker,acdlite,lacker,acdlite,acdlite,gaearon,gaearon,acdlite,hramos,hramos,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,acdlite,sophiebits,sophiebits,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,gaearon",2016-10-06 12:18:00,2016-10-07 19:04:15
PR,fix typo in state and lifecycle md in new docs branch,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-10-08 20:39:07,2016-10-09 15:55:20
PR,Add Implementation Notes and amend Codebase Overview,Work in progress Going to add a few more sections,,"gaearon,vjeux,gaearon",2016-09-29 14:45:14,2016-10-10 16:29:48
IS,Write a contribution guide documenting the design decisions,Historically we haven t been very good at explaining how to contribute to React We have a small guide but it doesn t offer crucial information about Our build process and providesModule Design constraints that guide what gets in and what doesn t Conventions like invariant warning DEV and infra around them How we introduce breaking changes and deprecations How syncing with React Native and Facebook website affects contributions Basic directory organization what can or can t go in either directory Unfortunate decisions in the codebase that we want to get away from What is being actively worked on and why An internal glossary Elements Public instances Internal instances Composite components Native components Reconciliation Transactions Update queue Synthetic events What do you think I m especially interested in hearing from people who considered contributing to React but were turned away by the internal complexity,,"gaearon,sophiebits,aweary,sebmarkbage,gaearon,kentcdodds,sophiebits,gaearon,slorber,nhunzaker,sophiebits,cbrwizard,gaearon,gaearon,gaearon",2016-03-24 20:41:35,2016-10-10 16:34:57
PR,Replace ES2015 with ES6,Use ES6 throughout the docs as the term has gained more traction than ES2015,,hramos,2016-10-10 20:47:02,2016-10-10 20:54:17
PR,Update codebase overview md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Fix typo,,"aesopwolf,gaearon",2016-10-10 23:32:30,2016-10-11 00:14:06
PR,Handling Events,This PR adds a handling events doc that describes the basics of handling events including the this binding stuff Also I made a pass and removed the old docs whose information is covered either by this doc or Dan is recently committed set of basic guides This just makes it a bit more clear what information is left to touch on,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,lacker,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker",2016-10-07 21:51:09,2016-10-11 00:36:01
PR,Reference docs for React Component React Without ES6 doc,Some parts I think the content maybe should be from Hector is recent PR so I left those as a TODO til we figure that part out The idea of the layout is that the top has an outline and you can click on one method name to jump there The Jest docs do this and it seems pretty good,,"lacker,acdlite,acdlite,acdlite,acdlite,hramos,lacker,lacker,lacker,lacker,lacker,hramos,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker",2016-10-07 23:11:33,2016-10-11 00:45:16
IS,Page navigates to path when component changes,I am new to React and I have some which looks like this App js LoginForm js App this state login status LoginForm callback this setLoginDetails bind this LoginForm this state login status Header data headerData Header div App Expected Behavior After the state of App is changed by the callback the Header component should be rendered and should stay like that Current behavior After the state is changed Header is rendered then the page is directed to localhost 8080 automatically capture I dont know what to do now Any help is appreciated,,,2016-10-10 13:01:35,2016-10-11 05:55:23
PR,Typo fixes in codebase overview md,Spotted a few typos while reading through this,,"ababkov,gaearon",2016-10-11 10:26:14,2016-10-11 10:55:06
PR,Fix typo in more about refs md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"hramos,gaearon",2016-10-10 23:12:02,2016-10-11 10:56:34
PR,Split The Component Lifecycle into its own guide,Based on Component Lifecycle component lifecycle from Working with the browser with some minor formatting changes to make this more readable screencapture localhost 4000 react docs the component lifecycle html 1475717882950,,"hramos,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,lacker,gaearon,hramos,lacker,hramos,gaearon",2016-10-06 01:37:48,2016-10-11 11:00:28
PR,Update ref 03 component specs md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Corrected ES6 classes documentation link,,gaearon,2016-10-07 13:56:10,2016-10-11 11:01:17
PR,Update ref 03 component specs it IT md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Corrected ES6 classes documentation link,,gaearon,2016-10-07 14:06:45,2016-10-11 11:01:43
PR,Website API Reference React ReactDOM ReactDOMServer Reference Guides,Based on the Top Level API Reference This is now split into three reference docs React ReactDOM ReactDOMServer The last two used to be bundled together with the React top level API reference and I think the intro paragraphs for these two new documents can be expanded Looking for feedback on what information is missing from these guides and what is no longer relevant e g React DOM is less prominent in the new reference as is React createElement React screencapture localhost 4000 react docs reference react html 1476138699370 ReactDOM screencapture localhost 4000 react docs reference react dom html 1476138707064 ReactDOMServer screencapture localhost 4000 react docs reference react dom server html 1476138714162,,"hramos,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,hramos,hramos,gaearon",2016-10-10 22:31:20,2016-10-11 13:52:55
PR,Inject the previous batching strategy when rendering to string,Before this change calling renderToStringImpl would inject ReactDefaultBatchingStrategy after completion even if a custom batching strategy was injected before This makes renderToStringImpl keep a reference to the batching strategy before it runs and reinjects it afterwards,,"gaearon,aweary,aweary,aweary,gaearon,gaearon,gaearon",2016-10-10 21:01:32,2016-10-11 17:57:22
IS,Functions passed in props are not updated,todos is an array v is React createElement and I render It is not in jsx but you will understand Maybe it is like that since forever but it is surprising and not too intuitive it is maybe an optimization that you did demo with the issue edit having key i instead of key todo id would fix this issue but it breaks the CSS transitions,,,2016-10-11 09:31:01,2016-10-11 19:27:13
PR,PropTypes guide,I can not take credit for this content it is basically all parts of previously existing docs that I scavenged into a single doc about using proptypes That said I'm down to improve it if folks have nitpicks and suggested fixed so feel free to provide feedback PropTypes were the last part of the how to make reusable components old guide that has turned into content in different places now so this PR also removes that,,"lacker,gaearon,gaearon,hramos,gaearon,lacker,lacker,lacker,brigand,lacker",2016-10-11 01:08:17,2016-10-11 21:00:31
PR,Composition vs Inheritance and Lifting State Up,This is the last Basics guide I planned to write new screenshot below,,"gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker",2016-10-07 23:48:34,2016-10-11 22:08:15
IS,data not updating,data atributes not updating I'm using react redux I have some input fields with the data error atribute The data error property is used to give feedback to the user if some field is not valid The inital state looks like this I am using Redux Logger and when I inspect the nextState I get the desired state but the data error continues to be false instead of true,,,2016-10-06 19:56:26,2016-10-12 01:12:21
PR,Use ReactPerf from react native renderer when in React Native,The public API for ReactPref is the react addons perf package However that does not say anything if we are using it to debug react dom react native or another renderer Ideally this should work with any and all renderers but since we do not have that yet let is just auto detect using the native js trick for now If we land react native renderer as checked into React Native we will need to update this path,,"sebmarkbage,zpao,sebmarkbage,zpao,sebmarkbage",2016-08-12 03:17:18,2016-10-12 08:04:15
PR,Declare type higher up in mountComponent in ReactDOMComponent,Description This PR has a very limited scope I came across this while working through ReactDOMComponent js for 7911 and found that var type this currentElement type was assigned in a very limited scope within mountComponent on line 618 while this currentElement type was being in nearly every case explicitly around it Changes Proposed Assign var type this currentElement type higher inside mountComponent to be used everywhere else this currentElement type is being explicitly written If line 610 is too high up I could see it being placed after line 612 within the if transaction useCreateElement block since the only case where type might go unused is on the block on line 647 within the else block for if transaction useCreateElement Let me know what you think cc,,"kevinzwhuang,gaearon",2016-10-12 05:13:00,2016-10-12 09:12:15
PR,Add warning for shady dom use with rendered react components in DEV,Description As described in 7325 there should be a warning emitted when somebody uses shady dom with React 7383 7537 attempted to solve this issue however they have not been updated or corrected in months This PR is informed by those discussions and combines those findings into this completed solution with tests Changes Proposed This PR fulfills all requirements set by is comments issuecomment 241505692 issuecomment 241522862 x Add isCustomComponentTag boolean to the updateDOMProperties signature as its last argument to avoid calling isCustomComponent this tag props multiple times x Add call for var isCustomComponentTag isCustomComponent this tag props to both mountComponent and updateComponent to be consumed by updateDOMProperties As per the requirements for this warning it will only emit to console when x shadyRoot exists on the DOM element x only do this in ReactDOMComponent mountComponent in DEV x only perform the check if isCustomComponent this tag props is true x Emit only once even when mounting multiple components using a check for didWarnShadyDom Also tests have been added for this warning x Sets a fake document createElement to simulate the creation of the shadyRoot property and returns document createElement is original functionality after resolution regardless of tests passing failing x Checks for the shady dom warning emitted when the above requirements are met x Tests that the warning is emitted only once even when mounting multiple components to prevent spamming the console cc,,"kevinzwhuang,gaearon,kevinzwhuang,gaearon,kevinzwhuang,gaearon,kevinzwhuang,gaearon,gaearon,gaearon,kevinzwhuang,gaearon,kevinzwhuang,kevinzwhuang,gaearon,gaearon,kevinzwhuang,kevinzwhuang,kevinzwhuang,kevinzwhuang,gaearon,kevinzwhuang,kevinzwhuang,gaearon,kevinzwhuang,gaearon,kevinzwhuang,gaearon",2016-10-07 11:51:44,2016-10-12 09:13:50
PR,Added a check and warning in case shadyRoot property is present in a,newly created element The check is added right after creating the dom element This commit is meant to fix 7325 I would like to ask for some guidance on how to test that the warning is actually emitted because the mountComponent function uses document createElement to create the polymer component,,"zpao,gaearon",2016-07-30 23:43:03,2016-10-12 09:15:15
IS,Warn if someone is using the shady dom with React,We should probably emit a warning if someone is using the shady dom instead of the shadow dom with React since that will cause things to break subtly,,"jimfb,aweary,dantman,gaearon,gaearon",2016-07-21 01:16:10,2016-10-12 09:15:30
IS,Props Validation for objects,Do you want to request a feature or report a bug Request a feature What is the current behavior After you can not specify object with different type values e g PropTypes objectOf id PropTypes number name PropTypes string so either you have to rely on the order of object now and specify it like PropTypes objectOf PropTypes number PropTypes string or unpack the object when passing it as props If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template It is not bug as such but it makes fairly typical usage spitting warnings into the console What is the expected behavior Should be able to specify objectOf as before the attached PR Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 2,,gaearon,2016-10-12 11:20:08,2016-10-12 13:22:01
IS,dangerouslySetInnerHTML someOfMyText causes Chrome console developer tool to freeze No problem on firefox though,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"aweary,aweary",2016-10-10 07:28:58,2016-10-12 14:36:01
PR,Fix typo,,,"aweary,gaearon",2016-10-07 09:08:18,2016-10-12 14:49:56
PR,New Docs Add PropTypes to React reference API adjust formatting,Three main things are covered here 1 Adjust Reference Formatting Methods Method headers will no longer include parameters This should simplify anchor links and also result in headers that are easier to skim through Method definitions in the API reference will now include the full method signature to provide the same information that was previously conveyed through the old headers Styling Add horizontal rules between method definitions Also aimed to improve readability while skimming down a page 2 Add PropTypes Reference Added full reference on all PropTypes validators Based on the Typechecking with PropTypes doc Mostly there for completeness 3 Expand React API Reference The intro section to the React Top Level API reference has been expanded and additional context added to the list of methods Methods that are only of interest when ES6 or JSX is not used are now called out separately mostly so that the reader knows they can be safely ignored if using ES6 and JSX Previews React screencapture localhost 4000 react docs react api html 1476233570253 React Component screencapture localhost 4000 react docs react component html 1476233581779,,"hramos,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,hramos,hramos,hramos,hramos",2016-10-12 00:52:27,2016-10-12 16:43:10
PR,NEW DOCS data react id data reactid,but for the new docs branch cc I tried cherry picking the commit it did not seem to like that,,aweary,2016-10-12 16:01:43,2016-10-12 17:32:59
PR,New Docs Remove entries under Old Docs for content that has been updated,All the content in these old guides has been moved elsewhere Also updated the ids permalinks for the Reference guides to be consistent,,"hramos,gaearon,hramos,gaearon,gaearon,hramos,hramos,hramos,hramos",2016-10-11 14:05:06,2016-10-12 17:57:26
PR,Docs grammar in a very declarative way declaratively,It does not make sense to describe something as very declarative There is no sensible notion of relative declarativity so this is clearer by just saying declaratively,,lacker,2016-10-12 19:13:37,2016-10-12 19:45:03
PR,Check in yarn lock file,Because we have to keep up with the latest hotness,,"sebmarkbage,iamdustan",2016-10-12 20:05:39,2016-10-12 20:07:25
IS,Documentation findDOMNode in title but not in paragraph,Documentation bug Working With the Browser contains a subheading Refs and findDOMNode The following paragraph however doesn t contain any information about findDOMNode This was removed in commit 5ee8a93280987bf1547687f5d8665be89058f321,,"rickbeerendonk,lacker,rickbeerendonk",2016-10-12 21:48:31,2016-10-12 22:03:49
PR,Remove findDOMNode because it was only mentioned in the subheading,Resolves 7958,,"rickbeerendonk,lacker",2016-10-12 21:49:31,2016-10-12 22:04:47
PR,Fix typo,,,"aweary,aweary",2016-10-12 18:20:41,2016-10-13 02:29:38
IS,JSX variables shadowing gotcha,I think i have discovered a jsx gotcha i see nowhere mentionned Let is say we have a component defined like this,,syranide,2016-10-13 08:27:02,2016-10-13 12:52:11
PR,Fix uncontrolled input decimal point chopping on number inputs and validation warnings on email inputs,This fix is stuck inside of until I can sort out the outstanding concerns around controlled inputs Hopefully this is easier to merge and people can start using uncontrolled number inputs again Basically avoid assigning defaultValue unless you have to This prevents Chrome is number inputs from dropping decimal places or clearing the input when typing 3e As documented here issuecomment 236074326,,"nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,aweary,gaearon,nhunzaker,aweary,gaearon,nhunzaker,aweary,gaearon,nhunzaker,gaearon",2016-09-16 00:41:06,2016-10-13 13:20:14
PR,Fix a typo in the doc,Fix a typo in implementation notes md,,gaearon,2016-10-13 15:51:15,2016-10-13 15:58:57
PR,New Docs Replace Codepen with CodePen,Closes todo item in 7864,,ivanzotov,2016-10-13 16:41:57,2016-10-13 17:37:33
PR,build strip from output modules,FB tools such as Flow and Jest are having issues finding duplicate modules now that React internal modules are duplicated across packages,,"iamdustan,iamdustan,gaearon,iamdustan,gaearon,iamdustan,iamdustan,sebmarkbage",2016-10-13 13:27:16,2016-10-13 20:19:11
PR,Context doc,The content is mostly similar to how it was before I added a mention of Redux and MobX because in several of the situations described by this document people should really consider using one of those libraries before they start messing with context themselves,,"lacker,gaearon,gaearon,lacker,lacker,lacker,lacker,gaearon",2016-10-12 18:59:16,2016-10-13 23:39:45
PR,New Docs Further explain what React PureComponent does,Based on feedback discussion r83056986 Since people may still run into PureRenderMixin in the wild I have restored its entry under the Reference category and added a warning at the top suggesting people use React PureComponent instead,,"hramos,gaearon,gaearon,gaearon,hramos,hramos,gaearon",2016-10-12 19:27:58,2016-10-14 05:38:05
PR,New Docs Remove extra vertical spacing between items in the sidebar,Closes todo item in 7864,,"ivanzotov,ivanzotov,gaearon,ivanzotov,ivanzotov,gaearon",2016-10-14 07:32:15,2016-10-14 15:35:57
PR,New Docs Fix text size adjust for pre element in webkit browsers,iOS Safari tries to adjust a font size of pre element if a length of a string is long so the difference between font sizes looks strange img width 372 alt screen shot 2016 10 14 at 4 09 10 pm src After this fix img width 373 alt screen shot 2016 10 14 at 4 07 21 pm src,,"ivanzotov,gaearon",2016-10-14 13:16:33,2016-10-14 15:36:57
PR,New Docs Fix docs grammar,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"ivanzotov,lacker,ivanzotov",2016-10-13 13:01:01,2016-10-14 16:45:25
PR,New Docs Fix context doc,,,"ivanzotov,lacker,ivanzotov",2016-10-14 08:24:13,2016-10-14 16:48:30
PR,Refs and the DOM,This PR creates a new guide for refs It focuses on callback refs and only briefly mentions string refs to explain how to use callback refs instead,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,syranide,lacker",2016-10-12 18:09:23,2016-10-14 17:12:47
PR,Optimizing Performance,This guide is a refresh of the old Advanced Performance guide Examples now use ES6 style The examples are more realistic and less foo bar baz Brief mention of production build in installation guide Remove advocacy of mixins Generally more englishy grammar The production build stuff was the last remaining bit from the tooling section and this guide covers the Advanced Performance content so those old guides are removed in this PR,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,brigand,gaearon,gaearon,gaearon,aweary,lacker,lacker,lacker,lacker,lacker,aweary,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,syranide,lacker,lacker,lacker,gaearon",2016-10-12 21:59:11,2016-10-14 20:55:31
PR,New Docs Update Addon reference docs,Based on Add ons Test Utilities These addon docs read like reference API docs so they will be listed under Addons in the Reference section of the sidebar Lets update addons md as more of these addon docs are moved out of docs old screencapture localhost 4000 react docs test utils html 1476310283663,,"hramos,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,hramos,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hramos,hramos,hramos,gaearon,gaearon,gaearon,hramos,hramos,gaearon,gaearon,hramos,gaearon",2016-10-12 22:15:42,2016-10-14 21:06:01
PR,New Docs Fix image size for tutorial page,For example in a tutorial page we have an extra space and a horizontal scroll because of images in a content We have no any content outside the container so I think we can just set overflow hidden for it img width 399 alt screen shot 2016 10 14 at 8 38 20 pm src,,"ivanzotov,ivanzotov,ivanzotov,ivanzotov,hramos,hramos,hramos",2016-10-14 17:42:34,2016-10-14 21:11:17
PR,New Docs Fix a width for all iframes,Checked out all pages with iframes and fixed a width to 100 Before img width 400 alt screen shot 2016 10 14 at 11 55 41 pm src After img width 400 alt screen shot 2016 10 14 at 11 55 18 pm src,,ivanzotov,2016-10-14 20:58:17,2016-10-14 21:16:29
PR,Fix whitespace in headers,The script that strips providesModule is very sensitive Test plan Searched for providesModule in build No more reactComponentExpect used to have problems too but does not seem to anymore Do not know why,,"sebmarkbage,gaearon,sebmarkbage,iamdustan",2016-10-14 21:46:21,2016-10-14 21:46:34
PR,New Docs Move Event Systems to the SyntheticEvent reference guide,Content based on existing Event System guide,,hramos,2016-10-14 18:47:22,2016-10-15 00:10:57
IS,15 4 0 rc 4 mistakenly published as latest,Bug What is the current behavior npm view react yields As a result npm install react installs 15 4 0 rc 4 What is the expected behavior This looks like a publish mistake next should point to 15 4 0 rc 4 and latest should point to 15 3 0,,"syranide,gaearon",2016-10-14 23:07:24,2016-10-15 09:35:11
IS,issue with redbox react,I'm testing react version 15 4 0 rc 3 on one of my projects and during installing packages which worked with previous version of react the redbox react has an issue with react DOM ERROR in redbox react react dom index js Module not found Error Cannot resolve module areact lib ReactDOM' in,,"gaearon,gaearon",2016-10-15 11:28:30,2016-10-15 11:42:26
PR,New Docs Move Event Systems to the SyntheticEvent reference guide,Content based on existing Event System guide,,"hramos,gaearon",2016-10-15 00:15:17,2016-10-15 14:56:40
PR,Support passthrough updates for error boundaries,This is a work in progress Right now this is just 6020 rebased to merge cleanly but I will try to address comments from its review as well later,,"gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,sophiebits,gaearon,gaearon,sebmarkbage,gaearon",2016-10-12 14:01:57,2016-10-15 17:13:56
PR,Fix Translation to Korean,Translate the English text to Korean in CommentBox Improve translation about inserting raw HTML using remarkable,,gaearon,2016-10-07 04:39:07,2016-10-15 17:41:53
IS,Variable refers to new Date can not be a child element,I am following a code snippet from the book React Quickly And I can not run the code after being compiled via babel My code is like The error message reported by browser is Uncaught Invariant Violation Objects are not valid as a React child found Mon Oct 17 2016 09 12 00 GMT 0800 CST If you meant to render a collection of children use an array instead or wrap the object using createFragment object from the React add ons Check the render method of DateTimeNow Could you please help to answer why it will cause error Thank you very much Do you want to request a feature or report a bug What is the current behavior error message Uncaught Invariant Violation Objects are not valid as a React child found Mon Oct 17 2016 09 12 00 GMT 0800 CST If you meant to render a collection of children use an array instead or wrap the object using createFragment object from the React add ons Check the render method of DateTimeNow If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior span tag displays current time Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 2,,gaearon,2016-10-17 01:24:50,2016-10-17 12:04:10
PR,Fiber Disable ReactDOMFiber warning for tests in Fiber mode,Maybe I'm missing something but unless I disable it Jest complains about the warning and we see the warning on the first ReactDOM render call in Fiber mode Test plan 1 I can get some tests in ReactES6Class to pass that I previously could not 2 If I open examples fiber I can still see the warning just fine,,"gaearon,acdlite,gaearon,acdlite",2016-10-17 13:33:00,2016-10-17 15:49:30
PR,Add directives to classes,We refactored some code to use classes recently but our internal FB transform mangles their private method and property names breaking the code This directive fixes it,,gaearon,2016-10-17 20:06:16,2016-10-17 20:07:17
PR,Fiber Child Reconciliation Refs and Life Cycles,I will take a page out of is playbook and list out my todo in an early PR as I'm implementing it x Add the fragment fiber type x Add the text fiber type x Implement the proper child reconciliation algorithm Split initial from updates since initial will not need to track side effects like move x Track mount index in Fiber This allows us to detect reorders by comparing to committed fields instead of wip It also allows us to insert nulls in the list without additional fibers x Change side effects to reverse order x Add to the side effects list for insert move delete Tag them x Change the host config API to deal with insert move delete before Use the tag to avoid updating props if not needed x Trigger life cycle methods componentDidMount componentDidUpdate componentWillUnmount x Detach and attach refs,,"sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,gaearon,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,cpojer,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,gaearon,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage",2016-09-12 22:15:10,2016-10-17 20:17:31
PR,Fiber State Updates,I'm putting some work into state updates since there is currently a bug that I have not been able to track down Builds on top 7707 x Move scheduler and updater code out of beginWork Use two different update queues for current wip so that we can abort low pri state updates Fix bug with deep setState being deferred Reproducable in the demo,,"sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,gaearon,acdlite,acdlite,sebmarkbage",2016-10-11 17:48:44,2016-10-17 20:21:06
PR,New Docs Link to Reactiflux Move Footer Hero to Includes,Replaces links to IRC with Reactiflux Move Footer Hero into includes,,"hramos,lacker",2016-10-13 23:43:25,2016-10-17 21:35:29
PR,Fiber Support to render number as children,I'm trying to understand what ReactFiber is Currently ReactDOMFiber can not render number as children I know ReactFiber is working in progress but I would like to contribute to it I think it would be nice if this PR makes sense and is merged,,"koba04,sebmarkbage,koba04,sebmarkbage,koba04,koba04,sebmarkbage,koba04",2016-10-14 04:39:22,2016-10-18 00:42:49
PR,Fix grammatical error,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"piperchester,acdlite,gaearon,acdlite",2016-10-18 04:13:49,2016-10-18 04:26:22
IS,react addons perf can not find the Perf start function,where is the start stop function,,"gaearon,gaearon",2016-10-18 10:21:05,2016-10-18 10:28:54
PR,New Docs Fix links for quick start and image size for implementation notes,,,"ivanzotov,gaearon",2016-10-18 11:29:13,2016-10-18 11:46:37
PR,Fix Haste header,This fixes Haste header for this file Our internal asset pipeline was choking on it,,"gaearon,gaearon",2016-10-18 13:05:28,2016-10-18 13:06:09
PR,Update to Flow v0 33 0,Ran grunt lint and npm run flow No lint or Flow errors,,"zpao,gaearon",2016-09-30 21:25:18,2016-10-18 13:54:21
PR,Update Flow and fix issues,This updates Flow and fixes issues I found trying to sync React to www,,"gaearon,gaearon,gaearon,gaearon,iamdustan,iamdustan,iamdustan,gaearon,gaearon,gaearon,iamdustan,gaearon,gaearon,iamdustan,gaearon,gaearon,iamdustan,chicoxyzzy,gaearon,gaearon,iamdustan,iamdustan,gaearon",2016-10-18 13:47:31,2016-10-18 14:26:40
IS,React should match w3c syntax for 'autofocus',React should match the w3c syntax for 'autofocus' Autofocus is an attribute that auto focuses inputs forms or buttons Autofocus should not have the 'true' or 'false' attributes nor camel case HTML demo Current situation in React The following are valid equivalent and true w3c A number of attributes are boolean attributes The presence of a boolean attribute on an element represents the true value and the absence of the attribute represents the false value If the attribute is present its value must either be the empty string or a value that is an ASCII case insensitive match for the attribute is canonical name with no leading or trailing whitespace w3c source attr fe autofocus Recommendation Update syntax from autoFocus true to autofocus or autofocus 'autofocus' Here is an example of what should be considered valid react 15 3 2,,"syranide,aweary,aweary,aweary",2016-10-14 21:50:35,2016-10-18 15:18:07
PR,Fiber Add a unit test for ReactTopLevelText,This is a unit test for ReactTopLevelText which is a new feature of ReactFiber issuecomment 253714555 Should I add more test cases,,"koba04,sebmarkbage,koba04",2016-10-18 05:22:32,2016-10-18 18:39:49
PR,Fiber Set DOM attributes,This builds on top of 7941 and adds basic support for setting DOM attributes Commit for review 5a5bb86d1a6f59be61c5f9c54d00e208a99053c5 Test plan examples fiber index html now can put className on a div img width 228 alt screen shot 2016 10 17 at 19 24 18 src examples basic index html still works both with regular and minified builds There were a couple of issues I needed DOMProperty so I had to inject ReactDefaultInjection which brought a bunch of the non Fiber renderer into the Fiber build I do not see a simpler workaround right now because we want to keep tests that test ReactDOMFiber alongside non Fibery ReactDOMServer Those are tricky to fix if we let both ReactDOMFiber and ReactDOMServer inject their own stuff independently Another plausible option is to completely fork the files but it seemed excessive I had to decouple DOMPropertyOperations from ReactDOMComponentTree so I added an explicit debugID argument to all methods This PR does include not support for events web components or style attribute I figured I would not waste time on this unless we agreed the approach is correct Fiber before this PR,,"gaearon,iamdustan,gaearon,iamdustan,gaearon,sebmarkbage,gaearon,gaearon",2016-10-17 18:50:45,2016-10-18 18:58:23
PR,New Docs DOM Elements reference and cleanup,This creates one DOM Elements reference doc whose goal is to explain all the little DOM tweaks that React makes This doc replaces a few different previous reference docs and also a number of tips I also removed all the tips and reference docs that are now superceded All the tips are dealt with now and except for the error decoder all the old docs have some PR out that replaces them,,"lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker",2016-10-14 23:36:51,2016-10-18 23:21:19
PR,New Docs Reconciliation and Web Components docs,These are pretty advanced content I just had some minor updates But if folks have deeper feedback on these docs I'm happy to deal with that as well Put them in Guides because they are more guide y than referencey Cleaned up the reconciliation tone to be more humble as requested by Misc english language cleanup,,"lacker,sophiebits,sophiebits,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,brigand,gaearon,lacker,lacker",2016-10-12 22:23:06,2016-10-18 23:50:16
PR,Fiber Some setState related issues,Use the memoized props state from the workInProgress We do not want to use the current props state because if we have started work then pause and continue then we will have the newer props state on it already If it is not a resume it should be the same as current Deprioritize setState within a deprioritized tree Currently we flag the path to a setState as a higher priority than offscreen When we reconcile down this tree we bail out if it is a hidden node However in the case that node is already completed we do not hit that bail out path We end up doing the work immediately which ends up committing that part of the tree at a higher priority This ensures that we do not let a deprioritized subtree get reconciled at a higher priority,,"sebmarkbage,gaearon,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage",2016-10-18 23:12:37,2016-10-19 17:32:37
IS,Better support for web components,It gets old having rebuild the same date picker or whatever widget every time we switch frameworks It would be nice if React had better support for web components,,sebmarkbage,2016-10-19 23:24:12,2016-10-20 00:04:32
IS,Feature Request react addons update operations should accept objects as well as arrays,Do you want to request a feature or report a bug Feature What is the current behavior If you pass an object to a react addons update update operation that is speced to take an array it generates an error saying did you forget to wrap the object in an array What is the expected behavior It should just operate on the single object that is provided For example unshift foo should just unshift foo onto the target element Which versions of React react 15 3 2,,,2016-10-20 00:02:05,2016-10-20 01:19:10
IS,Warning validateDOMNesting metadata cannot appear as a child of head See head metadata,I believe this is a bug of the DOM validator I try to render an entire page with ReactDOMServer renderToStaticMarkup which there are metadata element inside head I got the above warnings And the render result put metadata inside body The expected behavior is ReactDOMServer renderToStaticMarkup should not warns about metadata appears in the head and also should not move metadata elements into body I'm using React 15 3 0 Not tested in previous version Updated ReactDOM 0 14 8 renders correctly but warns me as well,,keyanzhang,2016-10-19 07:57:35,2016-10-20 02:26:41
IS,Note that getInitialState is not used in ES6 classes in docs,Currently the the docs for getInitialState getinitialstate do not mention that the method is not used in ES6 class syntax It could use a note like the one for replaceState replacestate about the method not being available on ES6 classes This has caused at least a little confusion in a StackOverflow question about React ES6 comment66352140 30721098,,"zpao,gaearon",2016-09-15 20:32:34,2016-10-20 11:21:33
PR,New Docs Added Lists Conditional Rendering Forms,,,"ericnakagawa,aweary,aweary,aweary,aweary,aweary,aweary,aweary,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,lacker,lacker,lacker,lacker,lacker,lacker,lacker,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa",2016-10-13 01:22:23,2016-10-20 17:43:48
PR,Fix captured bubbled in ReactNativeTreeTraversal,Follow up to 7741 Added a test for RN event bubbling that fails before the fix,,"sophiebits,sebmarkbage,sophiebits",2016-10-19 20:36:21,2016-10-20 18:17:06
IS,SyntheticEvent key property is unidentified in Safari on Mac OS X,BUG Current Behavior Using a standard input type number onKeyDown this myKeyDownEvent with an onKeyDown event the SyntheticEvent key property is unidentified in Safari for any key pressed FIDDLE Expected Behavior SyntheticEvent key should provide the proper values for all standard keyboard inputs letters numbers numberpad arrows backspace etc as it does in Chrome since both are webkit based browsers Version Info Mac OSX El Capitan React 15 3 2 Safari 9 1 3,,"syranide,syranide,aweary,syranide,aweary,syranide",2016-10-06 12:37:35,2016-10-20 18:28:09
IS,Multiple Copies of react installed,I am using a few react components made by various libraries like material ui and i get this message on doing npm ls react i can see only one version of react installed I am using gulp and browserify for my build process Any idea how i can solve this,,gaearon,2016-10-20 16:11:15,2016-10-20 20:46:56
PR,Hack to fix lint with yarn,Babylon 6 12 0 is broken Maybe related to I could not figure out how to do this using package configuration alone so I ended up just manually hacking the yarn lock file to force a downgrade of babylon to 6 8 0 since otherwise it gets resolved to 6 12 0 which is broken,,"sebmarkbage,sebmarkbage,chicoxyzzy,hzoo",2016-10-17 22:21:17,2016-10-20 21:49:40
PR,Fiber Add unit tests for ReactDOMFiber,This is an another PR of 8001 which adds unit tests for ReactTopLevelText in ReactDOMFiber issuecomment 254600009,,"koba04,gaearon,sebmarkbage,koba04,sebmarkbage,koba04,sebmarkbage,koba04",2016-10-19 11:12:38,2016-10-21 04:44:23
IS,Rename lifecycle methods,Feature request Can you consider renaming the byzantine lifecycle method names I mean come on componentDidUpdate componentWillReceiveProps shouldComponentUpdate React is declarative huh How about concise method names that are easy to reason about as React claims to be How about rendered Or updated Sometimes I think if the React team had invented REST instead of GET and POST we would have clientWillRetrieveData and clientWillTransmitDataWithParameters A lifecycle implies the passage of time How about method names that succinctly indicate where things are within that cycle How about method names that are useful to developers building applications not compound portmanteau words that reflect internal engineering complexity,,"syranide,gaearon,gaearon",2016-09-16 11:57:13,2016-10-21 12:01:19
PR,Fiber Add more life cycles,Builds on 8010 This refactors the initialization process so that we can share it with the module pattern initialization There are a few new interesting scenarios unlocked by this E g constructor componentWillMount shouldComponentUpdate componentDidMount when a render is aborted and resumed If shouldComponentUpdate returns true then we create a new instance instead of trying componentWillMount again or componentWillReceiveProps without being mounted Another strange thing is that the previous props and state instance props during componentWillReceiveProps shouldComponentUpdate and componentWillUpdate are all the props state at previous render attempt However componentDidMount is previous is the props state at the previous commit That is because the first three can execute multiple times before a didMount,,"sebmarkbage,acdlite,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon",2016-10-19 08:33:31,2016-10-21 18:57:51
PR,Getting new docs ready for launch,This is just cleaning up a bunch of little loose ends left over I think this is the last stuff we need before merging new docs to master Adds redirects for all the broken links that I could find manually Rename the tutorial so only one thing is called Thinking In React Made sure prev next links are correct for the quickstart Fix left nav spacing Get rid of all the unused stuff marked old like yml config template etc Make sure the error decoder still works,,"lacker,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,gaearon,lacker,gaearon,gaearon,jquense,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,gaearon,lacker",2016-10-20 23:13:19,2016-10-21 18:58:14
PR,Quick fix to the return top level problem,This does not deal with the fact that work is usually deferred so this will return null for first render except in sync tests It also does not deal with top levels being fragments etc This needs to be unified with refs and findDOMNode better We also need to add incremental tests to ensure that the value is expected when render is deferred This is enough to unblock unit tests though However this does expose that we reactComponentExpect and ReactTestUtils does not work very well with Fiber,,"sebmarkbage,gaearon",2016-10-21 03:55:13,2016-10-21 18:59:01
PR,New Docs,We are currently working on a revamp of the docs This means we won t be able to review new PRs to docs for two weeks until we ship this This PR is used to keep track of the overall effort TODO x Write the new docs team members feel free to add your own todos here x Find a place for refs dangerouslySetInnerHTML Explain Development vs Production versions x Add How to Import to top level references explaining import vs require vs global for React ReactDOM and ReactDOMServer x Choose a single call to action on the homepage or make them different enough Cross reference docs x Consider embedding Codepen snippets everywhere x Remove extra vertical spacing between items in the sidebar x Remove temporary folder names e g docs new and fix permalinks Use babel standalone instead of babel browser everywhere 7668 x Set up redirects to handle all 404s gracefully x Be consistent in using const x Change Codepen to CodePen everywhere and consistently use a tags Update examples in repo,,"gaearon,gaearon",2016-10-04 13:54:47,2016-10-21 20:01:08
PR,fix yaml redirect syntax,I had the yaml syntax for redirect from wrong thus breaking all but the last redirect in these redirect lists,,"lacker,lacker",2016-10-21 21:00:34,2016-10-21 21:28:55
IS,Chrome 54 throws error Failed to execute 'insertBefore' on 'Node' parameter 1 is not of type 'Node',React 0 14 8 throws error messages at certain points in our app with Chrome 54 Chrome 53 and other browsers work I was not able to pinpoint the cause DOMChildrenOperations js 8e2a 41 Uncaught TypeError Failed to execute 'insertBefore' on 'Node' parameter 1 is not of type 'Node' screen shot 2016 10 20 at 12 58 41,,"aweary,aweary,aweary,aweary",2016-10-20 11:00:34,2016-10-22 11:18:40
PR,Update website on Travis when only new files are added,This build did not commit the new files because no existing files were changed This should work better,,"sophiebits,gaearon",2016-10-21 21:36:05,2016-10-22 20:41:29
PR,Wrong library name reference in tutorial MD,Seems like you are talking about immutable js and not immutability js which does not exist,,"mbeaudru,gaearon",2016-10-21 21:45:26,2016-10-22 20:43:16
IS,docs list and key examples override Number,Do you want to request a feature or report a bug bug What is the current behavior In 8027 some example extracting components with keys s use Number as component name Maybe it is a good idea to rename this component to NumberItem or something,,"gaearon,rthor",2016-10-21 20:25:21,2016-10-22 20:44:28
PR,Convert the Number component to ListItem,We should not override the built in data type Number Fixes 8034,,"rthor,gaearon",2016-10-21 21:51:27,2016-10-22 20:44:28
PR,Fix anchor link for displayName,Fix the anchor link for Class Properties wouldisplayName' section,,gaearon,2016-10-21 22:39:56,2016-10-22 20:44:51
PR,Fix erroneous ' ' in JSX examples,Removed erroneous in JSX examples for docs docs jsx in depth md docs docs reconciliation md,,gaearon,2016-10-22 02:10:40,2016-10-22 20:45:29
PR,Fix typo,,,gaearon,2016-10-22 02:50:39,2016-10-22 20:45:56
PR,Fix typo in new tutorial code,this state xIsNext is a boolean value not a function,,"dittos,gaearon",2016-10-22 05:46:19,2016-10-22 20:46:51
PR,Fix typo in tutorial md,In Why Immutability Is Important section changges changes,,"tae-jun,tae-jun,gaearon",2016-10-22 06:48:33,2016-10-22 20:52:29
PR,Fix updated with new docs links,Updated links according to new docs,,"avnash,gaearon",2016-10-22 15:40:38,2016-10-22 20:53:52
PR,Fix Replace var with let and const in documentation,This was mentioned in 8035 Updates var variable declarations in the documentation examples to use ES6 style const let and import except for the React without ES6 page and the LinkedStateMixin example on Two way binding helpers as mixins are not supported in ES6 I could also update the CodePen examples on Thinking in React that still use var can I link my own fork into the docs,,gaearon,2016-10-22 20:07:31,2016-10-22 20:55:30
PR,Fix relative link in Hello World,This links which redirects to cc,,"sebmarkbage,sebmarkbage,gaearon",2016-10-21 22:56:20,2016-10-22 20:56:53
PR,take part in is the correct saying,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-10-19 06:59:02,2016-10-22 20:57:57
PR,Add CDNJS version badge in readme,This will add a badge that shows the lib version on CDNJS and link to its page on CDNJS Thanks,,gaearon,2016-10-17 01:16:00,2016-10-22 20:59:28
PR,correct order of params in documentation,Fixing minor documentation error highlighted in,,gaearon,2016-10-17 01:44:50,2016-10-22 20:59:54
PR,ref 04 tags and attributes md data and aria attrs not camel,IMO it is not clear form the docs how I should pass aria labelledby React supports all data and aria attributes as well as every attribute in the following lists Note This note about camel case makes it look like it is also about the data and aria attributes while it is not Users might think comment67273285 39967317 they should use it like ariaLabelledBy or aria labelledBy while they should not I think this addition makes this more clear,,"aweary,gaearon",2016-10-12 12:01:10,2016-10-22 21:02:01
IS,Unable to type in input after adding value prop,I have made an an input field which makes an api call based on whats typed into it and then returns the results in a list On clicking a list element the value in the text input field must get updated When i add a value prop to the input i am unable to type anything into it On removing the value prop from the input i am able to type but the set state does not work was also futile,,"gaearon,gaearon,gaearon",2016-10-22 21:25:52,2016-10-22 21:35:18
PR,Remove unused injectComponentClasses and tagToComponentClass,tagToComponentClass attribute of ReactHostComponent L18 is not being used when creating an internal component L51 making useless to inject a Host Component class by the tag name The reconciler should check if there is a proper class implementation for a specific tag and if not return a generic component class instance,,"diegomura,aweary,sophiebits,aweary,diegomura,aweary,sophiebits,diegomura,aweary",2016-10-22 17:29:22,2016-10-22 22:28:37
PR,Fix illogical code in tutorial md,The tutorial wants to throw a warning and explains about key of React is list but it throws nothing since there is sensible key key move should be removed and added after explaining about key,,"tae-jun,sophiebits",2016-10-22 15:13:41,2016-10-22 23:49:08
PR,Fix for typos in tutorial sample code,,,sophiebits,2016-10-22 06:30:30,2016-10-22 23:50:24
PR,Docs replace reference to getInitialState with state instance prop,In thinking in react html step 4 identify where your state should live step 4 identify where your state should live the second last paragraph should not mention getInitialState,,gaearon,2016-10-23 11:53:20,2016-10-23 12:41:37
PR,Fix typo,,,gaearon,2016-10-23 04:38:24,2016-10-23 12:44:08
PR,Update handling events md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"armostafizi,gaearon",2016-10-23 07:42:47,2016-10-23 12:44:29
PR,Update tutorial md Taking Turns,Fix typo in Taking Turns section The constructor of Board not of Game is being updated,,"pavlin99th,gaearon",2016-10-23 10:23:19,2016-10-23 12:49:55
IS,Request Better documentation of react addons perf,IMO this is insufficient Where are we supposed to place each of the API calls Some example code would be great,,"gaearon,jimfb,jimfb,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,koba04",2016-03-03 08:00:58,2016-10-23 13:28:05
IS,Document context param of ReactClass,Should the context param of ReactClass es be documented Particularly of the constructor of ES6 classes extending React Component The documentation is a bit scattered so not sure of the relevant places but I would think here Context here React Virtual DOM Terminology perhaps here Reusable Components ES6 Classes es6 classes Currently context is not mentioned at all on Reusable Components and ES6 authored Component classes are not mentioned at all on Context,,jimfb,2016-03-04 18:27:43,2016-10-23 13:35:24
PR,Link to lifecycle methods from Context doc,Fixes 6186 and removes fake types notation we are not using anymore,,gaearon,2016-10-23 13:34:51,2016-10-23 13:35:24
IS,Document that setState callback is not guaranteed to be called if component unmounts,Currently the only info I could find about the callback argument of the setState method is this The second optional parameter is a callback function that will be executed once setState is completed and the component is re rendered I have been working on a small tool that relies on the callbacks being called and I found out that in some cases that never happened the state was set the callback was pushed into the queue then the component was unmounted and the callback was lost and never called Now I do not say that I can not infer the possibility of such scenario from the description above but an info about when exactly can such callback be considered lost would be helpful My findings suggest that componentWillUnmount is the right place but I would be more confident with some assurance from the creators of React Also this description suggests that when shouldComponentUpdate returns false so the component is not re rendered the callback will not be called which is not the case as the callback still gets called I'm using React 0 14 7,,"gaearon,gaearon,gaearon,sophiebits,gaearon",2016-03-23 01:31:15,2016-10-23 13:39:18
IS,Update Test Utilities docs to be compatible with v15,Since and were merged docs needs update,,gaearon,2016-04-14 13:21:59,2016-10-23 13:39:50
IS,Lifecycle Compatibility Recommendation Table,Can you call setState from within a ref callback The answer is Yes Though it is probably not a good idea It is really confusing what is permitted good bad illegal Especially because different things are legal at different times in the lifecycles Even if something is legal it might be a bad idea We should clarify,,"jimfb,gaearon",2016-04-22 23:35:36,2016-10-23 13:41:55
IS,Downloading the script files could be easier,Do you want to request a feature or report a bug A website feature meta improvement What is the current behavior You get a file name like t39 3284 6 12726956 279572999043766 1590663715 n js and have to rename it What is the expected behavior It should download with the correct file name i e with a download react dom v15 1 0 min js,,"keyanzhang,jimfb,keyanzhang,keyanzhang,gaearon",2016-06-11 03:04:40,2016-10-23 13:42:34
IS,Language used in Dangerously Set innerHTML document is unclear,The document Dangerously Set innerHTML states The intent behind the html syntax is that it be considered a type taint of sorts What is type taint Also I would like to recommend using language that does not rely on understanding this term or at least to supplement it with a definition Best not to create an opportunity for misunderstanding when explaining a security measure lest the user draw his own conclusion about its importance,,"jimfb,zpao,gaearon",2016-07-01 17:15:26,2016-10-23 13:43:52
IS,Docs request examples and guidance on top level API methods,It would be handy to have a simple examples and guidance on when and when not to use these Thanks,,gaearon,2016-09-16 16:08:06,2016-10-23 13:45:55
IS,Mobile friendly docs,I would like to contribute to make React docs mobile friendly because I cry every time I need to look up something on a phone There had been and attempt to do that some time ago here 5404 with this PR 5512 but apparently it was abandoned by an author I would like to wait with sending my PR until you accept the navigation design the reset is pretty straight forward I guess So this is pretty much how I would see this removed downloads tab because we are on phone but there is a place for that just in case docs And a little gif docs It is almost identical as on React Native docs so we would have kind of consistency here But I would rather like to avoid sticky header as it takes too much space cc as advised me to contact you on this one,,"thymikee,lacker,thymikee,lacker,thymikee,thymikee,gaearon",2016-09-29 19:09:48,2016-10-23 13:46:07
IS,Docs Implementation notes replaceChild args in worng order,The order of the arguments is wrong updating composite components,,"gaearon,gaearon",2016-10-14 13:05:31,2016-10-23 13:47:14
PR,Clarify placeholders in docs,This accomplishes Note that there were a few posts that used a similar placeholder syntax namely docs posts 2015 03 19 building the facebook news feed with relay md docs posts 2014 07 17 react v0 11 md docs posts 2014 10 28 react v0 12 md and docs posts 2015 12 16 ismounted antipattern md My assumption is that these posts should not be edited but I'm happy to go through and clarify them as well if requested,,gaearon,2016-08-03 18:58:43,2016-10-23 13:50:45
IS,Doc too confusing with should rather be,namespaced components and wherever else applicable,,"gaearon,gaearon",2016-08-03 16:03:32,2016-10-23 13:50:55
IS,Documentation add a schema to illustrate the component lifecycle,Peter Beshai has created a very good cheatsheet to illustrate the component lifecycle component lifecycle cheatsheet large It could be useful to have a similar schema on the React documentation page about components,,gaearon,2016-07-04 12:06:51,2016-10-23 13:57:11
IS,Improve Documentation Translation Management,It is really ad hoc right now so we should make it better It is not a huge deal since we do a shitty job of exposing the translations but there are groups of people actively contributing so we should do our best to make it easier has had great success using CrowdIn so I set up a project there I will do some more work over the next few days to get it syncing from GH based on his article and then we will go from there Thanks for the inspiration James,,"zpao,zpao,gaearon",2016-01-08 18:39:54,2016-10-23 14:01:05
IS,React cloneElement docs are a bit light,The old cloneWithProps has a nice example but mentions that it is deprecated in favour of React cloneElement Meanwhile react cloneelement is pretty terse and links to a blog post from 0 13rc2 which has a decent example I'm proposing adding a guide page about modifying child properties which has a very similar example to the old cloneWithProps page and then linking to it from there and the cloneElement API docs Seem reasonable I can put together a PR if so,,"glenjamin,gaearon,gaearon",2016-06-01 17:11:03,2016-10-23 14:03:16
IS,Component specs should document nextContext parameters,Including contextTypes adds a parameter to the signature of several component lifecycle functions as documented in these two locations Anyone attempting to implement a plug in for React who has not made use of Context would be unlikely to consider these extra parameters since they are not documented in the slightest on the component specs page leading to hard to find bugs Please consider updating the to reference the context parameters,,"gaearon,gaearon",2016-07-11 06:16:13,2016-10-23 14:04:19
IS,Write docs for React PureComponent,Need to at least update the top level api page but should consider writing something more about it cc,,"zpao,zpao,gaearon,gaearon,gaearon",2016-07-29 22:37:19,2016-10-23 14:05:04
IS,Write documentation for react test renderer,This is the first day I have used react test renderer and I have already stumbled upon three problems The injectEnvironment called twice bug 7386 The fact that refs is just null when rendered with react test renderer 7371 When setting a ref on a dom element React erroneously warns about stateless function components cannot be given refs also probably related to 7371 react test renderer is going to be shipped with create react app very soon it is in react test renderer 0 3 0 alpha so I think it deserves some more comprehensive documentation as soon as possible With at least some troubleshooting bulletpoints and some text about how one are supposed to do with refs I sometimes use refs from componentDidMount For example for setting focus on an input this refs input focus But such code will fail with cannot call focus on undefined Should we always test if a ref is not undefined before using them Or do you have some plans for react test renderer in near future that will solve this issue in some way,,"gaearon,gaearon,gaearon",2016-08-05 10:33:21,2016-10-23 14:06:05
IS,Doc to explain how to bind methods with arrow functions,Do you want to request a feature or report a bug A feature more specifically an improvement in the docs What is the current behavior I have read trough all of React documentation in the last days and was confused by this no autobinding section Does this approach have the same performance Should not it be somewhere in the docs If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template It is not a bug What is the expected behavior There should be any kind of mention to the arrow function approach to bind methods to the component or preferably should be well documented Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am sure it is due to an update on React itself but I am not sure in what version PD BTW if this issue is accepted and planned I would be happy to make a PR to fix it with some guidance from the community about what else to include in the docs wink,,"syranide,gaearon,aweary,gaearon",2016-08-12 07:39:11,2016-10-23 14:06:59
IS,Unclear docs and API for children esp only children,I'm writing a table cell component that will specially handle the case where it is given a single number and from looking at the documentation and API I'm unclear on how to do this Multiple Components children and Top level API react children say that this props children is opaque and suggest that the React Children APIs should be used to preserve this props children is encapsulation Type of the Children props gives full details on how this props children is implemented and suggests that React Children is provided simply as a convenience The docs for React Children only react children only say that only gets the single child but in reality it gets the single child as long as that child is a React element React 15 3 1 at least improves the error message in this case My questions or suggestions for improvements to the docs Is this props children supposed to be opaque If so Type of the children props should be updated Or is it supposed to be public If so Multiple Components and Top level API should be updated Can the documentation for React Children only be updated to clarify that it requires a valid React element and possibly to explain the use case for this requirement See comments on 1104 for some of the confusion caused by the current documentation What is the official or recommended way to get at the only anything renderable child as opposed to the only valid React element child Changing React Children only to allow for string and number nodes was closed as wo not fix 1104 Using this props children directly goes against the docs' statement that it should be opaque Using React Children map or React Children forEach seems like overkill If this props children is supposed to be opaque then would a new React Children onlyNode function be a useful solution,,gaearon,2016-08-20 19:51:37,2016-10-23 14:07:49
IS,improve the tutuorial remove the remarkable,using remarkable is not helpful to a big portion of the reader and it hurts the clarity and simplicity of a tutorial should have This is a request to remove it,,"gaearon,lacker,gaearon",2016-09-16 22:06:45,2016-10-23 14:08:06
IS,Add date created to docs,Docs request could dates be added to docs re when and for what version they were written introduced For instance Could include a date this was written introduced into the ecosystem,,"aweary,aweary,aweary,gaearon,lacker,gaearon",2016-09-19 19:01:50,2016-10-23 14:09:16
IS,Docs request build a React component library,This is an important section that I think a lot of folks end up piecemealing on their own It would be super useful in terms of ecosystem support,,gaearon,2016-10-05 17:30:41,2016-10-23 14:09:58
IS,JSX Gotcha Case Sensitivity,Do you want to request a feature or report a bug Documentation Add something pertaining to this to the JSX Gotcha is page What is the current behavior Which is rather unintuitive considering that meaning is not generally attached to case If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"aweary,hramos,gaearon",2016-10-18 19:58:58,2016-10-23 14:10:27
PR,React Virtual DOM Terminology doc updated,ES6 examples instead of React createClass,,"jimfb,gaearon",2016-05-24 12:36:48,2016-10-23 14:24:25
PR,Add Learning Resources section to the Community Resources on the website,This PR is in regards to is tweet and I would like to open dialog before this is merged about the best way to approach utilizing community learning resources in the official docs My concern with this Learning Resources approach is that it could easily become a link dump which would be both ineffective and overwhelming for beginners The way to avoid a link dump would be to have some form of quality check However that may lead to too much effort needed by the core team to keep up with PRs,,"zpao,aweary,aweary,gaearon,lacker,gaearon,gaearon",2016-06-24 20:21:53,2016-10-23 14:27:15
PR,Update 04 multiple components md,Just had a discussion about this on reactiflux and the use of component here to mean potentially both ReactElement and ReactComponent has already caused some confusion about assigning keys to ReactElements within loops If the word component is intended to be a catch all term the glossary should provide explicit guidance on this,,"zpao,gaearon",2016-06-28 18:12:32,2016-10-23 14:28:28
PR,Create 02 1 jsx in depth ru RU md,First stab at translating cc,,"alexzherdev,gaearon,gaearon",2016-07-01 06:20:04,2016-10-23 14:29:02
PR,Create 02 2 jsx spread ru RU md,Referred to MDN for some of the translations cc,,"alexzherdev,alexzherdev,gaearon,gaearon",2016-07-07 19:10:08,2016-10-23 14:29:09
PR,Create 02 3 jsx gotchas ru RU md,cc If these are any good I can continue with the next articles or translate the big tutorial which I think people do refer to a lot,,"alexzherdev,alexzherdev,gaearon,gaearon",2016-07-07 19:12:29,2016-10-23 14:29:13
PR,Create 05 reusable components ru RU md,cc,,"alexzherdev,alexzherdev,gaearon,gaearon",2016-07-09 08:54:16,2016-10-23 14:29:17
PR,Create 06 transferring props ru RU md,cc,,"alexzherdev,alexzherdev,alexzherdev,alexzherdev,zpao,alexzherdev,alexzherdev,alexzherdev,gaearon",2016-07-09 09:51:38,2016-10-23 14:29:22
PR,Create 07 forms ru RU md,cc,,"alexzherdev,alexzherdev,alexzherdev,gaearon",2016-07-09 21:02:02,2016-10-23 14:29:30
PR,Add note about refs on stateless components,It was not mentioned that ref on stateless components does not work MyComp ref element this listElement element If MyComp is a stateless functional component then the ref method is always only ever called with null No warning is issued by react See,,"alexzherdev,aweary,mertkahyaoglu,gaearon",2016-07-13 13:22:13,2016-10-23 14:30:20
PR,Update tutorial md,Proposed changes to Composing components section Many students in our 12 week JavaScript bootcamp did not understand the order in which the new components should be placed This should add clarification and cut back on confusion and troubleshooting to your intended audience,,gaearon,2016-07-19 15:49:16,2016-10-23 14:31:27
PR,Update tutorial md,Changed the directions in the Getting Started to be more clear on which script tag to remove A number of students in our coding bootcamp were not clear about this and missed the reference I believe this helps clarify by being more specific,,gaearon,2016-07-19 15:49:34,2016-10-23 14:31:39
PR,Update tutorial md,Proposed changes to Composing components section Many students in our 12 week JavaScript bootcamp did not understand the order in which the new components should be placed This should add clarification and cut back on confusion and troubleshooting to your intended audience,,gaearon,2016-07-19 15:58:48,2016-10-23 14:31:49
PR,docs add advanced performance zh CN md,add advanced performance zh CN md,,gaearon,2016-08-02 08:55:00,2016-10-23 14:32:25
PR,Use 2 components in code example for child parent communication,The current code sample only references one component which makes it difficult to understand how I might communicate between two components,,"zpao,zpao,zpao,zpao,zpao,gaearon",2016-08-03 17:57:56,2016-10-23 14:33:25
PR,Add React PureComponent note,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes grunt test 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"jimfb,jimfb,aweary,gaearon",2016-08-10 21:03:46,2016-10-23 14:33:59
PR,Clarify taint checking for Dangerously Set innerHTML document,Addresses 7161,,"jimfb,zpao,gaearon",2016-08-18 01:29:46,2016-10-23 14:34:31
PR,Add React PureComponent to documentation,Documents React PureComponent on the PureRenderMixin documentation page,,"Daniel15,aweary,aweary,keyanzhang,Daniel15,aweary,Daniel15,sophiebits,aweary,shamrin,shamrin,Daniel15,gaearon,Daniel15",2016-09-14 18:03:05,2016-10-23 14:35:25
PR,Clarify that react addons update is deprecated,update is deprecated When I read this page it would have been more helpful if I would been pointed to the spread syntax I already knew about Immutable js but I wanted something lighter weight Obviously the changes I made here are kind of hacky and do not give a great experience to the reader But I think that pointing people to these other options is valuable enough that it is worth adding a temporary note like this,,gaearon,2016-09-14 20:11:59,2016-10-23 14:36:10
PR,Remove references to createClass in createElement docs,,,gaearon,2016-10-23 14:48:49,2016-10-23 14:48:58
PR,React createElement can also take a function,or at least that is how I understand it to work,,"aweary,syranide,gaearon",2016-09-14 23:52:14,2016-10-23 14:49:26
PR,Adds mention of handling properties on web components in docs,Because my pull request was closed and I could not find any mention of this specific behavior in the documentation screencapture localhost 4000 react docs webcomponents html 1475638181714,,gaearon,2016-10-05 03:36:55,2016-10-23 14:50:34
PR,Russian translation of tips,x Type of the Children props x Value of null for Controlled Input x componentWillReceiveProps Not Triggered After Mounting x Props in getInitialState Is an Anti Pattern,,"ivanzotov,ivanzotov,gaearon,ivanzotov,gaearon",2016-09-16 16:12:51,2016-10-23 14:51:18
PR,Improve proptypes oneof warnings Fixes 1919,Fixes issue 1919 As I see there is two problems 1 If oneOf uses function in array so they will be stringified as null so I add functionPrettifier method as argument to JSON stringify 2 Possibly mismatch oneOf and oneOfType if checks do not pass and one of the function is one of React PropTypes proper warning will be shown Welcome to your suggestions reactEurope hackathon,,"gaearon,chicoxyzzy,gaearon,gaearon",2016-06-01 11:37:50,2016-10-23 19:41:25
PR,WIP Separate internal class for functional components,For fun I tried to make a separate internal class for functional components Previously this was attempted in 3995 This is work in progress I d like to measure perf implications of this but haven t had the time yet The one feature that I don t support here is factory components They are very inconvenient with our OOP internal hierarchy because we don t know whether we re dealing with a functional or a factory component until we call the function at least once I assume this is the same reason 3995 got shoot down However I don t think I ve ever seen a factory component in the wild and I m not convinced in the utility of supporting them Who are their users Shallow rendering is also broken in this PR but I think it s fixable,,"gaearon,keyanzhang,vjeux,vjeux,gaearon,vjeux,acdlite,gaearon,acdlite,gaearon,sophiebits,keyanzhang,sophiebits,gaearon",2016-09-12 15:31:13,2016-10-23 19:57:55
PR,Strip React PropTypes type checking code in production,This is 6401 revived It s a major change that can go in 16 now that we warn for calls in 15 This gives us 1K from isomorphic React post gzip,,"gaearon,fson,gaearon,vjeux,vjeux,vjeux,gaearon,vjeux,gaearon,gaearon,zpao,gaearon,gaearon",2016-09-03 15:10:48,2016-10-23 20:15:29
PR,Accept className in ReactDOMFiber,This is not a complete solution to all attributes It is just that we run a lot of unrelated unit tests by testing className so we need it for the tests,,sebmarkbage,2016-10-23 00:56:50,2016-10-23 21:04:03
PR,Docs Fix createClass reference,Currently react createClass is wrongly referenced to react createclass Changed it to createclass,,"thinker3197,gaearon",2016-10-24 11:17:30,2016-10-24 12:34:17
PR,Refactor ReactPerf for readability,This does not affect any behaviors which is for readability,,"koba04,gaearon,koba04",2016-10-24 09:52:27,2016-10-24 12:36:02
PR,Fix typos,,,gaearon,2016-10-24 00:24:59,2016-10-24 12:50:04
IS,IE11 findParent fails with 'Unable to get property ' reactInternalInstance ' of undefined or null reference,Do you want to request a feature or report a bug Bug What is the current behavior Exception is thrown rendering stops If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Does not seem to be determinstic but it happens only in IE at least in IE11 What is the expected behavior Should not throw an exception and continue rendering Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 2 1 IE 11 on Windows 8 1,,"aweary,aweary",2016-10-21 08:29:57,2016-10-24 13:02:39
PR,ReactEventListener findParent null safe parentNode handling,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-10-21 08:30:29,2016-10-24 13:03:08
PR,Fiber Add types for ReactFiber and ReactChildFiber,It might be unnecessary because Flow can infer their return types But I think the type annotations for ReactFiber in this is valuable because it is module boundaries,,"koba04,gaearon,sebmarkbage,koba04",2016-10-24 10:45:00,2016-10-24 13:20:44
PR,Add more highlighting to docs,Make examples more consistent and adds line highlighting,,gaearon,2016-10-24 14:01:14,2016-10-24 14:48:46
IS,Add description of false caveat to docs conditional rendering md,Do you want to request a feature or report a bug documentation enhancement We need to describe that if user wants to output string false for boolean property that is false he should convert it to string or else it wo not appear in the output,,"gaearon,gaearon",2016-10-24 13:34:36,2016-10-24 14:49:22
PR,fix typo in list and keys md,This changes a 'Wrong ' in the list and keys documentation to 'Right ' and it makes more sense Hope this helps,,"gaearon,gaearon,gaearon,gaearon,gaearon",2016-10-24 15:05:46,2016-10-24 15:39:00
IS,Uncaught Invariant Violation parentComponent must be a valid React Component,Do you want to request a feature or report a bug Bug What is the current behavior I am seeing the following error on a page that used to work The stack does not say anything at all so debugging is difficult My request is not for you to help me debug my code but to improve that error stack so that people who encounter that error can figure out where it is coming from Thanks Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome on Windows 10 React 15 2 1,,"gaearon,gaearon",2016-10-24 12:35:06,2016-10-24 15:55:40
PR,Fiber Initial error boundaries,This builds on top of 7941 new tests I added in 7949 hence the master merge commit It adds basic support for error boundaries during mount to Fiber Commit for review 833a7f89427ff27fb14dc31ebdbcf47c247ed5af Test plan npm test ErrorB Most of those 13 failing tests are failing because of the lack of componentWillUpdate and componentWillReceiveProps A few thoughts This my first real Fiber PR so I have no idea what I'm doing Adding a flag to all fibers seems bad I'm not sure where to keep that state though I need to store somewhere that we are retrying and if we fail we should propagate error up We used to rely on stack for this I added some code to handle setState in componentWillMount The part where I put the error flag and try to clear all work in progress is funny Is there a better way Neat errors in setState are now caught and I did not have to do anything special to make that works,,"gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,gaearon,acdlite,gaearon,gaearon",2016-10-17 19:18:40,2016-10-24 17:08:57
PR,Strip PropTypes checkers in production build,Resubmitting 7651 because I accidentally nuked my fork Feedback from 7651 is addressed This removes the warning about PropTypes and actually replaces them with a single PropType function that throws in production Difference from master,,"gaearon,acdlite",2016-10-23 20:19:47,2016-10-24 17:43:31
PR,Remove copypasta comment,Caught by in 8015,,sebmarkbage,2016-10-24 17:49:41,2016-10-24 17:49:52
PR,removed duplicated 'the',Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-10-24 22:03:17,2016-10-24 22:34:58
PR,Add npm v4 0 0 support,Just tested recently released npm v4 0 0 and all scripts in package json scripts sections worked as expected there are still some errors when runninig npm run build but this should be fixed by 7999 and it is exactly the same as when using npm v3,,"chicoxyzzy,gaearon",2016-10-24 22:49:49,2016-10-24 22:57:12
PR,Respect state set in componentWillMount on resuming,When resuming creating new instance after resuming work we should set the state on the newly created instance rather than the old one,,"gaearon,sebmarkbage,gaearon",2016-10-24 19:34:53,2016-10-24 23:21:56
IS,Wrong Snippet code Uncontrolled Components Docs Forms,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,ericnakagawa,2016-10-22 20:31:11,2016-10-24 23:32:01
IS,Forms documentation should not hide relevant info,Do you want to request a feature or report a bug feature What is the current behavior utvalg 272 examples If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The defaultSelected attribute should be shown within the code you should not have to scroll to find it Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Not relevant,,"gaearon,ericnakagawa",2016-10-24 06:32:02,2016-10-25 00:03:36
PR,Add Fiber Debugger,Fiber Debugger This is a debugger handy for visualizing how Fiber works internally It is only meant to be used by React contributors and not by React users It is likely that it might get broken at some point If it is broken ping Dan Running First npm run build in React root repo folder Then npm install and npm start in this folder Open 3000 in Chrome Features Edit code that uses ReactNoop renderer Visualize how relationships between fibers change over time Current tree is displayed in green fiber debugger,,"gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2016-10-21 19:50:12,2016-10-25 07:36:38
PR,No value Uncontrolled Component,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"armostafizi,gaearon",2016-10-25 09:42:21,2016-10-25 11:35:31
IS,react addons css transition group give me a warning transitionEnterTimeout was not supplied to ReactCSSTransitionGroup,Failed prop type transitionEnterTimeout was not supplied to ReactCSSTransitionGroup this can cause unreliable animations and wo not be supported in a future version of React See for more information How do I solve this warning Thanks,,"gaearon,gaearon,gaearon",2016-10-25 09:27:41,2016-10-25 11:37:02
PR,Fiber Delete child when the key lines up but the type does not,When keys line up in the beginning but the type does not we do not currently delete the child We need to track that this fiber is a not a reuse and if so mark the old one for deletion,,"sebmarkbage,sebmarkbage,gaearon",2016-10-25 01:28:33,2016-10-25 11:51:53
PR,Fiber IndeterminateComponent type is unnecessary,I guess this PR is missing something but I'm not sure why IndeterminateComponent is necessary I think IndeterminateComponent will be FunctionalComponent or ClassComponent in the end L293 L297 If that is true IndeterminateComponent can be deletable Or do you have any plans to use IndeterminateComponent in features that have not implemented yet,,"koba04,gaearon,koba04",2016-10-25 12:58:59,2016-10-25 17:56:56
PR,Fiber Reorganize files for DOM renderer to make overlap between fiber stack clearer,I split the injection so that we can continue using the event property system from fiber without pulling in everything I also reorganize files in my best guess for which files we can reuse instead of forking,,"sebmarkbage,sebmarkbage,iamdustan,iamdustan,sebmarkbage,iamdustan,nhunzaker,sebmarkbage,gaearon,sophiebits,gaearon",2016-10-25 03:24:49,2016-10-25 19:56:30
PR,Merge React DOM Native TreeTraversal,These two implementations are identical Except for some invariants for some reason Since this relies on an implementation detail of the internal component tree rather than an implementation detail of the renderer we might as well merge them and remove the injection cc Do you remember why this was made injectable to begin with When I ported it to RN I pretty much just copied it,,"sebmarkbage,sophiebits,gaearon,sebmarkbage",2016-10-25 21:26:50,2016-10-25 21:52:16
PR,Fiber Do not call componentDidUpdate if shouldComponentUpdate returns false,Builds on 8015 This fix relies on the props and state objects being different to know if we can avoid a componentDidUpdate This is not a great solution because we actually want to use the new props state object even if sCU returns false That is the current semantics and it can actually be important because new parent rerenders that are able to reuse props objects are more likely to have the new props object so we wo not be able to quickly bail out next time For example I do not have a better idea atm though,,"sebmarkbage,sophiebits",2016-10-21 03:10:49,2016-10-25 22:21:40
IS,Some style props render incorrectly in Safari,Do you want to request a feature or report a bug This is a bug report or a report of undocumented behaviour What is the current behavior Some style props render incorrectly in Safari For example the following becomes webkit animation 100s What is the expected behavior That the rendered style property matches the given style property WebkitTransitionDelay becomes webkit transition delay WebkitAnimationDelay becomes webkit animation delay Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Using 15 3 2 and the version that is served here I have seen this issue on iOS 8 Safari El Captian Safari 9 1 and 9 1 2 iOS 10 Safari seems to be unaffected and I am unsure about other versions,,aweary,2016-10-18 00:22:34,2016-10-26 04:03:26
PR,Fiber Implement findDOMNode and isMounted,The strategy of finding the current through the back pointers turned out to be inefficient You basically have to scan from the top to find them since the return pointer is active even when a child is in progressedChild instead of child isMounted is pretty easy though since we can just cut off the return pointer when a child gets deleted The key realization to fix findDOMNode is the realization that it does not matter which one is current if there is no pending insertion previous deletion So we can just check for those to determine if we are looking in the wrong tree I'm not too worried about this being understandable unless we have other use cases for reflection that are less deprecated Also note two new features findDOMNode in fragment returns first child rather than error null Just like element querySelector findDOMNode when a component returns a string finds the host text node This is the first time you could get access to a text node instance It is not super great since if the text node merges due to normalization then it could actually represent multiple text nodes but maybe that is fine Seems useful,,"sebmarkbage,iamdustan,iamdustan,sebmarkbage,sebmarkbage,gaearon,sophiebits,sebmarkbage,acdlite",2016-10-24 23:26:04,2016-10-26 06:52:20
PR,state changed events for devtools,A component is state is an integral part of a component and usually when exists has an important part affecting the behavior of the component Allowing devtools to instrument the state could help users understand what causes the component to render the way it does locate bugs etc It could also allow cool features such as time travelling a component is inner state While thinking about how to enable instrumentation of state updates we had a few different ideas in mind Eventually we decided the cleanest and helpful way is to add a onStateChanged event to the ReactDebugTool and emit a change event everytime a component changes its state That way any devTool could hook on that specific event and get notified for state changes For convenience we also added getState to ReactComponentTreeDevtool,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-06-01 09:40:11,2016-10-26 11:26:16
PR,Do not set value prop for uncontrolled component,I'm a newbie but as far as I understand you do not set value property for uncontrolled components In code example for uncontrolled components the value prop is set,,"aweary,gaearon,gaearon",2016-10-25 16:52:16,2016-10-26 11:54:42
PR,Fix an argument name of TestUtils renderIntoDocument,renderIntoDocument receives a React element not instance,,"koba04,gaearon",2016-10-26 05:28:54,2016-10-26 12:44:46
PR,Update README md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-10-26 11:05:43,2016-10-26 12:45:41
PR,Update lists and keys md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA There is mismatching variable name both definition and usage In line 156 an argument name called item is change to match the usage in line 158,,gaearon,2016-10-25 13:27:11,2016-10-26 13:17:21
PR,Fiber String refs and owner tracking,Implements string refs using callback closures Still need to update existing ref tests to work with Fiber,,"acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,aweary,acdlite,acdlite,sebmarkbage,acdlite,gaearon,gaearon,gaearon,sebmarkbage,acdlite,sebmarkbage,acdlite,gaearon,gaearon,acdlite,gaearon,gaearon",2016-10-26 00:04:43,2016-10-26 13:37:33
PR,Fiber Separate priority field for pending updates,Currently there is a single priority field pendingWorkPriority that represents the priority of the entire subtree The scheduler does a breadth first search to find the next unit of work with a matching priority level If a subtree is priority does not match that entire subtree is skipped That means when an update is scheduled deep in the tree setState its priority must be bubbled to the top of the tree The problem is that this causes the all the parent priorities to be overridden there is no way to schedule a high priority update inside a low priority tree without increasing the priority of the entire tree To address this this PR introduces a separate priority field called pendingUpdatePriority not 100 sold on the name The new field represents the priority of the pending props and state which may be lower than the priority of the entire tree Now when the scheduler is searching for work to perform it only matches if the pendingUpdatePriority matches It continues to use the pendingWorkPriority as a fast hint to skip subtrees if they do not match To elaborate further because the work priority is the highest priority of any node in the entire tree if it does not match there is no point in searching any deeper Based on Compare view,,"acdlite,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,acdlite,sebmarkbage,acdlite,sebmarkbage",2016-08-10 05:18:08,2016-10-26 13:39:57
IS,Need a way to prevent component render on client side initial load,For Ad performance in an isomorphic application we need React to avoid rendering an Ad Component containing an ad position div on the client initial load Here is the following scenario 1 React renders the ad position div on the server and sends html to client This div is an empty div with an id attribute identifying the location to place an ad 2 Google gpt makes a request for ad before React lifecycle is finished on client and the ad position div gets filled with an ad 3 React finds a mismatch with server and client ad position div so it re renders the empty ad position div on client wiping out the ad If there is a way to conditionally stop React from rendering the ad position div on the client we have not found it Seems like there needs to be a flag or method in the react lifecycle that can be used to prevent a component render on certain conditions,,gaearon,2016-10-19 13:49:28,2016-10-26 13:45:55
PR,Use const instead of var,Prefer const over var to make sure that there will be no reassignments to history or current,,gaearon,2016-10-26 14:11:54,2016-10-26 14:20:09
PR,docs in chapter forms,While reading the docs I was a bit confused as there was no difference between the component code in the section Controlled Components and Uncontrolled Components in chapter forms I changed it to the code which was provided on CodePen,,gaearon,2016-10-26 15:45:58,2016-10-26 16:10:42
IS,Reusable Components Page Redirects Improperly,The old page for Reusable Components that went into great detail about the various PropTypes that can be used now redirects to the wrong page Original Page Now Redirects To If like me you are looking for something for now you can see the original page from Google cache,,gaearon,2016-10-26 14:50:47,2016-10-26 16:13:03
PR,Fix typo in reconciliation md,Typo in reconciliation md componts components,,"akatopo,gaearon",2016-10-26 16:11:32,2016-10-26 16:13:55
IS,Children components cannot always be a blackbox to their parent,Perhaps this is already solved but I have had trouble finding a solution I'm happy with Our scenario is as follows So component A does not know anything about being disabled or not Component B the owner decides to disable component A by wrapping it in component Disable Easy enough so far We like this pattern it means we can disable any component we like However we started getting into trouble when the div that Disable adds to the DOM starts to mess with styling flexbox in most of our cases Component A might have some styles such as flex shrink 2 which now Disable needs to replicate some how I think our tidiest solution has been for Component A to expose a className prop that can be used to pass down the disabled class But this means any component we may want to disable needs to also expose a className prop Is this the accepted approach to the problem Or is there something I'm missing Thanks,,gaearon,2016-10-26 16:31:02,2016-10-26 16:39:41
PR,Fiber Add top level render callbacks into ReactDOMFiber and ReactNoop,This PR is to fix an issue listed in 7925 Phase 5 Low pri In this PR render callbacks are called in the commitLifeCycles which is called from at the end of commitAllWork if a target fiber is HostContainer,,"koba04,gaearon,gaearon,koba04,koba04,sebmarkbage,gaearon,sebmarkbage,koba04,koba04,koba04,gaearon,sebmarkbage,koba04",2016-10-26 05:13:03,2016-10-26 17:19:19
PR,Forms Update,Fixes 8052 Fixes 8068 Removed includes and updated corresponding CodePen Added line highlighting on first 2 examples,,"ericnakagawa,lacker,lacker,lacker,lacker,gaearon",2016-10-26 17:48:21,2016-10-26 20:45:25
PR,Remove extraneous value in controlled form elements docs,The uncontrolled input should not have value attribute this is the main difference and it s confusing to see it in this example Codepen is correct does not have the value attr,,"aweary,ericnakagawa",2016-10-26 11:48:28,2016-10-26 20:57:24
PR,Fix doc for Uncontrolled Components,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Fix code snippet for Uncontrolled Components to match example from codepen io,,"aweary,ericnakagawa",2016-10-26 02:22:53,2016-10-26 20:58:32
PR,Changes to Forms doc,Fixes 8052 Fixes 8068,,"ericnakagawa,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,ericnakagawa,ericnakagawa",2016-10-25 00:01:59,2016-10-26 21:00:09
IS,Redirection in docs lead to wrong page,Search in Google for react event listener remove Click on Opens this page which does not include any info about event listeners This happens for other search results too It is pretty annoying to not be able to find references in the public docs quickly,,"gaearon,lacker,gaearon,lacker,gaearon",2016-10-26 00:51:09,2016-10-26 22:30:10
PR,Docs update Additional,Pushing additional Forms changes,,"ericnakagawa,gaearon",2016-10-26 21:11:45,2016-10-26 23:14:08
PR,Tiny grammar fix in forms md,Before submitting a pull request please make sure the following is done x This branch branched of the master branch Only documentation changes x CLA signed For input and textarea onChange should generally used instead of the DOM is built in oninput event handler Since onChange is the prop that the user should use the sentence should use a passive voice I m still not sure why we need an in q instead of the DOM is built in oninput event handler q Or should the sentence be rewritten e g in active voice you should generally use onChange instead of the DOM is built in oninput event handler,,gaearon,2016-10-26 05:25:49,2016-10-26 23:57:00
PR,Fiber PureComponent,Pretty straightforward Passes existing tests,,"acdlite,sophiebits,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,sophiebits,acdlite,sophiebits,sophiebits,sebmarkbage,acdlite",2016-10-26 23:57:52,2016-10-27 04:13:43
IS,React Docs Conditional Rendering,,,,2016-10-27 04:40:26,2016-10-27 04:51:36
PR,Update forms md,The title of this content is Potential Issues With Checkboxes and Radio Buttons so the content should be checkboxes,,gaearon,2016-10-27 08:34:02,2016-10-27 09:26:31
IS,Changing state too quickly cause error with shallow render,Do you want to request a feature or report a bug Report a bug What is the current behavior Running ReactTestUtils createRenderer render causes react to throw an exception It works fine so long as I run testRender once As soon as it is run 2 or more times the error pops up In my project TAP output is being listened to from a console log wrapper and state is being updated when a new one comes in So while my reproducible example is contrived it is real world bug when running tests in my project What is the expected behavior The expected behavior is that no error occurs in the console when running multiple shallow test renders while at the same time React is updating the state of an element rendered to the DOM Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 0 and 15 3 2 Windows 10 64 bit v1607 and updates up to October 10th 2016 I have not tried this in previous versions of React Verified it displays the error in Chrome 54 0 2840 50 beta m 64 bit and Firefox 50 0b5,,,2016-10-10 10:07:15,2016-10-27 09:31:10
PR,Shares debugID information across modules,Prior to this React was using a nextDebugID variable that was locally scoped to both instantiateReactComponent and ReactShallowRenderer This caused problems when the debugIDs would collide the itemMap in ReactComponentTreeHook would be overwritten and tests would fail with the message Expected onBeforeMountComponent parent and onSetChildren to be consistent This change shares the debugID with both modules thus preventing any collisions in the future Fixes 7927 Ideally this would be in the next hotfix release of React 15 x as this is preventing us Airbnb from upgrading at the moment,,"aweary,aweary,gaearon,gaearon",2016-10-25 22:21:26,2016-10-27 09:31:11
PR,Correct usage of formatName function in docs,The code section above these changes defines a formatName function that expects a parameter user The code section containing these changes incorrectly called formatName user name For those following along with CodePen this section should correctly call formatName user,,gaearon,2016-10-27 10:17:20,2016-10-27 12:01:04
PR,added word break,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"gaearon,gaearon",2016-10-27 06:21:52,2016-10-27 12:01:51
PR,Fix lint errors,Fix 6 lint errors,,"ivanzotov,gaearon",2016-10-26 19:21:52,2016-10-27 12:03:32
PR,Fix Remove unneeded else branches from documentation examples,This PR x removes unneeded else branches from documentation examples As we are returning in the if branches there is no need for an else here,,"localheinz,gaearon,localheinz,gaearon,localheinz",2016-10-24 07:08:30,2016-10-27 12:13:33
PR,Improve devtools image size for the tutorial,Before img width 270 alt screen shot 2016 10 26 at 10 50 59 pm src After img width 261 alt screen shot 2016 10 26 at 10 54 28 pm src,,"ivanzotov,gaearon,ivanzotov,gaearon",2016-10-26 19:58:17,2016-10-27 12:54:18
PR,Warn when React DOM modified by not React,This pull request addresses Warn when React DOM modified by not React 3218 One issue I had was whether to write tests I would think I need to but I could not find tests for DOMChildrenOperation Another issue was that currently jsdom does not currently mock out window MutationObserver that is defined in the browser so for the purpose of making the tests pass I used var MutationObserver window MutationObserver function that would simply do nothing if window MutationObserver is not found,,"aweary,aweary,jimfb,jimfb,jimfb,syranide,jimfb,gaearon",2016-08-26 19:46:58,2016-10-27 12:55:30
IS,Use ReactDOM render target as an implicit JSX root,So currently when rendering you must provide some top most wrapper in addition to the node that has been designated as the reactroot This introduces an unwanted extra layout element and can make styling a little irritating It would be nice if the target for ReactDOM render jsx node is the topmost node and you could pass an array as the first children right away,,gaearon,2016-10-10 22:34:37,2016-10-27 12:58:17
IS,Context support for react test renderer,Do you want to request a feature or report a bug This is a feature request What is the current behavior There does not appear to be a way to pass context when calling renderer create I'm attempting to use snapshot testing in Jest with a component that uses react intl If I could provide context I could create a similar helper function to those for enzyme helper function 1 What is the expected behavior Be able to provide a context similar to shallowRenderer render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm using React 15 13 2 and have not tried any previous versions of React,,"gaearon,gaearon,gaearon,gaearon",2016-10-06 22:36:05,2016-10-27 12:59:09
IS,Custom Renderer API Support,I m working through upgrading some renderers and documentation to the current master build installing from From following along I knew there were some hard breaking changes I wanted to begin a discussion on what commitments React is willing to make at this time to support this use case Rather than trying to figure all of the current APIs needed up front I d like to begin this by looking at the Mount entry point and discuss what APIs could be exposed and which should be covered in other APIs ReactMount ReactMount ReactNativeMount and ReactTestMount are the entry points to three Facebook React supported renderers They all live in this codebase and have first class access to a number of internals that external renderers do not currently get Specifically a few modules that each access are ReactReconciler instantiateReactComponent a helper function to create the correct React Component type host composite text Also a part of the reconciler ReactUpdates my understanding is this is a part of ReactReconciler ReactInstrumentation bridge between React internals and devtools not limited to just the React DevTools There are a few other modules that I see used between FB and my own renderers beyond these that may be worth future consideration though these are what I understand to be the most important to unblock renderer development My understanding is that a renderers Mount method is dependent upon the reconciler to bridge the renderer semantics to React core The reconciler has become effectively private and non shareable with the recent build changes What can be done today to allow renderers to continue existing and experimenting in the 16 x release cycle A few initial ideas to get feedback on for possible direction if any would be acceptable With both of these ideas comes developer console warnings that this is an unsupported and non guaranteed API that could break at any moment including patch releases Expose minimal Reconciler surface area Create a ReactReconciler package,,"iamdustan,gaearon,iamdustan,gaearon,iamdustan,gaearon,gaearon",2016-10-03 14:50:16,2016-10-27 13:03:53
IS,Log a warning if a user is setting DOM properties on a web component,What is the current behavior Using web components with React is cumbersome as properties such as className are being copied as attributes without transforming them to class A lot issuecomment 145951830 has been said about this but it can be very confusing for developers who are trying to use web components using React What is the expected behavior Much like how using class as a property logs a warning I suggest that if a property key exists in DOMProperty properties we raise a similar when warning when DEV is true so the user knows that what is happening is expected behavior not a bug If my proposal is acceptable I have a PR that is ready to be sent out Thoughts,,"brigand,gaearon",2016-10-03 02:40:00,2016-10-27 13:07:40
IS,enter leave timeout on CSSTranstionGroup,Do you want to request a feature or report a bug bug What is the current behavior Everything works only there is a warning in the console If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Using cssTransitionGroup for appear animation not for enter or leave What is the expected behavior No need to provide those timeouts just appear should suffice,,gaearon,2016-09-25 01:04:30,2016-10-27 13:12:31
IS,A way to work around deprecation of directly calling propTypes validators,I came up with a rather crude but I think promising way to autogen component rendering tests I'm throwing a big list of values at my components' propTypes validators kind of like using a fuzzer I use that to construct a set of supposedly valid values for each prop and subsequently combine those into supposedly valid sets of props With direct calling of prop validators being deprecated is there some other way to accomplish this that I'm missing I think this test generator would be really useful but given that I'm dependent on a deprecated feature I'm not clear if it has a future fiddle demo,,"gaearon,gaearon,brigand,gaearon,gaearon,jedwards1211,gaearon,jedwards1211,jedwards1211,gaearon,jedwards1211,gaearon",2016-08-31 19:06:41,2016-10-27 13:13:37
IS,ReactCSSTransitionGroup is transition Timeout props are required but undocumented,When a ReactCSSTransitionGroup is used without timeout props it warns L28 L33 Warning Failed propType transitionLeaveTimeout was not supplied to ReactCSSTransitionGroup this can cause unreliable animations and wo not be supported in a future version of React See for more information Check the render method of Constructor for each missing timeout prop However that URL simply points to the Getting Started section of the Animation page getting started The code listed there does use timeout props but nothing on the page explains what those props do or why they are necessary In fact the word timeout only appears in the names of those props in code examples Could we get some explanation in the docs please,,gaearon,2016-07-20 14:15:35,2016-10-27 13:21:34
PR,Clarify how transition props work,Fixes 7317,,gaearon,2016-10-27 13:21:01,2016-10-27 13:21:34
IS,Having this state in the constructor and this setState everywhere else is violating the Uniform access principle,ES6 style of creating components in React is clearly violating the Uniform access principle It is a general source of confusion and bugs to be able to set state in two different ways You MUST do this state if you are in the constructor You MUST do this setState everywhere else I believe it would be much better to have just 1 way to set state in general and it should be universal If we are already accessing state through this state and setting state in the constructor with this state why not do it everywhere else The behavior of this setState could be easily replicated with ES6 Proxies,,"gaearon,aweary,sebmarkbage,gaearon",2016-07-07 12:03:57,2016-10-27 13:24:54
IS,Re render element in componentDidMount at once Error Cannot read property 'rootID' of null,I do ReactDOM render container element top level in componentDidMount function React show me some error Cannot read property 'rootID' of null If I use setTimeout run ReactDOM render it is work Even after 0ms I feel uncertain could someone help me html,,"aweary,gaearon",2016-05-10 08:46:14,2016-10-27 13:29:57
IS,Can we locate the line number when react makes a warning like this Unknown DOM property class Did you mean className,Can we locate the line number when react makes a warning like this Unknown DOM property class Did you mean className There is no hint about which code made this warning,,"jimfb,mxstbr,jimfb,mxstbr,jimfb,mxstbr,jimfb,mxstbr,gaearon",2016-02-18 02:04:24,2016-10-27 13:32:13
IS,deprecation warnings in production,Do you want to request a feature or report a bug Feature What is the current behavior all warnings are stripped out in the production build If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior ideally we would have the important warnings in production namely the ones that either 1 indicate something broken or 2 will definitely be broken by the next major version upgrade of react React could then provide a function to register a callback that would be called for every warning in prod and the callback would be responsible for doing whatever it wanted e g capturing a stack trace reporting the error to the server Since I have been working on react 12 which I know is not supported I hacked up my own version of this Unfortunately ended up split across a few commits since I did not test well before pushing Implements the callback registration is the main hook the next two are bugfixes This diff got me most of the warnings I wanted from React 12 DEBUG is my hack to keep stuff for the debug build which is really what I'm trying to use in prod The exact details are not too important but should give an idea of the flavor of things I'm looking for will be broken in the next version and almost certainly this is a bad bug Ideally this system would also make use of the new error codes to keep the warning messages from weighing down the prod build of react for my version since I was highly selective about the warnings I kept there is only a potential 1kb to save from stripping the messages anyway so it might not be worth the effort unless we choose to keep significantly more warnings for prod Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React all,,gaearon,2016-07-08 04:25:48,2016-10-27 13:34:27
IS,Why is ReactDOM a separate file on the CDN,When loading React from the CDN we now need to include two separate files Why Given the primary use of React via CDN is for browsers should not we bundle them together When would you ever load react 0 14 2 js via the CDN without loading react dom 0 14 2 js,,"Daniel15,zpao,Daniel15,jimfb,iamdustan,gaearon,zpao,sebmarkbage,gaearon",2015-11-06 18:04:32,2016-10-27 14:54:36
IS,When will test utils be ES6 friendly,In the testing docs I see CJS is still the way to pull in the TestUtils directly When I tried to use ES6 instead like below I get the error Cannot resolve module areact addons test utils,,"gaearon,gaearon",2015-10-24 15:02:48,2016-10-27 14:55:43
IS,ReactDefaultPref test js randomly fails,Hello everybody I'm relatively new to the project and I think I ran into an issue I was running grunt test on a recently cloned copy of the master branch and I have been getting a failed test every once in a while while doing so without touching any part of the code The error is found on it should count no op update as waste and happens on expect summary 1 'Instances' toBe 2 The error message is that it is expecting the instances to be 2 but it randomly returns 0 is and 1 is,,"jimfb,jimfb,jimfb,sophiebits,jimfb,gaearon",2015-10-12 22:55:36,2016-10-27 14:56:30
IS,bugs in react addon update is push and unshift,the handlers for COMMAND PUSH and COMMAND UNSHIFT should return their new values rather than let it fall into the for loop at the end,,gaearon,2015-10-28 23:32:36,2016-10-27 14:57:29
IS,Should stateless functions be declared using named function statements,Arrow function syntax is suggested in the docs but components declared using it do not have a proper name say in react dev tools StatelessComponent is used instead I guess this could be an issue when debugging,,"xixixao,iamdustan,jimfb,iamdustan,sebmarkbage,jimfb,sophiebits,gaearon",2015-12-07 09:20:01,2016-10-27 15:00:00
IS,shallow rendering stateless components vs stateful components different owner,Related to see for my test case and how to reproduce reproduce,,gaearon,2016-03-05 16:11:38,2016-10-27 15:01:28
IS,React add ons make React code be imported in the application bundle,So I just stumbled to a problem these days I was getting that really famous error Invariant Violation addComponentAsRefTo Only a ReactOwner can have refs And it was because I had two copies of React inside my project but I did not know why In my project I decided to bundle React in one file and my application code to another one What was happening is that even I explicitly saying I wanted React as an external to browserify I was still getting it inside of my application bundle so two bundles with React That is because some of your add ons are just something like the following in their entry point module exports require areact lib ReactTransitionGroup' And then ReactTransitionGroup has the statement var React require ' React' So if I am telling to browserify or webpack to treat react as an external with b external areact' or externals areact' areact' I still will get the React code inside of my application bundle if I forget to treat the add on as an external too since the last is importing React from inside and not as a npm package that I declared to be an external in browserify webpack So is there any chance of changing that in the future Like for example exporting the add on code completely to outside the React code so it imports React as a npm package Or that should not be a concern of the React project but of the developers using it Just asking because I saw dozens of questions about this addComponentAsRefTo error and some of the people asking seem to have the error because of what I described I did a demo,,gaearon,2016-02-23 04:22:37,2016-10-27 15:02:40
IS,Cannot read property 'getNativeNode' of null ReactReconciler,Hello everyone I have a problem after updating React from v0 14 8 to the current latest v15 1 0 Actually I cannot even tell what exactly cause this problem On some pages of my SPA everything works just fine but during one specific action in my app this error happens This problem appeared after React and some dependent libraries update screenshot from 2016 06 24 13 40 15,,"gaearon,gaearon,gaearon,sophiebits,gaearon,gaearon",2016-06-24 11:21:52,2016-10-27 15:09:02
IS,rename receiveComponent to receiveElement,zpao just gave a talk at React Rally and mentioned that receiveComponent could be improved if it were renamed to receiveElement I would be happy to file a PR to make this a reality if it is not too huge a task Anything I should consider before a do a big find replace,,"kentcdodds,iamdustan,syranide,gaearon,kentcdodds,gaearon,kentcdodds,gaearon,gaearon",2016-08-26 16:32:06,2016-10-27 15:12:18
IS,is redirected wrongly,The following Warning is not redirected correctly At least from Chrome debugger 20547 Warning Each child in an array or iterator should have a unique key prop Check the render method of List See for more information leads to instead of,,"gaearon,gaearon,gaearon,gaearon",2016-10-25 14:54:15,2016-10-27 18:22:18
PR,Add React Remote Conf 2016,Add video links to some conferences,,"rickbeerendonk,GantMan,rickbeerendonk,lacker",2016-10-25 18:33:03,2016-10-27 18:25:14
PR,Update reference react component md,line 320 For example this code ensures that the color prop is a string,,gaearon,2016-10-27 16:45:27,2016-10-27 18:25:43
PR,Fiber Some early refactoring to be able to reuse the event system,Three small steps,,"sebmarkbage,sophiebits",2016-10-28 01:58:50,2016-10-28 06:18:43
PR,Fiber Full Error Boundaries,Picking up the work I dropped in 7993 Now this passes all existing tests including those that do not work in stack reconciler setState didMount and didUpdate,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,iamdustan,iamdustan,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2016-10-25 18:45:09,2016-10-28 09:29:15
PR,Reduce minified files by removing old error messages,closes 7990,,"rickbeerendonk,rickbeerendonk,gaearon",2016-10-28 15:31:26,2016-10-28 16:12:28
PR,Updated tutorial md,Fixed method name renderStep renderSquare Removed key attribute in li element to present the warning described below the code fragment,,"gaearon,sophiebits",2016-10-22 22:36:29,2016-10-28 17:28:44
PR,Organize and add confs,Organization change Upcoming proximity followed by past chronological This PR adds 3 unlisted confs and organizes it as previously described in PR 8007 which has since been moved because the file moved,,"GantMan,lacker",2016-10-28 13:36:39,2016-10-28 18:21:21
PR,Fiber Error boundaries should handle errors independently,Since error boundaries are atomic in Fiber and errors in did lifecycles and willUnmount only surface after committing we can end up in a situation where two independent boundaries should receive two independent errors from several components with broken lifecycle hooks This PR adds support for this and removes some unnecessary recursion It also fixes I'm not sure it is a fix though a problem rethrowing errors makes some roots forever skip updates You can search for FIXME It fails because second and third requests to render are completely ignored since scheduler thinks they are already scheduled I do not understand the scheduler well enough to propose a better fix,,"gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,acdlite,gaearon",2016-10-28 20:27:31,2016-10-28 21:58:54
PR,Fix broken React Facebook page link in support doc,In the community support doc I noticed that the React Facebook page link is broken since it is missing ' com',,gaearon,2016-10-28 23:11:37,2016-10-28 23:31:01
IS,Hot Module Replacement has problem working with dropbox,I'm submitting a bug report React version 15 0 1 Webpack version 1 13 3 Current behaviour Hot Module Replacement does not work when my project is in my dropbox named dropbox person But after I change the name to dropbox without It does work I spend 2 days to figure out this problem I just want to share this with others So they do not need to waste time on this,,gaearon,2016-10-29 07:30:11,2016-10-29 10:23:18
PR,Add support for node 7,It is fix for 8134 As far as i see all scripts in package json work as expected,,"Shastel,gaearon",2016-10-28 21:41:25,2016-10-29 10:24:12
IS,React does not support node 7 x for development,What is the current behavior AssertionError Current node version is not supported for development expected 7 0 0 to satisfy 4 x 5 x 6 x Steps to reproduce 1 Install node 7 x 2 Clone React repo 3 run npm i What is the expected behavior React support node v7 for development,,"Shastel,gaearon",2016-10-28 21:15:51,2016-10-29 10:24:36
PR,Update codebase overview md,Fix the broken link in 'Event System' section,,,2016-10-29 07:59:52,2016-10-29 12:01:41
PR,Fiber Fix TestUtils findAllInRenderedTree,This fixes a couple of tests but maybe more in product code,,"gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage",2016-10-29 18:00:11,2016-10-29 21:02:13
PR,Fiber Fix tests for Fiber in ReactElement test,Mainly redefining how test utils should explore Fiber is internals,,"rricard,gaearon,gaearon,gaearon,sebmarkbage,gaearon,rricard,gaearon,gaearon,rricard,gaearon,rricard,rricard,rricard,gaearon,rricard,gaearon,rricard,gaearon,rricard",2016-10-29 22:40:13,2016-10-29 23:42:59
PR,Get a few more Fiber tests passing,This introduces a small indirection so that isomorphic and shared DOM modules do not depend on getName method being present on the owner which can now be a fiber,,"gaearon,sebmarkbage,sebmarkbage,gaearon",2016-10-29 19:23:18,2016-10-29 23:43:34
PR,Rewrite some tests relying on internal APIs,This deletes our use of reactComponentExpect which has never been a public API Pretty sure it was added at some point to save the time but here we are I have not checked the use of this internally yet but if we do use it we should either change those callsites or at least put it in the contrib folder and mark as deprecated This bumps from 960 to 967 tests on Fiber but more importantly it surfaces real errors instead of artificial ones,,"gaearon,sebmarkbage,gaearon,gaearon",2016-10-29 18:56:08,2016-10-29 23:44:33
PR,Optional queue transitions,Right now ReactCSSTransitionGroup forces ending one transition to start the next one This is not the behaviour everyone wants so I added a transitionQueue property which is true by default and if set to false will disable transitions queues so will force ending the current transition and inmediatelly start the next one I added this because I wanted transitionLeave to start as soon an element is removed instead of waiting for transitionEnter to finish,,gaearon,2016-10-30 21:07:07,2016-10-30 21:12:20
PR,Fiber Miscellaneous fixes to get more tests passing,1 Reset current owner in error handling as previously discussed 2 Relax a test that insists on this refs being deleted rather than cleared out 3 Relax a test that insists on refs being cleared before render I'm actually not sure if 3 is correct so I want to talk about this new behavior If we do not clear refs before rendering people can potentially rely on stale refs in render In fact I have seen this pattern quite a bit in our layer code even with the old reconciler Can should we completely clear refs before calling render,,"gaearon,sebmarkbage",2016-10-29 23:48:42,2016-10-30 22:15:35
PR,Add test case to insure object with tag number does not warn,But I'm not sure that checking just for the type of tag key is enough to validate type L189,,"ivanzotov,sebmarkbage,ivanzotov",2016-10-29 11:04:12,2016-10-31 07:21:48
IS,Uncaught Error,Uncaught Error Attempted to update component Connect Connect Connect Connect getContext withHandlers MemberPrepaidView that has already been unmounted or failed to mount Any idea why am I getting this,,gaearon,2016-10-29 07:05:54,2016-10-31 08:01:35
PR,Fix docs on ReactElement,We should test typeof field against REACT ELEMENT TYPE to check if something is a React Element,,"jddxf,gaearon,jddxf,gaearon,jddxf",2016-10-31 07:40:15,2016-10-31 11:40:55
PR,Merge pull request 1 from facebook master,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Update from Original 08 15 2016,,"gaearon,gaearon,kevinzwhuang,gaearon,kevinzwhuang",2016-10-31 04:29:59,2016-10-31 11:41:01
PR,add missing verb,why is an should be why it is an,,gaearon,2016-10-29 00:12:09,2016-10-31 11:41:43
PR,Remove duplicated word in doc,Gets rid of an obsolete word in the documentation for State and Lifecycle Consider the ticking clock example from the one of the previous sections Consider the ticking clock example from one of the previous sections,,gaearon,2016-10-30 17:19:04,2016-10-31 11:42:02
PR,update unknown warning page add a reason for the warning,Update the unknown warning prop page according to 7848,,gaearon,2016-10-28 16:04:17,2016-10-31 13:01:06
PR,Remove duplications in React Element,,,"ivanzotov,aweary,ivanzotov",2016-10-31 13:16:28,2016-10-31 15:31:16
PR,Fiber Remove recursion from error handling,I think this removes the only recursive call I introduced in 8095 However I do not think it reschedules the interrupted work after the error is handled I would appreciate a tip on how to best fix it,,"gaearon,gaearon,acdlite,gaearon",2016-10-30 13:37:51,2016-10-31 17:41:45
IS,how to debug Cannot read property ' reactInternal of null,is there any good debugging toool for finding the exact line numbers or Component names where we got the error like Uncaught TypeError Cannot read property ' reactInternalInstance mdm22afavg17ndrawaq8e61or' of null is only adding console logs for every file is the solution,,"gaearon,aweary,gaearon,gaearon",2016-10-25 14:02:42,2016-10-31 18:20:01
PR,Kill ReactLink LinkedStateMixin valueLink and checkedLink,This should be safe because we have been warning for this The LinkedStateMixin is technically exposed on React addons without a warning but presumably you would not be using it without a valueLink or checkedLink I do this primarily to clear up what the custom onChange listeners are doing Renamed the final prop type helper to ReactControlledValuePropTypes I will clean up the three remaining internal callers,,"sebmarkbage,chicoxyzzy",2016-10-31 20:44:15,2016-10-31 23:45:01
PR,Update forms md,The component Form in Uncontrolled Radio Button example does not need state because it does not used in render method,,"ivanzotov,ivanzotov,gaearon,lacker,gaearon,lacker,gaearon",2016-10-28 22:23:55,2016-11-01 00:35:20
PR,Track passing failing tests in fiber,Run scripts fiber record tests to re record then check git diff to see what you changed,,"sophiebits,sebmarkbage,sophiebits,keyanzhang,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits,aweary",2016-11-01 04:38:17,2016-11-01 06:26:38
PR,Fiber Add some scheduling tests,This adds the ability to have multiple roots in ReactNoop Then adds a few tests for scheduler I intend to add more later but this is a start Context I had a few bugs with scheduling across roots but we currently have no way to test that,,"gaearon,gaearon,sebmarkbage",2016-11-01 14:28:26,2016-11-01 14:35:01
PR,Fiber Fix infinite loop in scheduler and add more tests,Added a test that schedules roots in the reverse order compared to the previous time they were scheduled It hangs forever because we do not clear next pointer when unscheduling a root Therefore when it is scheduled again it brings all its previous chain with it potentially creating a cycle Fixed by clearing out the next pointer when unscheduling,,"gaearon,sebmarkbage,gaearon,sebmarkbage",2016-11-01 15:25:25,2016-11-01 17:44:57
PR,Fiber Assign ReactTypeOfSideEffect to ReactFiber Fiber effectTag correctly,The type of ReactFiber Fiber effectTag is TypeOfSideEffect Thus we should assign ReactTypeOfSideEffect NoEffect value instead of ReactPriorityLevel NoWork even if they are same values,,"gaearon,sebmarkbage,sebmarkbage,gaearon",2016-11-01 17:28:29,2016-11-01 23:24:55
PR,Handle the controlled radio button case completely in the asap callback,Instead of scheduling individual callbacks to asap we schedule one and then do all the work in that one I'm doing this for architectural refactoring reasons Nevertheless I'm adding a contrived unit test that this fixes,,"sebmarkbage,sophiebits,sebmarkbage",2016-11-01 07:06:08,2016-11-02 01:54:11
PR,Remove pendingUpdate optimization in ReactDOMSelect,This removes an optimization that avoids call update on ReactDOMSelect twice in an onChange event commitcomment 19643403 None of the other controlled components do this The only reason to do it here is because of the loop I would like to remove this because I would like to remove all the side effects that happen in onChange other than user defined behavior I would also like to get rid of state that track sequences It is easier if everything is just diffing Alternatively I can store the previous value that we processed and only reprocess if the value has changed However that would requires the array for multiple values to be immutable and I do not think we enforce that right now In Fiber I believe that we will be able to batch both these updates into a single commit,,"sebmarkbage,sebmarkbage,syranide,sebmarkbage",2016-11-01 21:11:28,2016-11-02 01:54:20
IS,Invalid Version 3001 0001 0000 dev harmony fb when installing React 0 14 7,I have got the following error installing React 0 14 7 15861 error Windows NT 10 0 14393 15862 error argv C Program Files x86 nodejs node exe C Program Files x86 nodejs node modules npm bin npm cli js install 15863 error node v5 9 0 15864 error npm v3 7 3 15865 error Invalid Version 3001 0001 0000 dev harmony fb 15866 error If you need help you may report this error at 15866 error 15867 verbose exit 1 true Step to Reproduce 1 Create new project using npm init 1 Add dependencies in the package json react 0 14 7 1 npm install Expected behavior Able to install React 0 14 7 Which versions of React and which browser OS React 0 14 7 or 0 14 8 with Windows 10 OS Notes we detected this issue starting monday 31th October with the same project dependencies this issue was not present before issue cannot be reproduced in React 15 0 0 and above,,,2016-11-02 12:10:50,2016-11-02 12:17:09
IS,Warn when an invalid CSS property value is stripped out by React,Do you want to request a feature or report a bug Feature What is the current behavior React strips invalid CSS properties but does not throw any warning What is the expected behavior React should strip invalid CSS properties for example color rgb 255 255 255 1 and throw a warning to let the developer know that something is wrong with the passed values Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I guess all the versions,,syranide,2016-11-02 14:48:21,2016-11-02 17:17:58
PR,Fiber Add more tests for scheduling,I add more tests for scheduling to better understand what is going on and document some existing suboptimal behavior I also add reasonable assertions to tests and isolate them better so that global state in scheduler does not leak between tests,,"gaearon,acdlite,acdlite,acdlite,gaearon,gaearon,acdlite,acdlite,acdlite,gaearon,gaearon,gaearon,acdlite,acdlite,gaearon,acdlite,gaearon,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,acdlite",2016-11-02 17:03:09,2016-11-02 17:49:22
PR,Fiber Use synchronous scheduling by default,Work in progress Ready for review x Implement synchronous work x Add host config to opt into synchronous scheduling x Batch nested updates x Turn on sync scheduling in ReactDOMFiber x Figure out which tests are failing as a result and why x Expose unstable batchedUpdates API,,"acdlite,sebmarkbage,acdlite,acdlite,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,gaearon,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,gaearon,acdlite,gaearon,sebmarkbage,gaearon",2016-10-27 19:09:06,2016-11-02 19:46:38
PR,Fiber Add tests for scheduling inside callbacks,Like 8183 this adds more tests for scheduling In this particular case I'm testing that updates scheduled inside callbacks either get handled right away when possible or schedule more callbacks,,gaearon,2016-11-02 19:31:05,2016-11-02 20:11:27
PR,Fiber Schedule animation regardless of deferred work,This fixes the behavior and changes my remaining tests to test for the right thing Even if there is a deferred callback scheduled we should still schedule animation callback I would be happy to refactor this to functions like ensureAnimatedCallbackScheduled or something if you care For now just wrote it as inline ifs,,"gaearon,acdlite,acdlite,sebmarkbage,sebmarkbage,gaearon",2016-11-02 20:41:19,2016-11-02 20:46:21
PR,ES import require,Not all of our downstream build chains do not support ES imports yet,,"sebmarkbage,gaearon,acdlite",2016-11-02 19:09:46,2016-11-02 20:48:29
IS,PureComponent does not respond to context changes,Do you want to request a feature or report a bug This is a bug What is the current behavior If you extend from PureComponent and the context of the component changes but not the props a re render will not be triggered If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template You can see the bug reproduced here What is the expected behavior You expect that if you click on the increment context button you would see it updated in the view but that doens't happen If you change props you will see context instantly update to it is actual value in the view Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 2 Chrome 54 Fixing this should be reasonably simple I think Just need to add shallow comparing for context I have my own stand in for PureComponent in the meantime,,"gaearon,gaearon",2016-11-02 17:47:00,2016-11-02 21:10:53
PR,Improve performance converting props children into string,Also we can safely use props children undefined here instead of typeof,,"ivanzotov,gaearon",2016-11-03 09:07:09,2016-11-03 14:15:49
PR,Fiber UpdateQueue fixes,Just some little fixes I noticed Incorrect comparison when computing hasUpdate isReplace should be a property of the node not the queue I will add unit tests later going to bed now,,"acdlite,gaearon",2016-11-03 06:01:13,2016-11-03 14:43:17
IS,Search is broken on the docs page,Do you want to request a feature or report a bug bug What is the current behavior the search input for the docs page does nothing Seems to not be firing a click handler for the search icon magnifying glass If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template just try to use the search bar What is the expected behavior It should search the docs Does react index its docs through an internal search engine service for search Just curious Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React No versions of react just the docs page Chrome v 53 0 2785 143 Likely worked before never actually tried to use search until now,,"gaearon,gaearon",2016-11-02 06:32:45,2016-11-03 14:45:38
PR,WIP Set hostNode in mountComponent receiveComponent,Adds support for findDOMNode with ReactTestRenderer initially mentioned here issuecomment 255263096,,"aweary,aweary,gaearon,gaearon,aweary,sophiebits,gaearon,sophiebits,aweary,sophiebits,aweary,gaearon,aweary,gaearon,aweary,gaearon,gaearon,gaearon,gaearon,aweary,gaearon",2016-10-31 15:33:16,2016-11-03 19:31:18
PR,Add Agent Conference to conferences docs,It will be fun we will go skiing and talk about React React Native Jest Elm and fun things,,"aweary,aweary,gaearon,aweary,aweary,gaearon",2016-11-03 18:12:34,2016-11-03 20:18:48
IS,React Component sending wrong content type on multipart form,Do you want to request a feature or report a bug Bug What is the current behavior Form multipart sending Content Type application x www form urlencoded If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Submit the form to any existing action url What is the expected behavior Content Type sent Content Type multipart form data Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest,,aweary,2016-11-03 21:28:10,2016-11-03 21:32:40
PR,Move Safari onClick hack into ReactDOMComponent,This is already where we trap non bubbling events We also already branch on the tag type so we know if it is interactive or not This will let us get rid of the didPutListener and willDeleteListener abstractions I use a simple onclick emptyFunction to avoid the need for a bookkeeping map Is it critical to unsubscribe from this when the listener is removed,,"sebmarkbage,sophiebits,sebmarkbage",2016-11-03 02:04:01,2016-11-03 22:26:23
PR,Fiber Fix reconciling after null,Before this code was bailing out after encoutering a null child because it thought it was out of old children Seen when reconciling null span Image with null span Image in XUISelector,,"sophiebits,sebmarkbage",2016-11-04 06:51:43,2016-11-04 06:56:29
PR,Fiber Task priority for error boundaries and batched updates,Introduces a new priority level Task The name is provisional We will come up with something better later Task priority is similar to Synchronous priority Both are flushed in the current tick The difference is work with the Task priority is performed within the current tick but at the end of the batch of work after all work has been committed work with the Synchronous priority is performed immediately E g a synchronous setState will perform all its work before the setState call exits In these two types of work priority were both considered synchronous Splitting them into separate concepts will make it easier to schedule and batch things correctly Currently used for batchedUpdates and nested sync updates Task should also be used for updates inside componentDidUpdate Mount error boundary work and events I will leave these for a future PR There is an error boundary regression that I have not looked at yet I will investigate it in the morning Pushing this now because I'm about to go to bed and I do not want to block,,"acdlite,acdlite,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,gaearon",2016-11-03 05:49:04,2016-11-04 19:40:50
PR,Fiber setState inside componentDidMount Update should be sync and batched,I believe I did this right though it is possible I misunderstood what the correct behavior is supposed to be,,"acdlite,acdlite,acdlite,acdlite,gaearon,acdlite",2016-10-31 23:34:51,2016-11-04 21:01:37
PR,Fiber WIP Errors should not interfere with scheduling,Builds on 8127 This is probably incomplete and there may be ways to simplify It removes the recursion from error handling and makes scheduling resilient to errors,,gaearon,2016-10-31 21:31:46,2016-11-04 22:46:41
PR,Fiber UpdateQueue test,Test coverage for the fix that was added in The hasUpdate fix is unobservable with the current API,,"acdlite,gaearon,acdlite",2016-11-04 22:07:38,2016-11-04 23:15:37
PR,Fiber Make error handling more resilient,Supersedes 8166 Create a separate test file for incremental error handling Ensure that errors in one root do not prevent work on another root Fix an issue where boundary state change would get ignored in incremental mode,,"gaearon,gaearon,acdlite,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,gaearon,gaearon,acdlite,acdlite,gaearon,gaearon,gaearon,acdlite,gaearon",2016-11-04 23:37:52,2016-11-05 00:41:04
IS,Number Input with defaultValue does not accept decimal input,Do you want to request a feature or report a bug Report a bug What is the current behavior When using a number input that has a defaultValue you cannot enter a decimal value When attempting to type a decimal the cursor is moved to the beginning of the input This behavior is not observed when there is no defaultValue given If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The input should allow you to type a decimal Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is happening with React 15 3 2 It does not happen in 0 14 x,,"nhunzaker,aweary,nhunzaker,aweary",2016-11-05 04:43:43,2016-11-05 15:23:29
PR,Fix typo in installation md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-11-05 12:29:44,2016-11-05 16:07:28
PR,Removed broken links,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-11-03 03:43:24,2016-11-05 16:22:45
IS,support slot attribute ShadowDOM v1 on DOM elements,Do you want to request a feature or report a bug feature I guess What is the current behavior React does not support slot attribute which comes with shadowDom v1 so it will throw error and because of that web component is not working code rendered html with error img width 919 alt screen shot 2016 09 21 at 2 05 47 pm src If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Support new DOM attribute standard Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 2 Chrome 53 OSX El Capitan,,jimfb,2016-09-21 15:20:34,2016-11-05 16:34:54
PR,support slot attribute on DOM elements for V1 shadowDom named slots p,Closes 7784,,"aweary,aweary",2016-10-23 13:24:09,2016-11-05 16:34:54
PR,Organize conferences page add 2,This page needed restructuring to fit conferences of several years This structure keeps the integrity of the the youtube links to the year while allowing future conferences to be announced Along with restructuring I added the two React Native conferences for 2017,,"GantMan,rickbeerendonk,aweary",2016-10-18 15:45:02,2016-11-05 16:39:05
PR,Add CSS unitless property attribute to existing list,,,aweary,2016-10-17 21:09:52,2016-11-05 16:41:32
IS,Textarea placeholder is not shown in IE 11 being rendered using React,Nikolai Mavrenkov already created a good description of the problem on Stack Overflow I just can confirm it breaks in IE11 but works in IE10 and other browsers with React v15 0 2,,"syranide,jimfb,jimfb,syranide,syranide,aweary,aweary,gaearon,gaearon,gaearon",2016-05-09 10:03:41,2016-11-05 16:47:55
PR,Correctly render placeholder for textarea in IE11,Resolves In IE11 setting the node placeholder will also set node textContent so when we ended up setting textContent to via DOMLazyTree queueText in in createInitialChildren it caused the placeholder to never show up resolves this by checking if the textarea has a placeholder and text is empty If it is it skips queueText We were also unconditionally setting node value node textContent which before just meant we would set it to an empty string but now we are setting node value equal to the placeholder in IE11 resolves this by only setting node value if textContent is our expected initialValue Test plan Tested with this component which contains uncontrolled controlled textarea s with and without defaultValue placeholder Tested in the following browsers IE10 IE11 Firefox 49 Chrome 53 Safari 9 Safari 10 iOS 9 Safari iOS 8 Safari cc,,"aweary,sophiebits,sophiebits,aweary,sophiebits,aweary,sophiebits,aweary,aweary,sophiebits,aweary,gaearon",2016-10-19 21:32:25,2016-11-05 16:47:55
PR,Fiber Complete ES6 Class related errors support,Print a warning in fiber for lacking render method Throw with non object in the initial state property Classic instance property checks Typos in lifecycle methods,,"rricard,gaearon,rricard,rricard,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,rricard,gaearon,gaearon,rricard,sebmarkbage,sebmarkbage,sebmarkbage,rricard,rricard,rricard,sebmarkbage,rricard,rricard,rricard,gaearon,rricard,gaearon,rricard,sebmarkbage,rricard",2016-10-30 16:10:01,2016-11-05 18:19:48
PR,Move setState callback to right after didUpdate,It is much easier to do it this way in Fiber and there should not be much observable difference,,"sophiebits,acdlite,sophiebits,acdlite,gaearon",2016-11-04 19:59:11,2016-11-05 21:37:43
PR,Call setState callbacks enqueued in cWM,Depends on 8204 Also fixes return value of ReactNativeMount and moves that callback to be after cDM instead of after all updates,,"sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,gaearon",2016-11-04 21:57:02,2016-11-05 21:38:24
PR,Fix method markdown highlight,This PR just adds documentation fix x 1 Fork the repo and create your branch from master x 2 If you have added code that should be tested add tests just add Docs x 3 If you have changed APIs update the documentation just add Docs x 4 Ensure the test suite passes npm test just add Docs x 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines just add Docs x 6 If you have not already complete the CLA,,"alexbaumgertner,aweary",2016-11-06 18:50:23,2016-11-07 17:57:23
IS,ReferenceError this is not defined after calling ReactDOM render,This is kinda a bug And I can not use React this way for now frowning man Using NW js 0 18 3 for my end On backend it uses Node js So I have installed react and react dom from npm Running application with harmony tag to include all features of ECMAScript 6 class definition for example Dependencies used NW js 0 18 3 react 15 3 2 react dom 15 3 2 At this time I do not have access to developer console of NW js because of minimal build flavor did not download SDK I will have a deeper look at this issue on other browsers without Node js backend,,,2016-11-06 13:45:22,2016-11-07 17:59:30
PR,Track if SelectEventPlugin is attached on a per document basis,This gets rid of the global flag on if something has listened to onSelect and instead reads the isListening map if all the events are covered This is required if we want to attach events locally at roots Could be slower perf wise to handle events An alternative solution would be to attach a special flag on the listener map for the document so we do not have to check the full dependency list However my favorite solution would be to just eagerly attach all event listeners except maybe wheel Then we do not have to do any of this stuff on a per element basis,,"sebmarkbage,sebmarkbage",2016-11-03 03:41:33,2016-11-07 19:30:34
PR,Fiber Attempt to fix ReactDOMTextComponent test in Fiber,I made some tests pass but the reconciliation is still incomplete on this in Fiber Those changes just ignore reconciliation Comments while asserting this fixes 2 tests already but now shows that Fiber lacks some reconciliation features concerning DOM Text Now that I asserted which exact work needs to be done on Fiber I will go in there and fix it I may need some additional help but I hope this approach will get me where I want more easily,,"rricard,gaearon,rricard,rricard,sebmarkbage,sebmarkbage,rricard,gaearon,rricard,rricard,rricard,rricard,rricard,rricard,sebmarkbage,rricard,rricard",2016-10-29 14:26:58,2016-11-07 19:39:52
PR,Fix errors in ReactNativeMount,,,sophiebits,2016-11-07 19:36:48,2016-11-07 19:42:39
PR,Hide detailed failure output in scripts fiber record tests,image,,"sophiebits,cpojer,sophiebits",2016-11-05 21:54:59,2016-11-07 19:43:03
PR,Run fiber tests just once on Travis,Consolidate facts tracking with the other script Stack on 8214,,sophiebits,2016-11-07 18:11:07,2016-11-07 19:43:29
PR,Use explicit pass for restoring controlled state instead of asap,This gets rid of the first class ReactUpdates asap scheduling Instead of scheduling a first class function to invoke later I introduce an explicit phase for restoring controlled state after dispatching events We assume that the deepest event target is the thing that needs its state restored,,"sebmarkbage,sophiebits,sebmarkbage,sophiebits",2016-11-02 01:11:56,2016-11-07 21:31:33
PR,Fix lint in ReactUpdates,I was a bit too trigger happy,,sebmarkbage,2016-11-07 21:35:06,2016-11-07 21:35:17
PR,Ensure that we are listening to all onChange dependencies for controlled inputs,When there is no onChange event handler we should still listen to it to ensure controlled values get reset There is warning associated with this but the prod behavior should still be respected,,sebmarkbage,2016-11-08 00:42:11,2016-11-08 00:47:10
PR,Rerun tests,,,sebmarkbage,2016-11-08 00:49:35,2016-11-08 00:49:43
PR,Revert normalized text node fix,This reverts the implementation in 33325ad0097e0689fd415703a1a7c1665629be7e I did not mean to merge the implementation since it is incorrect and incomplete I meant to just merge the unit test,,"sebmarkbage,sebmarkbage",2016-11-08 02:27:37,2016-11-08 02:27:58
PR,Check for event listener in props on demand instead of maintaining listener bank,Builds on 8190 8189 and 8176 This just reads events from the props instead of storing them in a listener back I had to rewrite a bunch of tests to cover this model I removed the tests that just test the adding and removing over listeners since there is no equivalent behavior anymore,,sebmarkbage,2016-11-03 04:03:35,2016-11-08 04:36:58
PR,Fiber WIP context,I am currently trying to get familiar with the Fiber codebase and IMO the best way to get up to speed is to work with the code So I started working on adding context support and got some tests passing for it however I am not sure if this is a good approach and I would appreciate some feedback on the work All flows are not implemented yet I am not sure if I should utilize the Fiber more right now I have childContext there which seems to break the pattern with memoized and pending e g maybe childContext could be renamed to memoizedChildContext but I am not sure what pending would be Feedback would be helpful,,"edvinerikson,sebmarkbage,edvinerikson,sebmarkbage,edvinerikson",2016-11-06 13:16:05,2016-11-08 08:31:36
PR,Add React Amsterdam 2017,We have recently announced the dates for our next React Amsterdam edition looking forward on adding it to the list,,"operatino,aweary",2016-11-08 11:33:50,2016-11-08 15:20:22
IS,Fiber Should Fiber have a root field,Problem When a component calls setState we must update the pendingWorkPriority on its fiber and on all its ancestor fibers up to the root When we get to the root we ensure that the root is scheduled If setState is called multiple times consecutively we walk the path each time And if a callback is passed to setState that requires an additional walk Because the priority of a child is always greater than or equal to the priority of its parent it would be nice to optimize this by stopping whenever the condition in step 1 fails The problem is step 2 We can not assume that the root of a tree is scheduled just because it has pending work roots are unscheduled if an uncaught error is thrown in that tree So we have to ensure the root is scheduled for every update One idea would be to use a field on FiberRoot e g hasUncaughtError rather than unschedule it But that field would still need to be cleared on every update which requires access to the root So that does not solve the problem Possible solution We could solve it by adding a root field to Fiber so that we can always update it quickly The question is whether the extra memory usage is worth the performance gain,,"acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite",2016-11-07 19:18:38,2016-11-08 18:56:18
PR,Docs add a bunch of redirects,I went through the first few pages of 404s and added redirects for them I thought about doing something automatic for the foreign language redirects but it seems like in the medium term we just want a real fix there,,"lacker,gaearon",2016-10-28 23:00:28,2016-11-08 19:32:02
PR,Revert Check for event listener in props instead of bank 8192,This reverts commit a878c3056d2df0cf4d7f3b5e2db6031d598ef23f The previous PRs that this builds on did not successfully land fully I found a bug Since I want to measure this in isolation I will revert this for now until the existing code is fixed,,sebmarkbage,2016-11-08 19:11:03,2016-11-08 19:32:54
PR,Typo,,,aweary,2016-11-08 17:29:33,2016-11-08 19:44:52
PR,Explain what is diefferent from a normal select,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Not everyone has every HTML spec in their head ready to diff against the code shown I think this is a useful clarification,,gaearon,2016-10-24 06:34:25,2016-11-08 20:15:01
PR,Cleanup ReactErrorUtils,Hi guys This one is for 7902 As I see the fourth argument was already deleted here but the annotation was left So I just removed the annotation of that argument Please let me know if this makes sense Thanks,,"yuyokk,gaearon",2016-10-29 13:45:29,2016-11-08 20:16:20
PR,Fix error codes,I noticed that the error code in the 15 dev branch is not in sync with a freshly generated one 7963 or in master Specifically some invariants in src isomorphic hooks are missing This is probably caused by this change diff b9e12334e9eafd8341a6107dd98510c9R237 while we were splitting the packages In this PR I copied the codes json file from the 15 dev branch and fixed the gulp script and regenerated error codes For now we only regenerate error codes when we cut a release and the master one does not get updated It might be better if we sync the codes json file back to master after each release otherwise it would be hard to modify an existing error message like 7963 Edited please see a better process at issuecomment 255662315 Reviewers and cc Test Plan run npm run build with the latest codes json and there should be no warnings,,"keyanzhang,sebmarkbage,keyanzhang,zpao,keyanzhang,gaearon,keyanzhang,keyanzhang,sebmarkbage,keyanzhang,gaearon,gaearon,iamdustan,keyanzhang,zpao,keyanzhang,keyanzhang,gaearon,keyanzhang",2016-10-18 02:28:57,2016-11-08 20:20:46
PR,Fix typos in Shallow Rendering Documentation,,,gaearon,2016-11-07 22:00:43,2016-11-08 20:29:27
PR,Remove unnecessary findDOMNode calls,,,gaearon,2016-11-03 21:56:09,2016-11-08 21:15:01
PR,Fiber Updates from inside componentDidMount Update should have Task priority,This is only observable in incremental mode gaearon I xit ed some of your scheduling tests that use componentDidMount I was going to rewrite them but I do not think they test what their descriptions say they test Let me know what you think and we will either fix the tests or remove them Resolved,,"acdlite,sebmarkbage,acdlite",2016-11-04 21:01:24,2016-11-08 21:28:29
PR,Split Forms into two docs Forms and Uncontrolled Components,I tried to get things in the order of first explain why you should use what then show you how to do the basic behavior then touch on key gotcha type things The Forms doc is in the basics and just covers controlled the Uncontrolled Components is in advanced There very well may be key topics that I am omitting so feedback is welcome there,,"lacker,lacker,gaearon",2016-11-04 00:29:54,2016-11-08 21:39:06
PR,Fixed batching reentrant controlled events,If a controlled target fires within another controlled event we should not restore it until we have fully completed the event Otherwise if someone reads from it afterwards they will get the restored value Not super happy with this particular solution,,"sebmarkbage,sebmarkbage",2016-11-08 23:21:42,2016-11-09 01:42:53
PR,Fiber Warn when shoulcComponentUpdate returns undefined,,,"koba04,gaearon,koba04",2016-11-09 11:03:36,2016-11-09 16:30:41
IS,Component Model,React is one of JavaScript libraries that use component based software engineering approach In the CBSE there are some component models such as EJB model COM model NET model etc I want to know which component model did React use Or React is using different kind of component model I'm doing some research about React behaviour based on its component based Software Engineering So i want to ask for help if there are some documentations about React Component its model and anything that can help my research Thank you before if you are willing to help please send it to my email randichil gmail com,,gaearon,2016-11-09 16:10:07,2016-11-09 16:33:39
PR,Remove string ref from function component example,Refs can not be attached to stateless functional components,,fson,2016-11-09 12:32:32,2016-11-09 16:38:36
PR,8021 Fix gulp tasks eslint and flow error on Windows,,,"jddxf,gaearon,jddxf",2016-11-09 06:47:40,2016-11-09 16:51:02
PR,docs Clarify on controlled forms state,Fixes issues 8035 issuecomment 255522350 issuecomment 255522350,,gaearon,2016-11-06 09:07:33,2016-11-09 18:04:02
PR,Docs handle async state in Uncontrolled Checkbox,The Uncontrolled Checkbox example treats this state as synchronous in its handleChange method but earlier in the tutorial state updates may be asynchronous we are told to assume this setState may be async and we should not reference this state directly while updating it This proposed change updates the example to pass a callback rather than an object to this setState in handleChange and copy over the checkbox value using the prevState argument in the callback Very minor change I'm just reading through the React docs for my first time and have been very impressed with how airtight they are so far This is the only inconsistency I have noticed thought I might as well toss up a patch,,"aweary,aweary,gaearon,lacker",2016-11-04 05:11:31,2016-11-09 18:05:29
PR,fix broken docs links,Fiber changed the structure of renderers dom folder and broke some docs links As the structure may still change I suppose it is better to rely on a commit hash for now,,"ivanzotov,ivanzotov,gaearon,gaearon,gaearon",2016-10-31 13:16:52,2016-11-09 18:06:35
PR,Fiber Normalize className passed to dom from fiber,Nobody wants to see class null Apologies for this being so small but I wanted to confirm that this is the approach that you guys wanted to take wrt to helpers I was going to start working on reconciling styles but that is a hairy beast and I do not want to make a mess of things without verifying that component level reconciliation is intended to be inlined into this file Is the DOMRenderer supposed to get huge as more features are built or should each chunk of logic live in another module Thanks for your time,,"gaearon,gaearon",2016-11-09 16:52:06,2016-11-09 18:22:35
PR,Update refs and the dom md,Since a lot of projects use airbnb eslint config where this rule is enabled and its a good rule some people might get confused when they are trying this out in their project,,"arnif,lacker",2016-11-09 22:13:26,2016-11-09 22:45:21
PR,Update optimizing performance md,Introduce a handleClick method in the Examples section to show the best practice of binding the method to this in the constructor instead of introducing a new callback every time the component renders It does detract slightly from the point but the example should probably encourage the best practice Also rename the state parameter to prevState to match examples further down the document They are consistent now This is my first pull request so I filled out a CLA It should be on file for you now,,"aweary,lacker",2016-11-02 22:59:04,2016-11-09 23:14:19
PR,Update state and lifecycle md,The document mentions nowhere what state does actually in an explicit manner added these lines to reflect it,,"aweary,lacker",2016-11-07 02:02:14,2016-11-10 02:00:15
IS,Awkward output on shallow rendering snapshots of components from node modules,Do you want to request a feature or report a bug Bug What is the current behavior Experiencing awkward output from shallow rendering snapshots for components imported via node modules What is the expected behavior Extra closing tag should contain only component name,,gaearon,2016-11-10 08:33:21,2016-11-10 14:01:18
IS,Using a WebComponent customElement with React,Do you want to request a feature or report a bug Bug What is the current behavior Using the OrionNotification component causes the following error ReactDOMComponent js 512 Uncaught TypeError Failed to construct 'HTMLElement' Please use the 'new' operator this DOM object constructor cannot be called as a function Pasting the customElement definition into the console and calling document createElement 'orion notification' creates an element After loading react it seems this error occurs If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I should be able to instantiate the web component Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Current react and current chrome,,"gaearon,gaearon,gaearon",2016-11-09 20:19:04,2016-11-10 14:09:27
PR,Replaced old refs with new callback refs,This change fixes 8209,,gaearon,2016-11-10 09:32:48,2016-11-10 14:13:56
PR,Correct a method param in Implementation Notes,This is a tiny fix on Implementation Notes According to React Component in the reference componentwillupdate componentWillUpdate nextProps nextState is the correct signature Because the guide has not referred to state at the point componentWillUpdate nextProps would be correct here,,gaearon,2016-11-09 23:38:27,2016-11-10 14:19:27
PR,Revert temporary compatibility fixes for Devtool Hook,See 7381 This reverts commit and let is merge it when RN www gets updated cc,,"keyanzhang,keyanzhang,gaearon",2016-08-01 18:47:34,2016-11-10 15:06:17
PR,Refactor precacheChildNodes slightly,This fixes a bizarre IE9 script engine issue discussed in issuecomment 254831838,,"aweary,aweary,sophiebits,aweary,gaearon,gaearon,gaearon",2016-10-19 14:42:40,2016-11-10 16:02:48
IS,Upgrading to React v15 2 0 causes my development build to crash IE9,My application crashes IE9 when I upgrade to React v15 2 0 It works fine with v15 1 0 and all earlier versions My diff looks like this Below is a GIF of the crash I recorded this using BrowserStack Win7 IE9 I start the recording with Google loaded and dev tools open I then navigated to my apps URL As you can see IE9 just crashes hard with nothing logged to console All other browsers load my app just fine this only seems to crash IE9 crash Did you guys drop support for IE9 in 15 2 0 If not any ideas what might be causing this,,"aweary,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-09-24 20:09:36,2016-11-10 16:03:07
PR,Revert temporary compatibility fixes for Devtool Hook,Now that RN has its own copy of the reconciler we do not even need these for compat Still I will tag this as breaking just in case This rebases 7393,,"gaearon,keyanzhang,sebmarkbage,gaearon",2016-11-10 15:06:01,2016-11-10 16:03:22
IS,Need way to receive and pass down all context regardless of contextTypes childContextTypes,Do you want to request a feature or report a bug Feature What is the current behavior A component can only access via this context anything defined in childContextTypes of the parent and contextTypes of the child If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template N A What is the expected behavior Would like a way to take all the context available regardless of contextTypes and also pass down via context variables not defined in childContextTypes similar to how propTypes only is for validation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 3 1 Use case I have a Portal component that renders its child into a div at the end of the body using ReactDOM useful for fixed positioned components that you do not want to be in the stacking context of the parent It works well until you have to pass down context because the context comes from an owner component not being rendered in the new HTML element,,"gaearon,gaearon,gaearon,gaearon",2016-11-10 19:24:12,2016-11-10 19:49:41
PR,Flow 0 34,,,"sophiebits,sebmarkbage",2016-11-10 19:01:48,2016-11-10 19:52:32
PR,Fiber Fix reactComponentExpect,Adds tests for reactComponentExpect Fixes it to work in Fiber Note that it is not a part of the public API,,gaearon,2016-11-10 18:41:53,2016-11-10 21:19:57
PR,Fiber Fix TestUtils edge cases,Fixes an issue where functional components were ignored when scrying Fixes an issue where we looked at work in progress instead of the current node The rest of TestUtils failures are now all Simulate related,,"gaearon,gaearon,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite,gaearon,acdlite,acdlite,gaearon,gaearon,acdlite,gaearon",2016-11-10 16:58:05,2016-11-10 21:27:08
PR,Fiber Use ReactDOM unstable batchedUpdates in Fiber tests,This fixes some errors due to attempting to use Stack only ReactUpdates It uncovers an interesting bug in Fiber related to batching The failing test is here L748 L785 It was extracted from 1353 and originally added in 1363 The interesting part about it is that it is a hard Fiber crash definitely a bug and that it only occurs when rendering is wrapped in ReactDOM unstable batchedUpdates See 1363 for more information about this scenario,,"gaearon,gaearon",2016-11-10 20:35:27,2016-11-10 21:28:49
PR,Update Flow version to v0 34 0,This PR is to update Flowtype version to v0 34 0 and fix some errors In Flowtype v0 34 0 dictionary types are treated as invariant In the following case it has to explicit covariance with ReactNativeAttributePayload js But I avoid the error by using FlowFixMe comment because it is needed some works like this 1 The covariant syntax causes a parse error in ESLint 2 To fix it we have to update babylon for parse covariant syntax with 3 2 causes other ESLint errors which are no undef for type parameters 4 To fix them We have to use eslint plugin flowtype 5 To install eslint plugin flowtype We have to update ESLint to 2 0 0 because of peerDependencies 7 5 causes other ESLint errors We have to fix them Can I work on this If so I will work on this as other PRs,,"koba04,chicoxyzzy,koba04",2016-11-02 09:37:59,2016-11-11 02:14:40
IS,react test renderer and refs,Do you want to request a feature or report a bug Bug What is the current behavior It is not possible to test component that use ref with the react test renderer utilitiesTesting the refs are always null What is the expected behavior The ref should be usable Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 3 1 react dom 15 3 1 react test renderer 15 3 1 Only tested with these versions,,"gaearon,gaearon,gaearon,gaearon,aweary,aweary,gaearon",2016-09-15 13:13:31,2016-11-11 14:35:18
PR,Use hostContainerInfo to track test renderer options,Resolves We discussed using hostContainerInfo in to support findDOMNode but it also helps us here Since the transaction is not easily available when we are updating or unmounting tracking the test options as hostContainerInfo simplifies things,,"aweary,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,aweary,aweary,gaearon,gaearon,aweary,aweary,gaearon,gaearon",2016-11-10 19:21:55,2016-11-11 14:35:18
PR,Make the Shallow Rendering example clearer,I was reading through the documentation and I found that the render call on the renderer was missing,,"gaearon,gaearon",2016-11-11 14:39:14,2016-11-11 15:34:11
PR,Handle nested controlled events,I came up with a contrived case of where nested controlled events could fire within the same batch but on different targets I think we came to the conclusion that controlled values typically cannot use preventDefault so it is ok that they do not flush until after the event has finished So therefore we accumulate a queue of all the nested targets within a batch and then restore state on all of them I'm still skeptical that this is the correct way to do controlled values The reason we have to do them in a single event loop is because when you type the sequence of values that get accepted or not can matter I wonder if there is a scenario we can come up with where you can fire multiple inner events in an event loop and end up with batching causing problems,,"sebmarkbage,sophiebits,sebmarkbage",2016-11-09 23:33:23,2016-11-11 16:49:59
PR,Fix reactComponentExpect toBeDOMComponentWithChildCount 0 regression,This should fix commitcomment 19788988,,gaearon,2016-11-11 17:25:14,2016-11-11 17:26:19
IS,Add reactjs irc note to support page,Do you want to request a feature or report a bug Docs change I think there used to be a pointer to the freenode reactjs channel in the support page but now only Reactiflux is linked Could the note be added back in The channel still has 500 users in it most hours of the day with several of us who frequently answer questions and a pretty good flow of conversation and questions throughout the day,,lacker,2016-11-11 12:48:58,2016-11-11 21:21:46
PR,Add freenode reactjs link to support md,The irc link scheme is not supported whitelisted by Github so the link is transformed to plaintext I'm not sure if there is a workaround for this Closes 8268,,"lacker,lacker",2016-11-11 17:12:12,2016-11-11 21:21:46
PR,Handles risky callbacks on setState Fixes 8238,Proposes a fix for 8238,,"ankeetmaini,gaearon,ankeetmaini,ankeetmaini,gaearon,ankeetmaini,acdlite,acdlite,acdlite,gaearon,acdlite,ankeetmaini,ankeetmaini,acdlite,ankeetmaini,syranide,gaearon,gaearon,syranide,ankeetmaini,ankeetmaini,acdlite,ankeetmaini,acdlite,ankeetmaini,acdlite",2016-11-09 10:08:30,2016-11-12 20:51:36
IS,Fiber Handle errors in callbacks,During the commit phase when updates are flushed to the DOM errors that are thrown inside componentDidMount and componentDidUpdate are trapped so they can be handled later after the tree has been committed An error thrown in a setState callback should be trapped and handled the same way Here is the relevant section of code L302 L330 callCallbacks calls all the setState callbacks that are part of the update queue a linked list of updates If any of those callbacks throw an error we should catch the error and continue calling the rest of the callbacks This is a good first issue for someone interested in contributing to React React Fiber Please read Fiber Principles Contributing to Fiber before submitting a PR,,"acdlite,acdlite,acdlite",2016-11-08 19:03:52,2016-11-12 20:51:45
PR,Have jest check for window errors in a similar to console error logs Fixes 8260,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-11-13 08:51:09,2016-11-13 09:03:35
PR,Fiber Change a test to be relevant in Fiber,Fiber supports fragments so we will use undefined instead This test is then valid both in Stack and in Fiber The test still passes in Stack and still fails in Fiber but at least it fails for a good reason now,,"gaearon,acdlite",2016-11-13 18:16:57,2016-11-13 18:40:21
PR,Build infra for tracking dev specific failures,I will plan to change all of our console error and component tree expects to expectDev It is a little annoying that we need to make sure tests do not throw see my change to normalizeCodeLocInfo but any alternative would seem to require two separate test runs or a much more cumbersome syntax,,"sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage",2016-11-07 23:24:54,2016-11-13 22:00:07
PR,,,,,2016-11-14 02:42:41,2016-11-14 04:15:11
IS,Feature Request Add Error shaped propType option,Do you want to request a feature or report a bug I request a feature What is the current behavior Currently there is no Error shaped propType option My minimal use case,,gaearon,2016-11-14 09:44:05,2016-11-14 10:14:51
PR,Change warnings to use expectDev,There are still prod deviations but this is many of them,,"sophiebits,gaearon,gaearon,sophiebits,gaearon",2016-11-13 22:18:02,2016-11-14 13:24:39
IS,React ReactDOM split proposal,Following up on with a bit more planning From what I understand ReactDOM cannot be split completely from React until there is a shared global owner This is referenced in s gist The relevant part owner The owner concept relies on being able to track a shared global state flag at the time of creating elements This means that we have to create a dependency into a single shared global stateful module for all React components It also means that effectively no React render function is truly a pure function since creating an element depends on global state It is not idempotent That means that you can not reliably use things like memoized functions and all kind of other functional goodies React Native currently appears to have a migration path in the following two files from react lib React native js react lib ReactDOM native js Any solutions need to have a way to share the ReactCurrentOwner module RN should get this for free because of providesModule if I understand how that works correctly In the future the same npm solution for ReactDOM will apply to RN React ReactDOM npm distro a shared npm module react current owner will accomplish the shared dependency React ReactDOM browser distro this will likely need a similar hack to the current React SECRET DOM DO NOT USE OR YOU WILL BE FIRED The first two should be pretty straightforward Create a new package react current owner which is purely the ReactCurrentOwner js file split out Published to 1 0 0 never to be changed Add this to both React and ReactDOM package json files Publish fin carry on The browser distro will need to have some custom build files My current idea is that the React browser distro gets a SECRET OWNER DO NOT USE OR YOU WILL BE FIRED hook that ReactDOM can hook onto The majority of this is purely a chore to work through I am curious if this would provide an attack vector by leaking this internal state The current ReactDOM hook does not leak internals as far as I m aware Although this may not be important since the REACT DEVTOOLS HOOK also allows a visitor to a React page to get into internal state Before continuing any work on 5925 does this proposal make sense What alternative solutions has the team considered,,"iamdustan,jimfb,iamdustan,jimfb,iamdustan,iamdustan",2016-02-03 20:36:42,2016-11-14 16:56:13
PR,Catch first error from setState callbacks,This changes error handling in setState so that the first rather than the last error is captured Also minor tweaks to better explain intent,,"gaearon,ankeetmaini,gaearon,acdlite,gaearon,acdlite",2016-11-14 12:57:11,2016-11-14 18:27:38
PR,Make setState return a promise,This PR related to 2642 that make setState return a promise To make setState back compatible setState still accepts an optional second argument for callback and returns undefined If the second argument is not callback setState returns Promise Usage I have been thinking about this to create a new method for example asyncState but I think it is good to have the single method for single responsibility The Promise is simple object returns then function that resolves after state is updated does not use any libraries like Bluebird Q etc This should not be a performance issue I believe this to be the good feature for developers Would be much appreciated if we could get this merged in Thanks Let me know if you have any questions,,acdlite,2016-11-13 19:49:31,2016-11-14 22:56:44
PR,Update reference react dom md,Add missing closing bracket,,"Sacret,aweary",2016-11-14 07:35:10,2016-11-14 23:35:32
PR,docs delete unnecessary brackets,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-11-13 08:29:52,2016-11-14 23:37:02
PR,Fix setState for full Calculator example,Was missing value key,,acdlite,2016-11-15 08:28:37,2016-11-15 09:51:30
PR,Fiber Removes UpdateQueueNode callbackWasCalled,Tracking this is not necessary,,acdlite,2016-11-14 18:12:17,2016-11-15 09:52:05
PR,Fiber Initial implementation of context,Known issues Passing nextContext to componentDidUpdate would require changing the approach and adding a field to Fiber For now we decided to bail on supporting this use case e g Facebook does not have a single component in thousands using this pattern We will probably make a breaking change in Stack as well for this in 16 Deep updates blocked by sCU still do not work this is about feature parity It might be broken with error boundaries I will address this in later PRs,,"gaearon,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,gaearon,gaearon,acdlite,sebmarkbage,gaearon,edvinerikson,gaearon",2016-11-11 21:22:03,2016-11-15 17:14:13
PR,Reapply Check for event listener in props instead of bank,Reapply 8192 which was temporarily reverted I think we are ready to land it now This also includes a fix to not throw on falsy event listeners like null,,"sebmarkbage,sophiebits",2016-11-15 15:26:42,2016-11-15 17:16:27
IS,React Distribution,React is an amazing library literally changed the way I get to develop applications at my job and made a more pleasant experience day to day However I absolutely hate how so many legacy things affect react The way react is built is terrible and from issues I have seen it seems to be some legacy build system monstrosity that could never be fixed because of internal Facebook reliance on these things A major part of the community suffers from this in more than one way 1 React is extremely large despite react clones like Preact and Inferno the most popular alternatives 2 React distributed size is well large in comparison to vue and angular 3 React Cannot be compiled through Googles Closure Compiler A start to this change could be switching to more modern build system like Webpack and Rollup create smaller library output Particularly Rollup and smaller bundles for people who use React in their web applications As much as people would love to contribute to change the way react is built someone not familiar to how react current build system is tightly coupled with Facebooks usage will not be able to get a PR successfully merged I'm hoping that with the rewrite and release of React Fiber this can be fixed and with the new found Performance movement going on in the Javascript community The team at Facebook behind react will accept this call to action and make a change for the better and for all those reliant on react If not well were shit out of luck,,gaearon,2016-11-16 00:53:41,2016-11-16 02:01:57
PR,Fix a line length warning,Test Plan npm test npm run lint yarn run lint,,"tomocchino,sophiebits",2016-11-16 10:26:11,2016-11-16 10:33:16
IS,ReactTestRenderer does not work with refs or ReactDOM findDOMNode,Jest snapshot testing uses ReactTestRenderer but if my component contains a ref or uses ReactDOM findDOMNode it throws TypeError component getPublicInstance is not a function Component,,"zpao,sophiebits,gaearon,aweary,gaearon,gaearon,gaearon",2016-07-29 05:47:05,2016-11-16 13:31:42
IS,npm access request tomocchino,In order to publish React to npm I need access to the following repositories react addons create fragment react addons css transition group react addons linked state mixin react addons perf react addons pure render mixin react addons shallow compare react addons test utils react addons transition group react addons update react dom react native renderer react test renderer react,,"tomocchino,tomocchino",2016-11-16 14:00:20,2016-11-16 14:02:22
PR,Add 15 4 0 blog post,,,gaearon,2016-11-15 19:27:10,2016-11-16 14:45:27
IS,Ship 15 4 0,This might be a little ways out but going to start the process We definitely want to run an RC here and push it through React Native We will want other people to play with it too There is a big packaging change and it has potential to have issues,,"zpao,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,aweary,aweary,gaearon,gaearon,sophiebits",2016-09-19 20:59:17,2016-11-16 14:59:46
IS,Problems updating to React 15 4 0,I'm getting this error with in all my files Module not found Error Cannot resolve module areact lib ReactMount' in I'm using the latest version of react 15 4 0 webpack 1 12 11 Any help,,"gaearon,gaearon,gaearon",2016-11-16 15:38:47,2016-11-16 15:44:00
PR,Add support for Fibers in ReactDOMComponentTree and ReactTreeTraversal,This adds precaching to ReactDOMFiber I e adding a handle from the DOM node to the internal Fiber This means that we need to expose an internal handle to the reconciler We use duck typing inside ReactDOMComponentTree and ReactTreeTraversal to figure out if it is a Fiber or Stack instance The new failing tests are failing because this is now able to actually fire events onto Fibers and then the result of those events are incorrect where as they were ignored before In ReactTreeTraversal we traverse parent based on the type of internal instance it is passed We could probably optimize this by doing the detection outside each loop and duplicate the loops If the parent is a Fiber it may have to traverse multiple steps until it finds a HostComponent since we do not have pointers directly to the next host container This will allow us to use the event system with Fiber,,"sebmarkbage,sophiebits,sophiebits,sebmarkbage,sebmarkbage",2016-11-08 04:34:27,2016-11-16 15:59:32
IS,htmlFor and api considerations,Do you want to request a feature or report a bug Feature Discussion Hi guys I have been using react daily since april 2015 and I still do the same mistake on a regular basis using for instead of htmlFor on label s Oh yeah that again This makes me wonder why can not we use for as a property in first place I suppose it is related to the fact that for is a javascript keyword but as far as I know there is no public API allowing to use a for property as a loop instruction Would not it be a better API that applies the principle of least surprise here instead of having us to remember specificity that has no actual impact on how we use the API actually I realize the same could go with class className,,"aweary,aweary,zpao",2016-10-31 10:38:12,2016-11-16 16:17:05
IS,15 4 minor was not supposed to break so much stuff was it,screenshot from 2016 11 16 14 38 06 Some packages broke due to missing stuffs on react lib Seems like it should not happen even my build process broke suddenly due to react 15 4 update react packages set to 15 3 2 Thanks,,"gaearon,sophiebits",2016-11-16 16:58:50,2016-11-16 17:16:04
IS,Negitive consequences of the licence,I have take this down I will re post after some more chatter internally,,"gaearon,gaearon",2016-11-16 17:56:13,2016-11-16 18:12:22
PR,Remove spread operator,I believe what was meant here was to express that you would create the new player object with all the previous properties of the existing player object in addition to now updating the score value That being said this is a simple example and the player object clearly has no other values Objects are not by default iterable using this operator so this little piece does more harm than good for those who are new to the operator,,"aweary,lacker",2016-11-12 04:35:28,2016-11-16 19:59:16
PR,Clarity on constructor of Board object for tutorial md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Is it possible to be more clear here This implies that we are removing the constructor from GAME and not board which is what I believe the author is trying to say It took me several reads to understand With this edit it is now clear that the adjustment is being made to Board and not to Game,,lacker,2016-11-07 21:19:26,2016-11-16 21:24:45
IS,Future of refs,Hi there I'm writting here because I use arefs' to pilot my tests and I would love to be able to uniformise my tests Right now with this PR issuecomment 259870776 I can achieve that pretty well with string refs Since string refs are considered legacy and since there still seems to be problems with refs I was wondering what is the plan concerning refs Moreover would it be possible to support them in shallow rendering I looked into it and I think it will be possible if we return the instance as with mount of the given element instead of the renderedComponent I'm aware it is a breaking change but if we can make So I would like to understand the plan and or the logic behind returning renderedComponent Maybe I could help Oh and since I'm on it if it is not to much trouble I would be interested in the reason why changing from string refs to callback refs Thank you for your help,,gaearon,2016-11-13 00:30:41,2016-11-16 21:26:45
PR,Changing State Of Components Outside Your Hierarchy,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA I just added hint for how to change a components state outside of your hierarchy and fire a global action to notify all stakeholders that there is some change whoever is interested in change should REACT and do something on their state Basically it is the description of Flux introduced by Facebook,,lacker,2016-11-08 06:38:08,2016-11-16 21:31:12
PR,Handle NaNs in quadratic example formula,When there are no real roots a 1 b 3 c 3 NaN values cause warning in the console Warning Component is children should not be mutated,,"pavlin99th,pavlin99th,zpao,pavlin99th",2016-08-04 14:18:52,2016-11-16 21:59:24
PR,Bump Jest to 16,This just updates Jest,,"gaearon,aweary,gaearon",2016-10-12 14:00:26,2016-11-17 00:23:51
PR,include the version number in the header,This just changes the React docs' header to have a link to release notes in the upper right corner instead of a link to React Native Rationale 1 Checking Google Analytics that link is currently worthless as a driver of traffic to React Native So we are not missing out on much there 2 It is handy to be able to check the current version and to see notes about it You often want to go check those when you are looking at some doc so put it in the header We do that for the React Native docs and have heard positive feedback,,"lacker,lacker,lacker,zpao,gaearon",2016-11-16 22:24:01,2016-11-17 00:26:21
IS,isInjected for propTypes,I would like to propose a small addition to the propTypes I and a few others have encountered issues when using Redux connect to inject information from a store See I was wandering if maybe adding an isInjected to PropType would make sense It could work similar to isRequired where it can be chained to any to any datatype However where isRequired validates a value is passed isInjected validates a value is NOT passed Example MyComponent propTypes optionalBool React PropTypes bool requiredBool React PropTypes bool isRequired injectedBool React PropTypes bool isInjected I wanted to vet the idea before bothering with a pull request,,gaearon,2016-11-17 00:37:06,2016-11-17 00:46:18
IS,v15 4 0 ReactTestRenderer and ReactMount gone,After updating to react 15 4 0 I'm facing issues with missing ReactTestRenderer and ReactMount I tried to look into the release notes but I could not see anything regarding ReactTestRenderer being gone I'm not calling ReactMount directly I'm using ReactDOM render Any ideas If I do not change anything in my code and rollback to 15 3 2 everything works fine,,"alansouzati,alansouzati,gaearon,alansouzati",2016-11-16 21:01:20,2016-11-17 01:11:44
IS,ReactTestRenderer Invariant Violation getNodeFromInstance Invalid argument,I'm following the example at content in order to use snapshots with jest I run into a bug within react test renderer it seems to fail whenever findDOMNode is used on a component instance Minimal code to replicate the bug React versions react 15 4 0 react dom 15 4 0 react test renderer 15 4 0,,"gaearon,gaearon",2016-11-17 01:59:01,2016-11-17 02:12:30
IS,False positive with Warning You are manually calling a React PropTypes validation function,OS macOs 10 12 1 Node 6 6 0 NPM 3 10 3 React 15 1 0 I am getting the warning I'm still getting my head around the architecture of my codebase but it does something like this A node server waits for requests in server js it imports a component say App jsx defined with React instance 1 in server js it imports react template server an internal library as an npm package when a request comes in it passes App jsx to the react template server instance react template server imports react dom which I guess is React instance 2 and uses that to render the passed in component and returns the rendered HTML If I take the render logic out of the package and bring it up into the app I do not get the warning,,gaearon,2016-11-17 02:26:54,2016-11-17 10:25:25
IS,getRootIDs is not defined in ReactComponentTreeHook js,Just started running into this bug today everything was going smoothly before then Only started happening after I updated to 15 4 0 When I do import React from areact' this error gets thrown on the page when I try to use ReactDOM to render something to the DOM Here is my code I'm using React 15 4 0 and ReactDom 15 4 0 and bundling everything with Rollup and Buble Here is a screenshot of what Chrome tells me is happening,,"gaearon,gaearon",2016-11-16 22:38:40,2016-11-17 11:11:29
IS,react addons test utils 15 4 0 now depends on react dom instead of react,Do you want to request a feature or report a bug Report a bug What is the current behavior react addons test utils 15 4 0 has a peer dependency on react dom and uses it 15 3 0 had a peer dependency on react In 15 3 0 react addons test utils index js,,"gaearon,gaearon,gaearon",2016-11-16 21:12:51,2016-11-17 12:58:59
PR,Updated the index file with right syntax,Added correct html syntax for comments,,gaearon,2016-11-17 01:38:12,2016-11-17 14:14:11
PR,docs forms add missing labels to forms doc,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Showing how to create a form without labeling inputs is an accessibility anti pattern This change adds labels to the docs examples to address that Codepen may still need to be updated depending on how that example is created,,"zpao,zpao,jessebeach,gaearon,gaearon,sophiebits,zpao",2016-11-16 22:34:21,2016-11-17 14:25:03
IS,v15 4 0 hard dependency on React hot loader v 1 3 0,We have tried to uprev our version of React with every major release since they very often help us with perf or core issues that we should be addressing so we updated to 15 4 0 yesterday However it seems as though there is a breaking change in 15 4 0 when it comes to our development process Although our apps build successfully they break when we try to dev using our webpack hot reloading process Wepback spits out the following error for each file creating a React Component I believe that upgrading to the newest prerelease of react hot loader would completely fix this issue but I'm not sure how we should proceed since the documentation points out that v3 0 0 beta 6 is fairly experimental As of now I think we are going to stay on React v15 3 2 since it does not require us to update our hot reloader and how we have configured webpack babel I assume this is not an oversight and the removal of many of the lib files is a the correct path I'm just wondering if there is another work around other than switching to the prerelease for our hot reloader Thanks,,gaearon,2016-11-17 14:49:25,2016-11-17 16:21:51
PR,Revisions to Event Handling documentation,Added headers to make it easy to find topics Revised sentences to not use you Show React event syntax immediately then HTML comparison instead of vice versa Simplified the default behavior example,,lacker,2016-11-16 08:13:12,2016-11-17 18:18:04
PR,Make numerical refs work in Fiber,,,sophiebits,2016-11-17 18:02:29,2016-11-17 18:56:33
PR,add link to useful doc,gaearon suggested that this link was useful It seems pretty reasonable to me This seems like a good place to put it because this part of the docs is where you end up if you are reading our controlled vs uncontrolled stuff and still end up confused,,lacker,2016-11-17 18:50:14,2016-11-17 19:09:04
PR,Upgrade ESLint and dependencies fix new lint errors switch Travis to Yarn,Test Plan yarn run lint yarn run test flow everything is clean This also involved pulling in the latest fbjs so we can extend that eslintrc js One goal here is to be able to use yarn exclusively in Travis CircleCI As a followup I can try to add a custom rule to turn the ESLint strict rule back on because we need to deal with the fact that ESLint thinks import type Flow statements are module imports Sorry this is doing so much but these are all pretty interconnected Let me know if you want me to split this into multiple PRs somehow,,"tomocchino,zpao,gaearon,zpao,gaearon",2016-11-16 18:24:43,2016-11-17 22:16:44
IS,React DOM Server should not contain a separate copy of the reconciler,Do you want to request a feature or report a bug I do not know if it is technically a bug but to me it is certainly a regression because it inflates the size of the react dom server package when used on the client What is the current behavior Might be best to just quote the release announcement for React 15 4 Another thing to watch out for is that React DOM Server is now about the same size as React DOM since it contains its own copy of the React reconciler We do not recommend using React DOM Server on the client in most cases What is the expected behavior Just like React 15 3 and below only one copy of the reconciler should be needed when using both React DOM and React DOM Server What use case do you have for using React DOM Server on the client For example Selectivity js allows developers to specify custom templates to customize the rendering of the UI component But because Selectivity is at its core a non React library it accepts templates as either strings or functions returning strings that are manually inserted into the DOM Now Selectivity does have a React API which also includes a plugin that wraps the templates so they can be specified as functions returning React elements see the source code for details This plugin relies on react dom server to transform the React elements to a string understood by Selectivity core While the above example is rather specific to a single library I do think the use case of specifying templates in non React libraries through JSX might be more widely applicable,,"gaearon,gaearon,gaearon",2016-11-16 22:25:41,2016-11-18 11:19:12
PR,Docs Expand Installation and clarify why use bundlers,I'm adding more content to Installation page since it is very condensed now I'm adding info about using Yarn and about the difference between prod and dev versions Then I reword the release notes to remove into a single bundle recommendation and refer to the new information in the guides Blog post changes screencapture localhost 4000 react blog 2016 11 16 react v15 4 0 html 1479398656832 Installation content after this change screencapture localhost 4000 react docs installation html 1479398116152 1,,"gaearon,sophiebits,sophiebits,zpao",2016-11-17 16:07:56,2016-11-18 12:26:22
PR,Update 2016 11 16 react v15 4 0 md,Edge and IE11 both show user marks and measures in the Dev Tools so it is technically not accurate to say that only Chrome has this feature Here is what this looks like in Edge 2016 11 17 15 39 03 react app microsoft edge BTW thank you for promoting performance mark and performance measure smiley Surfacing this info into the Dev Tools makes webdevs much more likely to use these APIs and they are incredibly useful for telemetry performance analyses etc It is great to see React leading on this,,"aweary,gaearon",2016-11-17 23:58:04,2016-11-18 12:27:16
IS,Error Cannot find module areact lib ReactPerf',Bug report What is the current behavior Importing react addons perf throws the following error I checked and the file does not exist in the lib directory What is the expected behavior It should not throw an error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The latest version I was using was 15 2 1 This is an issue for me after updating to 15 4 0 but may have been introduced between the two,,"gaearon,gaearon,gaearon,gaearon",2016-11-18 12:51:17,2016-11-18 13:02:28
PR,Fiber Fork ReactDOMComponent,This forks ReactDOMComponent and the associated wrappers From now on any change to them have to be replicated here The commits represents a sequence of changes from the original implementation Still a work in progress,,"sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage",2016-11-16 23:35:38,2016-11-18 13:39:50
PR,Improved some sections of the introducing JSX docs,Made the following sections of the Introducing JSX docs more clear embedding expressions in jsx jsx prevents injection attacks,,"shubheksha,gaearon",2016-11-18 15:44:38,2016-11-18 16:20:48
IS,Reactjs page and android webview communication,Do you want to request a feature or report a bug no What is the current behavior I didnt find a good way to communicate from android webview to reactjs page The problem im facing is i have a landing page written in reactjs and loaded in webview with the backbutton i want to close webview activity on click of that backbutton Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React all,,zpao,2016-11-17 02:20:15,2016-11-18 16:49:35
IS,nbsp renders differently in production,I am using ' u00a0' in my render method like so It renders as expected in dev mode But in production it renders with a strange A See attacked images This is Dev Mode 070 This is Prod Mode notice the strange A 071 I am using React 15 3 2,,"aweary,zpao",2016-11-17 18:56:28,2016-11-18 16:52:36
PR,Improved sections of state and lifecycle docs,A recap of the order in which lifecycle methods are called to render a component state can be set in the constructor,,"shubheksha,gaearon,gaearon",2016-11-18 16:47:43,2016-11-18 18:24:27
PR,Fiber Handle controlled components,See individual commits,,"sebmarkbage,sophiebits,sophiebits",2016-11-18 17:58:22,2016-11-18 18:35:26
PR,Fix ReactDOMFiberSelect to set the initial values,I forgot that the normal properties route does not do this We also have to make sure that the order is 1 insert children options 2 set multiple 3 update the options,,"sebmarkbage,sophiebits,sophiebits,sophiebits",2016-11-18 18:48:05,2016-11-18 18:52:15
PR,Move all dev Hook tests and ComponentTreeTestUtils to expectDev,,,tomocchino,2016-11-18 18:51:34,2016-11-18 18:53:48
PR,Use an ordered property list for inputs fix some Chrome number input issues,Discussed in I'm finally to a point where I feel good enough about this code and I thought I would make it easier to comment on it This is a reimplementation of that additionally eliminates much of the work done inside of ReactDOMInput to handle quirks associated with defaultValue value defaultChecked and checked It does this by ensuring a specific order for property assignment on the input element This is implemented within DOMProperty and HTMLDOMPropertyConfig which may allow for other elements to eventually take advantage of it should they need it Performance changes Since they do less work controlled inputs are slightly faster while non ordered HTML tags have no observable performance regression in my ability to test anyway Fixes from the original PR This is a major deviation from my solution in but it includes the same input fixes These are enumerated in issuecomment 236074326 Basically since the mutation method for value first checks to see if the property is loosely the same it eliminates many edge cases with controlled number inputs like Controlled and uncontrolled numbers wo not drop off decimal places when backspacing like converting 3 to 3 Controlled numbers that use parseFloat or parseInt wo not expand values like magically replace 3e1 with 30 Other fixes Some fixes are no longer necessary inside of ReactDOMInput Assigning type and step before value for IE11 Properly ordering defaultValue value for inputs to ensure date inputs display properly on Android and iOS Ensure defaultChecked does not influence checked in Chrome 50 x This is a big change I do not expect it to be merged easily If there is any additional documentation I can provide or benchmarks you would like to see I am happy to produce them,,"nhunzaker,aweary,nhunzaker,nhunzaker,syranide,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker",2016-08-11 20:11:04,2016-11-19 17:10:36
PR,Update react without es6 md,,,gaearon,2016-11-18 20:16:42,2016-11-19 18:19:16
IS,ref callback argument is null,Do you want to request a feature or report a bug A bug What is the current behavior The ref callback gets called with null as argument instead of an instance of the component This only occurs when you write the component name starting with an uppercase character PascalCase If you write the component starting with a lowercase character camelCase everything works as expected This jsfiddle demonstrates how you get a null argument And this demonstrates how you get a correct reference As you can see I just renamed Button to lowercaseButton What is the expected behavior It should always pass the component instance as argument to the callback Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This occurs in v15 4 0 and v15 3 1 I did not tested any other versions,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-11-20 12:36:24,2016-11-20 13:01:03
IS,Breaking Feature Request Make JSX even more like JS,I think it is time to make JSX even more like JS and less like HTML Consider the following JSX Inspiration comes from,,,2016-11-20 15:24:09,2016-11-20 15:42:26
PR,Update all Jest packages to 17 x,The caching is mostly for CI speediness users wo not see more than a few seconds of improvement It did not help in any useful way so dropped that portion of the PR,,"keyanzhang,gaearon,gaearon",2016-11-17 02:47:13,2016-11-20 16:10:08
IS,Overriding extending ReactHostComponent createInternalComponent,It would be nice to be able to override or extend ReactHostComponent createInternalComponent to expand the set of elements that can be rendered beyond html In extjs reactor we are doing this by patching the createInternalComponent function so that any tag that starts with a specified prefix the default is x creates an Ext JS Component L14 I would love to have a more stable way of doing this It looks like something along these lines was originally considered but never fully implemented and recently removed Do you have any advice for a more sustainable approach or would you consider an API for this,,"gaearon,gaearon,gaearon,gaearon",2016-11-20 03:47:17,2016-11-20 17:33:21
IS,Strange second argument passed to event handler always undefined,I have found a bug I have attached event listener with onClick property like this The event listener called with 2 arguments synthetic event and strange undefined value I think normal behavior is when handler called with a single param event object Windows 10 Chrome 53 React version 15 2 0,,"gaearon,syranide,syranide,syranide,gaearon,aweary,aweary,aweary,gaearon,aweary,aweary,gaearon,aweary,gaearon,aweary,gaearon",2016-10-06 19:55:53,2016-11-20 20:07:06
IS,Undocumented alteration of onClick arguments,After upgrading from 15 3 2 to React ReactDOM 15 4 0 I noticed that the onClick synthetic event and possibly others is receiving arguments differently In 15 3 2 the onClick event without any custom arguments being passed receives 3 arguments 0 Proxy 1 undefined 2 Event observed in the console of this jsfiddle In 15 4 0 the onClick arguments look like 0 Proxy 1 Event Again viewable in the console here This ended up causing problems in my application because in 15 3 2 I was passing an additional argument to a click handler and expecting it to be received as the second argument Once I upgraded to 15 4 0 the argument was being received as the third after Proxy and Event I'm not so sure this is to be considered an issue with React but I did not see anything in the release notes in the way of event handling so thought I would raise it just in case The way I ended up adjusting for this is by using the spread rest operator when passing receiving arguments in the event handler function which may be the approach I should have taken to begin with PS Thank you for all the hard work you guys put into this super excited for fiber Rock on,,"aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary",2016-11-19 04:54:59,2016-11-20 20:14:06
IS,Fail to update DOM style attribute,Do you want to request a feature or report a bug bug What is the current behavior style attribute is not updated correctly when we set padding and paddingTop at the same time and then re render with only padding Same issue with border I suppose that it would be the same with margin not tested Example What is the expected behavior The DOM element style should be the last rendered one and should not be affected by the previous style value Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested on chrome 54 with React 15 4 and 15 3 2,,aweary,2016-11-20 17:18:33,2016-11-21 04:28:40
PR,Shallow clone Fiber component initial state to prevent modification,Fixes the ReactComponentWithPureRenderMixin test by shallow cloning the component is initial state Prior to this commit the test was modifying a property on the state object passed into setState This had the side effect of also modifying the component is state since the object was shared The alternative here was to update the test I was not sure of the overhead of a shallow clone was forgivable But at the very least this diagnosis the issue and proposes a fix,,"nhunzaker,sebmarkbage,nhunzaker,sebmarkbage",2016-11-21 02:29:22,2016-11-21 04:52:16
PR,Fixed to use 'className',In the case of IE using className is better than using setAttribute,,zpao,2016-11-19 11:25:26,2016-11-21 05:59:25
IS,Firefox blocks React dev addon when CSP set regardless of what is whitelisted,Do you want to request a feature or report a bug Bug What is the current behavior Firefox blocks the dev addon with the message I believe that iself' is being subbed in with 8002 by Firefox 45 3 since the same CSP setting works in Chromium 53 0 When the addon tries to load it loads from iself' as opposed to 8002 iself' shows up in the policy when I look at the headers themselves on a request which tells me I got the CSP serving correctly to FF React will start up in the dev tools but it will never connect to my react web app It just says Looking for React If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar Install the Firefox React dev plugin and visit 8002 admin panel if I have left my development machine running Note the CSP violation in the dev console What is the expected behavior The addon should work if self is an allowed script src Indeed it should work whatever my CSP is Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React plugin 0 15 3 from Firefox 45 3 is affected OS Debian 8,,gaearon,2016-11-21 12:17:33,2016-11-21 14:54:11
IS,Production mode results in ever changing generated keys,We are seeing a mysterious behaviour with regards to generated keys But only in production mode Note the keys of the RelayAdHocQuery and TabPanel components at the bottom react keys production Also note that the parent hierarchy does not change On each forced update of a parent the keys in question simply append so we are loosing state Everything works as expected in development mode where the component instances are reused based on the re use of keys Unfortunately despite our best efforts we have been unable to isolate exactly why this happens ie as a simply reproducible test case Maybe someone with knowledge of the key generating algorithms can points us towards a solution React 15 3 2 Seeing this in all evergreen browsers,,"syranide,gaearon,gaearon,syranide,syranide,gaearon",2016-11-21 13:40:36,2016-11-21 14:59:11
PR,Make findDOMNode generic,,,"sophiebits,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage",2016-11-18 18:11:21,2016-11-21 17:13:26
PR,WIP Fiber Subtrees and portals,Not much to see here yet,,gaearon,2016-11-17 19:35:42,2016-11-21 18:01:06
IS,ReactDOM TypeError console debug is not a function,I am experiencing the following bug using React 15 4 0 and React DOM 15 4 0 When I run my team is test suite which uses Mocha 2 5 3 the following exception is thrown and Mocha crashes without running the tests This code calls console debug The exception message makes it seem like console debug is not a function that Node js believes exists and in fact the documentation for Node js' console shows that it has no debug function Interestingly running my team is project works fine the only time I see this exception is when I try to run my test suite,,"gaearon,gaearon",2016-11-18 21:24:13,2016-11-21 18:23:02
IS,Unable to find element with ID 'undefined',React 15 4 0 on 15 3 2 all is well This invariant Unable to find element with ID 'undefined' error happens when specific yet not special in any kind component update is triggered from callback in ReactDOM render element domElement callback Using MobX for state management and latest 2nd Webpack This I guess does not qualify as proper issue report as I could localize issue to specific component which when removed solves this And there is completely nothing special about this component All is working in 15 3 2 Sidenote app is rendered on server successfully and when crash happens on client then when I move cursor over that particular component after this crash error is being constantly console log'ed But when I move cursor outside nothing gets logged And I'm not attaching any listeners for cursor movements,,"aweary,gaearon",2016-11-17 22:29:52,2016-11-21 19:53:58
IS,ReactCSSTransitionsGroup does not execute enter animation properly in some cases,Trying to build a nifty animation for launching dialogs but running into a snag with ReactCSSTransitionsGroup The goal is to ensure that the dialog looks like its zooming out of the button that launched it Here is a sample that shows the working demo and unexpected behavior The unexpected behavior exhibited is the following 1 Click on the first button either one Works perfectly 1 Click on the second button the enter animation does not play 1 Does not matter how many buttons you add only the first works as expected All additional buttons wo not show the enter animation properly 1 The leave animation works for all buttons I have reproduced this with glamor and aphrodite so feels good to rule out the CSS library as the culprit Trying to figure out if there is something wrong with the code unintended usage of ReactCSSTransitionsGroup or a bug with it Thanks also posted on SO,,gaearon,2016-11-21 19:52:04,2016-11-21 22:38:36
PR,Change test assertion depending on a feature flag,Instead of a private API see discussion r88280994,,"rricard,gaearon",2016-11-16 17:42:13,2016-11-22 00:17:14
PR,Fix link to PureComponent in docs,,,"SimenB,gaearon",2016-11-22 08:22:55,2016-11-22 11:09:07
IS,document caretPositionFromPoint caretRangeFromPoint do not typecheck,Do you want to request a feature or report a bug Bug What is the current behavior Neither document caretPositionFromPoint standards track nor document caretRangeFromPoint old syntax typecheck producing the following flow error Which versions of React and which browser OS are affected by this issue React 15 4 0 Flow 0 33 0,,aweary,2016-11-22 09:47:01,2016-11-22 14:59:31
PR,Fix object spread operator,Object spread operator overwrites previously assigned properties via shallow copy,,gaearon,2016-11-22 13:53:28,2016-11-22 15:01:23
PR,Stop relying on variable hoisting,Only declare the variable once in this scope instead of declaring them multiple times in the same scope This fixes 8318 even though it might technically be a shortcoming in Rollup,,"gaearon,gaearon,gaearon,gaearon",2016-11-22 15:10:08,2016-11-22 15:18:10
PR,Revert Stop relying on variable hoisting,Reverts facebook react 8380 because it was a change to auto generated file in the docs Sorry I missed this The actual file was already changed in the same way earlier,,gaearon,2016-11-22 15:19:39,2016-11-22 15:19:45
PR,Fiber renderSubtreeIntoContainer,,,"sophiebits,iamdustan,sebmarkbage",2016-11-21 17:13:55,2016-11-22 17:57:13
PR,Add a couple missing SVG tags to DOM Elements docs,My first contribution to React While upgrading a React project I found some suspect SVG that needed updating so I dug in after checking the docs I knew that support for some SVG properties had been added namely xmlns and xmlnsXlink but I noticed them missing from the reference is attribute list This pull request updates reference dom elements md by adding said properties,,gaearon,2016-11-22 18:13:29,2016-11-22 18:50:11
PR,Lint,,,sophiebits,2016-11-22 20:04:32,2016-11-22 20:04:40
PR,Fiber Add ReactDOMFiber unstable createPortal,While 8368 added a version of ReactDOM unstable renderSubtreeIntoContainer to Fiber it is a bit hacky and more importantly incompatible with Fiber goals Since it encourages performing portal work in lifecycles it stretches the commit phase and prevents slicing that work potentially negating Fiber benefits This PR adds a first version of a declarative API meant to replace ReactDOM unstable renderSubtreeIntoContainer The API is a declarative way to render subtrees into DOM node containers It looks like this Fiber treats it as a regular slice able work and commits the subtrees according to depth like normal components Context updates just work because of this I copied the subtree tests modified them to use the new API and added them to ReactDOMFiber test since it is a Fiber specific feature I also added some more assertions around the lifecycle order and ensuring node removal There are a few missing pieces Only DOM node is accepted as a container I'm not sure if we should accept a node instead because node might not be ready yet This also does not play with server rendering but since the support is baked into reconciler we can add ReactDOMServer createPortal element stream someday note not an actual API I m just showing potential future directions as discussed with The portal object has a reserved implementation field that is currently unused It will be used for supporting cross renderer portals e g ART inside DOM It will contain beginWork completeWork commitWork or something similar of the nested renderer The parent renderer will still be responsible for scheduling but will forward work to a nested renderer when it is inside a portal We will need to keep track of the roots on the stack so that we can fix document body hack in ReactDOMFiber We still use updateContainer which is hacky since it replaces all children The plan is to eventually move the output traversal to the complete phase and let the renderer provide ToContainer overloads of appendChild insertBefore and friends This is merely a first step towards supporting portals in Fiber and it is not complete but I want to land it so that we have the basics like we do with coroutines and do not regress on them Next I will work on SVGs and try to reuse this primitive for them,,"gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,gaearon",2016-11-22 20:40:19,2016-11-22 22:08:13
PR,Stopgap fix for element disabling,Fix for 8308 This is a bad hack EventPluginHub getListener is not even DOM specific but this works for now and lets us release 15 4 1,,"sophiebits,sebmarkbage,nhunzaker,sophiebits,nhunzaker,gaearon",2016-11-22 22:02:09,2016-11-22 22:39:30
PR,Fiber Make server rendering tests pass,This does not actually mean that reviving works but tests pass because we are not actually testing any reviving behavior This still does not pass the render into a document root tests because that actually requires reviving,,"sebmarkbage,sophiebits",2016-11-21 23:22:23,2016-11-23 00:03:50
PR,Nit in regexp,I botched my updated PR before merging,,"sebmarkbage,brigand,gaearon",2016-11-23 00:06:28,2016-11-23 00:06:31
PR,Include ReactDebugTool from inside DEV to save 1 5KB,,,"bgirard,gaearon,bgirard,sebmarkbage,sophiebits,sophiebits,bgirard,sophiebits,bgirard,sophiebits",2016-11-17 00:56:12,2016-11-23 00:08:45
PR,Fiber Fix more tests,I went through all the remaining unit tests and fixed up some of them here I also have a todo with more bugs that needs to be fixed,,"sebmarkbage,gaearon,sebmarkbage,gaearon,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits",2016-11-21 04:49:51,2016-11-23 00:19:16
PR,Restructure code to work around a Rollup bug,This PR is directly again 15 stable because it is fixed in 8309 but tricky to cherry pick This fixes 8318 It is not technically our bug but it is a regression for Rollup users and it is easy for us to avoid In fact we already fixed this in master via 8309 because of the linter update,,"gaearon,zpao",2016-11-22 19:04:45,2016-11-23 01:16:13
IS,react dom 15 4 0 does not work in AMD enviroment,If I try to load react dom with RequireJS I get an error Mismatched anonymous define Looking at the react dom from the 15 4 0 distribution I notice that there seem to be two UMD wrappers at the top This is probably related to the change in the packaging structure 7164 and 7168,,"zpao,gaearon,gaearon,zpao,zpao,gaearon,gaearon",2016-11-16 15:29:48,2016-11-23 01:16:45
PR,Fix browser bundle for AMD,Fixes 8301 I confirmed that the webpack bundling that got us into this situation is still ok so I think this should be safe I did not explicitly check SystemJS but I think it should be in the same boat cc,,"zpao,gaearon,zpao,zpao",2016-11-22 06:03:28,2016-11-23 01:16:45
IS,Warnning Encountered two children with the same key,image image image image I am sure the key is unique so why also print the warning error My react version is 0 14 8 thank you,,,2016-11-23 07:04:59,2016-11-23 07:24:54
IS,FaceBook,I have notice on FaceBook services in nearest time that when you open you account on mobile phone from safari and I tried to see my message they transfer me to install messenger app Also i notice sometime the messages did come in inbox message it come to different messages like filters request and archive message,,gaearon,2016-11-23 10:04:59,2016-11-23 11:11:13
PR,Fix some more tests,,,"sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sebmarkbage",2016-11-23 07:13:56,2016-11-23 18:59:49
PR,Fix queueing updates in cWM cWRP when batching,I tried to add a temporary check for the correct state in and run our test suites over it but none of our existing test cases would have triggered that invariant The new one I added does,,"sophiebits,sebmarkbage,sophiebits",2016-11-23 19:58:28,2016-11-23 21:00:49
PR,Restore DOM selection and suppress events,This makes Draft mostly work,,"sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,gaearon,sophiebits,sophiebits,sebmarkbage,sebmarkbage",2016-11-18 23:23:36,2016-11-23 21:43:00
PR,Fix renderSubtreeIntoContainer with non context provider parent,,,sophiebits,2016-11-23 21:12:22,2016-11-23 22:23:45
PR,Cleanup after 8353,,,"sophiebits,sebmarkbage,sophiebits",2016-11-23 22:21:43,2016-11-23 22:43:52
PR,Remove config beginUpdate,I only used this to visualize changes when there were bugs in the incremental reconciliation We do not need it anymore,,sebmarkbage,2016-11-23 22:18:09,2016-11-23 22:44:17
PR,Preserve scroll position when restoring focus,This misbehavior is particularly egregious because of our current strategy for updating a container in Fiber but regardless if we restore focus to an offscreen node ex because it was reordered among its siblings then we should not scroll the page to reveal it We could check the overflow computed style values before saving the scroll positions but that is unlikely to be any faster,,sophiebits,2016-11-23 22:03:23,2016-11-23 22:55:17
PR,Fix traversal up when unmounting,We have a lot of places that read return it is hard to see if they are all right,,sophiebits,2016-11-23 23:36:01,2016-11-24 00:07:25
PR,Finish ReactGenericBatching,,,"sophiebits,sophiebits,sebmarkbage,sophiebits",2016-11-24 00:21:28,2016-11-24 01:40:20
PR,Fiber Update root children using appendChild insertBefore removeChild,This removes updateContainer and instead uses the regular child mutation methods to insert into the root container and portals Since we are no longer clearing out the container DOM in updateContainer we have to do that manually during initial mount This now works on a document and one of the tests end up unmounting the body when you render into the document so I had to work around that bit since we do not yet properly support rendering into the document root,,"sebmarkbage,gaearon,sebmarkbage,sophiebits,gaearon,sebmarkbage,sebmarkbage,sophiebits,edvinerikson,gaearon,sebmarkbage,sophiebits,sebmarkbage",2016-11-23 21:55:02,2016-11-24 02:09:50
PR,remove dead link,The video does not seem to exist anymore I could not find the video somewhere else is it still available,,"zertosh,gaearon",2016-11-24 10:25:07,2016-11-24 14:35:49
PR,fix typo 'miss configured' to 'misconfigured',Fixed typo in doc refs must have owner md,,gaearon,2016-11-24 14:35:24,2016-11-24 14:52:53
PR,Fiber Remove output field,The idea was originally that each fiber has a return value In practice most of what we are modeling here are void functions and we track side effects instead of return values We do use this for coroutines to short cut access to terminal yields However since this can be nested fragments we end up searching the tree anyway We also have to manage this in transferOutput so it ends up being as expensive Maybe we can save some traversal for updates when coroutine branches bail out but meh Swapped the child and stateNode on coroutines so that stateNode is the first phase and child is the completed phase This is a bit more useful Unmount nodes from the first phase when the parent is unmounted,,"sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,sebmarkbage",2016-11-24 05:23:27,2016-11-24 18:03:14
PR,Fiber Add a test for nested portals,Just a new case I forgot to test It passes,,"gaearon,gaearon",2016-11-24 18:39:22,2016-11-24 18:43:45
IS,,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2016-11-25 07:39:56,2016-11-25 09:59:31
IS,className does not work with is attribute is present,Do you want to request a feature or report a bug Report a bug What is the current behavior When I pass is attribute the className do not work It is output classname instead of class in the DOM If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Demo What is the expected behavior Should render class instead of classname Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2016-11-25 10:38:57,2016-11-25 12:54:22
PR,Update Flow to 0 36,No changes seem necessary,,gaearon,2016-11-25 16:24:30,2016-11-25 16:25:09
PR,Fiber Fix portal unmounting,We used to terminate the search on host nodes and then use the nested unmount algorithm However this means we did not unmount portals inside the host nodes We will probably need to restructure this somehow but for now I just added a recursive call to unblock myself,,"gaearon,gaearon",2016-11-25 21:41:32,2016-11-25 21:43:56
IS,Is there a way to judge if an instance of a component is a child of another,Hello our team is writing a framework of React' system and now we are facing a problem To judge if an instance of a component is a child of another It may in deep layer of the parent instance We think there should be a function to resolve these problems but we cound not find it out We need your help Thanks a lot,,"gaearon,gaearon,gaearon",2016-11-16 01:14:08,2016-11-26 15:25:34
PR,Fix NodeJS support broken in previous change,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Apparently already caused at least one issue for no reason,,"gaearon,gaearon,sophiebits,zpao,sophiebits",2016-11-18 12:50:47,2016-11-27 03:24:51
IS,issue collaboration with react and react dom,Do you want to request a feature or report a bug Yes i wanna report a bug What is the current behavior When u install in react and react dom last version on intellij window 10x64 npm i react react dom In node modules react dom index js we found file module exports require areact lib ReactDOM' but in node modules react lib ReactDOM we havent got this file There is only node modules react lib ReactDOMFactory If we wont to use react dom import ReactDOM from areact dom' we will find this error ERROR in react dom index js Module not found Error Cannot resolve 'file' or wouldirectory' But if u install react 0 14 6 react dom 0 14 6 we will havent got such problems If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2016-11-27 08:58:27,2016-11-27 13:17:19
IS,Error messages swallowed in certain edge cases,I would like to report a bug Currently in certain cases like the one reproduced below critical error messages are not displayed in the developer console Sometimes the view does not render at all and it is left to our guesswork to identify the culprit Here is the relevant jsfiddle You can see that the only error being thrown is the one deliberately put in line 6 It blocks proper rendering of the view yet no trace of it is show in the developer console The expected behaviour would be to catch the error and show it in developer console My current workaround is to wrap setState calls in try catch which is ugly but it works I suppose this is not by design as React usually has excellent error reporting capabilities I am aware that the issue might be caused by imperfections in my code If there is a way to improve it while maintaining its functionality I'm all ears I have been struggling with this issue for quite some time now In the above jsfiddle you can see the error being reproduced in React 15 3 2,,gaearon,2016-11-27 16:15:53,2016-11-27 17:27:18
IS,Include polyfill io in HTML,We considered doing it earlier but settled on shipping just Object assign Promise and fetch polyfills by default I would like to reconsider adding a polyfill io scripts to HTML as too many people rely on ES6 features without realizing they need polyfills And using polyfill io means it is easy to opt out too if you know what you are doing We should only include ES6 polyfills and specifically exclude Object assign Promise and fetch because we already have them,,"gaearon,gaearon",2016-11-23 18:33:27,2016-11-27 18:06:04
PR,adds open source components guide,I'm taking on Publishing a Component from,,brigand,2016-11-26 22:11:43,2016-11-27 22:25:26
IS,npm install Microtime problem,BUG If I want to install react dom 15 4 1 in my docker ubuntu environment I got an error Possible solution bump microtime to 2 1 2,,gaearon,2016-11-28 07:30:56,2016-11-28 14:18:03
PR,Add docs for publishing a react component,Related to and,,brigand,2016-11-27 19:20:38,2016-11-28 15:45:51
PR,Use a closure to bind argument to callback in ReactErrorUtils,See discussion starting here issuecomment 261802649 This prevents the fake event used here from being passed to the callback This was causing issues where event handlers received an extra argument in dev only I verified this fix resolves the issue by building and testing in the basic click counter example I'm not sure where a unit test for this would go,,"aweary,gaearon,aweary,gaearon,gaearon,gaearon,aweary,gaearon,gaearon",2016-11-20 20:57:12,2016-11-28 16:54:57
PR,Fiber Remove output field from debugger,This PR just removes output field that is no longer used from the fiber debugger,,gaearon,2016-11-28 18:11:18,2016-11-28 18:19:49
PR,Move shared files out of stack folder,Breaking this out of 8415 This moves tests and a few files that are shared One test is left in stack The Transaction test since that file is a true unit test and does not really test any externally observable behavior,,"sebmarkbage,sophiebits",2016-11-28 18:57:37,2016-11-28 18:59:11
PR,Record tests,,,sophiebits,2016-11-28 19:37:18,2016-11-28 19:37:21
IS,Production build is broken for node haste since 15 4,This issue is tighly coupled with issue from jest My comment for explanation why it is related to React issuecomment 263004102 I will dupe some info in current issue As 15 4 0 rc 2 15 4 0 rc 3 version update providesModule React is dissapeared from production code Under production I mean that code which ships with npm And jest tests became broken And no way to fix it because of version tags Latest version with providesModule is 15 4 0 rc 2 and it just can not be used as a workaround Git tags compare shows an interesting commit As we can see that commit comes from this Pull Request,,"sebmarkbage,sebmarkbage,yungsters,cpojer,sebmarkbage,cpojer,cpojer,cpojer",2016-11-28 19:16:25,2016-11-28 19:47:30
PR,Use latest instance when restoring controlled state,,,sophiebits,2016-11-28 19:31:21,2016-11-28 22:00:50
PR,Fiber Support iterables,Add iterable cases to MultiChildReconcile test 0fa8116f0f4748a1f8a9b0f053e47327787d40a1 Stack currently supports rendering iterables but Fiber does not Previously we did not have any public API tests for iterables We have tests for traverseAllChildren which is shared between React Children and Stack However Fiber does not currently use it and likely wo not So this commit is a first step towards actually testing iterable support via public API The next step will be to port traverseAllChildren tests to test React Children API instead Implement iterable reconciliation in Fiber 71eefd073aefd32ef3ec0ecd4240f3aa181b8664 This uses the same exact algorithm as array reconciliation but uses iterator to step through This gets reconcile tests to pass again but introduces a regression in ReactMultiChildText case which uses Maps as children It passed before because Maps were ignored but now it is failing because this actually runs the Map code path in Fiber We can throw early in this case when we want to follow up on this Rewrite traverseAllChildren tests against React Children API 2b7e0a0cc4f2944ad9e7ea9472ade511f97120dd This function was used in React Children and Stack The corresponding reconciliation functionality is being tested by ReactMultiChild tests So we can move these tests to ReactChildren and test its public API,,"gaearon,sebmarkbage,gaearon",2016-11-28 20:14:25,2016-11-28 23:44:56
PR,Fiber Handle Bailed Out HostText update and MultiChildText test,This handles the case where a host text bails out In that case we need to reuse its previous memoizedProps We should also only schedule an actual update if it did actually change its text content I updated the unit test to ignore comment nodes if we are using Fiber When combined with 8331 the test actually passes,,sebmarkbage,2016-11-21 22:44:07,2016-11-29 01:26:49
PR,Update release checklist,,,"sophiebits,tomocchino",2016-11-23 02:07:03,2016-11-29 01:57:37
PR,Fix context getting,,,"sophiebits,gaearon,sophiebits",2016-11-24 06:10:44,2016-11-29 02:33:46
PR,Add test for updating parent state in cWRP,,,sophiebits,2016-11-29 01:07:58,2016-11-29 03:05:25
PR,Fix fiber feature flag for ReactDOMProduction test,,,"sophiebits,sophiebits",2016-11-29 07:16:35,2016-11-29 07:36:05
IS,When developing packages with npm link invalid manually calling a React PropTypes warnings are logged,Do you want to request a feature or report a bug both What is the current behavior When developing a react component as a package it is common practice to npm link your local copy into a project For this to work you need a copy of react installed in both directores otherwise node and browserify have not tested with webkit are not able to find it This results in a ton of warnings for manually calling a React PropTypes validation function If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I am assuming it means you have two copies of react on the page But preferably there should be first class support for developers working in the methodology Barring the ability to test for this condition directly it would be nice to disable warnings in some fashion Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Currently testing with react 15 3 2,,"gaearon,gaearon,gaearon",2016-11-28 20:11:08,2016-11-29 16:08:43
PR,Doc on higher order components,Still working on this but it is getting close to being ready The main example is based on Dan is blog post I have avoided any discussion of mixins since these are new docs and mixins are effectively deprecated What do people think of this Should we at least mention that they exist even if we do not want people to use them After this I will work on a companion doc about render callbacks that compares the two approaches,,"acdlite,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,acdlite,gaearon,gaearon,acdlite,gaearon,acdlite,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,gaearon,gaearon,gaearon,lacker,acdlite,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,acdlite,acdlite,acdlite,acdlite,lacker,acdlite,acdlite,lacker,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite,acdlite,lacker,gaearon",2016-10-04 19:01:26,2016-11-29 18:47:54
PR,Update tutorial md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA fix unknown Unexpected token in codepen io,,"gaearon,aweary,lacker",2016-11-17 10:51:54,2016-11-29 21:00:34
IS,Questions about unstable createPortal,I was talking to about whether or not unstable renderSubtreeIntoContainer will remain around and he pointed me to the new upcoming unstable createPortal L212 API I have been using the former to render subtrees that I can move into Atom panes and panels since I control the node I'm rendering the subtree into I can move it around as I see fit So my two questions are 1 Will I continue to be able to move this DOM node wherever I want it E g not just attached to the document like most people do for modals 2 Will this continue to retain context into the subtree,,"gaearon,sophiebits,sophiebits,sophiebits",2016-11-29 19:48:24,2016-11-29 21:22:16
PR,Fix reordering of bailed out children,,,sophiebits,2016-11-29 22:55:24,2016-11-29 22:57:04
PR,Fiber Make bad element type message same as in Stack,This makes Fiber emit the same message as Stack aside from the missing owner information The change is not very useful by itself but I noticed it helps catch regressions in error handling code particularly around swallowing errors originating in the reconciler Now that the test passes such regressions will be visible for example 8304 is affected by such a regression but it wasn t visible because the test was always failing anyway I also added a separate test for including owner name It passes in Stack but not in Fiber We can come back to it when we work on warnings that also need it,,gaearon,2016-11-30 16:09:14,2016-11-30 16:29:42
PR,Fiber Add tests for recovery from errors thrown in the reconciler,Test that errors in the reconciler can be caught by error boundaries and that we can still schedule updates if they are uncaught I want to get this in because 8304 is regressing on them,,gaearon,2016-11-30 16:53:07,2016-11-30 17:00:15
PR,Fix isFiberMounted exports,This got messed up in a merge conflict It is only used for one invariant in renderSubtreeIntoContainer,,"sophiebits,gaearon,sophiebits,gaearon,gaearon",2016-11-30 19:47:55,2016-11-30 20:04:01
PR,Refs between fiber and stack,I feel gross Better ideas welcome,,"sophiebits,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits",2016-11-30 01:39:16,2016-11-30 20:17:03
PR,Fiber Support SVG by adding a container stack,I added a test for SVG For it to pass we need to keep track of the closest host container e g svg or foreignobject on the stack s Since we need the stack anyway I also used it to append initial children in the begin phase instead of the complete phase I am using two separate stacks one for container nodes such as svg and foreignobject and another one for any new nodes so that we can add children to them immediately s Changed to use a single container stack per review comments I can do the parent stack in a follow up,,"gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon",2016-11-24 21:06:55,2016-11-30 21:12:46
IS,Calling setState inside the onTouchStart event prevents all other touch events to occur,Do you want to request a feature or report a bug Bug What is the current behavior When the callback supplied to onTouchStart calls this setState the subsequent touch events that should work normally do not fire See this jsfiddle example of this behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested on React v15 4 1 React v15 3 2 in Chrome 54 on Linux Android,,"kevinzwhuang,aweary,kevinzwhuang",2016-11-30 22:49:38,2016-11-30 22:58:43
IS,shallow compare test renderer have strict dependencies,I'm using multiple libraries which call for various versions of React and React Native NPM tries to find a common compatible version for everything but these warnings persist npm WARN react addons shallow compare 15 3 2 requires a peer of react 15 3 2 but none was installed npm WARN react test renderer 15 4 1 requires a peer of react 15 4 1 but none was installed Is it necessary to tightly couple the versions It would be beneficial to loosen the dependencies and let the consumer of the library choose which version to use,,"aweary,gaearon,aweary,gaearon",2016-11-30 20:40:46,2016-11-30 23:03:57
PR,Fiber New error boundary semantics,Error boundaries take 4 Supersedes Recovering from an error boundary no longer uses Task priority by default The work is scheduled using whatever priority created the error Error handling is now a side effect that happens during the commit phase The default behavior of an error boundary is to render null Errors do not propagate except when an boundary fails Conceptually this would be like throwing an error from a catch block A host container is treated like a no op error boundary The first error captured by a host container is thrown at the end of the batch Like with normal error boundaries the entire tree is unmounted TODO x Rebase on latest master x Fix last failing test x Ensure the context stack correctly unwinds on errors The scheduler is getting a bit messy difficult to work with especially with all the perform functions I will try to clean some of the accumulated cruft in a future PR,,"acdlite,sebmarkbage,gaearon,gaearon,gaearon,gaearon,gaearon,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,sophiebits,gaearon,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite",2016-11-16 16:59:56,2016-12-01 00:54:20
PR,Fiber Clear existing text content before inserting children,Fixes a bug when updating from a single text child or dangerouslySetInnerHTML to regular children where the previous text content never gets deleted Based on compare view fiberresettextcontent,,"acdlite,syranide,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage",2016-11-17 15:10:58,2016-12-01 02:08:41
PR,Update Travis config for new token,,,"sophiebits,sophiebits,tomocchino",2016-11-30 18:29:12,2016-12-01 05:03:01
IS,onPaste not triggered when using html svg elements in Google Chrome,I have the following React component classes I am unable to listen for paste event in Google Chrome in Firefox it works fine The interesting thing is that if I add an HTML element with content without content it does not paste as child the paste event is triggered I checked the developer tools of the browser the paste event is triggered always but it is stopped somewhere in React code when there is only a svg child element or there are a svg child element a html child element without any content Open following examples in Google Chrome and Firefox for comparison Example with not working paste listener Example with working paste listener Instructions to use the examples Copy something in the clipboard click on the blue area to focus the div element paste what you have in the clipboard using Ctrl V and see the console if it is logged,,aweary,2016-11-30 16:24:52,2016-12-01 09:15:35
IS,Objects are not valid as a React child error occurring in IE11 on Win7 after update to 0 15 4,bug After updating from 15 3 2 to 15 4 0 the error is showing up in previously working code The app fails to load in IE11 on Win 7 with the following error SCRIPT5022 Objects are not valid as a React child found object with keys typeof type key ref props owner store If you meant to render a collection of children use an array instead or wrap the object using createFragment object from the React add ons Check the render method of App File bundle js Line 13847 Column 6 It continues to work fine in all other browsers Thanks,,"gaearon,gaearon,gaearon",2016-11-29 01:22:43,2016-12-01 12:20:05
PR,add dependencies to react test renderer and react addons,What and Why When using npm version 2 object assign and fbjs were not installed This PR adds object assign and fbjs as explicit dependencies to both react test renderer and react addons,,"gaearon,gaearon,gaearon,gaearon,gaearon",2016-11-30 20:26:01,2016-12-01 16:37:14
PR,Fiber Add more tests and fix an issue with incremental error handling,See individual commits Add more tests for incremental error handling Added more tests that test how error boundaries behave inside different priorities These new tests are currently failing This is not a big deal but if people call error reporting services in unstable handleError they will get each error twice on mounting Always reuse progressChild when starting Task work The above problem happens because Task is a higher priority work than animated or deferred and so it throws away the already progressed child This is why we render the failed path twice before continuing with the success path As a fix I changed it to always reuse the progressed child when we are working with Task priority I m not sure this is the right fix Maybe we should only do this for error handling work I couldn t figure out how to come up with a counter example to this so I d appreciate special attention there Verify batched updates get scheduled despite errors This just adds a few tests I planned to do earlier so that we don t accidentally regress on them,,"gaearon,sebmarkbage,acdlite,gaearon,acdlite,sebmarkbage,gaearon",2016-11-05 10:05:47,2016-12-01 16:56:29
IS,Try cath render childrens,Hi i have a problem in my application this use a window with various childrens captura de tela 2016 12 01 as 09 32 35 Each card is a children The problem occurs when load data from server and a runtime exception happens Then others childrens not load I believe the problem would be solved with try catch in father component but I did not figure out how to do it,,"gaearon,gaearon",2016-12-01 11:44:37,2016-12-01 18:01:28
IS,unstable handleError cause an unmountComponent of null error,Do you want to request a feature or report a bug bug What is the current behavior I'm trying to handle errors that happens in the render method for example The only solution that I found is to have a try catch block in the render function but I do not like it So I'm hoping to find a better solution What is the expected behavior Dispatch the action and redirect to the page that I want Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 2 React DOM 15 3 2 redux 3 6 0 Google Chrome macOS Sierra,,gaearon,2016-12-01 11:43:15,2016-12-01 18:04:04
PR,Fiber Rename HostContainer HostRoot Portal HostPortal,No other changes,,gaearon,2016-12-01 17:33:45,2016-12-01 18:36:28
PR,Fiber Force rerender a failed tree,This lets us preserve the invariant that if a tree contains pending work its root is scheduled Previously a tree with an uncaught error broke this assumption Now we can exit early in scheduleUpdate once we reach a node whose priority matches Closes,,"acdlite,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,sebmarkbage,acdlite,gaearon,acdlite,sebmarkbage,gaearon,acdlite,gaearon,acdlite,sebmarkbage,acdlite,gaearon,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite,gaearon",2016-11-07 22:58:44,2016-12-01 20:24:15
PR,Add test for unmount remount in a single batch,Fails in Fiber Could be fixed by clearing the container at commit time rather than in ReactDOMFiber render synchronously,,sophiebits,2016-12-01 05:26:21,2016-12-01 22:19:00
IS,Documentation Examples on PureComponent Vs Component,In here react purecomponent I think it would be nice to have some examples comparing PureComponent against Component,,"lacker,lacker,lacker",2016-11-10 13:03:07,2016-12-01 23:09:22
PR,Add return to render,Some render functions were missing the return statement,,aweary,2016-12-01 22:20:37,2016-12-02 15:11:37
PR,Update reference react md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-12-01 19:36:20,2016-12-02 15:16:39
IS,Webpack fails to build React with SyntaxError,I have found a strange issue with React when packaged using webpack The issue does not make sense as both the browser when used in development mode and the webpack build pipeline throw SyntaxError on ternary operator is should not report any issues,,"gaearon,aweary,aweary",2016-12-02 14:51:29,2016-12-02 15:48:01
PR,Add circle yml CircleCI support,Paul wrote most of this but I attempted to finish it with Ben is help For context we are interested in moving over to CircleCI for now because our Travis queue for the facebook org on GitHub is perpetually hours behind On the other hand Circle builds are able to start almost instantaneously,,tomocchino,2016-12-02 21:00:35,2016-12-02 22:18:13
PR,Only upload build if server exists,,,sophiebits,2016-12-02 22:31:13,2016-12-02 22:31:17
PR,Fiber Support SVG,Replaces 8417 Instead of keeping a stack we are notifying the renderer when the work begins and ends This lets DOM renderer avoid the stack because namespace logic is not complex This is not done yet missing portals and unwinding on error handling but I want to get early feedback on the approach,,"gaearon,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2016-12-01 18:36:22,2016-12-02 23:32:31
PR,Fiber Fix findDOMNode and findAllInRenderedTree,This strategy finds the current fiber It traverses back up to the root if the two trees are completely separate and determines which one is current If the two trees converge anywhere along the way we assume that is the current tree We find the current child by searching the converged child set This could fail if there is any way for both return pointers to point backwards to the work in progress I do not think there is but I could be wrong This may also fail on coroutines where we have reparenting situations,,"sebmarkbage,sophiebits,sophiebits,sebmarkbage",2016-11-29 02:28:48,2016-12-03 00:34:46
PR,Fix lint,Sorry,,sebmarkbage,2016-12-03 00:53:21,2016-12-03 00:53:42
IS,dist files are built with process env NODE ENV development,Do you want to request a feature or report a bug Bug What is the current behavior It appears that the dist files have been built bundled with the wrong process env NODE ENV If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Open any of the dist files and search for development 'production' What is the expected behavior If process env NODE ENV was correctly set at build time the expectation would be production 'production' Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Version 15 4 1 is affected along with react dom Unknown if other versions were similarly affected,,aweary,2016-12-03 17:56:22,2016-12-03 18:04:54
PR,Removed unneeded code,No need to reference the global object and certainly not the way it was being done,,sebmarkbage,2016-11-27 03:29:27,2016-12-03 20:39:51
IS,thead props children should always be an array,thead can contain one or more tr elements If it contains 1 then thead props children is an object if it contains 1 then it is an array Would make it much simpler to use if it always returned an array,,aweary,2016-12-04 12:31:43,2016-12-04 16:56:21
PR,Tweak Yarn installation to not run if it is already installed,Followed the instructions for installing Yarn in CircleCI here Sending this PR to test it out Hopefully once Circle machines all have Yarn preinstalled this will save us a small amount of build time,,tomocchino,2016-12-04 17:53:40,2016-12-04 19:00:30
IS,React app not rendering in IE11 and below,Do you want to request a feature or report a bug BUG What is the current behavior App does not render in IE11 and below If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Build React app with Webpack Launch IE11 or below not an emulator You will see a blank screen or half compiled React app with the following error 24f8f6e8 afde 11e6 9a6f a3cc6355f55c What is the expected behavior To render as it does in Chrome Firefox etc Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React We have temporarily shrink wrapped our dependencies so that we can continue to serve our app We are starting to believe that it is coming from a dependency that react apollo or webpack may be relying on Shrink wrapped versions of our dependencies left is the new one that is broken and the right one is the old one that continues to work across all browsers,,"aweary,gaearon,gaearon,aweary,gaearon,nhunzaker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,zombieJ,gaearon,gaearon",2016-11-22 14:42:34,2016-12-05 14:26:58
IS,Make sure react test renderer and others depend on object assign,Currently react test renderer probably does not depend on object assign but it needs to issuecomment 264885088,,"sophiebits,gaearon,sophiebits",2016-12-05 20:15:06,2016-12-05 20:16:55
IS,Ca not Render Meta tags on Server side,Do you want to request a feature or report a bug I am reporting a bug What is the current behavior I am trying to iterate over an array of objects that represent meta tags but I am getting an error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This is a server side rendering issue with Express SyntaxError Users robert domain watchdog views metas jsx Unterminated JSX contents 13 65 11 12 this props metas map function meta 13 return meta name meta name content meta content 14 15 16 at Parser pp 5 raise Users robert domain watchdog node modules babylon lib index js 4246 13 at Parser pp 8 jsxReadToken Users robert domain watchdog node modules babylon lib index js 6039 12 at Parser readToken Users robert domain watchdog node modules babylon lib index js 6412 21 at Parser nextToken Users robert domain watchdog node modules babylon lib index js 684 19 at Parser next Users robert domain watchdog node modules babylon lib index js 609 10 at Parser eat Users robert domain watchdog node modules babylon lib index js 616 12 at Parser pp expect Users robert domain watchdog node modules babylon lib index js 1615 15 at Parser pp 8 jsxParseOpeningElementAt Users robert domain watchdog node modules babylon lib index js 6314 8 at Parser pp 8 jsxParseElementAt Users robert domain watchdog node modules babylon lib index js 6333 29 at Parser pp 8 jsxParseElement Users robert domain watchdog node modules babylon lib index js 6388 15 What is the expected behavior For the React Parser to work correctly over meta tags on the server side Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I have never tried this before but it seems there are lots of libraries like react helmet that use the rewind api to solve for this I think that is not right I should be able to render Meta tags without having to jump through hoops express react views 0 10 2 react 15 3 0 react addons create fragment 15 3 0 react addons css transition group 15 3 0 react addons linked state mixin 15 3 0 react addons shallow compare 15 3 0 react addons update 15 3 0 react click outside 2 1 0 react day picker 2 4 1 react dom 15 3 0 react masonry component 4 2 2 react pure render 1 0 2 react redux 4 4 5 react tap event plugin 1 0 0 react virtualized 7 9 1 redux 3 0 4 redux thunk 1 0 0,,,2016-12-05 20:36:18,2016-12-05 21:27:45
IS,Cannot call function start with ' ' by using this function name in componentDidMount,Do you want to request a feature or report a bug Report a bug What is the current behavior Cannot call function start with ' ' by using this function name in componentDidMount What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Windows React 15 4 1,,"gaearon,gaearon,gaearon",2016-12-05 23:03:29,2016-12-05 23:13:58
IS,Performance monitoring does not record any behaviour on page reload,Bug Using react perf appears to correctly switch on performance monitoring but no React measures show up in the timeline To reproduce 1 In Chrome go to any page with non production React code and add the react perf query string as described in profiling components with chrome timeline For example 2 Open Chrome DevTools and click to the Timeline tab 3 Refresh the page 4 When the page has refreshed look at the timeline and note that there are not any react specific marks 5 In the console do performance getEntriesByType measure you will get an empty array when you should get actual performance measures Tested with React 15 4 1 on Chrome I would expect to see React specific events e g mount events for the React components in the timeline and to be able to access performance measures from the console Looking in the code it appears that all recorded performance measures are immediately deleted which may be causing this issue See Immediately after every measurement we instruct the browser to clear the same measure by name so it seems like no measurements ever take place Removing the final two lines of the function restores expected behaviour,,"gaearon,gaearon",2016-12-06 10:57:04,2016-12-06 11:53:54
PR,Fiber Nits,Just some best practices,,"sebmarkbage,acdlite,sebmarkbage,sebmarkbage",2016-12-06 19:10:21,2016-12-06 19:15:46
PR,Use Portals to test batching across roots,This does not work by default in Fiber you have to opt in with a Portal to get the explicit ordering guarantees,,"sebmarkbage,sophiebits,sophiebits",2016-12-06 21:41:38,2016-12-06 21:46:36
PR,Update facts tracker for Circle,,,sophiebits,2016-12-07 06:14:02,2016-12-07 06:24:19
IS,Add debug info for error TypeError Cannot read property 'getHostNode' of null,Do you want to request a feature or report a bug feature What is the current behavior When there is an undefined component somewhere deep in the hierarchy React throws this message TypeError Cannot read property 'getHostNode' of null at Object getHostNode webpack react lib ReactReconciler js 64 28 What is the expected behavior Please add debugging information about a place where this happens At least name of current or parent node Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 2,,"gaearon,gaearon,gaearon",2016-11-11 08:13:04,2016-12-07 14:46:12
IS,ReactCSSTransitionGroup is not work,I want to fade in animation my code is but there are no changes anyone help,,gaearon,2016-11-04 15:48:29,2016-12-07 14:47:04
IS,componentDidMount would not not rerendering the component,Look I got this problem it shows on my console which is app js 1 Uncaught TypeError Cannot read property 'getHostNode' of null and I do not know wtf is this Error and another serious problem is here here is my code and that is it I know this code may not look very good but this problem is killing me I try to debug it but I just can not,,"brigand,gaearon,aweary,gaearon,brigand,gaearon,gaearon,gaearon,gaearon,gaearon",2016-10-29 13:00:09,2016-12-07 14:48:45
IS,Cannot add new properties to a received object before to call a fn with this object in argument without freezing,Very strange bug behaviour here react 15 1 0 The Following code works,,"aweary,aweary",2016-08-16 09:22:35,2016-12-07 14:49:31
IS,DangerouslySetInnerHtml not working properly on simple example,Using React 15 3 0 latest Here is what I tried and how it goes wrong This works The description property is just a normal string of HTML content However it is rendered as a string not as HTML for some reason enter image description here Any suggestions,,"jimfb,brigand,syranide",2016-09-28 22:20:02,2016-12-07 14:51:14
IS,Type property missing for ReactElement class in IE 11,I found the below bug while debugging on IE 11 Current Behavior Type property missing for ReactElement class in IE 11 It is present in all other browsers including Edge Expected Behavior Type property should be present React Version 15 0 1 Browser IE 11 OS Windows 10 ReactElement which has the issue,,"aweary,aweary,aweary",2016-12-05 15:01:35,2016-12-07 15:56:46
PR,Do not reset innerHTML for elements with null children,This is required to support certain third party scripts as well as other fiber renderers eg the new ReactART renderer,,bvaughn,2016-12-07 20:07:43,2016-12-07 21:07:58
PR,Remove condescending language in thinking in react md,It s hard to not read the phrase Our designer apparently is not very good as condescending against designers,,,2016-12-07 22:38:56,2016-12-07 22:41:58
PR,Support parallelism on Circle,image,,"sophiebits,gaearon",2016-12-07 07:15:25,2016-12-07 22:55:34
PR,documentation designers are friends not fodder for jokes,hello friends i do not particularly like it when documentation makes jokes at the expense of my colleagues so i have gone ahead and removed this unnecessary nugget,,"sebmarkbage,sophiebits,sebmarkbage",2016-12-07 22:33:30,2016-12-07 23:09:38
PR,Add test for componentDidUpdate with a bailout in the middle,This is one of the cases where Fiber diverges,,"sebmarkbage,sophiebits,sophiebits,sebmarkbage",2016-12-07 23:02:30,2016-12-07 23:14:32
PR,Do not reset inner html for null children,This is required to support certain third party scripts as well as other fiber renderers eg the new ReactART renderer,,"bvaughn,acdlite,sophiebits,bvaughn,bvaughn,sophiebits,bvaughn",2016-12-07 21:13:56,2016-12-07 23:35:13
PR,Do not set innerHTML if content is empty,From D4296244 Each had a component with innerHTML '' causing us to go into HTML parsing code in the browser Doing this takes 0 03ms per parse call which was 10x slower than skipping it,,"sophiebits,sophiebits",2016-12-08 00:23:24,2016-12-08 01:20:58
PR,New fiber based ReactART renderer,Based on reactjs react art pull 105 this PR Imports new fiber based ReactART renderer Originally reviewed in www Split ReactART into ReactARTStack and ReactARTFiber based on ReactDOMFeatureFlags Updates passing tests 7 previously failing tests now pass 1 new passing test added,,"bvaughn,sebmarkbage,bvaughn,bvaughn",2016-12-07 21:16:19,2016-12-08 02:35:48
PR,Fiber Scheduler improvements,x Split the commit phase from performUnitOfWork so that we can complete a tree without having to commit it within the same frame x Consolidate the work loop functions x Consolidate try catch finally blocks Aim for three one for the work loop and one for each pass of the commit phase x Avoid checking for failed work every time so that we do not pay a penalty in the normal case When we know there are errors somewhere in the tree use a forked version of the work loop that performs the check and is slightly slower In the normal case use the faster version without the check x Error recovery work should not be incremental Give it Task priority Why x Fix bug from,,"acdlite,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,acdlite,gaearon,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,gaearon,acdlite,acdlite,gaearon,acdlite,acdlite,sebmarkbage,acdlite",2016-12-02 06:19:45,2016-12-08 07:09:09
PR,Fiber Demonstrate an error boundary bug,acdlite This one is for you I changed the test for rethrowing behavior in Fiber from literal rethrow to calling setState and attempting to render broken children again We should probably test both cases but this one is currently failing with Cannot commit same tree Instead I think it should propagate the error to the parent boundary or fail There is also some sort of shared mutable state because when this test fails it also brings down another test in the same file,,gaearon,2016-12-02 19:40:50,2016-12-08 07:09:22
PR,Fixed lint error in master,Fixes lint error introduced in commit 343fb958 Will auto merge once CircleCI finishes,,"bvaughn,acdlite,sophiebits,sophiebits,acdlite,bvaughn",2016-12-08 02:37:56,2016-12-08 07:18:08
PR,Update CHANGELOG md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-12-07 18:16:58,2016-12-08 18:07:53
IS,some instances change a same state,Do you want to request a feature or report a bug image click instanceA the state of 'visiable' will be true but click instanceB the instanceA is visiable always be true how to do that click A it is visiable will be true and then click B B is visiable will be true and the A is visiable will be false What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2016-12-08 10:59:43,2016-12-08 19:59:28
PR,Fiber Support SVG,Based on 8417 discussion in issuecomment 264572854,,"gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,bvaughn,bvaughn,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon",2016-12-03 01:36:16,2016-12-08 21:10:48
PR,Fiber Read Event Handlers from the Current Fiber,This ensures that we read the event handlers from the current Fiber since the target return pointer is not sufficient even if target is the current Fiber I'm not super happy with this solution but I do not have a better idea atm,,"sebmarkbage,sebmarkbage",2016-12-03 04:05:07,2016-12-08 21:49:52
PR,Add unit tests for event bubbling in portals,These bubble through the portal and up to the parent that rendered the portal,,"sebmarkbage,sebmarkbage",2016-12-07 03:09:06,2016-12-08 21:51:21
PR,ReactDOMFiber test Rename portal usePortal,Fixes lint since I used portal as a variable name We typically use a verb for functions,,sebmarkbage,2016-12-08 22:22:48,2016-12-08 22:22:53
IS,React DOM Server still generate data reactid,document createelement is in and data reactid is out I still get the data reactid attribute in my html when using ReactDOMServer renderToString element Here version of my react and react dom,,"koba04,gaearon",2016-12-09 02:17:05,2016-12-09 06:55:20
IS,Documentation Translations,Hello there Are there any plans for including official community supported translations for React docs At gang we have just completed Vue js docs Russian translation and we also have some progress with React ones I believe at least Japanese and Chinese communities would also like to have their own translations So could we integrate it somehow UPD I see some random translation files under docs community Is it how it is done now How is the document version to display being detected I mean I can not see any header dropdown language choice or something,,gaearon,2016-12-09 14:28:47,2016-12-09 15:22:12
PR,WIP Fiber React Native Fiber,Fix Invalid layout for 23 RCTView 0x10053ac60 reactTag 23 frame 3 207 272 68 layer CALayer 0x17002c520 position 139 nan bounds 0 0 272 nan Seems to be a issue not related to Fiber Having the issue when running RN master with old renderer Cleanup instances on native side remove cached nodes from component tree devtools fix removedChildren count tu was not what we expected tu x add insertBefore 8d558bd x add container info d813f1e x move stack shared modules into it is own folders 7694ea6646ee1e129e50c5d90267a03eb317f3e2 x clear old children when updating container 60cc310a04fe49fd7be4a8e295f063b0b6618889 0700a88864af6a34a4749bd412c652f85d25da64 x support going from multi child to single child and opposite 257cdbf append full child in children list might be useful if we want to remove the tag model later on split some parts into a ReactNativeFiberComponent like in DOM try to remove children list and use something provided by Fiber make sure tests pass add tests remove temp build script,,"edvinerikson,edvinerikson,sebmarkbage,edvinerikson,sebmarkbage,edvinerikson,edvinerikson,sebmarkbage,sebmarkbage,edvinerikson,edvinerikson,sophiebits,sophiebits,edvinerikson,sebmarkbage",2016-11-20 16:39:09,2016-12-10 13:20:28
IS,Failed to find a valid digest in the 'integrity',When i run the build command and upload my files to server this error appears in mobile browsers Failed to find a valid digest in the 'integrity' attribute for resource '' with computed SHA 256 integrity 'fhBe EZQ6zPH PQFiIlVZjwvoWQGAWe1s8BEyp2TJ6k ' The resource has been blocked,,gaearon,2016-12-10 15:16:53,2016-12-10 16:00:43
PR,Use onInput instead of onChange,See,,sebmarkbage,2016-12-10 15:51:26,2016-12-10 23:19:22
PR,Properly closed button tag in 'click to alert' example,Very minor edit to tutorial md,,"aweary,gaearon",2016-12-10 05:10:31,2016-12-11 00:33:06
PR,update example to use this state,In the previous example the code works even without using bind this in the constructor the reason being handleClick does not even use this and its just calling the global function alert this change make use of this via access this state,,"gaearon,gaearon",2016-11-26 13:09:16,2016-12-11 13:41:49
PR,Update jsx in depth md,,,,2016-12-09 15:58:42,2016-12-11 13:43:40
IS,Requesting review feedback for my blog The Inner Workings Of Virtual DOM,I wrote a blog post to make it easy for people to learn how Virtual DOM works I'm using Preact not react to explain it Wondering how much of it is similar to what React does Appreciate any review feedback Thank you rajaraodv the inner workings of virtual dom 666ee7ad47cf,,"gaearon,aweary",2016-12-10 05:09:14,2016-12-11 20:19:46
IS,15 4 1 version of react and react dom do not work together,I have used the 15 4 1 version of the react and react dom together I get the following errors image image This is my set up image image I do not have the problem if I use the same code but the 15 1 0 version instead of 15 4 1,,"gaearon,gaearon",2016-12-11 23:43:07,2016-12-11 23:47:34
IS,Attach ReactEventListener for ajax dynamically loaded content,Is there any way to attach onChange event listening like we do in Render function HTML that loaded with AJAX and inserted via dangerouslySetInnerHTML Example top But can not get it work with callback The issue is when dispatchEvent called bookKeeping variable refs to div not on dynamically loaded Nodes Any suggestion will be great EDIT Possibly looks like I want to trigger enqueuePutListener from React Dom manually P S I'm trying to work only with Native things Do not suggest jQuery or document addEventListener I looking for multi browser and multi input types solutions like is done in React,,aweary,2016-12-09 12:16:20,2016-12-12 07:22:19
IS,react test renderer crashes re rendering react native TextInput,Do you want to request a feature or report a bug bug What is the current behavior react test renderer crashes rerendering component when props change What is the expected behavior No exception TextInput value prop set to 'A' Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 4 1 react native 0 39 1 react test renderer 15 4 1 jest 17 0 3,,"aweary,sophiebits,sophiebits",2016-12-09 10:18:06,2016-12-12 09:56:04
PR,Increase version,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-12-12 17:03:41,2016-12-12 17:23:28
PR,Add rootContainerInstance param to createTextInstance,This mirrors a recent change c87ffc0 in params passed to createChild and cleans up a root container hack currently required for the native fiber renderer to create text views,,bvaughn,2016-12-12 18:14:07,2016-12-12 19:20:47
PR,Fiber Fix portal bugs,Enable additional failing portal tests Added new tests for portals One of them is completely new another one is the old one that used to loop forever but now just fails Fix portal unmounting When we unmount a portal we need to unmount its children from itself This is similar to what we would do for a root if we allowed deleting roots This fixes an error unmouting a portal Skip portals when looking for host siblings 4596fc48ba371237ef83868d411fe684e1c877df A portal is not part of that host tree despite being a child This fixes an error inserting a portal sibling Add a failing test for portal child reconciliation 3f2129aeee8ba11ca803f68395a6978a8c8cf3b3 It is failing because portal bails out of update seeing null in pendingProps It is null because we set pendingProps to nextPortal children which is null in this test Fix the bug when switching to a null portal child ed9747deedf11455ba3eb65648007ab99c26ea58 If pendingProps is null we do a bailout in beginWork This prevents unmounting of the existing child when the new child is null We fix this by changing portal fiber is pendingProps to be the portal object itself instead of its children This way it is never null and thus does not cause a false positive in the bailout condition See more commits below after discussion,,"gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,gaearon",2016-12-08 21:13:51,2016-12-12 22:18:55
PR,Fiber Remove array indirection in host context,As discussed in discussion r90958634,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon",2016-12-09 21:26:45,2016-12-12 23:20:40
IS,onChange not registering state change with paste then delaying new state changes,Bug Report onChange not registering state change with paste then delaying new state changes Current Behavior I have a textinput box that has an onChange which takes a function as a prop which sets state in a parent component onChange is not registering an initial copy and paste Oddly when I type an extra key after what I pasted it returns the string length count of the original paste and not the count with the additional character It appears that React is one change behind despite registering that something changed To make this more clear I added some console logs to see the behavior and found this 1 With the initial paste it is triggering the onChange event in this case setAccountKey but despite explicitly setting state it is not setting it The key I'm pasting is 72 characters verified by irb but this state accountKey length is displaying as 0 2 When I type another character making 73 characters it is triggering the state change that should have been initiated in step one and returning this state accountKey length as 72 and this state accountKey as the original pasted key 3 When I type yet another character it is again one step behind and now printing what it should have printed in step 2 Here is the abridged code Expected behavior On paste accountKey state would be the key pasted and have a length of 72 Versions Tested React version 15 4 1 Chrome version 54 0 2840 98 Similar issue 7211,,"gaearon,gaearon",2016-12-13 00:17:38,2016-12-13 00:34:44
IS,React not clearing data reactid and data react checksum attributes from DOM on mount,What is the current behavior After rendering a React view on the server React appears to mount without errors on the client but does not remove the data reactid and data react checksum attributes from the DOM So far I have only observed the issue when using React Router v4 also reported as ReactTraining react router 3984 but the RR folks have characterized it as a React issue If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Repro repo at What is the expected behavior When mounting React should remove the extra attributes from the DOM Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 3 2 in all browsers tested so far Chrome Safari IE Does not appear to get better after rolling back to earlier React versions but could not be reproduced with React Router 4 Happy to provide as much debugging information as I can but honestly not sure where to start troubleshooting on my own Thanks in advance for any guidance or illumination you can provide,,,2016-10-02 02:19:21,2016-12-13 01:49:01
PR,Renamed InitializeJavaScriptAppEngine to InitializeCore,Prerequisite for the new ReactNativeFiber renderer,,"bvaughn,sophiebits,bvaughn",2016-12-12 19:32:22,2016-12-13 05:32:54
PR,Test,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-12-13 06:59:44,2016-12-13 07:33:51
PR,Fiber Cover all findDOMNode error cases in fiber,The throw cases for findDOMNode were not covered by Fiber properly If a component being rendered is not mounted throw If the object passed to findDOMNode is neither a component or an element throw,,"rricard,sebmarkbage,sebmarkbage,rricard,rricard,sebmarkbage,rricard,gaearon,rricard,rricard,gaearon,rricard,gaearon,rricard,gaearon,rricard,rricard,rricard",2016-10-30 15:53:27,2016-12-13 16:01:53
PR,Disable coverage on PRs on Circle,,,sophiebits,2016-12-13 20:23:08,2016-12-13 22:27:25
PR,Drop runtime validation and lower case coercion of tag names,In 2756 we ended up using toLowerCase to allow case insensitive HTML tags However this requires extra processing every time we access the tag or at least we need to process it for mount and store it in an extra field which wastes memory So instead we can just enforce case sensitivity for HTML since this might matter for the XML namespaces like SVG anyway We introduced runtime validation of tag names because we used to generate HTML that was supposed to be inserted into a HTML string which could have been an XSS attack However these days we use document createElement tagName in most cases That already does its internal validation in the browser which throws We are now double validating it Stack still has a path where innerHTML is used and with this change we still apply validation there However in Fiber we can remove it completely since we only use document createElement tagName and never generate HTML,,"sebmarkbage,gaearon,gaearon,gaearon,sophiebits,sebmarkbage,bvaughn,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2016-12-13 03:41:16,2016-12-13 22:54:21
PR,Fiber WIP Include component stack in Fiber,This gets some tests passing Still needs work for example I never clean up that data right now I want to get feedback on initial approach Do Flow hacks make sense here,,"gaearon,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon",2016-12-13 02:21:27,2016-12-14 01:18:37
PR,Give setState callbacks componentWillUpdate semantics,This matches the behavior in Fiber Normally we would change Fiber to match Stack to minimize breaking changes for the initial release However in this case it would require too large a compromise to change Fiber to act like Stack,,"acdlite,gaearon,sophiebits,acdlite,sophiebits,gaearon,acdlite,gaearon",2016-12-08 02:52:33,2016-12-14 01:22:42
PR,HostRoot no longer pops context provider during complete phase,In the begin work phase we call pushContextProvider for ClassComponent s In the complete work phase we call popContextProvider for both ClassComponent s and HostRoot s The result is that we end up popping more times than we should This PR removes the popContextProvider call for HostRoot and adds an invariant warning to popContextProvider as well Note that no new tests fail with the new invariant warning once the superfluous popContextProvider call is removed Several fail with it in place Note also that in the begin work phase we call pushHostContainer for HostRoot s and HostPortal s but we only call popHostContainer for HostPortal s during the complete work phase It seems like we should align these calls as well but I do not have enough context to tackle that yet,,"bvaughn,gaearon,gaearon,sebmarkbage,sebmarkbage,bvaughn,gaearon,bvaughn,gaearon,sophiebits,bvaughn",2016-12-13 20:02:12,2016-12-14 01:27:47
IS,Question support need a way to programmatically update field with defaultValue,Support question here I am looking for a robust and performant way to update an input field is text programmatically where the input field has defaultValue instead of value Something like this The problem I am having is that I want to sync with the database upon the onBlur event of the input field If I use value instead of defaultValue I can get this to work but there are two problems I see with using value instead of defaultvalue a much less performant updating the react component state on every keystroke b more importantly it makes my database sync logic more complex because I will update the React component state on every keystroke but only sync with the database on every onBlur I would rather not have to write that logic if possible I asked this question on SO Please let me know if you have any ideas thanks,,"gaearon,gaearon,gaearon,gaearon",2016-12-14 01:15:33,2016-12-14 11:09:16
IS,PropType validation fails when nesting validations,Do you want to request a feature or report a bug bug What is the current behavior App does not properly validate against nest React PropTypes testing If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo What is the expected behavior Should not fail proptype validation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4,,gaearon,2016-12-14 13:03:38,2016-12-14 14:21:57
IS,dangerouslySetInnerHTML and reg mark,Do you want to request a feature or report a bug bug What is the current behavior when setting dangerouslySetInnerHTML with a url that contains the text the result is stop 1 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Problem What is the expected behavior The text reg should not be replaced with Workaround Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Only tested in Chrome,,"Andarist,Andarist,aweary",2016-12-13 19:13:46,2016-12-14 15:30:11
IS,react test renderer componentWillUnmount is not called for inner component instance,Do you want to request a feature or report a bug bug What is the current behavior componentWillUnmount for inner instances is never called Here are 2 jest tests the first works not the second What is the expected behavior The two test above should pass All component that are unmounted should have the proper lifecycle whatever the nesting is Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 0,,"sophiebits,aweary",2016-11-30 10:38:31,2016-12-14 15:57:21
PR,Fix test renderer unmount,Fixes,,"aweary,aweary,gaearon",2016-12-07 09:36:56,2016-12-14 15:57:22
PR,Prepare new composite child before removing old,This matches what we do in Fiber and doing it this way is the only way we can prepare new views in the background before unmounting old ones In particular this breaks this pattern Previously this registered would always be set now after a rerender this registered gets stuck at null because the old child is componentWillUnmount runs after the new child is componentWillMount A correct fix here is to use componentDidMount rather than componentWillMount In general componentWillMount should not have side effects If Parent stored a list or set of registered children instead there would also be no issue,,"sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits",2016-12-14 04:38:23,2016-12-14 19:14:50
PR,ReactNative fiber renderer,This PR adds a new fiber based renderer for native dubbed ReactNativeFiber Existing native renderer has been renamed to ReactNativeStack and a new flags file ReactNativeFeatureFlags has been added to switch between the 2 renderers Other than injecting a findNodeHandle strategy ReactNativeStack has not been modified I have done some basic smoke testings with Android and iOS and the fiber renderer seems to work well with the following applications Catalyst Ads Manager and Facebook Events tab I have also added enhanced Flow types for UIManager with this PR If it is desirable for that work to be split into a separate PR let me know and I can break it off Known issues The inspector does not work with the Fiber based renderer The react native InspectorUtils getOwnerHierarchy reaches into stack internals in a way that is not Fiber compatible and causes a runtime error Testing various internal apps yields the following Facebook app Events page seems fine Catalyst seems mostly fine but errors with Unexpected context pop when I open the App UIExplorer Browser component Ads Manager errors with Unexpected context pop on some pages Open question How should we handle children ReactNativeFiber currently creates wrapper objects to bundle each native tag with its children and viewConfig This creates one wrapper object per native view which may be undesirable We could remove the wrapper object but we would need to pass some additional information to the HostConfig methods Pass type to the following methods commitUpdate This is necessary to get the viewConfig for validAttributes and uiViewClassName Update Already done via PR 8563 However viewConfig can not be removed for the time being because NativeMethodsMixin depends on it Pass children to the following methods appendChild finalizeInitialChildren insertBefore removeChild This is necessary to add set move remove children Provide a hook to recursively call remove children so that we can uncache all child nodes Without this the RCTUIManager errors with Invalid view set to be the JS responder As for tracking the children array there are 2 options to consider Option 1 Manage index information in Fiber Fiber has enough information to pass the additional params to the HostConfig but it would need to calculate and or store the child information in order to do so The benefit provided to ReactNativeFiber may be outweighed by Fiber having to do this for other renderers that do not require the information Option 2 Update native bridge A better solution to this issue might be to change the iOS and Android bridges to move away from the index based add remove methods For example iOS provides methods that could be used instead of our current index based ones addSubview for appendChild insertSubview aboveSubview for insertBefore removeFromSuperview for removeChild This would also need to be supported on the Android side perhaps with the following methods addView addView for appendChild View getZ and setZ methods Z for insertBefore should verify with someone more familiar with Android removeView removeView for removeChild,,"bvaughn,edvinerikson,edvinerikson,edvinerikson,edvinerikson,bvaughn,bvaughn,edvinerikson,sophiebits,bvaughn,edvinerikson,bvaughn,edvinerikson,bvaughn,edvinerikson,sophiebits,bvaughn,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,bvaughn,bvaughn,bvaughn,sophiebits,bvaughn,edvinerikson,sophiebits",2016-12-12 23:10:02,2016-12-15 04:05:17
PR,Fiber Fix some of the warnings,Since we do not know if fibers will be committed or not we do not want to use the component tree Instead we use the return pointers to form the stack since we have them in Fiber I'm keeping debugID because we will likely want it for other warnings perf DevTools but this part does not rely on it Instead I added debugSource and debugOwner that get copied from the element,,"gaearon,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon,sophiebits,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon",2016-12-14 00:05:55,2016-12-15 16:36:58
IS,Attempted to update component t What is t,feature request What is the current behavior Attempted to update component t that has already been unmounted or failed to mount What is the expected behavior Attempted to update component ProperComponentName that has already been unmounted or failed to mount We do not have a component t It would help if the error message would tell which component react 15 3 2,,"syranide,gaearon",2016-12-15 05:17:46,2016-12-15 22:08:14
PR,Fiber Separate priority for updates,Fixes a few issues with the way updates currently work Right now we reset the work in progress is update queue during the complete phase which means updates that occur during render or in a child is begin phase constructor cWM cWRP render are completely dropped This is not an ideal pattern but Stack supports it and it is fairly common The lack of support in Fiber today is causing a nasty infinite loop bug for some components at Facebook To fix this the update queue maintains a pointer to the first pending update When an update is used during reconciliation the pointer is set to null to indicate that the entire queue has been processed If new updates come in before the component is committed the pointer points to the first new update Then in the commit phase the processed updates are dropped but the pending updates are kept in the queue Another problem is that we use the same priority field for both props and updates and when we reset the priority field during the complete phase we do not have a way to read the priority of the pending updates In the first pass I will add a priority field to the update queue to solve this What we really want though is for each individual update to have its own priority so that when we render a component we only process the updates that match the current priority level x Do not clear pending updates from the queue x Move scheduling of update callback side effects to the begin phase x Add priority field to the update queue so that pending priority is not dropped May do in a follow up not needed to fix the infinite loop bug but necessary to get the Fiber triangle demo working x Sort the queue by priority and only render updates that match the current priority,,"acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite",2016-12-09 05:49:57,2016-12-16 00:41:53
IS,setState inside setState keeps an unprocessed call in queue,Do you want to request a feature or report a bug bug What is the current behavior A nested setState call is queued but only executed in next batch processing Additionally if any callback 2nd param is set this is executed immediately Demo see console debug output What is the expected behavior Everything in the queue should be processed also if attached during execution Tested with current 15 4,,"gaearon,gaearon",2016-12-13 14:15:26,2016-12-16 08:29:11
IS,React 15 4 1 missing files,,,"gaearon,gaearon,gaearon,gaearon",2016-12-16 08:17:25,2016-12-16 10:49:02
IS,render does not called inside HOC component with passing children,Hi I'm writing custom DataTable component and want to add support for rich cells Example of desirable usage The problem is that render method of Column children FakeId in example does not called In debugger result of renderRichCell looks ok can provide snapshot if needed No errors in console Maybe it is not valid to use React Children map in TableCell to transform elements with another parent,,gaearon,2016-11-09 15:51:38,2016-12-16 14:06:46
PR,Fiber UpdateQueue follow up improvements,Follow up to x Replace console error with warning module x Remove ForceUpdate effect and put the flag back on the queue x Do not need to track isEmpty x Do not drop updates from the queue in replaceState and always pass the accumulated state x Inline insertUpdateIntoQueue maybe Make the logic easier to follow when an incoming update is cloned versus when it is not x Do not update memoizedState in begin phase Later we will move all memoization from complete to begin x Get rid of weird for loops Either explode or use a helper function so it can be inlined x Clone update before transferring to callbackList,,acdlite,2016-12-16 01:36:38,2016-12-17 00:20:51
PR,Fiber Nesting validation warnings,Dirty right now will clean up tomorrow But it almost works Not very happy with different host context types in DEV and PROD but I do not know how else to avoid extra allocations in PROD It is annoying to have to recalculate own context for non reified text in host components so I probably need to pass own context to hosts Also I might need to add something like getRootHostContext to avoid passing root instance to every getChildContext,,"gaearon,sophiebits,gaearon,gaearon,gaearon,gaearon,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,gaearon",2016-12-16 00:39:27,2016-12-17 02:57:58
PR,bailoutOnLowPriority pushes context to mirror complete phase context pop,While testing the new ReactNativeFiber renderer on internal apps I discovered that the Ads Manager app as well as the App UIExplorer Browser component inside of Catalyst both threw the an Unexpected context pop error I traced the root cause of this error to the fact that in the complete phase we always pop context for context providers but in the begin phase we do not always push Specially if we bailout on low priority we do not push This causes us to pop too many times in certain cases This PR corrects the behavior making push pop mirror each other and adds a unit test that verifies the fix Both Ads Manager and App UIExplorer Browser function correctly once this fix is in place cc to review since we spoke about this briefly and you have some context heh about the problem cc as well since I think you implemented this stuff initially,,"bvaughn,gaearon,sophiebits,bvaughn,gaearon,acdlite,acdlite,gaearon,acdlite,bvaughn,bvaughn,gaearon,acdlite,gaearon,bvaughn,acdlite,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon",2016-12-16 18:45:01,2016-12-17 15:41:26
IS,scroll down event triggering twice or make scroll infinity,Do you want to request a feature or report a bug Bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce it bug Open demos in Chrome version 55 0 2883 75 m 64 bit and scroll down the table Expected results Open demos Chrome version 54 or above I also have tested scroll event at in component lifecycle ComponenDidMount and get the same result DEMOS or What is the expected behavior After scroll 1 times scrolling triggered 1 times and then stops Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React versions tested 15 3 2 15 4 0 OS Windows 10 Browser Google Chrome Version 55 0 2883 75 m 64 bit This bug appeared in the version of Chrome 55 0 2883 75 m 64 bit,,,2016-12-02 11:56:45,2016-12-17 19:01:23
PR,Do not warn about class components using getInitialState if state is set,We warn about getInitialState usage in class components in case users accidentally used it when they should have used state If they have also specified state though then it seems unnecessary to blacklist this property name Context,,"bvaughn,gaearon,bvaughn",2016-12-17 19:17:22,2016-12-17 22:28:21
PR,text,,,,2016-12-19 08:16:18,2016-12-19 08:35:34
IS,Dot notation for shape props Foo bar first something,Short What about Foo bar first something Long Lets have a class Foo Is it possible to say Foo bar first something and it sets only first but not second In addition if saying Foo defaults bar first something it would not override second if defined in defaults If this is not possible as I think and you think it should be please vote this up,,gaearon,2016-12-19 12:51:50,2016-12-19 15:32:56
PR,Fiber Queue top level updates,Use an UpdateQueue for top level updates ReactDOM render rather than mutate the pending props directly which effectively overrides the previous update This uncovered an inconsistency in Stack related to top level callbacks I will fix that in a separate PR Based on and blocked by I removed some of the tests in ReactIncrementalScheduling test js in favor of tests in both ReactIncremental test js and ReactIncrementalUpdates test js which if I'm correct cover the same things If I have deleted a test for a case you feel is no longer covered let me know and I will write a new one My goal was only to reduce noise in the test suite not to stop testing specific cases,,"acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,acdlite,sebmarkbage",2016-12-15 22:46:41,2016-12-19 21:56:19
PR,Revert Fiber Queue top level updates,was causing an infinite loop in test suite once it was merged to master My fault for merging before CircleCI finished Ca not figure it out yet so this PR reverts it,,acdlite,2016-12-19 23:35:00,2016-12-19 23:36:29
IS,Unused Function fiveArgumentPooler,There is no reference to any use of fiveArgumentPooler L68 in the codebase Deleted it without issue Sending a Pull Request,,,2016-12-18 04:41:02,2016-12-20 04:53:05
PR,Delete fiveArgumentPooler,Fixes 8596 I found no referenced use of fiveArgumentPooler L68 Deleted the function and ran all tests without issue Current search of fiveArgumentPooler Here CLA signed,,"aweary,sophiebits",2016-12-18 04:42:54,2016-12-20 04:53:05
IS,Cannot read property 'getHostNode' of null,feature request What is the current behavior Cannot read property 'getHostNode' of null What is the expected behavior An error message that tells me what is wrong so I know what to fix react 15 3 2,,"gaearon,aweary,gaearon,gaearon",2016-12-15 05:23:37,2016-12-20 04:55:05
PR,Fiber Queue top level updates take 2,Same as which was reverted due to a bug created after merging it with master with an extra commit to fix the bug The bug was caused by the renderer throwing while attempting to unmount a failed root,,"acdlite,aweary,acdlite",2016-12-20 02:10:31,2016-12-20 05:36:25
IS,Controlled input with type email produces console warnings with Chrome 52,Do you want to request a feature or report a bug Bug What is the current behavior Chrome 52 OSX produces console warnings with React controlled input type email fields The specified value foo is not a valid email address img width 521 alt screen shot 2016 08 12 at 4 10 08 pm src If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Chrome should not produce warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React OS OS X 10 11 6 Browser Chrome 52 0 2743 116 React version 15 2 0 including the current release 15 3 0 and master There was an earlier issue 6992 that was closed This comment issuecomment 237896095 documented it being still an issue but I did not see any currently open issues related to this problem,,"aweary,aweary,nhunzaker,aweary",2016-08-12 23:25:01,2016-12-20 14:03:46
PR,Update Flow to 0 37 1,Nothing really changes Might as well upgrade,,sebmarkbage,2016-12-20 03:43:03,2016-12-20 19:09:04
PR,ReactTransitionGroup Refactor Code,,,"mertkahyaoglu,maxdeviant,mertkahyaoglu,mertkahyaoglu,gaearon,mertkahyaoglu,maxdeviant",2016-07-13 09:25:33,2016-12-20 21:10:40
PR,Fiber Handle errors thrown when committing root,Previously this caused an infinite loop,,"acdlite,acdlite",2016-12-20 23:39:02,2016-12-21 02:02:02
PR,Adds the current stack addendum to warnings if element type is not valid,Implements 7856,,"gaearon,gaearon,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon,sophiebits",2016-10-04 04:31:52,2016-12-21 03:51:36
IS,Feature Request Support GestureEvent API,The GestureEvent API is a currently non standard API to target touch events on non touchscreen computers e g pinch gestures on a laptop trackpad Safari supports this starting from version 9 1 and is currently the sole browser to do so Apple uses this API for enhancing Apple Maps widgets with native gestures A live example can be seen on the WWDC page Currently it seems impossible to attach the event handlers for gesturestart gesturechange and gestureend declaratively via React elements The only solution is to attach the event handlers manually in componentWillMount componentDidMount or as part of ref callbacks A proper implementation would be highly appreciated NB Microsoft rolls their own version with MSGestureEvent Its usage seems less straightforward though MSDN Links Usage v vs 85 aspx API v vs 85 aspx,,aweary,2016-12-19 12:34:38,2016-12-21 17:14:41
PR,Schedule state and callback at the same time,Fixes an issue in both Stack and Fiber where enqueueSetState causes a synchronous update that flushes before enqueueCallback is ever called Now enqueueSetState et al accept an optional callback so that both are scheduled at the same time,,"acdlite,bvaughn,bvaughn,sophiebits,sophiebits,acdlite,acdlite,acdlite,acdlite,acdlite,bvaughn,sophiebits,sophiebits,acdlite,sophiebits,acdlite",2016-12-15 23:55:22,2016-12-21 19:24:09
PR,typo closing button tag,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2016-12-21 19:46:18,2016-12-21 19:50:21
PR,Improve error messages for invalid element types,cc,,"sophiebits,gaearon,iamdustan,aweary,sophiebits",2016-12-21 03:44:24,2016-12-21 21:17:34
PR,Fiber Refactor bailoutOnFinishedWork,See individual commits This consolidates bailouts on finished finished work into each branch behind the tag,,"sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage",2016-12-21 05:00:26,2016-12-21 21:22:21
PR,Fiber Add failing tests for context,This exposes a few bugs we have in the current implementation,,"gaearon,gaearon",2016-12-17 11:45:59,2016-12-21 21:51:43
PR,Call refs and lifecycles on indeterminate components,This was a bug because of the split between ClassComponent and IndeterminateComponent we did not mark effects or push context when we come from an indeterminate component Now they behave the same way The code is even clumsier than before but I'm pretty worried we will screw these up in the future if we do not unify the paths Not many components exercise this path but Relay containers do so it is noticeable in FB code,,"sophiebits,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,sophiebits",2016-12-21 06:22:17,2016-12-21 21:52:00
PR,Fiber Make requestIdleCallback and requestAnimationFrame shims async,They no longer need to be sync in tests because we already made DOM renderer sync by default This fixes a crash when testing incrementalness in DOM renderer itself,,"gaearon,acdlite,gaearon",2016-12-17 01:14:04,2016-12-21 22:04:06
PR,Jest preprocessor better aware of error codes codes json WRT caching,I recently broke the jest coverage Grunt task in my bvaughn shared context stack branch because I added new invariants warning messages and regenerated the error codes JSON file I was confused because master appeared to be broken as well It turns out that this was due to a caching issue in our preprocessor This PR makes that caching strategy aware of the error codes JSON file,,"bvaughn,sophiebits",2016-12-22 01:03:10,2016-12-22 01:12:18
PR,Added ReactFiberStack shared by ReactFiberContext and ReactFiberHostContext,Overview ReactFiberStack is the new underlying stack construct used by ReactFiberContext and ReactFiberHostContext The goal is to simplify the 2 context managers and to add earlier and better dev warnings when we pop unexpectedly This change set causes a lot of tests to fail as we are currently popping too many times and or in the wrong order I'm pushing this branch now to share with Sebastian as he is working on a related cleanup in beginWork Work needing to be done for this branch x Track Fibers with unique host contexts to avoid over popping see this issuecomment 268596186 x Tighten up the Fiber null type in ReactFiberStack by making sure that we always pass a Fiber down currently this is not the case for pushHostContainer and popHostContainer x Verify that no new test failures are caused by this refactor,,"bvaughn,sebmarkbage,sebmarkbage,sebmarkbage,bvaughn,bvaughn,gaearon,bvaughn,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,bvaughn,bvaughn,sebmarkbage,bvaughn,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,bvaughn,bvaughn,sebmarkbage,bvaughn,bvaughn,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,gaearon,bvaughn,sebmarkbage,bvaughn,sebmarkbage,bvaughn,sebmarkbage,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2016-12-21 01:56:30,2016-12-22 02:50:35
PR,Upgrade jest APIs to match www,D4298654 D4298713,,sophiebits,2016-12-09 01:06:37,2016-12-22 03:07:40
PR,Update to Jest 18,Best feature scrollback is finally properly cleared in watch mode,,"gaearon,gaearon",2016-12-22 00:52:04,2016-12-22 03:28:27
PR,Fiber WIP Fix context bugs,Going to look for more context bugs related to bailout and add relevant cases and fixes,,"gaearon,gaearon",2016-12-19 19:01:41,2016-12-22 13:22:35
IS,PureComponent not working with setState inside interval,Do you want to request a feature or report a bug Report a possible bug What is the current behavior Calling setState with new state insider a setInterval callback does not cause a re render when using PureComponent I have tried logging the next and previous state inside shouldComponentUpdate and they show up as identical even though they should not be If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Component should update Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version,,"gaearon,gaearon,aweary",2016-12-22 05:45:51,2016-12-22 16:10:52
PR,Fiber Add DEV only internal API for reporting unhandled errors,I'm using my existing debug tool handler here since it already exists and makes it easy to add some additional logging for debugging without touching Fiber sources I can extract it separately if you prefer onUncaughtError gets an error object and the component stack info if it exists You can override the handler by setting require 'ReactFiberInstrumentation' debugTool This is not a public API and should not be used externally,,"gaearon,sebmarkbage,sebmarkbage",2016-12-22 00:18:50,2016-12-22 16:14:05
PR,Fix context handling for errors thrown in ClassComponent render,Context providers are currently popped one too many times if an error is thrown by a context provider is render method In this case the begin phase is exited before context is pushed but we still pop it in This PR adds a test for this behavior failing before and fixes it by ensuring that we always push context before continuing or unwinding FWIW we plan to further clean up and improve the handling of context related code soon so this specific fix might be short lived This PR relates to 8593 Remaining work Replace the try finally approach with one of the ones mentioned in this comment issuecomment 268672297 Verify the changes mentioned this comment issuecomment 268684971 are fixed by the final solution,,"bvaughn,sophiebits,bvaughn,acdlite,bvaughn,gaearon,bvaughn,sebmarkbage,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn",2016-12-19 21:26:26,2016-12-22 17:35:29
PR,Fiber Push class context providers even if they crash,Previously we used to push them only after the instance was available This caused issues in cases an error is thrown during componentWillMount In that case we never got to pushing the provider in the begin phase but in complete phase the provider check returned true since the instance existed by that point As a result we got mismatching context pops We solve the issue by making the context check independent of whether the instance actually exists Instead we are checking the type itself This lets us push class context early However there is another problem we might not know the context value If the instance is not yet created we can not call getChildContext on it To fix this we are introducing a way to replace current value on the stack and a way to read the previous value This also helps remove some branching and split the memoized from invalidated code paths I also added a test from 8604 to verify this also solves the problem described in that PR,,"gaearon,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,gaearon",2016-12-22 15:09:38,2016-12-22 18:36:43
PR,Fiber Fix reentrant mounting in synchronous mode,We have to set the container in a way that it can be retrieved before we run any user code that could start a new top level renderer This API feels about as good to me,,"sophiebits,sophiebits,sophiebits,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sophiebits,sebmarkbage",2016-12-22 05:13:02,2016-12-22 19:34:36
IS,Ca not stopPropagation when render subcomponents in componentDidMount,Here is my JS Bin Demo js output I render Child in Parent componentDidMount but when I dragging child the parent triggers dragstart too The same problem with click event I tried e stopPropagation e nativeEvent stopPropagation and e nativeEvent stopImmediatePropagation but they all useless So I can not stopPropagation when render subcomponents in componentDidMount but I have to render child when parent is mounted,,aweary,2016-12-22 08:47:05,2016-12-22 19:44:15
IS,Feature New JSX attributes,Do you want to request a feature or report a bug Feature What is the current behavior At we are trying to build a rss feed for delivering Instant Articles to Facebook We are rendering the feed through our React setup but we are unable to provide the needed attributes on the root rss tag What is the expected behavior Attribute xmlnsContent and probably some other rss familiar attributes transpiles to xmlns content Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v 15 3 2,,"aweary,sophiebits",2016-12-19 20:18:40,2016-12-22 20:36:30
PR,Fiber Do not call sCU with null props,I missed this case in 8613 and it broke the triangle demo We do not have a test because we will probably just delete it Maybe,,"sebmarkbage,sophiebits,gaearon",2016-12-22 23:26:29,2016-12-22 23:47:11
PR,Update conditional rendering md,Stating the fact that component lifecycle methods will still fire as normal even though you return null from the render method Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-12-24 14:25:02,2016-12-24 17:18:31
PR,Fiber Validate that update callback is a function,Adds invariants existing in Stack The code is mostly copypasta from 6310,,"gaearon,aweary,gaearon,aweary,sebmarkbage,acdlite",2016-12-25 00:59:32,2016-12-27 16:38:11
PR,Fiber Relax test about rendering top level null,It asserts error but this is no longer supposed to be an error in Fiber,,"gaearon,sebmarkbage,sophiebits,gaearon",2016-12-25 01:09:15,2016-12-27 16:38:25
PR,Fiber Include owner in invalid element type invariant,This adds owner to invalid type invariant for Fiber It is already there in Stack Ideally we would add component stack later here too but I want parity for now I changed ReactDebugCurrentFiber getCurrentFiberOwnerName because it used to only work for host components since I first added it when working on DOM invariants warnings The problem is it did not report the owner name when the owner is the current fiber itself This is now fixed with an explicit switch on fiber tag Since you are looking at Fiber and warnings would you like to review this,,"gaearon,iamdustan,gaearon,iamdustan",2016-12-24 23:44:29,2016-12-27 16:41:23
IS,Feature setState without re rendering children,As a dev I want to be able to change the state of component without triggering re render of children so that I can better optimize the app Use cases Imagine controlling the visual state of component that is defined by state object as that does not propagates to children components Feedback welcome Thanks,,"diegomura,aweary,gaearon",2016-12-19 06:27:14,2016-12-27 19:51:58
PR,Pure functions are deterministic,It is tiny improve but i hope it will improve ubiquitous language of REACT Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,aweary,2016-12-27 13:39:28,2016-12-27 19:59:29
IS,Make createElement undefined warning more descriptive,Update claimed by This is what I see when I mistype an import img width 768 alt screen shot 2016 07 19 at 21 12 01 src This is not very useful When type is undefined we should provide a better message In 95 of cases it is caused by an invalid import We should create a page explaining common cases how this could happen e g mismatching default named export forgetting to export the component or importing a non existing named export and link to that page from the warning,,"gaearon,gaearon,gaearon,gaearon,zpao,gaearon,gaearon,alexzherdev,syranide,gaearon",2016-07-19 20:16:55,2016-12-28 00:42:44
PR,Update tutorial md,Fixes to Tutorial in image image,,aweary,2016-12-27 21:56:24,2016-12-28 05:12:12
IS,ResponderEventPlugin regression in React 15 4 0,Do you want to request a feature or report a bug Report a bug What is the current behavior The ResponderEventPlugin no longer recognizes start DOM events If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template The EventPluginUtils isStartish helper only checks for mouse touch start events In this section of code L318 L325 the topLevelType used to be only topMouseDown or topTouchStart in React 15 3 but is now topClick in React 15 4 0 This means the event plugin can no longer recognize start events This PR exposes the issue in react native web which uses the ResponderEventPlugin What is the expected behavior The same behaviour as exhibited with React 15 3 2 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Works in React 15 3 2 Does not work in React 15 4 0,,"sophiebits,gaearon,sophiebits,sophiebits",2016-11-21 21:33:36,2016-12-28 11:49:16
PR,'npm init' needed before installing react via npm,I was trying to install react in my django project directory and was getting warnings about package json not being present Started this SO post 41340975 to figure it out I think it will be useful for others too if we add it in the documentation itself,,"gitanupam,gitanupam,gaearon",2016-12-28 09:28:44,2016-12-28 12:04:22
PR,Changed webpack is hyperlink,to point to 2 x documentation instead of 1 x and to be consistent with other links on the page Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"gitanupam,gaearon,aweary,aweary,gaearon,aweary",2016-12-28 11:10:29,2016-12-28 17:34:01
PR,Renderers can queue commit effects for initial mount,Auto focus was previously managed by ReactDOMFiberComponent setInitialProperties which gets called during the complete phase This did not work because host components are not yet present in the DOM until the entire tree has been mounted which happens during the commit phase This PR resolves that by making a few changes The HostConfig finalizeInitialChildren method now returns a boolean Renderers should return true to indicate that custom effects should be processed during commit once host components have been mounted eg ReactDOMFiber uses this to queue auto focus A new HostConfig method commitMount has been added for performing this type of work See this discussion thread discussion r94064811 for why a new method was added instead of repurposing commitUpdate Existing renderers have been updated with noops Tests I was able to easily reproduce the broken focus behavior in a browser and verify the fix However it was a bit awkward to catch in a unit test because PhantomJS does not require DOM elements to be mounted in order to track their focused state I was able to add a test that caught the broken behavior and verifies the fix but it is kind of a hack IE8 compatibility note Note that this PR also drops use of the focusNode helper method since it was in place for IE8 and IE8 support was officially dropped in January 2016,,"bvaughn,aweary,bvaughn,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,bvaughn,acdlite,bvaughn,acdlite,acdlite,bvaughn,acdlite,bvaughn,acdlite,bvaughn,acdlite,bvaughn,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,bvaughn,bvaughn,sebmarkbage,bvaughn,bvaughn,sebmarkbage,acdlite,bvaughn,edvinerikson,edvinerikson,bvaughn,bvaughn,bvaughn,edvinerikson,acdlite,bvaughn,bvaughn,sophiebits,acdlite,bvaughn,bvaughn,acdlite,acdlite,bvaughn,acdlite,bvaughn,acdlite,bvaughn",2016-12-27 21:08:36,2016-12-28 20:16:51
PR,Fiber Sync mount and unmount,Ensures that syncUpdates resets the batching context so that sync updates are not downgraded to Task This provides an escape hatch for code that relies on synchronous flushing of updates Top level mount and unmount are now wrapped in syncUpdates Should we do this for ART and native as well,,"acdlite,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,acdlite,acdlite,acdlite,acdlite,acdlite,bvaughn,acdlite,bvaughn,acdlite,bvaughn,acdlite,gaearon,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite",2016-12-23 20:30:31,2016-12-29 21:11:58
PR,remove superfluous check in while loop,Since asapEnqueued is no longer used we can safely remove the if check in while loop,,"jddxf,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon",2016-12-25 02:18:56,2016-12-29 21:25:23
IS,why not using webpack,why not using webpack It seems that webpack is becoming more and more popular as front end module bundler So I wish React can hug it just like Angular 2,,gaearon,2016-12-30 16:30:41,2016-12-30 16:31:20
IS,ReactDom mount ReactDOM render Flipped and curried,Would be a micro optimization to appease the functional gods but the order of ReactDOM render is arguments has always felt backwards to me I should say were I want the app to render and then what I want to render Might sound kind of useless at first but I actually have built something where I was rendering different components into the same div based on something that was happening outside of react,,acdlite,2016-12-29 18:11:10,2017-01-01 02:09:01
IS,Checking Permissions in Component Breaks Subscribe,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-01-01 17:21:57,2017-01-01 17:37:21
IS,Children prop gets recreated killing PureComponent optimizations,Do you want to request a feature or report a bug Report a possible bug What is the current behavior When Component A renders Component B with a children prop that is a react component JSX fragment any render of component A will recreate said children prop If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Example Code What is the expected behavior I would expect ComponentWithChildren not to re render because none of its props actually changed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 1,,"acdlite,gaearon,gaearon,gaearon,gaearon",2017-01-01 12:01:17,2017-01-02 23:31:27
PR,Update conferences md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,bvaughn,2017-01-03 13:55:16,2017-01-03 16:56:30
PR,fiber example typo,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"madeinfree,bvaughn",2017-01-03 05:55:08,2017-01-03 16:58:41
PR,update to codebase overview md,This is my first PR to the React codebase I think I have followed all the directions correctly but please let me know if I need to do anything differently I have suggested three grammatical changes to the codebase overview document Thank you,,"bvaughn,gaearon",2017-01-01 23:34:29,2017-01-03 17:01:54
PR,Fiber Introduce API to opt out of batching,unbatchedUpdates reverses the effect of batchedUpdates by resetting the batching context This does not affect nested updates which are always deferred regardless of whether they are inside a batch This change is a partial reversion of which added the ability to trigger nested updates using syncUpdates I had thought that was the behavior we wanted for top level mount and unmount but it turns out all we really need is the ability to opt out of batchedUpdates So even though it is a deviation from how Stack works Fiber does not allow nested updates at all We may later decide to provide this as an escape hatch if it helps people migrate to Fiber,,"acdlite,bvaughn,acdlite,acdlite,bvaughn,sebmarkbage,acdlite",2016-12-30 19:37:47,2017-01-03 18:24:53
PR,Should not re render as the result of a null state update,Fiber already happens to behave this way this just adds a test TODO Should we add this feature to Stack too Done See this post for context,,"acdlite,sebmarkbage,acdlite",2016-12-30 07:33:07,2017-01-03 18:27:32
PR,Updated prod error code test to be fiber compat,This test previously returned undefined from render to cause an error Fiber allows this though so the test was failing I have updated the test instead to trigger a different error that both Stack and Fiber share in common,,"bvaughn,acdlite,gaearon,gaearon,bvaughn,sophiebits,gaearon,sophiebits,bvaughn,gaearon,bvaughn",2017-01-03 20:06:51,2017-01-03 20:20:57
PR,Add callback validation to fiber based renderers,Moved ReactFiberClassComponent validateCallback helper function into a standalone util used by both fiber and stack implementations Validation now happens in ReactFiberUpdateQueue so that non DOM renderers will also benefit from it This fixes 2 failing fiber tests,,"bvaughn,acdlite,gaearon,bvaughn,gaearon,bvaughn,acdlite,bvaughn,acdlite,acdlite,bvaughn,sebmarkbage,sebmarkbage,gaearon",2017-01-03 18:39:00,2017-01-03 22:57:43
PR,Renamed React js Conf to React Conf in conferences md,,,"bvaughn,gaearon,gaearon",2017-01-03 23:27:53,2017-01-03 23:31:16
PR,Reformat error message into multiple lines to reduce line column width,,,aweary,2016-12-31 00:07:00,2017-01-04 02:44:29
PR,Fiber Fix tests for mount update callback errors,This PR fixes some failing Fiber tests This is passing callerName to validate callback arguments callerName is being passed as an optional argument Should I annotate it as a required argument,,"koba04,sebmarkbage,koba04,koba04",2016-11-28 11:18:14,2017-01-04 04:59:53
IS,Docs look weird on small widths,Note the accidental top bar img width 401 alt screen shot 2017 01 03 at 15 23 29 src Is this a misplaced tag Also can see this when any doc page is loading,,"gaearon,gaearon,gaearon",2017-01-03 15:24:10,2017-01-04 12:48:54
PR,Fixed stray text appearing on top of the navbar in docs at small screen sizes,Fixes 8676 Stray text is now removed from the top of the navbar in small screen sizes,,gaearon,2017-01-04 11:59:15,2017-01-04 12:48:54
PR,Docs Pass strip html instead of remove in meta tags,This PR proposes a change to the default layout of docs which removes HTML tags from description Note from post excerpts Also as with any output generated by Liquid tags you can pass the strip html filter to remove any html tags in the output This is particularly helpful if you wish to output a post excerpt as a meta description tag within the post head or anywhere else having html tags along with the content is not desirable Rebuilding old gh pages is needed E g,,"gaearon,gaearon",2016-12-06 18:07:49,2017-01-04 16:17:08
PR,docs Add a note about componentWillReceiveProps,I have added a complete guide to React Component Lifecycle I want to improve React documentation much more and this is just the beginning Please let me know if I'm doing my job right or not,,"brigand,brigand,brigand,brigand,lacker,brigand,brigand,lacker,gaearon",2016-11-08 07:59:46,2017-01-04 16:26:34
PR,docs Ajax Documentation,I wrote a guide for making ajax requests in React including Installing 3rd party library for making Ajax request I have used jQuery for its simplicity Defining the scenario Creating buttons for making Ajax requests Sending Ajax requests Controlling state List component for showing the result Aborting cancel the request Error handling,,"gaearon,gaearon",2016-11-13 06:49:35,2017-01-04 16:30:30
PR,Update typechecking with proptypes md,Should not children is PropType be a node Here is a good conversation on it in the eslint plugin react repo,,gaearon,2016-11-16 21:06:15,2017-01-04 16:33:51
IS,Able to create new events,I want a feature To be able to extend the SyntheticUIEvents so that I can add my own Event when required Thank you,,aweary,2016-12-31 07:07:33,2017-01-04 16:34:49
PR,Update nuances of ref callback calling,For more transparency,,"lacker,brigand,lacker,gaearon,syranide,gaearon,gaearon",2016-11-17 17:31:35,2017-01-04 16:37:39
PR,Just change links in the docs for 15 4 1,,,"ivanzotov,gaearon,ivanzotov,gaearon",2016-11-23 11:21:35,2017-01-04 17:13:56
PR,Update blog post link,'t attend react js conf 't attend react js conf html,,gaearon,2016-11-25 21:09:03,2017-01-04 17:15:10
PR,Update state and lifecycle md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA Is not clock state and props the same in this example,,gaearon,2016-11-26 10:17:27,2017-01-04 17:18:53
PR,Update tutorial md,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-11-27 21:21:00,2017-01-04 17:21:02
PR,Docs Fixed anchor links in Animations section,Fixed anchor links in Animations section,,"Andarist,gaearon",2016-11-29 09:53:42,2017-01-04 17:24:22
PR,Fix typo in Proposing a Change section in how to contribute md,Not sure if it was actually intended or was a typo but changed 'If you intend to change to the public API' 'If you intend to make a change to the public API',,gaearon,2016-12-05 03:54:24,2017-01-04 17:30:09
PR,Fix typos,Fixing some typos,,"agiron123,aweary,agiron123,gaearon",2016-12-22 23:22:11,2017-01-04 17:36:20
PR,Replace Starter Kit with doc link,1 Fixes README to point to Intro to JSX rather than JSX in Depth 2 Remove A simple transform is included since it is not included 3 Replaces Installation paragraph with a starter kit to point to Installation sections in docs 4 Removes the starter kit page 5 Removes the starter kit build step,,"gaearon,bvaughn,aweary,aweary,bvaughn,gaearon,gaearon,gaearon",2017-01-04 17:10:19,2017-01-04 17:39:02
PR,Fiber Update refs even if shouldComponentUpdate returns false,Implemented using a Ref effect type,,acdlite,2017-01-04 20:06:43,2017-01-04 22:28:45
PR,Higher Order Components docs withSubscription example fix,withSubscription implementation was probably copied from one of previous code examples When setting component state in handleChange it uses comments property and then passes data to child component as this state data,,"czajkowski,gaearon",2017-01-05 12:45:31,2017-01-05 12:56:14
PR,Do not Mutate the Original Component example and description mismatch,Description states that if you apply another HOC to EnhancedComponent that also mutates shouldComponentUpdate Example changes componentWillReceiveProps method on the component not shouldComponentUpdate,,"czajkowski,gaearon,czajkowski",2017-01-05 13:11:05,2017-01-05 13:12:52
IS,Shorthand CSS properties can cause style inconsistencies,I'm reporting a bug What is the current behavior 1 Render a host component with a style that contains both a shorthand CSS property and an over writing longer form of the property eg overflow and a conflicting overflowX and or overflowY property 2 Update the host component re render with the same shorthand property eg overflow but remove the longer form property eg overflowX 3 The host component style is now invalid Examples This bug can be reproduced here Update I have since updated the Plnkr to use border instead of overflow since it makes the problem more immediately obvious to spot Example 1 Render style overflow 'hidden' overflowY 'auto' 1 Render style overflow 'hidden' 1 Expected div style overflow hidden 1 Actual div style overflow x hidden Alternate example 1 Render style overflow 'auto' overflowX 'hidden' overflowY 'hidden' 1 Render style overflow 'auto' 1 Expected div style overflow auto 1 Actual div style You can also reproduce this bug with properties like margin padding border etc Caveats Note that if the shorthand value changes between renders things work as expected because React explicitly updates the shorthand style I know this is very edge case behavior and so may not be worth fixing I originally noticed it by way of issue bvaughn react virtualized issues 525 Which versions of React browser OS are affected This bug reproduces in Chrome Firefox and Safari using React 15 4 1 as well as the unreleased ReactDOMFiber renderer,,"bvaughn,bvaughn,syranide,bvaughn,bvaughn,bvaughn",2017-01-04 23:57:12,2017-01-05 17:26:04
IS,Cannot use addons Perf or addons ReactTransitionGroup in AMD environment with 15 4 1,I use react with addons in a RequireJS enviroment If I try to use React addons Perf I get a ReferenceError ReactDOM is not defined from L26 This is a regression from 15 3 x,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-11-23 07:53:19,2017-01-05 21:16:09
PR,Fix AMD and Brunch issues,This fixes 8392 and adds manual build fixtures so we can more easily check regressions like this We used to read ReactDOM as a global inside ReactAddonsDOMDependenciesUMDShim This did not work in AMD environments such as RequireJS and SystemJS Instead I changed it so that ReactDOM gets injected into ReactWithAddons by ReactDOM itself This way we do not have to try to require it which would not work because AMD does not handle circular dependencies well This means you have to load ReactDOM first before using ReactDOM dependent addons but this was already the case before This commit makes all build fixtures pass Build size changes appear insignificant,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,zpao,gaearon,gaearon,zpao,gaearon,zpao,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-04 21:21:37,2017-01-05 21:16:09
IS,Error Cannot find module areact dom lib ReactPerf' from areact lib ReactAddonsDOMDependencies js',ReactAddonsDOMDependencies js 29Uncaught Error Cannot find module areact dom lib ReactPerf' from areact lib ReactAddonsDOMDependencies js' I spotted that there was an issue with 15 4 1 regarding something like this but this file exists Brunch builds OK but then fails in the browser with this error I do not know what version I was using prior to this where it worked I have tried 15 4 0 but still no luck,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-12-12 17:22:56,2017-01-05 21:17:52
PR,Fiber Throw when attempting to unmount at an invalid node,Saw this failing test figured it would be an easy fix,,"aweary,bvaughn,bvaughn,aweary,bvaughn,acdlite",2017-01-04 21:55:30,2017-01-06 00:55:18
PR,Update lifting state up md,a minor mistake about determining whether the water is boiling if the temparature is above 100 two components will be rendered,,"gaearon,gaearon",2017-01-06 03:18:11,2017-01-06 03:23:32
PR,React Release Manager,Not ready to be merged into master still a work in progress Introducing the React Release Manager built to replace all of the manual steps involved in maintaining shipping React Primary focus so far has been the most time intensive error prone steps But automating more of this process is super important as we want to be able to turn around releases much more quickly and ensure more people feel confident doing it I have run almost every release since we started Quick overview docs prs replaces a GH label search opening a bunch of tabs copying the merge sha cherry pick each of those push batch remove label on GH stable prs similar docs process but with milestones version replaces manually editing a bunch of files before release or other similar steps eventually became me using patch npm publish replaces a couple commands in my shell history or a fancy ls build packages tgz xargs n1 npm publish Plans publish do the whole thing version start create update branches for release prep work eg just shipped 15 3 0 make sure dev branch exists changelog generate a naive version of the changelog from X to Y maybe just added to stable prs command a whole bunch of refinement and error handling state checking eg do not try to do anything if git state is dirty or on the wrong branch,,"zpao,zpao",2016-07-21 23:26:49,2017-01-06 14:00:10
IS,Bug Input onChange event,Hi i created jsfiddle example for view how work onchange event of native html and react React onChange event worked as onInput and consoled every one of keydown or keyup event i dont know See The onchange event occurs when the value of an element has been changed Tip This event is similar to the oninput event while onchange occurs when the element loses focus I am try set 1 0 value to both inputs and what i see in console React input consoled every key press,,gaearon,2017-01-05 13:46:17,2017-01-06 14:09:29
IS,Constructor requires 'new' operator,ReactCompositeComponent js has two calls to the Component class construction which are missing use of the 'new' operator The calls are like this Component publicProps publicContext updateQueue and are here L455 and here L460,,gaearon,2017-01-06 08:19:40,2017-01-06 14:24:39
PR,Updated hello world explanation message,Output text in explanation now in sync with code sample Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,murtazahaveliwala,2017-01-06 17:40:14,2017-01-06 17:59:15
PR,Update rendering elements md,Updating text to be in sync with sample html,,"murtazahaveliwala,bvaughn,gaearon,bvaughn,gaearon",2017-01-06 18:02:48,2017-01-06 18:17:11
PR,Point all Webpack links to 1 x documentation,Per issuecomment 270258842,,"aweary,aweary,gaearon,aweary,gaearon",2017-01-05 22:42:13,2017-01-06 18:51:26
IS,Textarea placeholder is not shown in IE 11 being rendered using React,Do you want to request a feature or report a bug Bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Textarea does not display placeholder text initially The placeholder text is only shown after focus and focus away Ie11 only Works on all other browsers I believe go figure I believe this issue was solved before but seems to have come back PR that originally fixed the issue What is the expected behavior Placeholder text should initial show on render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 1 ie11 Looks like it was working in 15 2,,"aweary,aweary,aweary,gaearon,aweary,aweary,aweary",2016-12-10 00:15:38,2017-01-06 21:41:16
IS,Is instance pointing to ReactInternalInstance ReactInternalInstance pointing to instance expected Structure,img width 894 alt screen shot 2017 01 07 at 09 26 55 src I was playing with the examples to understand the internal code flow of React is setState I noticed that ReactCompositeComponentWrapper Object had reference to instance Object which in turn had reference to the same screenshot is console ReactCompositeComponentWrapper Object as ReactInternalInstance Is that an expected structure,,"aweary,gaearon",2017-01-07 17:30:52,2017-01-07 18:00:56
IS,Tutorial Link Expired,Line 19 react docs tutorial tutorial md Links to,,bvaughn,2017-01-08 06:04:42,2017-01-08 08:50:58
PR,docs hoc fix typo Rambda Ramda,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,,2017-01-08 11:23:42,2017-01-08 16:26:47
IS,provide this context in SFCs when they are invoked via JSXMemberExpression,holy war question alert Would it be possible to provide this context into SFCs when they are invoked via JSXMemberExpression JSXIdentifier syntactic form My use case involves unusual ES6 class usage I'm using them as inheritable containers for SFC is where individual components could be overridden in descendant classes Now I'm forced to autobind all view methods Is not it,,gaearon,2017-01-08 19:26:49,2017-01-09 14:03:21
IS,Object tags fatally crash React apps in Chrome 56 and above node cache issue,Since the recent update to Chrome in the Canary and Beta branches React apps which contain an object tag fail fatally rendering is halted due to internal exception This is because it seems the chromium devs have altered the following The reason this kills react is this line L60 We try stick some arbitrary object onto the end of the element a cached HTMLElement component relationship i suppose So if an object tag hits this caching code it will throw an exception eventually when something tries to access the instance This means if the change reaches Chrome stable too quite a few react apps could randomly stop working as users update their browsers,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-09 11:24:23,2017-01-09 14:26:15
PR,Write a release guide,I just replaced the existing guide with the one I wrote while spending a day releasing React,,"gaearon,tomocchino,gaearon,aweary",2017-01-06 20:39:11,2017-01-09 14:39:28
PR,A more descriptive createElement warning,See 7307 This PR creates a doc to explain the possible causes of a createElement warning when used with invalid types,,"zpao,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-08-02 07:28:57,2017-01-09 14:50:05
PR,Auto Dependency Updates,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2016-12-30 13:17:24,2017-01-09 14:51:34
IS,Show component stack for invalid type warning during element creation,When you do Foo but Foo is not a valid string or function we show an error message L196 We include the owner name Please check the render method of Bar but not the full parent stack which we show for some of our other warnings like key warnings and prop types We should call into ReactComponentTreeHook to get the full stack if possible,,sophiebits,2016-10-03 23:14:48,2017-01-09 15:26:01
PR,Add component stack to invalid element type warning,To resolve 7856 and 7859 seems no longer active Add stack addendum to Invalid element type warning It will get stack from constructed element if the element has source file and line number the stack will be look like In Unknown at file js 12 In case jsx babel transform is not being used we wo not have location info in element source we will use parent is generated stack instead Sample Code We drop the first line which is in Unknown created by Button since it is not very useful,,"sophiebits,sophiebits,gaearon,gaearon,gaearon",2016-12-04 17:00:14,2017-01-09 15:26:02
PR,Warn for functional refs on stateless functional components,Resolves Currently React warns if you do It seems like a generally good idea to have a consistent warning when using refs with any SFC,,"aweary,aweary,aweary,edvinerikson,edvinerikson,edvinerikson,aweary,aweary,edvinerikson,aweary,edvinerikson,aweary,edvinerikson,aweary,aweary,edvinerikson,aweary,edvinerikson,gaearon,gaearon,aweary,gaearon,gaearon",2016-07-13 15:31:29,2017-01-09 15:56:23
PR,docs add missing period in shouldComponentUpdate doc,,,"nikolas,gaearon",2017-01-09 16:18:58,2017-01-09 16:22:05
PR,Dont recreate maked context unless unmasked context changes,The problem Fiber memoizes the merged context object for context providers but does not memoize the masked context object This caused componentWillReceiveProps to be called tpo frequently for context consumers which can result in infinite loops eg if componentWillReceiveProps calls setState A minimal reproduction of one such infinite loop has been added as a test It looks a little silly but it is greatly reduced from a bug I was investigating in a larger real world app The proposed solution Given the way context is currently implemented I think the only solution to this issue is to store memoized copies of both the unmasked and masked context objects in order to avoid unnecessarily recreating the masked context Stack already does something like this L832 L838 Concerns The solution in this PR is kind of awkward due to the facts that 1 We probably want to cache this memoized context on a class instance rather than the Fiber to avoid adding 2 additional fields to all Fibers because most wo not consume context Prior art is reactInternalMemoizedMaskedChildContext 1 The class instance does not yet exist the first time the masked context is created so we have to initially set the cached object outside of ReactFiberContext This change is kind of flimsy but so is context in general at the moment see this comment issuecomment 270450606 for elaboration Let is talk about it,,"bvaughn,sebmarkbage,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,acdlite,bvaughn,sebmarkbage,bvaughn,acdlite,bvaughn,bvaughn",2017-01-07 00:27:18,2017-01-09 16:45:02
PR,Added React London conference March 28th,Thanks Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2017-01-09 17:14:57,2017-01-09 17:28:20
IS,Feature request PropTypes validate that no extra props has been passed,Here is a stackoverflow question and sorta solution It is not working properly at least because there is no recursion but I hope that the idea is clear It can be useful for example after refactoring and helps to eliminate death code when some props are no longer needed,,gaearon,2017-01-09 17:14:21,2017-01-09 17:42:34
IS,Facebook Engineers Thank You For 2016,To all the Facebook Engineers working on open source We at Reactiflux just wanted to take a moment to thank you for all your hard work in 2016 Your job isn t easy You have a million requests coming at you all the time from both your internal teams and the external community Dan Abramov once compared managing issues and pull requests to juggling chainsaws on fire Yes we know all of you get paid really well to do open source full time and that your work meets Facebook s needs but we think that you have gone above and beyond in the way that you have treated the community The way that you guys respond to emails and Twitter mentions The attention you give to each issue PR The time you give to different organizations doing podcasts and AMAs The list goes on We ve personally seen an amazing humility in each of you and it s a pleasure to be around you wonderful people Thank you for what you do and the excellence you put into all your efforts We d like to invite the React community to reply to this thread with your own thank you comments to the team at Facebook Let s show them how grateful we are Feel free to include experiences with the team or just how the React ecosystem has helped you as a developer Sincerely On behalf of the Reactiflux community,,"zwhitchcox,gaearon,bvaughn,rricard,aweary,acdlite,aaronabramov,Daniel15,madeinfree,gaearon",2016-12-31 02:02:27,2017-01-09 19:55:36
PR,Remove one extraneous backtick from line 116 of 'codebase overview md' 8274,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"richiethomas,gaearon,richiethomas,aweary,acdlite,richiethomas",2017-01-09 19:56:10,2017-01-09 20:00:27
PR,Remove one extraneous backtick from line 116 of 'codebase overview md' 8724,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"richiethomas,gaearon,gaearon,gaearon,aweary",2017-01-09 20:02:15,2017-01-09 20:06:38
IS,Potential typo in code overview md,There appears to be a typo on line 116 of codebase overview md Specifically I see one symbol too many with no closing symbol This results in all text after line 116 appearing as one large block of code See the screenshot below with the markdown code on the left and the stylized code rendered on the right img width 1389 alt screen shot 2017 01 09 at 2 38 51 pm src Based on the content of the subsequent text after line 116 I would expect it to appear as the following img width 1436 alt screen shot 2017 01 09 at 2 42 08 pm src If this is indeed something that should be fixed I would like to fix it and can submit a PR immediately,,"richiethomas,gaearon,gaearon",2017-01-09 19:48:30,2017-01-09 20:08:01
IS,onChange event on radio,Could you please explain this behaviour Here clicking on radio always emits onClick and onChange events Here is example without React clicking on radio emits only onClick event Thank you,,aweary,2017-01-09 21:00:44,2017-01-09 21:21:07
PR,Warn for callback refs on functional components Stack Fiber,For the changelog this also implements 7267 in Stack It implements it for Fiber too in addition to other Stack related Fiber warnings and invariants While working on the fiber implementation of ReactTestRenderer I came across this warning which is not yet implemented for fiber Initial questions Are there any areas of the fiber impl where errors and warnings are expected to live This is the first instance added to BeginWork which I think may indicate this warning should exist elsewhere This doesn t actually stop any ref from being attached How should that be done A related test seems to show refs throwing an error if used on a top level SFC Should that exist in the same area of the code or elsewhere,,"iamdustan,gaearon,gaearon,iamdustan,gaearon,iamdustan,gaearon,gaearon,iamdustan,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,iamdustan,iamdustan,iamdustan,iamdustan,iamdustan,gaearon,gaearon,iamdustan,iamdustan,gaearon,iamdustan,iamdustan,gaearon,iamdustan,gaearon,gaearon,gaearon,iamdustan,gaearon,iamdustan,iamdustan,gaearon,iamdustan,gaearon,gaearon,iamdustan,gaearon",2016-12-24 04:56:40,2017-01-09 23:09:19
PR,Add basic testing page for browser quicks,Related to 8583 This is just the start I would like to dynamically pull in versions some how and mentioned renaming examples to fixtures but it accomplishes most of what we need I think Next step would be to create a basic template for a fixture test page Should we start working from a branch other than master I can not do that but I would be happy to adjust the base of this PR to a browser quirks or whatever branch on the main repo,,"nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,aweary,aweary,aweary,aweary,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,jquense,jquense,gaearon,aweary,gaearon,aweary,aweary,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,aweary,nhunzaker,aweary,gaearon,aweary,nhunzaker,nhunzaker,nhunzaker,aweary,aweary,aweary,gaearon,aweary,aweary,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,aweary,gaearon,aweary,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,aweary,nhunzaker,gaearon,jquense,aweary,gaearon,gaearon,gaearon,nhunzaker,aweary,gaearon,nhunzaker,aweary",2016-12-16 14:18:22,2017-01-09 23:22:18
PR,Fiber Stop bubbling priority on equal priority,Unobservable perf fix Previously we only stopped bubbling if the priority was lower but we can stop on equal priority too I imagine the reason this was not caught sooner is because it is a bit hard to mentally parse even simple priority level comparisons Oh well,,"acdlite,sebmarkbage,bvaughn,bvaughn,acdlite,acdlite,bvaughn",2017-01-08 05:28:00,2017-01-09 23:24:25
PR,Improve unmasked context caching,Only store cached masked unmasked contexts on context consumers Move all references to reactInternal cached attributes inside of ReactFiberContext Related to this discussion thread discussion r95220106,,"bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon",2017-01-09 19:21:38,2017-01-09 23:33:20
PR,Fiber Remove callbackList field from Fiber,Moves it to UpdateQueue instead so that we do not waste memory for components that do not have update queues Unobservable so no tests,,"acdlite,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,sebmarkbage,acdlite,sebmarkbage,acdlite",2017-01-09 22:15:13,2017-01-10 08:21:43
IS,Any better way to get refs in ReactTransitionGroup,I have found I can get children is refs in ReactTransitionGroup Just like It is quite ugly Is there any better way,,gaearon,2017-01-10 09:26:40,2017-01-10 10:37:56
PR,Swap components,It is better to delare component before using,,"mitenka,gaearon",2017-01-10 10:42:30,2017-01-10 10:48:54
PR,Docs Replace 'mix in' in PureComponent notes,Hi All I was reading the docs for PureComponent and noticed wording that seems to have been left over from PureRenderMixin 'only mix in' This could be slightly misleading to some I hope the new wording is a little clearer and truer to it is use,,gaearon,2017-01-10 01:30:17,2017-01-10 14:02:22
PR,Fix single vs plural,Maybe it is not very important just misprint fix,,"mitenka,gaearon",2017-01-10 14:47:58,2017-01-10 16:00:17
PR,Replaced chalk color red with chalk red,See usage,,bvaughn,2017-01-10 00:55:00,2017-01-10 16:45:57
PR,Dedupe warnings about refs on functional components,The warning added in 8635 is very noisy It was already somewhat noisy for strings printing on every mount but it is much more noisy for functional refs because they often change between updates causing the warning to be printed again and again Before this PR we would get warnings once per attempt to attach the ref After this PR we get warnings once per callsite to the best of our ability to tell them apart See individual commit messages for more information,,"gaearon,iamdustan,gaearon,iamdustan,iamdustan,iamdustan,gaearon,gaearon,gaearon,gaearon",2017-01-10 15:54:37,2017-01-10 17:54:48
PR,Added more info about refs in the documentation,I want to propose some changes to the Refs and the DOM documentation page Make it clear that string refs are legacy It seems that this information got lost during the transition to new docs and only some part stayed the same which was confusing when first reading the docs Clarify and explain that during render if the ref callback is provided it will get called twice first with null and then with the rendered DOM element Discussed in and first proposed docs change in PR 8333 I have also planned on adding an example for passing the refs up the component chain based on something I have needed to solve myself e g you want to connect two dynamic components by line in React so you need to both use refs and propagate them up the chain and while it would be great to read up on this in the docs it may be too specific for this section I would be happy to hear any recommendations,,"gaearon,gaearon,gaearon,Andarist,Andarist,gaearon",2017-01-07 10:23:23,2017-01-10 20:18:24
PR,Remove duplicated 'getDeclarationErrorAddendum' method implementations in react dom js,There were a total of 4 function definitions for getDeclarationErrorAddendum in react dom js I did not see any commits in the master codebase referencing this function and the only 2 issues referencing it did not indicate whether this duplication was a feature or a bug 3 of the implementations did not check for 'internalInstance' and one did perform this check The implementations without this check appeared more elegant so I deleted all implementations except one without this check,,"richiethomas,gaearon,richiethomas,gaearon,richiethomas",2017-01-10 21:18:27,2017-01-10 21:50:47
PR,Fiber Revert CommitInfo to avoid extra allocation,I added this when I thought we might support interleaved commits but we do not See r95492136,,acdlite,2017-01-11 01:16:14,2017-01-11 01:44:25
IS,Test Utils renderIntoDocument issue with refs Invariant Violation addComponentAsRefTo,Below is my simple demo app to showcase the issue I am experiencing Is this the intended behaviour or a bug since using refs in the context of TestUtils renderIntoDocument is an important feature,,"gaearon,aesopwolf,gaearon",2017-01-11 09:34:02,2017-01-11 15:38:18
PR,Update index html add spaces between Web React components,,,"piperchester,gaearon",2017-01-11 18:44:34,2017-01-11 19:00:17
PR,Fiber test renderer,This is the start of reimplementing ReactTestRenderer on Fiber Current tests status x renders a simple component 2ms x renders a top level empty component x exposes a type flag 2ms x can render a composite component 1ms x renders some basics with an update x exposes the instance 1ms x updates types 1ms x updates children x does the full lifecycle 1ms x gives a ref to native components 2ms x warns correctly for refs on SFCs x allows an optional createNodeMock function x supports unmounting when using refs x supports unmounting inner instances 3ms x supports updates when using refs x supports error boundaries x compatibility add support for unstable batchedUpdates A good chunk of those tests have to do with refs and the ability to provide a createNodeMock function I believe that ReactFiberReconciler will need to be updated with a getPublicInstance method to handle this Ignore all changes in ReactTestRenderer test js The first is to import the fiber renderer instead of stack actually is there a better way to do this should I copy the ReactTestRenderer test for ReactTestFiberRenderer the rest are testing skip etc and will be backed out when done cc,,"iamdustan,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,iamdustan,iamdustan,gaearon,gaearon,iamdustan,iamdustan,iamdustan,gaearon,iamdustan,gaearon,iamdustan,gaearon,iamdustan,gaearon,iamdustan,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,iamdustan,iamdustan,gaearon,iamdustan,iamdustan,gaearon,gaearon,gaearon,iamdustan,iamdustan,iamdustan,gaearon,iamdustan,iamdustan,gaearon,gaearon,gaearon,iamdustan,gaearon,gaearon,gaearon,iamdustan,iamdustan,gaearon,iamdustan,gaearon,gaearon,iamdustan,gaearon,iamdustan,gaearon,iamdustan,sebmarkbage,iamdustan,sebmarkbage,iamdustan,sebmarkbage,aweary,sophiebits,iamdustan,iamdustan,iamdustan,iamdustan,iamdustan,gaearon,gaearon,iamdustan,gaearon,aweary,iamdustan,gaearon,gaearon,iamdustan,gaearon,iamdustan,gaearon,iamdustan,iamdustan,gaearon,iamdustan,gaearon,iamdustan,iamdustan,gaearon,gaearon,sebmarkbage",2016-12-22 18:15:47,2017-01-11 19:19:33
IS,Make sure findDOMNode works on test renderer,This injection is missing in the stack test renderer L69 L72 Something similar should be added near here L136 Without that you get a Missing injection for stack findDOMNode error when calling findDOMNode in files that use ReactTestRenderer and do not use ReactDOM Would be great to repro the error with a test and then fix it,,"sophiebits,sophiebits,sophiebits,aweary,sophiebits",2017-01-11 20:03:07,2017-01-11 20:12:45
PR,Fiber Fix to render falsy value as dangerouslySetInnerHTML,This is to fix a bug which is unable to render falsy values 0 or '' or false as dangerouslySetInnerHTML,,"koba04,edvinerikson,koba04,koba04,edvinerikson,koba04,edvinerikson,acdlite,acdlite,koba04,acdlite,acdlite,koba04,koba04,gaearon,koba04",2016-12-29 08:15:28,2017-01-11 21:19:51
PR,Make callbackList a linked list instead of an array,See discussion r95643611,,"acdlite,acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite",2017-01-11 19:53:13,2017-01-11 23:59:11
IS,If did not set this props children the children still be evaluated,Hi here is my code I thought it should be display a spinner but got error Uncaught TypeError Cannot read property 'name' of null How can I avoid it,,"gaearon,gaearon",2017-01-12 10:37:54,2017-01-12 11:43:04
PR,Update handling events md,,,gaearon,2017-01-12 14:28:14,2017-01-12 14:30:44
PR,fix typo,It seems that the class name in comments should be CallbackQueue,,gaearon,2017-01-12 12:50:36,2017-01-12 14:31:41
PR,fix failed tests on Windows 8737,,,"jddxf,gaearon,jddxf,gaearon",2017-01-11 01:45:51,2017-01-12 14:46:24
PR,move blog post Profiling Components with Chrome Timeline into docs article,move blog post into docs article for 8675,,"madeinfree,gaearon,gaearon,madeinfree,gaearon",2017-01-04 03:24:12,2017-01-12 15:06:16
IS,Document Profiling Components in Timeline,Basically we need to move this section profiling components with chrome timeline to some permanent place in the docs For example this page might be a good place for it,,"gaearon,madeinfree,gaearon",2017-01-03 15:18:21,2017-01-12 15:06:29
PR,Add error codes update to release process,gaearon,,"zpao,gaearon",2017-01-11 18:12:39,2017-01-12 15:13:04
PR,Fiber Debugger Bring up to date,I started using this again so I fixed a few annoyances and also changed it to render with Fiber,,gaearon,2017-01-12 19:55:21,2017-01-12 19:55:59
PR,Refactor reactpurecomponent,I'm curious to hear thoughts on this PR Looks to me like the code in this PR is shorter smaller byte size and slightly more expressive My personal opinion is that ComponentDummy parasitic inheritance pattern used here adds an unnecessary layer of misdirection That said if it exists for a good reason I would love to hear it The only criticism I might have of this PR is that Object create is not very expressive if you are unfamiliar with its functionality,,"gaearon,gaearon,gaearon,gaearon,sebmarkbage",2017-01-10 21:24:55,2017-01-12 19:57:43
PR,Add feature flag to disable Fiber only features,Disables Fiber only render return types,,"acdlite,sophiebits,sophiebits,acdlite,acdlite,acdlite,gaearon,sophiebits,sophiebits,acdlite,gaearon,acdlite,sophiebits,acdlite",2017-01-12 00:00:58,2017-01-12 21:52:33
PR,Fiber Move memoization to begin phase,Because memoizedProps and memoizedState are read from the instance the instance is input pointers props state context should be updated even when shouldComponentUpdate causes a bail out Update The scope of this PR changed a bit The main change is to move memoization to the begin phase right after reconciliation Currently we update the memoized inputs props state during the complete phase as we go back up the tree That means we can not reuse work until of its children have completed By moving memoization to the begin phase we can do a shallow bailout reusing a unit of work even if there is still work to do in its children Memoization now happens whenever a fiber is child property is updated typically right after reconciling It is also updated when shouldComponentUpdate returns false because that indicates that the given state and props are equal to the memoized state and props,,"acdlite,bvaughn,sebmarkbage,bvaughn,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite",2016-12-30 02:11:37,2017-01-13 00:08:03
PR,Add failing test for state merging when sCU is false,,,"sophiebits,acdlite,acdlite",2017-01-12 19:25:38,2017-01-13 01:24:20
PR,do not need the judgement,Acturally we just need give wrapperInitData an empty array,,gaearon,2017-01-13 02:12:41,2017-01-13 02:35:33
IS,No more checksum validation for server side rendered HTML markup string,After upgrading to v15 my isomorphic rendering app whines on page load warning js 36Warning React attempted to reuse markup in a container but the checksum was invalid This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting React injected new markup to compensate which works but you have lost many of the benefits of server rendering Instead figure out why the markup being generated is different on the client or server client react empty 1 server div data reactroot It turns out that there is a change in v15 document createelement is in and data reactid is out removing data reactid attributes in rendered HTML but server side rendering method renderToString still generated data reactid As a result ReactDOM render and ReactDOMServer renderToString never matches and it just keeps whining on error I tried to replace renderToString with renderToStaticMarkup and the error disappeared However there is no data react checksum attribute in generated HTML markup In my memory the data react checksum attribute is to check whether browser and server side generated HTML matches Now there is no such checksum then every render just compare the whole generated DOM Will that hurt performance,,gaearon,2017-01-12 10:15:48,2017-01-13 02:43:27
IS,Cannot run tests correctly on Windows,There are some issues in test code failing the tests on Windows 1 Invalid regular expression L30 L32 It would be an invalid regexp just like a 2 Invalid arguments passed to child process spawn L34 L45 This issue is similar to,,"jddxf,aweary,jddxf,jddxf,gaearon,jddxf",2017-01-10 14:28:23,2017-01-13 02:53:57
PR,Improve Fiber debugger,A few minor improvements I made as I m using this again Simplify the hooks Capture completion at the right moment Animate the scroll with the fiber on the stack Better display priorities Debugger gif,,"gaearon,iamdustan,gaearon,gaearon",2017-01-13 02:31:13,2017-01-13 12:41:56
IS,React Composition vs Inheritance,So I was going over the Inheritance vs Composition discussion all over the place I will talk about my use case I am creating a hierarchy of components using react Stuff like button buttonBar for example So for these sort of things whatever functionalities I have defined in the button component needs to be present as is in the buttonBar components Currently I have implemented inheritance to achieve this What is the correct way of going about this I do not want to go back to es5 way of using with this React createClass,,"gaearon,gaearon",2017-01-13 11:50:20,2017-01-13 12:45:38
PR,Small ReactPropTypes refactor,Despite it may look as a silly refactor makes sense to use the same api that is being used below on createEnumTypeChecker and createUnionTypeChecker,,"diegomura,gaearon",2017-01-13 04:00:21,2017-01-13 12:53:19
IS,Not able to render n number of deep expandable table rows which render another rows,Do you want to request a feature or report a bug Probably neither but I am stuck with this What is the current behavior Rendering multiple rows in table that are expanded by the parent row is not possible due to tbody not being permitted in tbody and the absence of fragmentation If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is to get an idea What is the expected behavior This is the expected behaviour I guess until Fiber lands I am just looking for an explanation on how to achieve this Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am on 15 3 2 but probably all pre fiber versions have this Thanks for any help,,"gaearon,gaearon,gaearon",2017-01-13 12:12:57,2017-01-13 13:18:33
PR,Fix typo,Just in a comment block,,"piperchester,gaearon",2017-01-13 03:31:59,2017-01-13 13:19:24
PR,Deep Object Merge,Infinite loops Straight from SO But seriously I need to change some things in the overriding 'mock' object for the mousemove event That is fine and dandy but if I want to override something in a deeper object like target it gets replaced entirely not merged Is something like this change possible perhaps only for one level deep,,gaearon,2017-01-13 03:26:10,2017-01-13 13:44:02
IS,react 15 4 2 zip is missing from downloads section for 15 4 2,bug What is the current behavior there is no react 15 4 2 zip in Downloads section at What is the expected behavior there is should be react 15 4 2 zip in Downloads the same way as react 15 4 1 zip was in section at Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React affected 15 4 2 last known good 15 4 1,,gaearon,2017-01-13 10:42:28,2017-01-13 14:24:21
PR,Added double newline delimiters to dynamically populated warnings,'getDeclarationErrorAddendum' function of ReactDOMComponent js 'getSourceInfoErrorAddendum' function of ReactElementValidator js 'getDeclarationErrorAddendum' function of instantiateReactComponent js and ReactElementValidator js 'traverseAllChildrenImpl' function of traverseAllChildren js 'attachRef' function of ReactRef js 'mountIndeterminateComponent' function of ReactFiberBeginWork js 'createFiberFromElementType' function of ReactFiber js 'getDeclarationErrorAddendum' function of ReactDOMSelect js 'unmountComponentAtNode' function of ReactMount js 'getDeclarationErrorAddendum' function of ReactControlledValuePropTypes js 'checkRenderMessage' function of CSSPropertyOperations js 'getDeclarationErrorAddendum' function of ReactDomFiberSelect js 'getCurrentComponentErrorInfo' function in 'ReactElementValidator' 'getDeclarationErrorAddendum' function in ReactDOMFiberComponent js Fixes 8719 Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"richiethomas,gaearon,gaearon,gaearon,richiethomas,gaearon,richiethomas",2017-01-11 20:15:04,2017-01-13 15:55:09
PR,Warn about missing getChildContext method,Previous probably unintentional behavior of Stack was to allow components to define childContextTypes without also supplying a getChildContext property This PR updates Fiber to temporarily mimic that behavior It also adds warning messages to both Fiber and Stack along with a some tests For the time being Fiber components with a missing getChildContext method will return the parent context as is after warning,,"bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,gaearon,gaearon,bvaughn",2017-01-10 21:33:38,2017-01-13 16:45:30
PR,Update higher order components md,Hi guys As I see there is an extra closing parenthesis here patch 1 diff f8d81d41b23f8afabeb5e2fa8727b470R162 Also I moved class closing to new lines Please check Thanks,,"yuyokk,gaearon",2017-01-13 21:06:56,2017-01-13 21:17:49
PR,Added memoization test for interrupted low priority renders,Added a test to verify that a high priority update can reuse the children from an aborted low priority update if shouldComponentUpdate returns false Note that this PR is now different from the original The original description is preserved below so that the subsequent discussion on this PR makes sense Previous Description no longer valid this props and this context are not reset when a render is interrupted mid way and overridden by a subsequent higher priority update The result is that a subsequent calls to shouldComponentUpdate will yield unexpected results sup 1 sup when comparing this props and this context to the provided nexProps and nexContext This PR captures the behavior in a failing unit test Posting for discussion purposes sup 1 sup It is unclear if this is intentional behavior I do not think it causes any problems but it was not what I expected initially,,"bvaughn,sebmarkbage,sebmarkbage,bvaughn,acdlite,bvaughn,gaearon,bvaughn,acdlite,acdlite,acdlite,bvaughn,bvaughn",2016-12-27 15:16:59,2017-01-13 21:52:01
PR,Log all Fiber errors w component stack,A new module has been added ReactFiberErrorLogger This logs error information call stack and component stack to the console to make errors easier to debug It also prompts users to use error boundaries if they are not already using them In the future perhaps this will be injectable enabling users to provide their own handler for custom processing logging For the time being this should help with issues like this issuecomment 270552765 2461,,"bvaughn,gaearon,gaearon,sophiebits,sophiebits,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn,sophiebits,sophiebits,bvaughn,sophiebits,sophiebits,bvaughn,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn",2017-01-12 00:00:29,2017-01-13 22:45:57
IS,Differences between React and Rax,This says that React is much slower than React but has the same API so why use React over Rax Link here,,aweary,2017-01-13 23:22:03,2017-01-13 23:25:17
PR,autoFocus related tweaks,RE Sebastian is feedback on PR 8646 Improved a couple of Flow types Replaced an unintentional Update effect on HostComponent s with a Ref effect in complete phase Removed an unnecessary check in ReactDOMFiber commitMount as the result of the previous bullet,,"bvaughn,sebmarkbage,bvaughn",2017-01-13 20:23:06,2017-01-13 23:32:50
IS,missing function 'emptyFunction',Browsing through the react source I'm trying to locate a file 'emptyFunction js' I often see statements like var emptyFunction require 'emptyFunction' I have looked everywhere for this file but can not find it where is it,,aweary,2017-01-14 06:38:39,2017-01-14 11:30:14
PR,Fiber Fix rendering SVG into non React SVG tree,We used to determine the root tree namespace by the tag name alone in Fiber However this was broken for cases when we render an SVG tree into another SVG tree outside React This PR introduces a few new tests and fixes this by reading namespace from the root container and using it in conjunction with the tag to determine child namespace Addresses r93161706,,"gaearon,gaearon,aweary,gaearon",2016-12-25 00:29:56,2017-01-14 13:11:52
PR,Update tutorial md,Fixing some code by closing a JSX tag Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"gaearon,aweary,gaearon",2017-01-14 19:11:16,2017-01-14 19:13:48
PR,Remove error reference to the arender' function,What is the render function of a functional component,,"gaearon,aweary,gaearon,gaearon",2017-01-13 22:20:40,2017-01-14 19:36:56
PR,Add unit test to onlyChild to ensure onlyChild returns child element,It looks like the last test in onlyChild test js was not actually testing what it should have been Instead of testing the return value of onlyChild it was simply testing that an error was not being thrown,,"bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2017-01-01 02:53:49,2017-01-14 22:09:24
PR,Fix fiber record tests to work on windows slash differences,Running record tests on windows modifies the output due to slash incompatibility image This change ensures the output is consistent across platforms which is required since the results are committed back to the repo Alternatively we could use slash to do this,,"gaearon,gaearon,SimenB,gaearon",2017-01-14 22:55:35,2017-01-15 03:16:04
IS,no warning message for component reusage in development enviroment,When i use full version of react everything works fine no exceptions warnings With minified version i have got Uncaught Error Minified React error 119 visit for the full message or use the non minified dev environment for full errors and additional helpful warnings thrown from ReactDom render on some components tested in chrome firefox React v15 4 2 from 15 dist react js 15 dist react dom js I have found real problem component that was not created inside a component is render method Just like this WrapperComponent constructor props this props subcompoent React createElement render this props subcomponent Few instances of this component did render some subcomponents do work others do not In most cases first subcomponent of type do render fine others fail I think there must be some kind of warning for such cases or more info in docs,,"gaearon,gaearon,gaearon",2017-01-15 13:46:46,2017-01-16 12:33:00
PR,fix HOC document,Looks like a mistake in HOC docs,,gaearon,2017-01-16 10:53:49,2017-01-16 14:49:02
IS,Double click event emitted on wrong component,Do you want to request a feature or report a bug Bug What is the current behavior When doubleclicking a component if the initial click create a new component in overlay of the first one then a double click event is emitted on the new component If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template When double clicking on the button an alert box is created this should not happen as the doubleClick handler is on the new component What is the expected behavior The doubleclick event should proably be emitted on the button not on the new layer Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested on Chromium 53 Firefox 50 1 on linux Chrome 51 Edge IE11 on Window 10 This is with 15 4 2 I have not test it on another version,,syranide,2017-01-16 16:51:22,2017-01-17 09:08:02
PR,Fix to work fiber debugger with npm start,I tried to work ReactFiber Debugger by the following way But it does not work Running First npm run build in React root repo folder Then npm install and npm start in this folder Open 3000 in Chrome This PR is to fix that To do that is it ok to add fiber js into react dom In addition to that I have fixed warnings about keys Thanks,,"koba04,gaearon,koba04,gaearon,koba04",2017-01-17 10:25:07,2017-01-17 13:34:03
IS,Is there anything I should consider if I'm adding to React Component is prototype,I want to have some functions by default in all my components that I am creating So the best way to do this is to add to the prototype chain of the React Component If I were to add a default implementation to the life cycle hook of the component will something misbehave Example,,"gaearon,gaearon",2017-01-17 12:43:40,2017-01-17 13:37:21
IS,Misleading reconciliation behavior due to this props children,Do you want to request a feature or report a bug bug What is the current behavior Currently after component state change the input element loose focus I think due to misleading reconciliation mechanism Playing with key does not get it work as expected If we would remove this props children from App component everything will work as expected Another way to fix this issue is to change FormInput component in slightly other way If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template If you would start typing in the input the focus would be lost due to DOM manipulations What is the expected behavior The expected behavior is to only update HTML elements during reconciliation and thus not to loose the focus Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest also this is reproducible on 0 14 7,,"syranide,gaearon",2017-01-17 09:24:47,2017-01-17 13:43:53
PR,add docs for building with Rollup,Follow up to this Twitter conversation with this addition to the docs should hopefully reduce confusion over how to correctly build React in production mode with Rollup see e g issuecomment 272632548,,gaearon,2017-01-15 15:20:24,2017-01-17 13:55:50
PR,Add Flow reminder to PR template,Since CircleCI fails on Flow errors I think it would be helpful to add a reminder to npm run flow before submitting a PR Formatting was inspired by the Draft js PR template,,"gaearon,gaearon,gaearon,gaearon",2017-01-16 22:42:10,2017-01-17 14:34:45
PR,use an easier word,The word mandatory is relatively difficult for people with ESL English as a second language so I propose an alternative word This would be much easier to understand,,"gaearon,gaearon",2017-01-17 08:42:26,2017-01-17 18:00:11
PR,Changed I to we,Changed I to we to maintain consistency with the rest of the tutorial,,gaearon,2017-01-17 17:54:59,2017-01-17 18:01:41
IS,Documentation Sample is still using string refs,Sample code Step 5 Add Inverse Data Flow in Quick Start Thinking in React is still using old string refs,,"aweary,lacker,gaearon,gaearon,gaearon,gaearon",2016-11-04 22:45:22,2017-01-17 18:17:33
PR,Updating Thinking in React doc to replace refs with event handlers,Fixes issuecomment 273171583,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-17 14:37:17,2017-01-17 18:17:33
PR,Fiber WIP Support React DevTools,My first attempt It seems to be working img width 847 alt screen shot 2017 01 17 at 00 07 47 src I diff trees on every commit to keep the implementation simple but we might hit performance limits with this I will be testing performance on Facebook products tomorrow I put the implementation inside React so that DevTools can stop depending on the internal field format This makes it easier both for us to change the internals for example if we later decide to change the strategy and for libraries like Preact Infero hi to integrate with DevTools Some things are intentionally missing DOM highlighting Jumping to the React element from Elements node Support for Fiber specific features like fragments Cleaner data structure API Flow lint I want to come back to them after making sure this approach is viable perf wise Related DevTools PR If you want to try it out build React check out DevTools at that branch and copy the built React packages into its node modules The plain shell is the best for experimenting If you change anything in React you will need to recompile this folder by running node modules bin webpack in it,,"gaearon,gaearon",2017-01-17 00:17:52,2017-01-17 20:46:20
PR,Tweaked captured error log slightly based on feedback,Before screen shot 2017 01 13 at 4 19 17 pm After Chrome img width 796 alt screen shot 2017 01 14 at 9 32 15 am src Firefox img width 793 alt screen shot 2017 01 14 at 9 31 58 am src Safari img width 736 alt screen shot 2017 01 14 at 9 31 47 am src Internet Explorer img width 969 alt screen shot 2017 01 14 at 9 40 18 am src Edge screen shot 2017 01 17 at 10 00 49 am,,"bvaughn,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,sophiebits,sophiebits,bvaughn,bvaughn,sophiebits,gaearon,acdlite,bvaughn,bvaughn,acdlite,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,sophiebits,bvaughn,gaearon",2017-01-14 00:24:27,2017-01-17 22:32:07
PR,Add Handling Multiple Inputs to Forms doc,It was brought up on this blog post search for Working with forms and Redux in React and on Hacker News To be fair this is a pretty common pattern of handling multiple inputs and it is not intuitive for someone to realize the name attribute can be used to achieve this I think it is worth it to add it to the Forms section,,"keyanzhang,gaearon,gaearon,gaearon,gaearon,gaearon,keyanzhang,gaearon,keyanzhang,gaearon,keyanzhang,gaearon,keyanzhang,gaearon,gaearon",2016-12-12 06:30:01,2017-01-18 06:19:47
IS,An input which handler is on its parent should be considered as 'controlled' as well,Do you want to request a feature or report a bug Bug What is the current behavior Actually I am listening on every input is parent but not on input itself but before I know what is the so called 'controlled component' the behavior that I can not type anything in this case makes me confusing No warning After reading about the term I do think it is controlled in my case I just do not want to put handler 100 times if I have 100 inputs What is the reason to treat it as uncontrolled in this case It should be up to developer how to control the input instead of such a 'if you do not follow the new term we invent you can not type in silent' way If he she really forgets to put a handler then it is his her fault Put a handler on parent is not our fault Do not want to be punished for that If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template See above What is the expected behavior If there is a handler no matter it is onInput or onChange or onKeydown on the ancestor of the input element it should be considered as controlled Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 2,,"gaearon,gaearon,gaearon",2017-01-13 03:30:49,2017-01-18 06:20:12
IS,Feature Request Binding utils to elements,Do you want to request a feature or report a bug feature First of all I am not expert on React I am only using it for 2 weeks So if this is a silly request please forgive me There should be a binding method for elements to prevent code repeating and additional operations on the element Component For example for binding and updating state for inputs I need to write same thing for every component that I design So there should be something like this with this I can create utils to use in elements I can even use jQuery for some manipulations or add behaviors to the elements that I need without creating too many components Renderer just needs to bind this to functions that added to bind attribute bind should accept array for multiple bindings I know that I can create an input component to do this automaticly but I did not make any tests but I believe this way will be more fast than creating nested component for everything since React looks components to check if they should update Please do not think this example as main purpose of this This kind of feature will open up many posibilities,,aweary,2017-01-18 09:35:18,2017-01-18 16:25:20
IS,meta tags seo for react,Hello everyone i had used more than package about dynamic meta tags react but does not work so when i made tools d veloppement on my browser it had showing good but when i made view source does not showing what is wrong thanks in advance,,"aweary,aweary,aweary",2016-12-20 16:00:58,2017-01-18 16:54:14
IS,Disabled radio button and checkbox fires onChange event from double click in IE11,Do you want to request a feature or report a bug Bug What is the current behavior Disabled radio button and checkbox fires onChange event from double click in IE11 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar What is the expected behavior Disabled radio button and checkbox does not fire onChange event from double click in IE11 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2 IE11 Windows 8 1 Duplicate of,,"aweary,aweary",2017-01-17 13:34:30,2017-01-18 19:45:20
IS,unstable handleError allow disabling of making the error bubble up to the parent upon retry,The unstable handleError feature 2461 which allows for error boundaries in components will attempt to re render the component after the first error is handled in the boundary defined in unstable handleError On this second render by design if an unhandled error occurs in the render the error bubbles up to the parent L483 It would be better if we can configure this behavior to be able to choose to have it bubble up or be handled by the unstable handleError upon retry In our case it is acceptable to continue to retry over and over to render the screen and have a few errors as there is the occasional race condition where the current state is not ready yet for the current component being rendered It can error a few times until the state is ready,,"acdlite,gaearon,slorber,gaearon",2017-01-18 20:14:15,2017-01-18 21:18:40
IS,Small error in tutorial,Do you want to request a feature or report a bug Bug What is the current behavior In the tutorial are functional components explained with the following code snippet Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 4 2,,"aweary,gaearon",2017-01-19 11:08:36,2017-01-19 15:58:18
IS,Showing wrong state value in console,I have a Signup component which has it is own state defined in constructor this state email '' fullname '' username '' gender '' password '' cpassword '' This component has the following event listner to update the state onChange e this setState e target name e target value console log this state gender And in render I have the following jsx code which will allow user to select his her gender div style marginBottom '25px' className classnames input group 'has error' errors gender div className btn group button type button className classnames fa fa male btn 'btn default' this state gender 'btn primary' this state gender 'male' title You are male value male name gender onClick this onChange button nbsp button type button className classnames fa fa female btn 'btn default' this state gender 'btn primary' this state gender 'female' title You are female value female name gender onClick this onChange button div div So when click to the male button it shows me male in console at onChange event but as soon as I click to female button it often logging male value where as I should have gotten female But I am getting correct value when I render gender state to jsx Could you please explain why this problem is happening Is react taking time to set it is own component state,,"aweary,aweary,aweary",2017-01-18 08:13:49,2017-01-19 16:00:59
IS,disabled button onClick handler triggered erroneously,Do you want to request a feature or report a bug Bug What is the current behavior For buttons with children other than text nodes when the disabled attribute is true click handlers are still triggered If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template load code pen and check react v 15 4 0 observe button click behaviour for both instances What is the expected behavior button click should not trigger on click handler Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React bug appears in v15 4 0 behaviour is correct in v15 3 1,,aweary,2017-01-19 16:01:05,2017-01-19 16:07:15
IS,Click handlers triggered on disabled buttons containing elements Chrome,Do you want to request a feature or report a bug Bug What is the current behavior On current version of React 15 4 0 in Chrome and Opera buttons with a click handler and an element inside them i e not only a text node get their click handler triggered on click when disabled If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Both buttons should not react to click events Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 0 Chrome v55 Was working in React 15 3 x,,"aweary,aweary",2017-01-19 16:05:51,2017-01-19 16:09:48
IS,PropTypes shape should throw if the object have more properties than specified,if i have setup like i expect it to show warning as the passed object does not have the exact shape as required Please advice,,aweary,2017-01-20 00:10:27,2017-01-20 01:17:30
IS,Missing object assign licence please check others,Do you want to request a feature or report a bug bug What is the current behavior Missing copyright licence If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template See What is the expected behavior Not a lawyer Facebook should know how to show MIT according to their policies Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Checked current version 15 4 2 All OSes and this is probably in previous versions,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-14 18:39:32,2017-01-20 01:29:06
PR,Preserve license headers from dependencies in minified build,Fixes 8789 Test plan verify that after manually applying to object assign we preserve that header in the minified builds img width 531 alt screen shot 2017 01 16 at 15 25 13 src We can merge it anytime but it will only have effect after an update to object assign is released with,,"gaearon,aweary",2017-01-16 15:30:26,2017-01-20 01:29:06
IS,Wondering if react support for babel preset env,Do you want to request a feature or report a bug feature What is the current behavior Currently react is size v15 4 2 react min js 20 7KB compressed react dom min js 121KB compressed is about 140KB after compression which is still a pain point for mobile web situation What is the expected behavior I have heard that React implement its own event dispatching and bubbling it normalizes common events across browsers so that you do not need to worry as much about it which maybe make a huge contribution to react is size So I'm wondering if it is possible or already enabled for react to combine with babel preset env to provide ability for smaller production bundle size For example in our team in China we mainly focus on iOS Safari Android Browser Hybrid WebViews in iOS Android which of those are based on webkit kernel so any polyfill for IE Edge Opera Firefox or other desktop browsers is unnecessary for our production codes If those polyfills could be stripped out that should make our final production codes much smaller Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2,,gaearon,2017-01-19 05:48:01,2017-01-20 02:22:36
PR,Fiber Compute the Host Diff During Reconciliation,This uses prepareUpdate to compute the diff to apply If there is no work to do we do not schedule any updates at all for the commit phase Unfortunately wrapper components have custom logic that gets applied in the commit phase so for now we need to always schedule an update for those The payload has an array of only the prop key and values that need to update This makes the commit phase in the Sierpinski Triangle demo go from 2 5 3ms to 1 5ms The overall time probably increases but at least now we wo not risk dropping frames as we are updating low pri content A neat side effect of this is that we no longer depend on any contextual information like host context or root instance in the commit phase TODO 1 This does not correctly apply the diff when the is property switches from custom component mode to built in component mode I will just need to deal with that when deleting values Errr This is not true We can not switch between modes I just added some unused code at some point because I thought we could TODO 2 A more fundamental problem is that we always need to update the pointer to the current fiber atm because of how the lazy event listener thing works I could probably change it to store the props object instead of going through the fiber TODO 3 Flow infinite loops Updating to 0 37 1 does not help Fixed using workaround,,"sebmarkbage,sebmarkbage,bvaughn,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage",2016-12-20 03:32:13,2017-01-20 05:56:15
IS,bug Nashorn issue with props,In version 15 4 2 of react js running on Nashorn i have a strange issue When React createElement is called through ReactDOMServer renderToString react fails to add any attributes to the generated HTML output E g what should have been which calls on my Object assign polyfill gotten from Polyfill I can not really see any big difference in that polyfill but the fact is that using the polyfill everything works Using props propName config propName does not Any ideas Edit I had a similar issue in an earlier version of React js regarding inline styles When those were parsed the used assign to copy some properties from one object to another However in that case I had no Object assign polyfill so the bundled assign polyfill was used instead The solution was to use my polyfill instead,,,2017-01-20 10:40:54,2017-01-20 11:44:52
IS,event handlers firing after unmount,Do you want to request a feature or report a bug reporting a bug What is the current behavior I'm working on a project which employs React as the view layer I have a rather large tree of components I ran into a bug the other day where the event which triggers click handler which ultimately unmounts the tree continues running rogue in React is DOM after the thing is unmounted and triggers other handlers There is a simple workaround I used event preventDefault to avert any future crises If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I'm sure you can repro this with a little luck enough components and no event management in your event handlers What is the expected behavior No event handlers should be triggerable after unmounting Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React browser Chrome Version 52 0 2743 116 64 bit os Mac OS X 10 11 3 React version 0 14 8 fiddle with failed repro,,"gaearon,aweary,aweary",2016-09-05 18:25:45,2017-01-20 16:15:27
IS,Using input type file throws SecurityError in Firefox,Do you want to request a feature or report a bug Bug What is the current behavior In development mode Firefox throws exception SecurityError The operation is insecure It is thrown from postMountWrapper line node value node value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo What is the expected behavior No exception Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 1 Not sure how did it behave in previous versions FF is 48 0,,"nhunzaker,aweary,aweary,aweary,aweary,aweary",2016-08-24 12:10:39,2017-01-20 16:17:14
IS,Improve warnings about refs on functional components during runtime and in docs,I had trouble to get ref working on one of my composite components This inline ref function MyComp ref element this listElement element will always be called with element null on mount and unmount the like Thats because MyComp is a stateless functional component react should print a warning if one tries to use ref with stateless components,,aweary,2016-07-13 13:18:51,2017-01-20 19:24:41
PR,Corrected a typo,shoud should,,,2017-01-20 18:58:34,2017-01-20 19:25:22
PR,Read current props from the node instead of the Fiber,This fixes controlled components after I broke them in 8607 It is not just events that read the current props Controlled components do as well Since we are no longer updating the Fiber pointer during updates we have to instead read from the node props to get the current props Since this method is no longer just used for events I renamed it,,"sebmarkbage,sebmarkbage",2017-01-21 03:15:38,2017-01-21 07:25:26
PR,Swap words,From parent to child,,"mitenka,aweary",2017-01-21 15:49:40,2017-01-21 16:32:08
PR,Tutorial Absolute image links to work with github preview,When visiting tutorial md the images can not be displayed because relative links are used The Website is working I would suggest using absolute links for images to work with both website and github preview Screenshot image,,aweary,2017-01-20 18:36:05,2017-01-21 16:37:46
PR,Fiber logs timing for HostRoot if logTopLevelRenders enabled,Adds calls to console time and console timeEnd before beginning work on the top level HostRoot component if ReactFeatureFlags logTopLevelRenders is enabled Couple of concerns open questions about this approach Is this equivalent enough to the timing information stack logs Are we concerned about timing in the case of bailouts caused by higher priority updates What about work that gets broken up across frames Update This implementation potentially logs a single time entry for multiple roots since workLoop calls findNextUnitOfWork which searches across roots That is probably not what we want Maybe we could only enable this logging when useSyncScheduling is enabled,,"bvaughn,acdlite,bvaughn,sebmarkbage",2017-01-04 21:30:22,2017-01-21 17:44:48
PR,Polyfill requestIdleCallback when native is not available,I introduce the ReactDOMFrameScheduling module which just exposes rIC and rAF The polyfill works by scheduling a requestAnimationFrame store the frame start time for the start of the frame then schedule a postMessage which gets scheduled after paint The deadline is set to frame start time frame rate By separating the idle call into a separate event tick we ensure that layout paint and other browser work is counted against the available time The frame rate is dynamically adjusted by tracking the minimum time between two rAF callbacks This is not perfect because browsers can schedule multiple callbacks to catch up after a long frame To compensate for this we only adjust if two consecutive periods are faster than normal This seems to guarantee that we will hit frame deadlines and we do not end up dropping frames However there is still some lost time so we risk starving by not having enough idle time Especially Firefox seems to have issues keeping up on the triangle demo However that is also true for native rIC in Firefox It seems like more render work is scheduled on the main thread pipeline and also that JS execution just generally has more overhead Safari has little trouble keeping up with this polyfill I have not tested IE yet,,"sebmarkbage,bvaughn,bvaughn,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage",2017-01-20 02:56:09,2017-01-21 18:27:46
PR,Non rate limited codepen link in tutorial,Changes the codepen example url to a version that is not rate limited Fixes 8699,,gaearon,2017-01-20 18:11:06,2017-01-23 16:27:59
IS,Broken link in react tutorial,Do you want to request a feature or report a bug report a bug What is the current behavior broken link in the first section of If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template N A What is the expected behavior Link should go to a working version of tic tac toe on codepen Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A,,"gaearon,lacker,gaearon,gaearon",2017-01-06 02:27:08,2017-01-23 16:28:27
PR,Update conferences md,added to community conferences with heavy react content jazzcon tech and CONNECT TECH Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,gaearon,2017-01-21 16:16:08,2017-01-23 16:29:11
PR,Replace 2 occurrences of string in type ReactTestRendererJSON,While studying implementation details of react test renderer type ReactTestRendererJSON contradicted instead of confirmed what I had observed in Jest To verify misleading Flow errors I temporarily pasted an object as if from renderer create th colSpan 2 13 th toJSON into ReactTestRendererFiber js and ReactTestRendererStack js Currently the type is neither exported nor has an opportunity to report incorrect errors but it could confuse people who read it as the specification of the object format from the test renderer Is any too lax as the type for values of props For the definition of ReactText see L24,,"iamdustan,iamdustan,iamdustan,gaearon",2017-01-17 17:15:14,2017-01-23 16:29:48
PR,Fiber Throw on undefined component output,This removes an in my opinion unnecessary duplicate warning from Stack so that I do not have to reimplement it in Fiber Then it changes Fiber to throw on undefined component output See individual commits Only the last commit affects Fiber the rest are tweaking Stack and tests,,"gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon",2016-12-28 01:26:45,2017-01-23 16:42:45
PR,Fixed a typo Row RowHeader,,,gaearon,2016-12-15 07:26:06,2017-01-23 16:43:49
PR,Rename 'works' test to be more descriptive,,,gaearon,2016-12-09 18:38:53,2017-01-23 16:45:48
PR,docs Match eslint is line length settings,Previous 80 Current 120,,rthor,2017-01-22 20:07:06,2017-01-23 16:47:49
PR,Reminder strip quotes from attributes with JS code,Web developers who are used to standards compliant HTML and XML will out of habit put quotes around all attributes because the standards require them Other templating systems like ASP NET also require or at least allow quotes around attributes that contain code This behavior will get users into trouble in JSX because a quoted attribute is always treated as a string literal even if it contains curly braced javascript code Let is add to the docs to help newbies evade this problem Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,gaearon,2017-01-16 23:34:37,2017-01-23 17:09:36
PR,Added circle yml and scripts circleci back in,Fixes 8744,,"gaearon,gaearon,gaearon,gaearon",2017-01-11 00:31:00,2017-01-23 17:13:44
PR,Added link to ReactCasts channel,I'm the ReactCasts author so I do know this may look as a shameless plug At the same time many people have told that the videos have helped them grasp important concepts and APIs from React Since they are free I though it would be a useful addition to the list,,"gaearon,gaearon",2016-11-28 12:12:02,2017-01-23 17:17:55
PR,Add CircleCI support to 15 stable,This is a second attempt at fixing 8744 after better understanding the problem space I cherry picked commits to package json to bring it closer to master and then added the circle yml and scripts circleci changes needed to run CircleCI,,"gaearon,gaearon,gaearon,gaearon",2017-01-13 19:56:01,2017-01-23 17:20:51
PR,Update test setup Windows compatible,This PR adds small updates in test fixture runner setups make development pipeline scripts are working on Windows OS environment as well Non windows regression verification was done via travis at relates to 7849,,"gaearon,gaearon,gaearon,gaearon",2016-12-28 22:09:55,2017-01-23 18:59:07
PR,Update conferences md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"aweary,gaearon",2017-01-21 13:52:42,2017-01-23 19:31:22
PR,Add a link to State Updates are Merged in the forms doc,It was brought up on,,"keyanzhang,gaearon,gaearon,keyanzhang,keyanzhang,gaearon,keyanzhang,gaearon,keyanzhang",2017-01-23 19:36:23,2017-01-23 20:09:49
PR,Two minor changes from internal,,,"sophiebits,gaearon",2017-01-24 01:10:32,2017-01-24 01:11:11
IS,Bug input type number resets value if or is provided,Demo Problem input type number resets its value when I type instead of default behaviour trigger input invalid html5 state Source code if demo not available,,"Andarist,Andarist,Andarist,gaearon,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,aweary",2017-01-09 10:41:27,2017-01-24 01:46:35
PR,Deprecate React createMixin,One step towards 8852 This also adds tests for the deprecation warning along with the React spread method I did not see a good place to stick these tests so I just created a new tests folder in src isomorphic,,"aweary,aweary,gaearon,aweary,sophiebits,gaearon",2017-01-24 00:25:04,2017-01-24 06:18:24
PR,Fix Flow violation,It got broken by 8855,,"gaearon,edvinerikson,gaearon,edvinerikson,edvinerikson,sophiebits",2017-01-24 13:45:38,2017-01-24 13:45:50
PR,Remove unnecessary null,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"edvinerikson,gaearon,edvinerikson,gaearon,sophiebits,gaearon,edvinerikson,gaearon",2017-01-24 14:17:54,2017-01-24 18:19:07
PR,Fiber WIP Get ReactComponentTreeHook working,Not a high priority so just posting initial work in progress With the commented out bits passes 19 tests fails 42 tests This needs a lot more work would be happy if someone in the community wanted to pick it up,,"gaearon,lasekio,gaearon,gaearon",2016-10-30 00:46:15,2017-01-24 18:39:03
IS,blank page is coming on apache server,Do you want to request a feature or report a bug What is the current behavior Blank page is coming If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior there must be running example Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2017-01-22 10:48:28,2017-01-24 22:34:22
PR,React developer interface WIP,Continues from PR 7360 First step toward repurposing the recently added ReactFiberErrorLogger as a more generic ReactDevInterface I am going to abandon this PR for now due to time constraints but I would like to pick it back up in the future The basic idea is React provides a default renderer agnostic implementation that logs errors and warnings to the console This can help with things like Jest tests Specific renderers eg DOM Native can inject their own UI in order to promote awareness of warnings or to help developers better locate errors Application developers may choose to override renderer UI with their own hooks in order to log errors direct users to report bugs etc This PR is half baked but it is here for posterity UI treatment ideas for DOM Yellow box dialog for warnings only Toast style messages for warnings and errors Modal dialog for warnings and errors Team feedback DOM and Native DX should be consistent Does not have to look the same web has more flexibility in terms of screen real estate and interactions but should be familiar to devs and should expose the same basic information Warnings and errors may be associated do not obscure warnings as they are often more helpful in spotting problems than errors,,bvaughn,2017-01-25 00:56:24,2017-01-25 00:56:37
IS,ReactDOM findDOMNode returns undefined unexpectedly in componentDidMount,Do you want to request a feature or report a bug Bug What is the current behavior I have two versions of a simple page The page produces the text Hello World and tries to register DOM event handlers for a few mouse events on the HTML element underline text on mouse over remove underline on mouse out make text red color on mouse down return text to black color on mouse up And finally also sets the elements style cursor to pointer The only difference between the two pages are the way the DOM event handlers are registered on the object returned by ReactDOM findDOMNode Bad Version Link This version binds event handlers like this on componentDidMount This JSFiddle link for this version behaves as expected If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template JSFiddle links to Bad and Good versions are provided What is the expected behavior In my opinion both the good version and bad version should behave in React 15 4 in the exact same way Why does the bad version produce an error in React 15 4 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested in Chrome OS X and Windows Safari OS X Bad version does not work with React 15 4 Bad version worked with React 0 13 12,,aweary,2017-01-25 02:07:25,2017-01-25 02:43:54
PR,Stack handle error,Not sure how I would structure the test for it or even if the fix is the correct place to fix it Also fiber seems to crash might be that the state update is missed in unstable handleError maybe that is accurate Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"edvinerikson,edvinerikson,gaearon,edvinerikson",2017-01-25 11:43:59,2017-01-25 12:48:43
PR,Fix Flow issue and revert to showing Unknown in warnings for anonymous components,For future reference this fixes mistakes made in and,,"edvinerikson,edvinerikson,gaearon,gaearon,gaearon,edvinerikson,gaearon,edvinerikson,gaearon,edvinerikson,edvinerikson",2017-01-25 10:30:19,2017-01-25 14:49:19
PR,webpack 2 is not in beta anymore,Minor doc update,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-24 15:47:01,2017-01-25 14:56:53
PR,Add benchmarking tutorial,I have written what I hope is the simplest introduction to benchmarking React components It is meant to be straightforward and easy to follow for beginners If you agree that it would be helpful I would like to add it to the docs Would also welcome any and all feedback,,,2017-01-06 00:27:53,2017-01-25 15:14:19
PR,refine test tweak gitignore,,,"aweary,aweary,aweary",2016-12-21 11:51:25,2017-01-25 15:14:35
PR,docs forEachAccumulated params,Add missing documentation about params,,"maciej-ka,maciej-ka",2017-01-24 02:49:55,2017-01-25 15:24:02
PR,Improve tests,I have refactored a test suite to use jest is mock function instead of manual stuffs,,"jddxf,gaearon,jddxf,aweary",2017-01-25 15:27:22,2017-01-25 16:13:09
IS,Was there a significant change in react addons perf function getInclusive between React 15 0 2 and 15 4 2,Note I asked this on SO first but was directed here TL DR Did the massive overhaul of react addons perf make a large change that would cause wildly different results on the same data using Perf getInclusive We are in the process of upgrading from React 15 0 2 to React 15 4 2 and we are seeing some puzzling changes when profiling using react perf addons Our test case is a table with 200 rows and 2200 cells After upgrading we tested total render times using Window performance and using react addons perf s getLastMeasurment duration Both of these tools show a 10 15 increase in performance when rendering the table this does not seem outside of the realm of possibility Things started to get weird when we looked at the results from Perf printInclusive The results from printInclusive for each individual component render report that they render faster by a factor of 5 and this does not seem to jive with what we are seeing elsewhere I tried to look at the changes inside the ReactPerf js module but this file was replaced wholesale so it is hard to understand what may have changed and nothing in the changelog would really explain this big of difference in the results from printInclusive My question is could these grossly different findings from Perf printInclusive be explained by the big refactor on react addons perf Is this function showing something different from what it used to show Were the old numbers wrong,,"gaearon,gaearon,gaearon",2017-01-25 16:39:37,2017-01-25 17:11:29
PR,ReactFiberStack tests,Bugs in ReactFiberStack can be a little difficult confusing to track down when they are indirectly caught by other unit tests This PR adds a couple of base tests to prevent us from accidentally breaking it and gives us a place to add more complex tests if we expand the current stack implementation cc To verify that stack is probably solid enough in its current form to be worth adding tests for,,"bvaughn,bvaughn",2016-12-22 18:39:28,2017-01-25 18:35:23
PR,Fiber disableNewFiberFeatures bugfix host component children arrays,When disableNewFiberFeatures was enabled host component children arrays were treated as empty,,"acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,acdlite",2017-01-15 02:24:35,2017-01-25 20:06:09
PR,ReactElement is private to isomorphic React,This fixes the build since this dependency is not reachable from React DOM,,sebmarkbage,2017-01-26 00:56:05,2017-01-26 01:52:46
PR,installation md Add missing as,,,,2017-01-26 05:32:06,2017-01-26 05:33:49
IS,type text babel throw an error for latest chrome,type text babel throw an error for latest chrome,,,2017-01-26 03:31:26,2017-01-26 08:31:52
PR,doc error,props children is not a function,,gaearon,2017-01-26 15:00:56,2017-01-26 15:13:20
PR,Fiber Simplify coroutines by making yields stateless,Builds on top of 8414 and 8413 Coroutines was kind of broken because it tried to do reparenting and enabling state preservation to be passed along the coroutine However since we could not determine which Fiber was current on a reified yield this was kind of broken This removes the continuation part of yields so they are basically just return values It is still possible to do continuations by just passing simple functions or classes as part of the return value but they are not stateful This means that we wo not have reparenting but I actually do not think we need it There is another way to structure this by doing all the state in the first phase and then yielding a stateless representation of the result This stateless representation of the tree can then be rendered in different or even multiple locations Because we no longer have a stateful continuation you may have noticed that this really no longer represent the coroutine concept I will rename it in a follow up PR I'm thinking createWait and createReturn maybe,,"sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2017-01-21 07:21:42,2017-01-26 15:15:37
IS,Maintaining ref prop through React cloneElement,React is 0 13 RC suggests that ref prop on components pushed through React cloneElement will allow for two parents to maintain ref props to the same child I have tried to replicate this behaviour in a CodePen but I am not able to maintain two ref references to the same child ie the ancestor component is ref gets nulled Here is the jist of the code working code found here Has this behaviour been dropped never implemented since the above RC Or am I doing something wrong,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-26 15:30:01,2017-01-26 15:50:15
IS,onSubmit handler has Proxy object as first argument,Do you want to request a feature or report a bug I believe this is a bug since I can not find any documentation on this behavior changing What is the current behavior When calling a submit handler like onSubmit the first argument is a Proxy object and the second argument is an Event object If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template see the console to see both objects What is the expected behavior The first argument should be an Event object not a Proxy object Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is happening in react 15 4 1 and 15 4 2 It is not happening on 15 3 1,,"gaearon,aweary",2017-01-26 02:18:30,2017-01-26 16:20:12
PR,Explain how to attach events more explicitly,I spent several hours trying to understand how to attach a React animation event to a React DOM element Since I am used to doing it the regular javascript way via node addEventListener etc I eventually managed the mental gymnastics of realizing wait maybe its just like onClick Which it was And it looks quite beautiful But it did take me a couple of hours I now realize how obvious this is but it was a very frustrating couple of hours Since I do not think I am the only person who is going to be confused by this I have added a small blurb about how to attach these events to React DOM elements Please let me know if I can write this better somehow or if the examples are lacking Thanks,,"jimfb,gaearon,milesj,zpao,aweary",2016-05-20 16:06:57,2017-01-26 17:21:14
PR,Attach display name to method,This fixes issue 3173 and is a refactoring of pr 6404 I know createClass is going out of fashion but thought it might as well get in now reactEurope hackathon,,"gaearon,alexzherdev,aweary",2016-06-01 08:11:58,2017-01-26 17:28:07
PR,Propose Reactive Stateless Components,In the current state of React is not allowed a component to update it self I propose a way to support that My suggestion is use this scope a method like render can do it That pool request it is a sample of that I think that it is a good idea for reactive systems specially in Meteor Tracker style What you think about it Code samples,,"syranide,aweary,aweary",2016-07-08 14:49:27,2017-01-26 17:39:27
PR,Add displayName to methods,This fixes issue 3173 and is a refactoring of PR 6404 Continuation of PR 6934 this would actually help me Hope it is alright I picked it up Thanks,,aweary,2016-07-21 20:56:32,2017-01-26 17:43:42
PR,Better debugging of Expected props argument to be a plain object,Because no one is gonna have an idea where this warning is coming from,,"mxstbr,alexzherdev,aweary",2016-07-22 11:03:25,2017-01-26 17:46:59
PR,docs Use react standalone,I missed that 5497 got closed and babel standalone supports what I wanted so we can do this now,,"zpao,Daniel15,Daniel15,Daniel15,Daniel15,aweary",2016-09-06 17:23:13,2017-01-26 17:54:22
PR,examples Use babel standalone,Same as 7668 but separate so it can be cherry picked distinctly,,"zpao,gaearon",2016-09-06 17:23:47,2017-01-26 17:57:01
PR,docs Link to mixins considered harmful,Extend the knowledge about mixins contained in reusable components to include mixins considered harmful,,aweary,2016-09-08 17:23:35,2017-01-26 17:59:22
PR,Basic react webpack example,React and webpack example based on basic commonjs example,,"zpao,zpao,zpao,keyanzhang,keyanzhang,jimfb,jimfb,zpao,jimfb,gaearon,gaearon,zpao,aweary,gaearon,gaearon",2016-05-30 21:54:47,2017-01-26 18:06:57
PR,Added onChange requestChange support to LinkedInput,For LinkedInput to be actually useful as a replacement for valueLink checkedLink on regular input elements it needs to trigger requestChange of the ReactLink object This can be achieved by this one line change I wanted to add a corresponding test but for tests to work for me locally I had to revert parts of 7168 which I assume is going in a wrong direction A couple of additional notes on the tests Currently they are not captured by grunt test as both the folder name is wrong and the packages folder is not in testPathDirs of package json When fixing the previous issue and getting jest to find this package is tests they fail on require statements I had an idea on how to fix this but it looked to me as if it would break npm packaging of react linked input and since I could not find instructions on how to build that package I gave up on fixing the tests,,aweary,2016-09-22 13:33:14,2017-01-26 18:14:28
PR,Added missing HTML 5 marquee tag attributes,While using React js I found a bug where most marquee tag attributes were not rendering After some digging i figured that it is because React renderer does not consider them valid This patch fixes the problem,,"aweary,aweary",2016-10-06 13:47:55,2017-01-26 18:16:16
PR,Fix white space for error code 125,The biggest commit react repo has,,"ivanzotov,syranide,ivanzotov,aweary",2016-10-13 11:45:06,2017-01-26 18:20:43
PR,Not for commit Fiber Sierpinski Triangle Demo,Just a dump of a demo experiment if someone wants to follow along Found some minor bugs that needs proper fixes Renders fractal triangles with numbers updating each second in each terminal The whole thing is also scaled through an rAF animation Useful demonstrating various starvation issues and tradeoffs Initial render is starved so you need to switch tabs once before the demo properly starts,,"sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage",2016-07-04 01:41:12,2017-01-26 21:22:06
PR,Fiber Swap child and stateNode in coroutines,Follow up from 8406,,"sebmarkbage,sebmarkbage,sebmarkbage",2016-11-24 18:04:56,2017-01-26 21:22:29
PR,Convert ReactCSSTransitionGroupChild to React Component,This PR is for to convert ReactCSSTransitionGroupChild from React createClass to React Component using react codemod transforms class To do that I remove this isMounted from flushClassNameAndNodeQueue L117 It seems to be unnecessary because ReactCSSTransitionGroupChild is calling clearTimer with the timerId returned from the flushClassNameAndNodeQueue in its componentWillUnmount When the this isMounted returns false the componentWillUnmount had already been called L534 L575 L104 L112 Therefore the flushClassNameAndNodeQueue has never been called when unmounting ReactCSSTransitionGroupChild whether the this isMounted is in the componentWillUnmount or not,,"koba04,koba04,koba04,gaearon",2016-09-12 11:54:00,2017-01-27 04:35:36
IS,ReactCSSTransitionGroup Animation start issue with low framerates,Issue We run into an animation issue where the active class is added to fast after the child has been added to the ReactCSSTransitionGroup This happens if the framerate drops below 60 FPS on Chrome Version 49 0 2623 112 64 bit Reason The reason is the following timeout in ReactCSSTransitionGroupChild js line 110 If the framerate is low the animated object appears directly in the animation active state because the browser did not have enough time to process the previously added enter class Fix We fixed this internally by queing the function above with two chained requestAnimationFrame calls instead of the timeout Has anybody else encountered this issue Anybody interested in a pull request Regards Mirko,,"jimfb,gaearon",2016-04-12 10:23:00,2017-01-27 14:39:20
IS,Allow specifying new children to append vs prepend in ReactTransitionGroup,In ReactTransitionGroup given a dynamic array of children e g first 'A' 'B' then 'B' 'C' while ReactTransitionGroup holds on to the exiting DOM nodes we see 'A' 'B' 'C' in the DOM before done is called Then we see 'B' 'C' This is all fine However if we then transition to an entirely new array 'D' in the DOM we see 'D' 'B' 'C' instead of 'B' 'C' 'D' See the following fiddle This seems to be because in ReactTransitionGroup next child mappings are merged with previous child mappings in that order This is probably fine in most cases but it would be great if we could control the order I have got a version of this working locally by adding an appendNextChildMapping prop of type boolean which defaults to false I would be happy to turn this into a PR Or perhaps there is another way to achieve this that I'm missing EDIT Looking at this some more it is not clear to me if how it currently works is actually intended behaviour L90 It looks from this comment like it is in fact trying to add the new item after the existing ones but that the object is not preserving intended source order Is this a bug in the implementation of mergeChildMappings,,gaearon,2016-02-29 12:03:57,2017-01-27 14:39:28
IS,CSSTransitionGroup Inconsistency between fallback behaviour and warning message,Minor issue Deprecation warning is shown when property transition Timeout is null or undefined L29 But behaviour falls back to deprecated behaviour on any falsey value L95 L102 So the following will use deprecated behaviour without printing warning,,gaearon,2016-01-18 03:13:49,2017-01-27 14:39:34
IS,React transition removing leave classes before removal,I came accross an issue with the ReactCSSTransitionGroup component where the leave and leave active classes were removed before the component was removed from the dom In my situation this caused a flicker due to styles being briefly changed before the element itself was removed So I was wondering is this behaviour on purpose or should the leave classes be kept on all the way through to dom removal never removing them,,gaearon,2016-01-07 11:24:54,2017-01-27 14:39:41
IS,ReactCSSTransitionGroup delayed animation,I have something similar to this to handle sliding up down content kind of accordion like behaviour It works fine when there was no content and children are being mounted The problem occurs when there were some nodes than need to be hidden and replaced by false value In that case it seems that onEnter animation is fired for empty node before executing onLeave animation for previous children node making leaving animation delayed by the time of enter animation for empty node This should not be happening I think Empty node should not be animated when entering DOM or onEnter and onLeave animation should be triggered simultaneously I'm using react addons css transition group in version 0 14 3,,"gaearon,gaearon",2015-12-01 01:31:48,2017-01-27 14:39:47
IS,ReactCSSTransitionGroup should warn if the children were not provided a key attribute,As the docs state You must provide the key attribute for all children of ReactCSSTransitionGroup even when only rendering a single item This is how React will determine which children have entered left or stayed As the key attribute is mandatory for the animations to function it would make sense to warn if the key props are missing for the direct children similarly how dynamic children warn about missing keys Something like Each child in ReactCSSTransitionGroup should have a unique key prop Check the render method of foo,,"gaearon,gaearon",2015-10-29 08:53:01,2017-01-27 14:39:54
IS,ReactTransitionGroup Using with JQuery cause Uncaught TypeError Cannot read property 'componentDidLeave' of undefined,Hi Please take a look at this After adding some items please click remove and see the console log Thanks,,"sophiebits,jimfb,zpao,sophiebits,gaearon",2015-10-27 09:08:16,2017-01-27 14:40:18
IS,ReactCSSTransitionGroup does not transition when wrapped around select multiple,I'm not sure why this is happening but when a multiple select is a child within ReactCSSTransitionGroup the transition is skipped completely Anyone else having this issue,,gaearon,2015-10-20 17:52:07,2017-01-27 14:40:25
IS,React onClick does not fire on IE 11,There seems to be an issue the the onClick not working correctly I was previously using react v 15 4 0 I than changed to 15 3 0 than to 15 2 0 and now to 0 14 8 with no luck It seems like it is just the onClick as there is an action triggered onChange on the text input which works fine The jsx component I am talking about is the following onClick this handleSubmit bind this however I assume that the issue will be related to any onClick across the application,,"aweary,aweary,aweary",2017-01-27 18:56:39,2017-01-27 19:52:33
PR,Fiber Support React DevTools,TODO x Make it work x Nit naming inconsistency discussion r96536220 x Move injection to the renderer discussion r96525614 x Make DOM part work i e selection and jump to element x Make prop editing updaters work x Optimization there is just one listener discussion r96537910 x Optimization always pass roots to the hook discussion r96537767 x Support portals x Enable in production x Optimization bail out of emitting updates discussion r96534359 x Optimization check for alternate to avoid diffing discussion r96535268 React Native and ART This adds initial support for React DevTools for Fiber The corresponding React DevTools PR is Historical notes I initially tried to implement the diffing on React side but after discussion with the team decided against it to satisfy these constraints We want to keep it possible to debug websites in production which means code has to live elsewhere We do not know what kind of changes we will want to do in DevTools to support Fiber specific features e g coroutines so transport format is likely to change anyway If the architecture seems fine we should be able to merge this PR and keep iterating on separately The idea is that We notify DevTools of each commit otherwise we can t accurately diff current and WIP fibers We keep track of all mounted roots so that DevTools can attach later When they attach we synchronously call their handlers with the current trees of the mounted roots and subscribe them,,"gaearon,gaearon,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon,gaearon,gaearon,sebmarkbage,gaearon,gaearon,gaearon",2017-01-17 20:46:13,2017-01-27 22:50:36
PR,EASY Fix typo in comment in EventPropagators js,,,,2017-01-28 00:13:04,2017-01-28 00:36:22
PR,Eslint rule failure cleanup,I noticed there were a lot of warnings and a few failures pertaining to slight formatting issues I thought I would clear them up as it twinged my OCD D Most warnings were line length problems I ignored lines that were lengthy because of string values or if they were the definition of a function For any function calls I just put each parameter on a new line Also got rid of a FIXME related to eslint that did not appear to be a problem anymore Might want to consider modifying the eslint rules to ignore string literals and comments to avoid more of these,,"bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2017-01-22 22:55:35,2017-01-28 23:36:04
PR,Stack Fix error boundary when mounting a component into a already mounted tree,Opening a failing test PR for error boundary in Stack If there is an easy fix I will be happy to fix it otherwise I guess I can wait for Fiber which this seems to be working in cc Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"edvinerikson,gaearon,edvinerikson,edvinerikson,gaearon,edvinerikson,edvinerikson,gaearon,edvinerikson,gaearon,edvinerikson,gaearon,edvinerikson",2017-01-25 13:33:02,2017-01-29 17:16:13
PR,Declare REACT DEVTOOLS GLOBAL HOOK for Flow,This does not seem to fail with latest Flow but it fails internally so I assume Flow master is more strict This change makes Flow pass,,"gaearon,gaearon",2017-01-30 14:14:15,2017-01-30 14:14:31
PR,Update context example for react router v4 beta,Just a small update for our beta release this morning,,gaearon,2017-01-30 17:15:13,2017-01-30 17:36:47
PR,Fix lint,8884 passed Flow on master but broke lint This is an attempt to fix both,,"gaearon,gaearon",2017-01-30 17:11:59,2017-01-30 17:46:08
PR,Delete annotation,small fix for 7551,,"Shastel,gaearon,gaearon",2017-01-29 22:59:24,2017-01-30 20:53:06
IS,Not properly setup eslint config or eslint version,Do you want to request a feature or report a bug Report a bug What is the current behavior In 13 14 1 version of eslint lint gulp task return 20 errors about indentation In 13 10 2 bottom line version operate normally If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template 1 Clone repo 2 npm i 3 npm run lint What is the expected behavior In package json setted 13 10 2 version So it means latest minor patch version higher than this will be installed I think we have 3 way for solve this issue 1 Set strict version of eslint in package json 2 Change files that not passed of lint 3 Change eslint config rules,,acdlite,2017-01-30 14:34:34,2017-01-30 21:19:39
IS,your website page not working properly in ie10,Do you want to request a feature or report a bug I have attached a screen short check please 80 people in the world use ie built in browser ie10 b What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"nhunzaker,gaearon,nhunzaker",2017-01-27 02:43:44,2017-01-31 00:32:08
PR,Fix incorrect markup for ie10 in docs footer,This PR resolve 8875 As noted by the scss not contain ms prefixes for flexbox This PR add their,,"nhunzaker,aweary,nhunzaker,aweary",2017-01-30 14:44:13,2017-01-31 00:32:08
IS,Usage of this in DOMPropertyOperations module breaks build in Closure Compiler under advanced optimizations,Do you want to request a feature or report a bug Report a bug What is the current behavior Referring to object is method from a another method within same object this deleteValueForProperty node name here L141 breaks React build in Closure Compiler under advanced optimizations If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Build a React app using Closure Compiler in advanced mode Unfortunately I can not provide a source of the app where I got this bug What is the expected behavior An app built with Closure Compiler in advanced mode should not throw this deleteValueForProperty is not a function exception Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 4 2 Changing this deleteValueForProperty to DOMPropertyOperations deleteValueForProperty solves this issue There are other methods of DOMPropertyOperations object which are using deleteValueForProperty properly via DOMPropertyOperations deleteValueForProperty call If this makes sense I will prepare a PR,,acdlite,2017-01-30 15:13:44,2017-01-31 00:32:27
PR,Refer to object by name instead of function call context,fixes 8887,,,2017-01-30 21:38:57,2017-01-31 00:32:27
PR,Do not crash Fiber with old devtools,Typo,,sophiebits,2017-01-31 08:01:30,2017-01-31 13:06:54
PR,Added undefined example,Into section Booleans Null and Undefined Are Ignored I have added example with undefined,,,2017-01-31 06:38:11,2017-01-31 13:24:30
IS,Delimit dynamic part of the warning messages with newlines,As proposed in issuecomment 271311978 I think we should find the warnings where we add a dynamic part to the end like Check the render method of and delimit it with two newlines This way it s much easier to recognize in the middle of a bunch of errors This is a good first issue to contribute You would need to find warning calls that include additional info like Check the render method of and add a couple of newlines You would also need to change the tests in case they fail,,"gaearon,gaearon,richiethomas,gaearon,richiethomas,gaearon,gaearon,richiethomas,gaearon,richiethomas,richiethomas,gaearon,richiethomas,gaearon,richiethomas",2017-01-09 15:28:37,2017-01-31 13:41:24
PR,Added double newline delimiters to the following functions files,Added double newline delimiters to the following functions files 'beginLifeCycleTimer' function of ReactDebugTool js 'bindAutoBindMethod' function of ReactClass js 'warnNoop' function of ReactServerUpdateQueue js 'getInternalInstanceReadyForUpdate' function of ReactUpdateQueue js 'warnNoop' function of ReactNoopUpdateQueue js 'getDeclarationErrorAddendum' function of ReactDOMComponent js 'getSourceInfoErrorAddendum' function of ReactElementValidator js 'getDeclarationErrorAddendum' function of instantiateReactComponent js and ReactElementValidator js 'traverseAllChildrenImpl' function of traverseAllChildren js 'attachRef' function of ReactRef js 'mountIndeterminateComponent' function of ReactFiberBeginWork js 'createFiberFromElementType' function of ReactFiber js 'getDeclarationErrorAddendum' function of ReactDOMSelect js 'unmountComponentAtNode' function of ReactMount js 'getDeclarationErrorAddendum' function of ReactControlledValuePropTypes js 'checkRenderMessage' function of CSSPropertyOperations js 'getDeclarationErrorAddendum' function of ReactDomFiberSelect js 'getCurrentComponentErrorInfo' function in 'ReactElementValidator' 'getDeclarationErrorAddendum' function in ReactDOMFiberComponent js Fixes 8719,,"richiethomas,richiethomas,gaearon,aweary,gaearon,gaearon",2017-01-13 15:59:47,2017-01-31 13:41:24
IS,Make Circle run properly on 15 stable branch,We are missing the circle yml config on our 15 stable branch It would be great to copy it over and whatever other files need to be copied to make CI pass Anyone should be able to test by sending a PR to 15 stable unlike normal PRs which go to master with the changes and seeing if Circle will pass It might be as simple as just copying circle yml and scripts circleci,,"sophiebits,gaearon,gaearon",2017-01-10 23:35:40,2017-01-31 16:14:29
IS,Component hierarchy in fiber,i have a module named PermissionChecker Code below My question is i know with fiber it is possible to return multiple react elements With this hierarchy in Category is render method what will be props children PermissionChecker or Link I want to bypass PermissionChecker if it returns children Is it possible with fiber,,"gaearon,gaearon,gaearon",2017-01-29 03:12:34,2017-01-31 16:22:13
IS,Transferring TransitionGroup Maintenance,We have not been good at maintaining ReactTransitionGroup as we do not use it much at Facebook As a result it is stagnating the bugs do not get fixed new features do not get added APIs do not acknowledge changes in React e g fake lifecycle hooks that can not work on functional components nobody has the time to review PRs to it and it is like a dead weight on the core team We all feel guilty about it but there is not much we can do There are some great alternatives in the ecosystem such as React Motion However we understand there are a lot of people who are happy with TransitionGroup as it is This issue is a call for a new maintainer If you are using TransitionGroup widely in your codebase and would be happy maintaining a fork of it and documentation please let us know here and we will deprecate our package in favor of your package,,"gaearon,gaearon,jquense,gaearon,jquense,gaearon,jquense,gaearon,jquense,gaearon,jquense,gaearon,jquense,gaearon,gaearon",2016-10-27 13:40:04,2017-01-31 19:45:32
PR,Fiber Fix findDOMNode algorithm,Test plan check to see if this fixes regressions in www Update Confirmed that it fixes at least one of the www regressions,,acdlite,2017-01-31 02:42:43,2017-01-31 21:13:57
PR,Fiber Throw on plain object children,Fixes a few mores tests Also uncovered an oversight in the reconciler related to portals was missing a portal case in updateSlot,,"acdlite,acdlite,sophiebits",2017-01-30 20:25:45,2017-01-31 21:14:12
PR,Add missing newline to warning,Fixing an oopsie from a previous PR,,acdlite,2017-01-31 22:41:49,2017-01-31 22:42:22
PR,Add process cwd to the test process shim,This makes sure Jest fails with a good error message This is not reflected in tests right now because the same test fails in Fiber with a different message Only relevant for Fiber mode Before img width 895 alt screen shot 2017 01 30 at 21 49 49 src After img width 955 alt screen shot 2017 01 30 at 21 50 02 src,,"gaearon,gaearon,acdlite",2017-01-30 21:50:46,2017-01-31 23:04:40
PR,Fiber Fix formatting of invalid element invariant,Message is slightly different for functional and class components,,"acdlite,sophiebits",2017-01-31 23:30:30,2017-02-01 00:03:55
PR,Fiber findDOMNode during componentWillUnmount,Do not swap the trees until after the first pass of the commit phase where componentWillUnmount is called but before the second pass where componentDidMount Update is called,,"acdlite,gaearon,sophiebits",2017-01-31 22:36:23,2017-02-01 00:05:06
IS,findDOMNode does not work on StatelessComponent,1 Report a bug 2 findDOMNode does not work on StatelessComponent 3 Detail Hello I need to hide a component in its parent A A is parent B is child while B is writen by others and i can not rewrite any code in it findDOMNode can resolve this problems but it seems useless on StatelessComponent so how can i resolve it Here is my code thanks a lot,,"gaearon,gaearon",2016-12-21 08:33:56,2017-02-01 09:13:34
PR,New Docs Doc on render callbacks,Not quite done but close enough for review,,"acdlite,lacker,lacker,lacker,aweary,acdlite,acdlite,acdlite,aweary,acdlite,lacker",2016-10-17 21:13:43,2017-02-01 20:20:29
PR,Add a guide on loading data asynchronously,This guide demonstrates how to load data asynchronously in a React component I was not quite sure where a link to the guide should be placed Is the Advanced Guides section a good fit It addresses the AJAX part in 8060,,"rthor,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,rthor,rthor,rthor,rthor,gaearon,gaearon,lacker,lacker,lacker,lacker,rthor,rthor,rthor,rthor,rthor,rthor,rthor,gaearon,gaearon,rickbeerendonk,rthor,rthor,rickbeerendonk,rthor,gaearon,rthor,rthor,gaearon,rthor,gaearon,lacker,rthor,rthor,brigand,lacker,gaearon,gaearon,lacker",2016-10-25 23:45:06,2017-02-01 21:03:24
PR,Tutorial Lifting State Up more legible,Improved Tutorial I found it confusing when I got to the end of the lifting up state section and it says that the squares Now you should be able to click in squares to fill them again but they do not The key was to update the button tags content from this state value to this props value Now everything works as expected Hope others find this helpful,,"lacker,lacker",2017-01-05 04:41:31,2017-02-02 01:31:02
PR,Update tutorial md,Improve clarity in the tutorial Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,lacker,2017-01-14 19:27:22,2017-02-02 01:32:13
PR,Update tutorial md,Clarify some instructions with a code snippet Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,lacker,2017-01-14 19:34:21,2017-02-02 01:42:20
PR,Update tutorial md,Clarify some instructions with a code snippet Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,lacker,2017-01-14 19:41:28,2017-02-02 01:46:49
PR,Update tutorial md to include logic for when the game is tied,Add logic to handle a tied game At the moment the game just sort of hangs with 'Next player O' being displayed Needs the tutorial code on codepen to be changed too but not sure how to go about doing that,,lacker,2017-01-18 20:31:02,2017-02-02 02:01:48
PR,Link to CodePen editor rather than final result,People want to see the final JS CSS HTML and the final result is already displayed by CodePen Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,lacker,2017-01-23 17:54:56,2017-02-02 02:02:45
IS,react tutorial const history,When I copied the code from the code examples on the react tutorial page into a forked codepen and followed the tutorial the time travel in the code did not work The following tweak made it work Under the Storing a History section In the fourth code example the line const history this state history was changed to const history this state history slice 0 this state stepNumber 1,,"lacker,gaearon",2017-01-27 22:52:39,2017-02-02 02:05:14
PR,Update tutorial md,The status div used in Board can be deleted as well from render EDIT 1 Completed 2 Compared with the code in the final results and it is not there either Therefore someone else has removed it already but forgot to add that in the tutorial 8 Done The rest of them do not apply to this pull request for tutorial md Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,lacker,2017-01-31 00:43:26,2017-02-02 02:12:01
PR,Fix indentation in tutorial,Minor,,gaearon,2017-02-02 13:24:13,2017-02-02 13:24:27
PR,Explain arbitrariness of ref name in callback,The sample code was confusing because it is not clear that textInput in this textInput is an arbitrary name for the ref,,"gaearon,gaearon,gaearon",2017-02-02 10:23:32,2017-02-02 13:33:13
PR,Update conferences md,Updated upcoming conferences with,,gaearon,2017-02-02 13:33:04,2017-02-02 13:37:27
PR,Update cloneElement description,Hi guys To have success using cloneElement I have to pass new props in a name value pair fashion rather than using props React cloneElement element propA valueA propB valueB children So If it is the correct way I think we can be more explicit on that instruction Let me know if any change is needed,,"gaearon,gaearon,gaearon,gaearon",2017-02-02 16:56:22,2017-02-02 18:40:53
PR,Move component base classes into a single file,This doesn t change anything for open source consumers Necessary to hack around some issues we have internally with displayName inference,,"gaearon,gaearon",2017-02-02 18:33:31,2017-02-02 20:24:40
IS,License clarification,Good morning I came across this blog post which says that the BSD license of React is terminated if a React user competes with Facebook as per the patent clause addition There seems to be a lot of confusion around what the clause actually means so I was wondering if you might consider adding a tl dr summarizing the clause and it is motivation in the readme This would clear a lot of confusion up and let everyone focus more on building cool stuff Thanks Update from Maintainers We worked with our legal team to post a FAQ addressing the most common misconceptions,,"gaearon,gaearon,syranide,aweary,gaearon,zpao,bjrmatos,gaearon,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon,gaearon,syranide,gaearon,gaearon,gaearon",2016-07-17 13:58:46,2017-02-02 21:53:47
PR,Loosen assertion so it matches any production error,This test was failing because the error code did not match The specific error code is not important,,"acdlite,gaearon,acdlite,acdlite,acdlite,gaearon,acdlite,sophiebits,acdlite,acdlite,sophiebits",2017-01-31 23:09:41,2017-02-02 22:42:24
IS,Each child in an array does not need a unique key,Note the keys areact is' and havery stupid' Do you want to request a feature or report a bug No What is the current behavior Cannot pass around array of JSX without unnecessary keys If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior React should not care if I put keys on my own elements and should not console warn Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest,,"aweary,aweary,gaearon,gaearon",2017-02-02 22:41:01,2017-02-02 23:08:05
PR,Revert Loosen assertion so it matches any production error,Reverts facebook react 8907,,"acdlite,acdlite",2017-02-02 23:05:17,2017-02-02 23:24:05
IS,the text is not shown on the text box,I am creating a HTML form to get input information from users via React v0 13 3 and working on MacOS with Google Chrome My problem is when user types text on the text box the words cannot be shown on the view the text box It looks like the listener in the store is not aware of the action has been triggered I separated components actions and stores into three files which are components AddProduct js actions AddProductActions js and stores AddProductStore js 1 Here is the code of components AddProduct js However if I simply change the name of the function and the corresponding properties to a shorter name i e descriptio instead of description the problem is solved perfectly As the result I'm wondering is this a bug or a naming convention in React,,"gaearon,aweary",2017-01-16 01:58:13,2017-02-03 00:33:35
IS,onToggle Event name not recognized,report a bug What is the current behavior onToggle prop attached to a details html element does not attach the event handler instead shows a warning Warning Unknown prop onToggle on details tag Remove this prop from the element For details see in details created by Details If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template No time right now What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest WorkAround Use onClick instead does not work fire event handler when details is opened with keyboard,,"gaearon,gaearon,gaearon,diegomura",2017-01-12 14:12:21,2017-02-03 10:25:10
PR,Add onToggle event to details tag,Fixes 8761,,"diegomura,diegomura,sebmarkbage,sebmarkbage,aweary,sebmarkbage,diegomura,diegomura,gaearon,diegomura,diegomura,gaearon",2017-01-19 22:52:28,2017-02-03 10:25:10
IS,Incorrect JSX with dynamic elements,Do you want to request a feature or report a bug bug What is the current behavior When doing something like this And this aFunction this state param returns some JSX that depends on param with some logic or if then clause then the result is sometimes incorrect when param changes Seems like the virtual DOM processing comparing before and after the changes is causing problems Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 2 1 Everything worked fine in previous versions of react Everything works fine on iPhone 7 but not iPhone 6,,"gaearon,aweary",2017-01-13 09:36:26,2017-02-03 14:42:26
PR,Ensure first error is thrown if HostRoot catches two errors in commit phase,Previously we were overwriting capturedErrors with the second error and throwing that one,,sophiebits,2017-02-03 02:38:28,2017-02-03 19:12:28
IS,missing property of props getting respective defaultProps property ref instead of a copy Is that correct,Do you want to request a feature or report a bug Bug or undocumented behavior of props and defaultProps or my understanding on defaultProps could be wrong What is the current behavior 1 props read only not for non primitive object 2 if value not supplied through parents props missing value expected to make a copy of the respective defaultProps value instead they hold on to its ref in defaultProps minimal demo of the problem Link is Self Explanatory What is the expected behavior 1 props read only 2 props missing value expected to make a copy of the respective defaultProps value if value not supplied through parents Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version of ReactJS,,aweary,2017-02-03 18:38:47,2017-02-03 19:45:34
IS,React Dom Server Broken Build for version 15 4 1,Do you want to request a feature or report a bug BUG What is the current behavior It breaks the code execution file react dom dist react dom server min js 15 4 1 dist react dom server min js What is the expected behavior var ReactDomServer require areact dom dist react dom server min js' with the desired goal of having a server side rendering for production which skips unnecessary comments warnings etc React Documentation Page installation Which versions of React 15 4 1 platform NodeJS server side rendering Did this work in previous versions of React I do not know,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,aweary,gaearon,jddxf,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-14 15:27:56,2017-02-04 01:43:06
IS,Use High resolution time for measuring performance in react perf,React perf could give sub millisecond precision using the new performance api It seems it is pretty well supported too feat high resolution time,,"gaearon,gaearon",2017-02-04 12:43:33,2017-02-04 16:01:29
IS,setState does not call render when testing React components,First case When using a ref function that holds the rendered instance and then taking an action So the issue here Is it necessary to batch the rendering in the first case presented and if so is there a way to disable batching in react It should be very useful for testing matters,,,2017-02-06 12:38:39,2017-02-06 14:32:20
IS,Remove React createMixin,Since mixins are no longer a part of the future React API plan and the current React createMixin implementation L78 L81 is just a no op I think we can consider removing it Since it was part of the public API I believe it would need to happen in the next major release Should we add a deprecation warning before then There are a number of projects that use the API cc,,"aweary,gaearon,gaearon",2017-01-23 23:44:14,2017-02-06 15:56:02
PR,shouldLeaveMarkup flag for unmountComponentAtNode,This can help to resolve the issue when using React with turbolinks and libraries like react rails or react on rails Turbolinks turns any conventional web application into pseudo SPA When you follow a link Turbolinks automatically fetches the page swaps in its body and merges its head all without incurring the cost of a full page load Both react rails and react on rails uses turbolinks events full list of events to know when to mount and unmount React components on page They can use two events for unmounting First is turbolinks before render It happens just before turbolinks swaps the page body But using this event leads to warnings in console Second is turbolinks before visit It happens before turbolinks fetch next page body from server But unmounting components at this point and removing rendered markup from DOM causes visual changes on page which is bad for UX By adding sholdLeaveMarkup flag for unmountComponentAtNode we can free the memory used by component but leave markup in DOM while turbolinks loads new page I tested these changes on my fork and they resolve the issue with flickering components on turbolinks navigation,,"gaearon,gaearon,gaearon",2017-02-04 04:29:30,2017-02-06 16:00:40
IS,Closure Compiler wrong assignment order in instantiateReactComponent,When consuming React from source with the Google Closure Compiler this bit L26 L32 of code is not being run in the correct order It seems like the Google Closure Compiler transformation is changing the function to a var assignment It messes up the behavior because the original instantiateReactComponent function is hoisted My thought is it is related to the fact that the instantiateReactComponent function is exported from that module Anyway this produces an error because the assignment to ReactCompositeComponentWrapper prototype is now in the wrong order assignment function definition when we want definition assignment This may also be related or the root cause of 8887 The most straightforward solution is to bring the Object assign call after the function is declared which I have verified works correctly I'm happy to submit a PR with the described approach,,"anmonteiro,aweary,anmonteiro",2017-01-30 22:45:32,2017-02-06 16:02:14
PR,Closure Compiler wrong assignment order in instantiateReactComponent,This fixes 8894,,"anmonteiro,anmonteiro,gaearon,anmonteiro,gaearon,anmonteiro,anmonteiro",2017-01-30 23:00:45,2017-02-06 16:02:14
IS,JSX is inconsistently in rendering SVG text anchor attribute between React DOM and ReactTestRenderer,I think there is a bug in the behaviour of outputting the following text between ReactDOM and ReactTestRenderer A brief look through the source code yeilds this line for the reactRenderer I can not find a similar line for the test renderer,,gaearon,2017-01-29 00:22:04,2017-02-06 16:12:59
PR,docs Add note about refs on stateless components,Today at work we were trying to debug some code that used stateless components We found out that it is not possible to use refs on the stateless components as described in the docs We founded this issue and given that it was not obvious behaviour we decided to add this info to the Caveats section in the doc page about ref Please let me know what you think about this Thanks,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-02-02 13:45:10,2017-02-06 16:49:37
IS,Slow performance with the below react code,I have this function which gets passed rendered nodes array which contains all the nodes which are supposed to be rendered and each time there is a node added or removed this function gets called again the problem is that render is kind of slow any advice on why this may be the case,,gaearon,2017-02-06 16:32:51,2017-02-06 17:02:46
PR,Fiber Inject DevTools integration for React Native,Adds React DevTools support based on 8818 to RN Fiber There is more work necessary on React DevTools side to make this happen but this should be the extent of changes in this repo for now,,"gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,sebmarkbage",2017-02-04 18:33:40,2017-02-06 17:37:00
PR,Build with babel preset fbjs,WIP Update our build to use babel preset fbjs A couple tests appear to be failing so I still need to look into that It looks like the only difference in build files is that the preset adds the function names otherwise I think we are identical full diff,,"zpao,zpao,aweary,zpao",2016-05-25 19:33:47,2017-02-06 18:53:42
PR,Fix Flow 0 38 0 errors,fbjs 0 8 9 contains this change which fixes a Flow error in Flow 0 38 0,,"gaearon,zpao,gaearon",2017-02-01 09:55:24,2017-02-06 19:02:18
PR,Update higher order components md,Child component should have different name than parent,,"mitenka,acdlite,gaearon,gaearon",2017-02-04 00:37:35,2017-02-06 19:42:31
IS,Docs Tutorial should not mention getDOMNode,The current live docs at contain the following incorrect example I tried to click on the Edit on GitHub link at the top of the tutorial but got a 404 So the only thing I could think to do was to open an issue Hope it helps Thanks heart,,"gaearon,chenglou,gaearon,gaearon,chenglou,chenglou",2017-02-06 20:17:20,2017-02-06 20:59:15
PR,Only expose FiberRoot at the top level instead of a Fiber,It is strange to get a handle on the Fiber since it is one of possibly two root Fibers The correct way to get the current Fiber is through the root current I exposed the Fiber originally because I thought we might use it for Portals but we went with a different approach I do not think we do not need this API to be shared by Portals,,sebmarkbage,2017-02-06 19:30:35,2017-02-06 21:19:34
PR,Fiber Maps as keyed collections of children,I think I got the semantics right The existing test coverage is scant I guess because it is an experimental feature Should I add additional tests before landing,,"acdlite,sebmarkbage,acdlite",2017-02-02 01:26:53,2017-02-06 22:25:47
PR,Fiber Replace throw new Error with invariant module,The umbrella task says they should have sensible messages Does this include internal invariants ones that only throw if there is a bug in React,,"acdlite,sophiebits,acdlite,sophiebits,acdlite,gaearon,gaearon,acdlite,acdlite,gaearon,gaearon,gaearon,acdlite,sophiebits,sebmarkbage,acdlite,gaearon,gaearon,sebmarkbage,gaearon,acdlite,gaearon",2017-02-03 22:45:44,2017-02-06 22:49:14
PR,Remove experimental support for maps as children,We were already warning so this can go in the next major release,,"acdlite,sebmarkbage",2017-02-06 23:32:48,2017-02-07 01:14:31
PR,Inline internal error message,So that it is stripped out by the error code transform Follow up to,,acdlite,2017-02-06 23:46:12,2017-02-07 01:44:27
PR,Fiber Mount unmount warnings and invariants,Fixes some of the tests in ReactMount test js except the ones related to server side rendering,,"acdlite,gaearon,acdlite,sophiebits,sophiebits,sebmarkbage,sebmarkbage,acdlite,acdlite,sophiebits,acdlite,sebmarkbage,gaearon,sophiebits,acdlite,acdlite,acdlite",2017-02-02 19:08:36,2017-02-07 02:00:51
PR,Fix lint,Whitespace,,"gaearon,aweary,gaearon",2017-02-07 13:43:06,2017-02-07 14:42:10
PR,Fix a lint error,,,"koba04,aweary,koba04",2017-02-07 05:37:24,2017-02-07 15:22:16
IS,Dynamic rendering of react component,In my case i have a list of component names in left side of the window with a sign Once I click the sign the component should get displayed If the list is like component 1 component 2 component 3 component 4 component 5 If my click order is 3 2 5 4 1 the component should render in the following order Component 3 Component 2 Component 5 Component 4 Component 1 How should i do it,,aweary,2017-02-07 07:36:37,2017-02-07 15:34:11
IS,Confusion in setting state in almost all developers Data mutation why is it bad We need proof,Do you want to request a feature or report a bug No What is the current behavior setState is behaviour If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Not a bug But it is raising issue among developers and may create bugs What is the expected behavior Explanation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version Simple example We are setting initial state in the constructor setState questions 1 display none Later we are updating like this var questions this state questions questions 1 display block this setState questions questions Why is this approach bad Or not bad Can anybody explain with examples What approach we take can lead to ugly codes,,"gaearon,gaearon,aweary,gaearon,aweary,aweary",2017-02-07 19:09:19,2017-02-07 20:23:37
PR,update react perf docs 8060 and 6174,Number 11 on checklist of issue 8060 Added example console screenshot and link to live demo where user can open console and call Perf methods,,"lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,lacker,lacker,lacker,lacker,gaearon,gaearon",2016-11-08 16:08:44,2017-02-07 22:00:09
PR,Update ReactElementTestChild js,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,gaearon,2017-02-08 07:25:56,2017-02-08 16:19:25
IS,Re add the warning about PropTypes,After a discussion with we decided to keep the warning even though the functions will throw in production The warning is the only way to learn about that We should also document how to pass the secret through in case you know what you are doing,,"gaearon,sophiebits,gaearon",2016-10-24 19:42:52,2017-02-08 16:29:20
PR,Re add the warning if PropType function is called manually,With this change now we again have the warning if you attempt to call PropTypes manually It was removed in 8066 but we should not have done this since we still want to avoid people accidentally calling them in production and even more so since now it would throw Fixes 8080,,"gaearon,gaearon",2017-01-31 17:21:41,2017-02-08 16:29:20
PR,Move DOM dependent tests out of the shared folder,We have a bunch of tests that are meant to test generic React behavior However we have written the tests against the DOM renderer This moves tests that depend on ReactDOM or ReactTestUtils out of the shared folder This will let us sync the shared folder directly to environments that do not support running these tests Such as React Native,,"sebmarkbage,sebmarkbage,sebmarkbage",2017-02-08 07:27:14,2017-02-08 18:20:03
PR,Fixed ReactNativeFiber event handling regression,Fixed event handling regression introduced in b354db2 and added test coverage to ReactNativeEvents test for fiber,,bvaughn,2017-02-08 19:40:01,2017-02-08 19:44:08
IS,Inline border style not rendering correctly,Do you want to request a feature or report a bug Reporting a bug Certain changes to inline border styles are not updated correctly in the DOM What is the current behavior Incorrect rendering If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Changing the inline style of a div from border '30px solid green' borderRightColor ared' to border '30px solid green' results in the border right color being undefined i e black rather than green What is the expected behavior Rendering a div with inline style border '30px solid green' should give it that border regardless of what the border style was set to on a previous render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested in 15 4 2 on the latest versions of Chrome Firefox and Safari Unaware of it working properly in previous versions of React but not sure,,syranide,2017-02-08 16:02:50,2017-02-08 20:52:47
PR,Fiber Do not test input value clean up in Fiber,Fiber does not clean up host components relies on GC Remaining tests in ReactDOMComponent test js relate to server side rendering Punting on those for now,,acdlite,2017-02-07 19:32:53,2017-02-08 23:33:21
PR,findNodeHandle ReactNative findNodeHandle,Submitted this internally already Needed because people import this file directly and they might not have the renderer inject the findNodeHandle handler yet,,sebmarkbage,2017-02-09 01:10:04,2017-02-09 01:13:33
PR,Fixed ReactNativeFiber event handling regression,Fixed event handling regression introduced in b354db2 and added test coverage to ReactNativeEvents test for fiber,,"bvaughn,sebmarkbage,sebmarkbage,bvaughn,bvaughn,sophiebits",2017-02-08 19:46:00,2017-02-09 07:28:57
PR,Fix TransitionGroup error on quick toggle of components,I had this pull request to address this issue,,gaearon,2017-02-09 08:55:44,2017-02-09 11:22:09
IS,TransitionGroup throws warnings if component is unmounted,On react 15 4 1 Every time I create some animations using TransitionGroup I get some errors when I change page while the animation is still running,,gaearon,2017-02-09 08:54:37,2017-02-09 11:23:04
PR,Use separate feature flag for ReactTestRenderer,The ReactDOMFeatureFlags is not reachable from the npm package since it is in a separate build so we need a separate one,,"sebmarkbage,gaearon,gaearon",2017-02-09 07:10:12,2017-02-09 16:01:00
PR,Move React Native Environment Mocks to root,These mocks are things we expect to be available in the React Native environment I would like to move them out of the renderer folder so that we can sync that folder to React Native as is without overriding its mocks I motivate by the fact that they are not really part of the renderer code itself I leave the ReactNative mock since that is in fact part of the renderer,,"sebmarkbage,gaearon",2017-02-09 04:08:29,2017-02-09 16:02:10
PR,Fixed lint warning in master,,,bvaughn,2017-02-08 19:46:44,2017-02-09 16:02:48
IS,onChange does the same as onInput unlike DOM,This is confusing normally 'change' event is called only with enter key when the field was changed 'input' is used for all changes Why did you put the 2 events for the same thing it is not practical,,"aweary,aweary",2017-02-09 12:17:20,2017-02-09 16:30:46
PR,Add toTree method to stack and fiber TestRenderer,to This PR adds a toTree method to ReactTestRenderer This method is a result of the discussions from Related discussion also in This API will help us accomplish the goal of enzyme not needing to refer to any react internals at all This PR is not complete but I think it is a good start I was hoping for some feedback on how to get this to the finish line The main things I can think of are x Need to add flow type definitions for this new code Should we add documentation for this method x Should we try to write toJSON as a function that uses toTree under the hood in order to reduce amount of code is toTree the right name x Is the code here correct I was not quite sure w the fiber renderer if I should be using child or progressedChild or return etc For some reason when I was using Jest Jasmine is toEqual matcher it was succeeding at times where it should not which really concerned me I ended up changing expect foo toEqual bar to expect prettyFormat foo toEqual prettyFormat bar in order to make sure things were working properly The way I'm nulling out instance on the nodes in tests is kind of wonky x Should we or should we not include children in the props object of these elements I think we should now that I think about it more but we might have to do more hacks to make the tests easier again,,"lelandrichardson,aweary,aweary,aweary,lelandrichardson,lelandrichardson,gaearon,lelandrichardson,gaearon,lelandrichardson,sebmarkbage,lelandrichardson,sebmarkbage,sebmarkbage,sebmarkbage,lelandrichardson,gaearon,gaearon,lelandrichardson,lelandrichardson,aweary,lelandrichardson,sebmarkbage,lelandrichardson,sebmarkbage,lelandrichardson,lelandrichardson,aweary,lelandrichardson,lelandrichardson,gaearon,lelandrichardson,gaearon,lelandrichardson,sebmarkbage,sebmarkbage,gaearon,lelandrichardson,sebmarkbage,gaearon",2017-02-05 18:53:33,2017-02-09 20:55:01
IS,onChange not firing on controlled input element when value is updated,I have found what to me appears as a bug Bug When a controlled input element changes by updating it is value onChange is not called Reproduction I made a codepen that illustrates the problem Expected behaviour I expect that onChange gets called since the input did change and the world of React is by nature very much controlled This is written in the docs onchange and also mentioned in various threads such as issuecomment 266248335 and issuecomment 270909834 My problem The fact that the inputs onChange function not gets called is a problem to me because I need to do logic such as validation when the inputs have changed Comments I tried using onInput also but it does not get called either,,aweary,2017-02-09 17:14:27,2017-02-09 21:10:33
IS,React error reporting with Bugsnag,Is there any good guide on connecting React with Bugsnag or any other solution for error reporting Will appreciate a good example for this one Thanks,,aweary,2017-02-09 20:49:29,2017-02-09 21:33:00
IS,proposal for fire event and send data between component,i have a proposal for fire event and send data between component i create events lib i use this lib in 3 project with reactjs and very easy and without complex,,acdlite,2017-02-08 13:29:04,2017-02-09 22:57:31
PR,Hardened validateCallback to better handle null values,Previously calls to validateCallback with a null callback value resulted in runtime errors if a certain transform was not applied prior to running This commit wraps the invariant with the condition check so as to avoid calling formatUnexpectedArgument unless necessary It also replaces the truthy falsy callback check with an explicit check for improved performance,,bvaughn,2017-02-09 23:48:03,2017-02-10 00:10:45
PR,Only fix a small wrong key in example,Only fix a small wrong key in example in Embedding Expressions in JSX embedding expressions in jsx section,,gaearon,2017-02-10 15:31:39,2017-02-10 15:40:24
PR,v16 Remove React spread,This PR is for removing React spread which is listed in 8854,,"koba04,acdlite,koba04,acdlite,koba04",2017-02-07 05:44:38,2017-02-10 20:27:04
IS,Disabled attribute ignored on div role button with onClick when clicked,I'm using ARIA role button on some div elements They are disabled at times but the disabled attribute is being ignored by React and the onClick event is being triggered I have created a fiddle illustrating the issue I would expect that onClick would not be triggered on elements when disabled true especially if role button I am using React 15 4 1 JSFiddle is 15 4 2,,aweary,2017-02-10 23:21:02,2017-02-10 23:31:57
PR,grammar,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,aweary,2017-02-11 22:45:06,2017-02-11 23:40:43
IS,setState errors,Hey Guys Im new to react and I wanted to know why the setState always gives me this bundle js 53089 Uncaught in promise TypeError Cannot read property isetState' of undefined this is my code,,"syranide,gaearon",2017-02-12 11:20:00,2017-02-12 12:30:30
PR,Fix a typo in design principles doc,unambigious unambiguous,,"pra85,gaearon",2017-02-13 08:01:15,2017-02-13 15:09:01
IS,React seems to skip rendering semicolon in inline styles,Do you want to request a feature or report a bug bug What is the current behavior With SSR we get this warning using inline styles I'm not sure if the browser is adding the semicolon or if react is skipping it on the server What is the expected behavior We should not get any warning markup from client and server should match Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 2 Chrome Linux Firefox Linux,,"gaearon,gaearon",2017-02-13 15:05:44,2017-02-13 16:09:12
PR,Fixing grammatical error,in the Create React App section Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,,2017-02-13 17:51:56,2017-02-13 18:04:10
PR,Fiber Use T null instead of T types,Flow maybe types accept both null and undefined When the final parameter of a function accepts a maybe type passing nothing undefined successfully typechecks which can lead to bugs if the omission is accidental Being forced to pass null is harder to screw up Explicit null checks are also faster,,"acdlite,gaearon,acdlite,jddxf,acdlite,sebmarkbage,sebmarkbage",2017-02-11 01:31:17,2017-02-13 19:20:59
PR,Fix createNodeMock doc to avoid Invariant Violation,Hi when I try to mock refs for snapshot testing described here I get the error Invariant Violation Element appears to be neither ReactComponent nor DOMNode I made use of this line of code to make it work L46 I'm using react 15 4 2 react test renderer 15 4 2 and jest 18 1 0,,"BDav24,gaearon,gaearon,gaearon,BDav24,gaearon,BDav24",2017-02-13 19:14:41,2017-02-13 20:13:32
PR,Fiber Move callback validation to top level,Validate callbacks as early as possible so we do not have to do additional checks later,,"acdlite,bvaughn",2017-02-09 23:55:32,2017-02-13 20:15:43
PR,Revert Fix createNodeMock doc to avoid Invariant Violation,Reverts facebook react 8989 for the reason explained in it It was unnecessary,,gaearon,2017-02-13 20:15:42,2017-02-13 20:15:50
PR,v15 5 Deprecate React createFactory,This PR is for adding deprecation warnings for React createFactory which is listed in 8854 In development environment React createFactory is ReactElementValidator createFactory so I added a warning only in ReactElementValidator Should I add this in ReactElement too,,"koba04,acdlite,koba04,sebmarkbage,koba04",2017-02-09 06:14:49,2017-02-13 20:32:25
PR,Move ReactElementType to shared,This is currently used by both isomorphic and the renderer I think that we can probably split these up The isomorphic type should actually be different It has to do with that the caller needs to know exactly which type of element it is but this is never needed in the renderer which only needs to know that the type is internally consistent The owner type is renderer dependent so it can literally be anything,,"sebmarkbage,sebmarkbage",2017-02-13 21:49:27,2017-02-13 21:54:41
PR,fix misspellings in comments and tests,,,gaearon,2017-02-07 16:28:35,2017-02-13 22:01:55
PR,Missing a space for error 125,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"aweary,aweary,gaearon,gaearon,aweary",2017-02-12 19:22:17,2017-02-13 22:21:16
PR,Check alternate in ReactTreeTraversal,Test Plan Could not figure out how to write a unit test Verified that enter leave bubbling now works correctly in one FB interface that was broken though,,sophiebits,2017-02-13 22:21:33,2017-02-13 22:24:45
PR,Revert Missing a space for error 125,Reverts facebook react 8981 We should not modify this file by hand It is automatically created by a build task that we run on stable releases If the current code has a misspelling we should fix it in the code and we will update the file during a release Otherwise we should keep the misspelling in because the file will be regenerated anyway,,gaearon,2017-02-13 23:11:01,2017-02-13 23:11:06
PR,Revert Revert Missing a space for error 125,Reverts the revert Reverts facebook react 8994,,"aweary,gaearon",2017-02-13 23:13:43,2017-02-13 23:15:09
PR,Reference refs before they are used 8382,,,"piperchester,aweary,gaearon,gaearon,aweary",2017-02-03 04:11:48,2017-02-13 23:22:45
PR,Update Thinking in React embed to match the link,We updated the code snippet in but forgot to update the embed,,gaearon,2017-02-13 23:21:51,2017-02-13 23:25:48
PR,Remove an unnecessary condition,I came across this while reading ReactFiber implementation,,"koba04,koba04",2017-02-07 07:09:58,2017-02-13 23:36:14
PR,Revert update react perf docs 8060 and 6174,Reverts facebook react 8236 Happy to take this again if the concerns in pullrequestreview 21643916 are addressed I would fix this forward manually but unfortunately do not have the time right now I'm sorry I did not give it a good look beforehand,,gaearon,2017-02-13 23:42:56,2017-02-13 23:43:09
IS,ReactCSSTransitionGroup Animated component not removed from DOM,Do you want to request a feature or report a bug Bug What is the current behavior When ReactTransitionGroup is used like this also compare setting transitionEnterTimeout and transitionLeaveTimeout to zero the children of CSSTransitionGroup are not removed when the leave animation completed However it can be fixed by settings both values to 1 Which versions of React and which browser OS are affected by this issue React 15 4 2 Safari on iOS 7 1 2 and native Android browser Android 4 4 2 CodePen,,gaearon,2017-02-14 09:22:47,2017-02-14 15:33:34
PR,Convert problematic let declarations to var,Test Plan Patch in run grunt build modules with no errors,,"sophiebits,sophiebits,sophiebits",2017-01-30 21:10:08,2017-02-14 18:49:00
PR,Ignore events on text nodes in stack,In React Native events can fire on text nodes on Android at least In that case the current element will be a string and not props These can not have event handlers on them so we need to bail out so that we do not throw later on,,"sebmarkbage,sophiebits",2017-02-14 08:47:56,2017-02-14 19:08:30
PR,Move validation calls behind DEV blocks,This was done for Fiber but not Stack causing these to throw in prod,,"sebmarkbage,gaearon,bvaughn,sebmarkbage",2017-02-14 08:43:24,2017-02-14 19:11:00
PR,Update to babel plugin transform es2015 block scoping 6 23,Now we wo not add closures unnecessarily I verified that we have no code that throws adding some then running grunt build modules correctly throws,,"sophiebits,bvaughn",2017-02-14 18:48:45,2017-02-14 19:24:02
IS,react test renderer does not install dependencies on npm v2,I'm currently using react test renderer version 15 4 1 and npm version 2 15 9 and jest version 17 0 3 When running tests that use react test renderer I'm seeing this error Is this an issue with npm v2,,"gaearon,aweary",2016-11-30 19:59:22,2017-02-15 17:50:01
PR,switched href Get Started and Take Tutorial to md,I received some questions noting that the tutorial and get started link link bring you to a 404 page I was not sure what html this was supposed to direct to but the viewing the md seems to be helpful Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"aweary,aweary",2017-02-15 17:36:00,2017-02-15 17:52:18
PR,switch links to open GH pages not 404,switched the current urls To the GitHub pages route Currently they render a 404 page Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"aweary,bvaughn,aweary",2017-02-15 18:09:07,2017-02-15 18:14:22
IS,Key property on SVG elements causes warning,Do you want to request a feature or report a bug bug What is the current behavior When I use key property on SVG elements line text circle I see Warning line 'key' is not a prop If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Ca not reproduce it in JSFiddle tried but can in a fresh project created with create react app What is the expected behavior No warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Project created with create react app React version is 15 4 2 MacOS 10 12 3 Chrome 56 0 2924 87,,"gaearon,gaearon,gaearon,gaearon",2017-02-15 19:38:55,2017-02-15 21:03:17
PR,Switch to shipping Fiber in npm packages,I added missing fiber js to react dom and react test renderer package json s so this file does not get stripped when packages are published to npm,,"gaearon,gaearon,gaearon,sebmarkbage,gaearon",2017-02-16 09:56:26,2017-02-16 15:42:04
IS,Question forceUpdate,Hello I am a new user of React I use it to make a web app of creating css based animations so I have a div which shows the preview of animation by adding div with certain classes in this node The problem is that all the animations must be timed correctly but they are out of sync when adding new div because of React is feature of smart dom update I found a way that I must update all the node containing animated divs I tried to use forceUpdate but it seems that I do not use it in correct way I did not find enough information about this method so I would be glad if someone could help me out,,aweary,2017-02-15 20:51:48,2017-02-16 16:22:54
IS,Add new typechecking rule for class inherit,I'm not sure is it possible or necessary to do this but I got the trouble here please see the example code below As I add some common function in Parent or Grandpa class so the component passed into TestComponent should inherit from these classes then some component can work correctly I tested ChildOne prototype instanceof Parent and ChildOne prototype instanceof Grandpa are both correct so is it necessary to add this rule,,aweary,2017-02-13 00:09:17,2017-02-16 16:37:56
IS,Feature Best error tracking for React Special Props errors,I'm currently using React v15 4 1 and this error is displayed in the console I can not track easily what component trigger this error I have to do a binary search in my code to find it,,"gaearon,gaearon",2017-02-16 16:58:44,2017-02-16 17:11:08
PR,adding mouseMetrics to keep track of mousemovements fixes 6723,Added movementX and movementY feature in accordance to widl MouseEvent movementX MouseEvent reference updated This will now give full support for movementX and movementY including for browsers which do not support these events Not sure how to test this so any help is welcome,,,2017-02-16 23:41:22,2017-02-16 23:44:05
PR,Fix Fiber devtools prod,,,"sophiebits,iamdustan,gaearon,gaearon,sophiebits",2017-02-17 00:49:59,2017-02-17 02:00:50
IS,DoubleClick Click event not firing,Hello I am trying to generate a doubleClick with document getElementById 'id' OnDoubleClick but with no success I tried the same with onClick here Beside it is working just fine without React An idea why it is not working Thank you,,aweary,2017-02-17 09:49:41,2017-02-17 15:10:25
IS,Can I load data in the constructor,After reading the docs componentDidMount componentdidmount I was recommended to load data in the componentDidMount method and I did it It runs well But I still has a question can we load data earlier than componentDidMount like constructor or componentWillMount PS Maybe it is my fault that not search too much If there is any related docs or issues plz point to me I will appreciate it,,aweary,2017-02-17 07:06:18,2017-02-17 15:16:58
IS,Is there any good way to shallow compare element,Is there any good way to shallow compare two elements I have two variables a and b and I want to shallow compare their value like below Since React createElement creates plain object I just implement this method by special compare the children value in props Did React provide some function to do this job Thank you,,"monkindey,aweary",2017-02-17 02:47:40,2017-02-17 17:30:49
IS,Bug Cannot read property aremove' of undefined in SimpleEventPlugin js,Sorry if this has been reported before but I could not find it in the issues section I am getting a Cannot read property aremove' of undefined error in SimpleEventPlugin js but unable to replicate it Here is where the error is occuring Also here is a StackOverflow link with the same issue Also I am using React 0 14 Let me know if you need any more details Thanks,,"aweary,aweary",2017-02-15 07:45:25,2017-02-17 17:31:25
IS,event currentTarget is null in onMouseMove event handler,Browser Chrome LTS React ver LTS I guess event currentTarget might be li element but it is null It seems so weird because event currentTarget would refers to the element to which the event handler has been attached I was wondering if someone could help me solve this problem Thanks,,"yenshih,koba04,aweary,aweary",2017-01-05 03:54:49,2017-02-17 17:50:43
PR,Improved for a better understanding,that code should not name this parameter onchange It is so confusing for a starter of ReactJs like me It looks like that the onChange is an common event from props Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-02-09 14:41:19,2017-02-19 02:21:06
PR,Remove extra article from documentation,,,"romamatusevich,gaearon",2017-02-19 11:00:50,2017-02-19 11:10:51
IS,Licence Clarification,I have a question regarding the Licence FAQs Does the additional patent grant in the Facebook BSD Patents license terminate if I sue Facebook for something other than patent infringement Am I right that if facebook infringes a patent of mine and I sue Facebook I lose the right to use react That would mean that I have to move all of my applications to another technology,,"gaearon,gaearon",2017-02-20 08:25:01,2017-02-20 10:16:22
IS,Doc of function component maybe needs review,In the doc of describtion of mount mounting host elements It will call renderedElement type props and the type is our UserInfo function This makes me consider that react do not instance the function component it just call it and receive the returned value But I see the src code of ReactCompositeComponent js L207 and it shows react create a instance named StatelessComponent If I am wrong please let me know If not I think we can add some tips about this,,"aweary,aweary",2017-02-21 14:05:26,2017-02-21 16:54:16
IS,Error performUpdateIfNecessary Unexpected batch number,From maintainers if you have this problem please see the explanation in issuecomment 281405036 I am getting a strange error I have never come across Googling it does not help at all Error performUpdateIfNecessary Unexcpeted batch number current 36 pending 31 It has caused me a lot of headaches I have reverted to 2 days ago and the error persists even though 2 days ago everything was running smoothly and all tests were passing I would appreciate any sort of direction as to how I can begin to resolve this bug My guesses are that it is an error with Redux Webpack Redux Form or React itself I know not that precise but I'm quite lost Example redux logger information screen shot 2016 05 26 at 11 18 43 am Max OS X El Capitan 10 11 5 React v15 0 1 error persists on v15 1 0 I'm sorry if this is not specific to React I did look into the error message code and it appears to be coming from the Facebook React code Thanks,,"gaearon,gaearon,gaearon,gaearon,jimfb,sophiebits,gaearon,gaearon,jimfb,jimfb,gaearon,gaearon,gaearon,gaearon,gaearon,sophiebits,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2016-05-26 18:32:57,2017-02-21 16:55:10
IS,DOM is not rendered before componentDidUpdate,From my understanding componentDidUpdate is called after a component is re rendered However if I take the code from Facebook React tutorial and add these 2 functions to class Game its codepen is here then it takes 2 5 seconds after every click for react to update the page instead of updating the DOM then sleep for 2 seconds Is this an expected behavior If I need a function that only triggers after the page is updated then what should I use,,syranide,2017-02-21 06:12:54,2017-02-21 20:13:22
PR,Improved stack fiber type check to avoid false negative match,A bug was discovered in ReactNative where getNodeFromInstance was called for a stack instance with a rootNodeID of 0 The way our code was previously written caused us to treat this as a fiber instance and caused a runtime error This PR hardens that check to avoid the bad match It does not address the underlying cause of the issue It is expected that after this change has been made the issue will still result in an error this time it will be an invariant statement though,,"bvaughn,sebmarkbage,bvaughn",2017-02-21 22:26:06,2017-02-21 23:14:20
IS,Error performUpdateIfNecessary Unexpected batch number in react v15 4 2 and react dom v15 4,Spun off from 6895 which was closed with a request for reproducible test cases to be filed as separate issues 1 The test case I would filed there 2 which failed on v15 4 1 is still failing on 15 4 2 And really there is not much code in the example at all p There may be bugs and catches deeper in the stack but the only direct dependencies are react scripts react and react dom so it seems like an issue in a Facebook maintained repository or possibly one of their dependencies in which case a Facebook maintained dependency may need to be bumped 1 issuecomment 281405036 2 issuecomment 262750248 3 issuecomment 247710003,,"gaearon,gaearon,gaearon",2017-02-21 20:52:35,2017-02-22 03:27:10
PR,Merge pull request 1 from facebook master,Improved stack fiber type check to avoid false negative match when in Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,,2017-02-22 04:22:56,2017-02-22 04:41:57
IS,npm test failed for ReactTestRenderer test js,Do you want to request a feature or report a bug I want to request a bug What is the current behavior After cloning React and installing dependencies when I ran npm test I found one test suites to failed out 126 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template run command npm test What is the expected behavior FAIL src renderers testing tests ReactTestRenderer test js Test suite failed to run Cannot find module 'pretty format' from 'ReactTestRenderer test js' Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 4 2,,jddxf,2017-02-18 09:00:50,2017-02-22 06:09:09
PR,Upgrade Jest to v19,This PR upgrades Jest and related deps to v19 0 0 as we just rolled out a new release,,"thymikee,gaearon,thymikee",2017-02-21 10:59:35,2017-02-22 16:59:19
PR,Fixed typo Calcutor to Calculator,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,gaearon,2017-02-22 17:35:16,2017-02-22 17:37:56
PR,Support for assigning to this state inside componentWillReceiveProps,We do not explicitly support this pattern but it happens to work kinda in Stack We will give it replaceState semantics and print a warning so that people stop relying on this pattern In the future we will remove the replaceState behavior but keep the warning,,acdlite,2017-02-21 22:46:14,2017-02-22 20:45:58
PR,Fix RN bug when event responder unmounts during touch sequence,This PR adds a test initially failing for this case along with a fix for stack and fiber The stack fix was copied from a Diff submitted by The fiber fix was to stop leaking properties for unmounted views Longer term we may want to explicitly invoke a release event listener for a responder just before unmounting it This PR does not do that,,"bvaughn,bvaughn",2017-02-22 18:23:02,2017-02-22 20:47:36
PR,Fiber Component lifecycle tests,Fixes tests in ReactComponentLifeCycle test js Biggest change is to set current owner to null at beginning of commit phase,,"acdlite,acdlite,bvaughn,sebmarkbage,gaearon,acdlite,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,acdlite",2017-02-07 21:41:27,2017-02-22 20:54:43
PR,Pass errorBoundary to logCapturedError,,,sophiebits,2017-02-22 21:06:35,2017-02-22 21:06:50
PR,Fiber Do not merge failing Add failing tests for coroutines,There are a few different issues Updates result in unnecessary duplicate placements because it can not find the current fiber for continuations When run together coroutine update and unmounting tests appear to lock down in an infinite loop They do not freeze in isolation I do not have a solution for this but just leaving it for future fixes,,"gaearon,gaearon,sebmarkbage",2016-11-24 17:38:35,2017-02-22 21:40:02
PR,Add test for hack to stop bubbling,,,sophiebits,2017-02-02 23:49:56,2017-02-22 22:02:10
PR,Fiber adds childContextTypes warnings for functional components,ReactStatelessComponent test js currently fails behind Fiber flags due to warnings not showing up when functional components mount or update when childContextTypes are defined on the functional component This PR ports the existing warning messages from stack and re applies them to Fiber is functional components Existing login within ReactFiberContext js was also re used on functional components previously it was only used for class components to fully full in line with the expected behaviour for the test assertions,,"trueadm,sebmarkbage,trueadm,gaearon,trueadm",2017-02-22 14:14:59,2017-02-23 15:37:49
PR,Fiber fix ensure class components refs get re assigned to emptyObject on mount,Due to how Jest and other mocking libraries work in user land modules that are required might not be referentially equal at various stages of the application lifecycle Previously Stack would re assign emptyObject upon mounting a class component ensuring the reference to emptyObject remained consistent This PR re applies this change to class components in Fiber,,"trueadm,gaearon,trueadm,sebmarkbage,gaearon,trueadm,gaearon,trueadm,gaearon,gaearon,trueadm,trueadm,gaearon,gaearon,trueadm,trueadm",2017-02-22 16:17:22,2017-02-23 15:38:11
PR,Use ReactNativeFeatureFlags in ReactNative,Import the proper implementation based on feature flags Also adds flow in ReactNativeFeatureFlags Tested that it works by changing useFiber in ReactNativeFeatureFlags and made sure it uses the right renderer cc,,"sebmarkbage,gaearon,bvaughn,sebmarkbage",2017-02-19 09:38:40,2017-02-23 20:32:48
PR,Update tutorial md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,,2017-02-23 00:17:35,2017-02-23 20:54:04
PR,Missing onLoad and onError events on image tag 5626,image tag to call trapBubbledEventsLocal,,,2017-02-22 12:25:15,2017-02-23 21:05:39
PR,Removed unnecessary if,Found this little thing while stepping through an example validType already checks whether type is a string or a function,,,2017-02-20 16:22:03,2017-02-23 21:14:21
PR,API for checking external objects against React prop types,Allows users to check arbitrary objects against React prop types without relying on the implementation details of the prop validators themselves An example of why this is important some prop validators may throw while others return an error object Calling a prop validator manually requires handling both cases checkPropTypes does this for you The default behavior is to skip repeated warnings like normal prop type checking already does I added an optional parameter to override that and always warn not sure if we really need that though,,"acdlite,gaearon,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,bvaughn,aweary,sebmarkbage,sebmarkbage,acdlite,acdlite",2017-02-14 22:56:21,2017-02-23 22:37:20
PR,Fiber Prevent extensions to fiber in DEV,Helps us avoid accidentally adding fields to the fiber class See discussion r102717019,,acdlite,2017-02-23 19:29:15,2017-02-23 22:42:17
PR,fix version,per commitcomment 21033948,,"nihgwu,acdlite",2017-02-24 09:36:08,2017-02-24 18:10:12
PR,Remove npm shrinkwrap file from list of files to version,Correct me if I'm wrong but I do not think we need this anymore,,"acdlite,sophiebits,acdlite",2017-02-24 00:07:56,2017-02-24 18:14:41
PR,Fix record tests script,I was unable to run the record test script Did some digging and turns out the result of readConfig changed slightly in Jest 0 19 which we recently updated to This fixes the script I'm not entirely sure why this did not break CI To test make sure you run yarn so you are on the latest version of jest,,"acdlite,acdlite",2017-02-24 18:48:50,2017-02-24 18:59:44
IS,ReactTransitionGroup Rendering a Single Child,Do you want to request a feature or report a bug Bug What is the current behavior In the Rendering a Single Child rendering a single child documentation coders are encouraged to pass in prop component null for ReactTransitionGroup like so if childrenArray 0 is not truthy If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar See and open your console What is the expected behavior No error should be thrown when null is passed as the component prop to ReactTransitionGroup Nothing should render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version of React I am on Chrome 56 on MacOS Unsure about previous versions presumably also broken,,,2017-02-23 23:48:05,2017-02-24 19:00:24
PR,Fiber ReactCompositeComponent test js,Fixes tests in ReactCompositeComponent test js Overlaps with so I based it on that Review that one first,,"acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,sebmarkbage",2017-02-07 22:41:11,2017-02-24 19:17:20
IS,RFC distribute flow files with React,This RFC is regarding distributing typedef files with React While this would be generally useful and possibly useful to extract the React js definitions out of flow itself especially for renderer implementers it would be especially nice for renderer implementers I have manually extracted the minimal required for a react renderer in Possible solutions ensure flow gen flow files works and generates all of the js flow files in packages add a custom step to the build tooling to include the public renderer type def for each public package a minimal typedef for ReactFiberReconciler js in each package that receives that file,,"iamdustan,aweary,iamdustan",2017-02-24 20:03:59,2017-02-24 20:09:58
IS,Opened by mistake,,,,2017-02-24 21:04:36,2017-02-24 21:04:55
PR,Flatten Text children before rendering,From FB internal D4613844,,sophiebits,2017-02-24 21:39:53,2017-02-24 21:40:09
PR,Fiber Preserve Break on all uncaught exceptions behavior in DEV mode,x Refactor invokeGuardedCallback so that it returns a thrown error Need this for Fiber is error handling x Use invokeGuardedCallback in place of Fiber is try catch blocks x Test behavior in browsers x Chrome x Firefox x Safari x Edge x Figure out how to deal with ErrorUtils shimming see D4538250,,"acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite",2017-02-08 22:23:43,2017-02-25 00:21:35
IS,Feature Have setState defer the render but 'apply' the new state immediately,Do you want to request a feature or report a bug Feature the resolves a bug What is the current behavior call to setState defers the internal state update Thus trying to access this state on line 27 will not return the state that was set on line 26 because of React is batching algorithm Assume we have setup like this What is the expected behavior React should batch just render reconciliation and let the state change take effect immediately that way the code above would not introduce not so unexpected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version all all N A,,"gaearon,gaearon,monkindey",2017-02-25 10:40:41,2017-02-25 12:44:34
PR,Add fix missing verb s,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,aweary,2017-02-25 08:02:40,2017-02-25 15:07:53
IS,Documentation Epub format,Hello Is there a way to get React documentation in epub format Thanks,,aweary,2017-02-25 09:45:57,2017-02-27 15:45:09
PR,Updated Chain React,Changed conference date from Summer 2017 to given date on website Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,bernard-lin,2017-02-26 04:24:15,2017-02-27 15:53:48
PR,Pass add'l component name and stack info to error boundary handler,This information is probably more useful for custom redbox components than the call stack info we are already passing Open to suggestions about the approach though It is a little clunky compared to ReactFiberErrorLogger but at least it is backwards compatible,,"bvaughn,sophiebits,bvaughn,sebmarkbage,bvaughn,gaearon,gaearon,sophiebits,gaearon,bvaughn",2017-02-27 20:04:42,2017-02-28 00:53:18
PR,Move webcomponents js polyfill to mocks,I would like to move it out of shared to make it easier to sync this to RN Since this is only used for testing and a polyfill is essentially a mock Maybe this makes sense,,"sebmarkbage,sebmarkbage,gaearon",2017-02-13 22:34:07,2017-02-28 02:35:05
PR,Enable react jsx space before closing rule,We mostly do this but not 100 I fixed the stragglers here with node modules bin eslint fix src and enabled the lint rule,,"sophiebits,sophiebits,aickin",2017-02-28 06:30:21,2017-02-28 17:03:09
PR,providesModule explicit requires for cross package dependencies,This is one step closer to a CommonJS Lerna set up I added some forwarding modules for Flow and Jest is sake They have the same purpose as the symlinks Lerna or Yarn Workspaces would provide I ran a codemod to use explicit package paths for cross package dependencies and unit tests The rest of the requires are still providesModule,,"sebmarkbage,gaearon,trueadm,gaearon,trueadm",2017-02-28 09:53:05,2017-03-01 02:42:53
IS,Maybe ref attribute usage could cause performance problem,In the doc of ref attribute adding a ref to a dom element But in the ref attribute adding a ref to a dom element section there are no tips So I want to know your thoughts on this Thanks,,"gaearon,gaearon,gaearon",2017-03-01 13:58:31,2017-03-01 14:05:02
IS,Why Value of Array is lost after setting Timeout,Hello All I'm getting Issue regarding Timeout in React My code submit this id1 this array push this state this setState value setTimeout function console log this array 2000 The Issue is When user clicks on submit state value has been push in array But If I set Set timout to get Array list after 2 to 3 sec It shows me Undefined Why is its saying that array is undefined If I remove the timeout code then it works fine I dont know weather its my issue Am I doing wrong Please help me out Thank you,,"gaearon,gaearon",2017-03-01 13:57:39,2017-03-01 14:09:08
PR,Square renders button not div,Doc change only,,,2017-03-01 10:10:38,2017-03-01 15:40:46
PR,remove nbsp and use space instead,,,aweary,2017-03-01 01:12:53,2017-03-01 15:41:47
PR,Fiber Remove stack dependencies from tests,This PR addresses points outlined in 9069 specifically the Stack dependent test in src renderers tests ReactUpdates test js has been removed the Stack dependent test in src renderers dom shared tests ReactMount test js has been removed the Stack tests in src renderers dom shared tests ReactDOMComponent test js have been refactored to use the public API rather than internal Stack modules the test in src renderers dom shared tests ReactDOMIDOperations test js has been refactored to use the public API and moved into src renderers dom shared tests ReactDOMComponent test js,,"trueadm,gaearon,sebmarkbage,sophiebits,gaearon",2017-02-28 15:09:03,2017-03-01 18:24:11
PR,Enforce no boolean or string constructors,First commit adds a new ESLint rule that errors when Boolean and String constructors are used Second commit fixes the codebase to adhere to the new rule,,"acdlite,gaearon,gaearon,gaearon,acdlite,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,sophiebits,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,gaearon,syranide,gaearon,sebmarkbage,acdlite,acdlite",2017-02-28 21:22:22,2017-03-01 18:55:43
PR,Fiber Do not deprioritize hidden trees when we are in sync mode,When useSyncScheduling is set to true as it is in the DOM renderer we should not give OffscreenPriority to hidden subtrees Everything should be sync task,,"acdlite,sebmarkbage,sophiebits,acdlite,sophiebits,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,sophiebits,acdlite",2017-02-27 23:56:54,2017-03-01 18:56:32
PR,Add React PureComponent inherit purity for functional components,React PureComponent This provides an easy way to indicate that components should only rerender when given new props like PureRenderMixin If you rely on mutation in your React components you can continue to use React Component Inheriting from React PureComponent indicates to React that your component does not need to rerender when the props are unchanged We will compare the old and new props before each render and short circuit if they are unchanged It is like an automatic shouldComponentUpdate but it also affects the behavior of functional children that are rendered Functional components We have heard clearly that most React users intend for their functional components to be pure and to produce different output only if the component is props have changed However a significant fraction of users still rely on mutation in their apps when used with mutation comparing props on each render could lead to components not updating even when the data is changed Therefore we are changing functional components to behave as pure when they are used inside a React PureComponent but to rerender unconditionally when contained in a React Component and optimize them to inline the child Button component and call it immediately so that React does not need to store the props for Button nor allocate a backing instance for it causing less work to be performed and reducing GC pressure,,"sophiebits,gaearon,sophiebits,gaearon,syranide,gaearon,glenjamin,gaearon,gaearon,glenjamin,gaearon,glenjamin,jquense,gaearon,gaearon,jquense,gaearon,gaearon,gaearon,syranide,gaearon,gaearon,jquense,syranide,gaearon,glenjamin,glenjamin,glenjamin,gaearon,aickin,jquense,glenjamin,jquense,aickin,aickin,aickin,gaearon,gaearon,syranide,gaearon,syranide,gaearon,gaearon,aickin,aickin,aickin,sophiebits,gaearon,aickin,jquense,jquense,joshduck,sophiebits,jimfb,aickin,sophiebits,jimfb,koba04,sophiebits,chicoxyzzy,gaearon,gaearon,jimfb,sophiebits,jimfb,sophiebits",2016-05-28 22:37:05,2017-03-01 21:34:04
PR,Adding some server rendering unit tests,This PR adds a handful of server rendering unit tests With the move to Fiber it is likely that the server rendering path and client rendering path are going to diverge significantly and I think it would be useful to have a more robust unit test suite for server rendering as the work on Fiber SSR begins This PR starts to port over tests that I wrote in since abandoned PR 6836 This PR only ports over some of the helper functions and 4 of the simplest tests If this PR is accepted I plan to submit the rest of the tests in a series of further PRs I only added four tests here because I wanted to keep this PR as digestible as possible Thanks for all your great work Note I ran tests linting and flow but I could not get scripts fiber record tests to work It first complained about not being able to find jest cli when I npm installed jest cli it complained about an unresolved Promise with the error TypeError Path must be a string Received undefined I expect the CI build will fail on this and I would appreciate any pointers to getting it to work,,"aickin,sophiebits,sophiebits,sophiebits,sophiebits,aickin,aickin,aickin,aickin,aickin,sophiebits,aickin,aickin,aickin,sophiebits,aickin,aickin,sophiebits",2017-02-23 21:14:48,2017-03-01 21:39:48
PR,Fix string casting and remove Flow suppression comments,See issuecomment 283435918,,"acdlite,sebmarkbage",2017-03-01 19:08:50,2017-03-01 21:51:18
IS,onChange is not triggered for autocomplete in Chrome on iOS,Do you want to request a feature or report a bug bug What is the current behavior In Chrom 54 on iOS onChange is not triggered on inputs after choosing an option from autocomplete suggestion If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template you have to have smth in you autofill data in chrome Try to fill in the form with suggested autocomplete option In the first case onChange handler wo not be triggered What is the expected behavior onChange is triggered for autocomplete Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome 54 on iOS 10 at least,,sophiebits,2016-11-01 17:32:04,2017-03-01 22:27:39
IS,Plans for a release build package react 15 4 2 zip,Hi are there plans to release a react 15 4 2 zip release build package for the latest release as was done for the previous releases Could not see it on the Releases page Thanks K,,"gaearon,gaearon,gaearon,gaearon",2017-02-21 17:24:06,2017-03-01 22:54:00
PR,Update Lifting State Up not to mix up DOM value with component state,A few weeks ago when teaching my friend she got stuck on this state value vs event target value As the documentation talked a lot about values and the term value could mean three different things values in general the value prop DOM value of the input component and the value in state props it was not weird that she got a bit confused I asked about this already from in Twitter here,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-02-20 20:33:39,2017-03-02 00:28:10
IS,How to locate the corresponding src code of react,I notice that sometimes I want to find the implement details of some functions or features e g React createElement React createClass PureComponent Reconciliation But every time I should add debugger in the code and step over and over to enter the method I want to look or in the ide to press ctrl and click the identifier to enter the file but the code is promiscuous and nested so it is diffcult to read So I want to know that is there a good way to solve this I guess there maybe is a internal system to work fine on this,,"gaearon,gaearon",2017-03-02 06:12:48,2017-03-02 12:39:04
IS,Getting rid of String Refs in ReactTransitionGroup,Is this line L218 making use of String Refs Can I make a PR to fix that,,gaearon,2017-03-02 06:06:33,2017-03-02 12:53:59
IS,this props inside a method no longer works,Do you want to request a feature or report a bug I believe this might be a bug I'm not 100 sure A little while ago with react scripts 0 7 0 I could do something like this I have tried to reproduce that in project PS this commit results in failure of tests What is the expected behavior I was expecting that to work It used to work before but now it wo not work Or is it the intended behavior Or am I doing something wrong,,"gaearon,gaearon,gaearon",2017-03-02 14:41:53,2017-03-02 16:15:59
PR,Track error and warning messages by checking them into the repo,Updates the error code script to print out a list of warnings Additionally CI will now fail if either the error code map or warnings list is not up to date Similar to how scripts fiber record tests works Should not be onerous because most commits do not change error or warning messages If it fails it prints a message with instructions on how to fix This will make it easier to track changes to errors or warnings,,"acdlite,aweary,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite",2017-03-02 02:06:28,2017-03-02 19:25:10
PR,Add fixture components,related to 8583 Let me know if this is way off base with what ya ll are thinking P Always fun to see how others build stuff cc,,"jquense,aweary,nhunzaker,jquense,aweary,aweary,aweary,aweary,jquense,nhunzaker,nhunzaker,jquense,nhunzaker,nhunzaker,nhunzaker,aweary,jquense,jquense,aweary,jquense,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,aweary,aweary,gaearon,jquense,jquense,nhunzaker,aweary,jquense",2017-01-24 20:49:32,2017-03-02 19:38:28
PR,Fix spacing in documentation,Replace non breaking space by space in refs and the dom Fixes image,,,2017-02-27 16:47:51,2017-03-02 19:57:59
IS,react how to instance many child compenent on same parent,Hi guys i would like to call child child has form two times on the same parents like this return Child Child but the problem is there many select on Child so when i'm changing the select i can not get the value from the second select where having second child,,aweary,2017-02-28 18:56:58,2017-03-02 20:06:40
PR,Add script to print out a list of warnings,Script writes an alphabetized list of warnings to stdout We will use this in the GH sync script to track which warnings have changed since the last sync,,acdlite,2017-03-02 19:24:42,2017-03-03 00:39:44
PR,Add async await to unit tests modify server rendering tests to use async await,Following on to 9055 this PR adds the ability to use async await to unit tests and it changes some of the existing server rendering tests to use async await At is suggestion in 9055 the transform is only applied to files in the tests folders to avoid accidentally transforming shipping product code,,"aickin,sophiebits,sophiebits,aickin,aickin,sophiebits",2017-03-01 22:22:05,2017-03-03 18:34:15
PR,Fix production propTypes test so it works with error code system,Test expects the unminified error message Without this fix the test will break after the next release,,"acdlite,sebmarkbage,sebmarkbage,acdlite,keyanzhang,acdlite,keyanzhang,acdlite,keyanzhang",2017-03-02 19:22:59,2017-03-03 19:06:05
IS,Getting Cannot read property 'onBeginFlush' of undefined,Getting this bug Cannot read property 'onBeginFlush' of undefined from react dom lib ReactServerRenderingTransaction js file on loading the react app react and react dom are of version 15 4 2 The issue is not browser specific And have tried a couple of older versions of react react dom too,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-03-03 18:51:54,2017-03-03 20:21:28
PR,Test that ReactErrorUtils module can be shimmed,We do this in www,,"acdlite,acdlite,acdlite,gaearon,sophiebits,acdlite,bvaughn,acdlite,bvaughn",2017-03-01 20:48:59,2017-03-03 22:09:11
PR,Added Brunch build tool to the docs,Added Brunch to this articles development and production versions use the production build,,"gaearon,aweary,aweary,aweary,gaearon",2017-02-27 20:15:49,2017-03-03 22:15:25
PR,Fiber Do not schedule class fibers without relevant lifecycles for commit,While working on 9071 I noticed that we are scheduling Update effect for all classes regardless of whether they have something to do in the commit phase img width 591 alt screen shot 2017 03 03 at 7 46 52 pm src The JSONArrow class does not have lifecycle methods To fix this I am checking whether there is work to do before marking a fiber with the Update tag This mirrors the logic in the commit phase To verify I ran the same code with the new bundle and now only class fibers with corresponding lifecycles are scheduled in the effect list img width 352 alt screen shot 2017 03 03 at 7 45 09 pm src This is a perf optimization and is unobservable from tests,,"gaearon,acdlite,acdlite,acdlite,sebmarkbage,acdlite,acdlite,gaearon,acdlite,gaearon,acdlite,acdlite,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,trueadm,gaearon,gaearon,sebmarkbage,trueadm,sebmarkbage,trueadm,gaearon,acdlite,acdlite,sebmarkbage,gaearon,acdlite",2017-03-03 19:49:39,2017-03-04 04:23:10
PR,Remove ReactStateSetters,It was the only file left in src addons link and does not appear to be imported anywhere It was mentioned in that it should probably be removed at some point and I think now is that point I checked react native and react art and I do not see them importing react lib ReactStateSetters at all so I think this is safe unless there is some internal use I do not know of,,aweary,2017-03-03 23:33:25,2017-03-04 04:42:26
IS,componentDidMount there is no guarantee that the DOM node is in the document,I read the source code and find the comment of componentDidMount method Invoked when the component has been mounted and has a DOM representation However there is no guarantee that the DOM node is in the document what is the meaning of there is no guarantee that the DOM node is in the document,,gaearon,2017-03-05 12:35:28,2017-03-05 13:47:25
IS,Question Bug report in higher order components md,Hey at the moment the docs at and in static methods must be copied over say that static methods need to be copied over However class inheritance in JavaScript also works for static properties Looking at the recommended hoist non react statics it looks like it just copies the properties over L41 but extends is supposed to do that with prototypical inheritance anyway Is this an error in the docs from a time ES2015 classes were not used in ES5 Function prototype extension this does not work only with classes,,aweary,2017-03-04 23:55:29,2017-03-05 20:25:08
IS,ReactCSSTransitionGroup nested transitions,I am having an issue where I apply an animation to the parent route and the children inherit the same animations I want different animations for the parent route from the the children routes Can any one help with that Here is what I am doing render method The children routes get fade instead of slide animation,,gaearon,2017-03-06 00:05:51,2017-03-06 00:22:30
PR,Remove sliceChildren,Another file that looks unused It is not exposed via any public API like React Children and is not required anywhere internally in react react native or react art Similar situation as Looks unused but maybe not,,"aweary,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,gaearon,sebmarkbage",2017-03-04 05:49:45,2017-03-06 06:52:39
PR,Remove EventPluginRegistry getPluginModuleForEvent,At no point in the event system do we use getPluginModuleForEvent to get the corresponding event plugin for a synthetic event so I believe this can be removed,,aweary,2017-03-04 21:35:56,2017-03-06 06:52:57
IS,Mapping a function returning JSX to a list containing 0 returns a weird element in debugger,Not sure what this is have only confirmed it in the React Debug extension on Firefox I'm using webpack 2 2 1 and babel core 6 23 1 Code here HTML of the actual page is fine but in the debugger the nums map number li key number toString number li turns into li key 1 1 li li key 0 0 li key 1 1 li I'm not too familiar with JS so if this is expected behavior I apologize,,aweary,2017-03-06 17:03:03,2017-03-06 17:17:39
PR,change npm to yarnpkg,the cli now suggests using yarnpkg by default figured this should be updated too Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"gaearon,gaearon",2017-03-06 18:04:35,2017-03-06 18:06:04
PR,Do not reset the return fiber again after cloning the child fibers,I guess this was introduced unintentionally by 52011d58b0f631396973c2cd3a53be3fa5a6add3,,"jddxf,acdlite",2017-03-06 09:25:11,2017-03-06 20:21:11
PR,Yellow Box for react dom,This is a port of React Native is Yellow Box to react dom It is also similar to our internal ErrorMessageConsole module at Facebook It requires facebook fbjs 165 which passes warning info from warning to showWarning the new global hook installed by react dom A demo can be found here There is no fancy styling since we want to keep this component as simple as possible Thanks for reviewing,,"keyanzhang,sophiebits,keyanzhang,keyanzhang,addyosmani,aweary,acdlite,bvaughn,aweary,bvaughn,aweary",2016-07-27 06:58:48,2017-03-06 21:32:40
PR,Fix radio buttons using stale props in Fiber,D4662269,,sophiebits,2017-03-06 22:58:20,2017-03-06 22:58:30
PR,Fix redundant null type coercion,callback callback undefined null callback expression is sometime awkward or unreachable in some file s o to for pointing those line as a good first PR for react during his talk at ForwardJS,,"acdlite,gaearon,aweary,aweary,acdlite,acdlite,acdlite",2017-03-05 02:37:24,2017-03-06 23:20:13
PR,Fiber DOM async feature flag,D4662171,,sophiebits,2017-03-07 00:21:38,2017-03-07 00:21:44
PR,Remove resetEventPlugins use jest resetModuleRegistry,This is not called at runtime and is only used in internal unit tests L21 Despite that it is currently being included in production builds This change makes it so only exists DEV removes it and uses jest resetModuleRegistry in its place We might even want to go a step further and define it in our test suite instead since it serves no purpose in DEV either If that is acceptable I can update the PR with that approach which seems preferable,,"aweary,gaearon,aweary,sophiebits,aweary,gaearon",2017-03-04 21:59:17,2017-03-07 02:25:25
PR,Fiber Split dev methods within ReactComponentTreeHook,ReactComponentTreeHook was originally intended to be a DEV module but has since had production usage with Fiber This PR aims on splitting the methods out so that we do not ship extra code in production Flow annotations were added to places that confused Flow into believing methods were missing on ReactComponentTreeHook Note I'm a bit unsure about the require path remaining as react lib ReactComponentTreeHook though do we still need to keep it this way,,"trueadm,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn,trueadm,sophiebits,sophiebits,trueadm,trueadm,sophiebits,sophiebits,trueadm,sophiebits,gaearon,bvaughn,trueadm,sebmarkbage,sebmarkbage,gaearon,gaearon,sophiebits,trueadm,sebmarkbage,trueadm,sebmarkbage,sebmarkbage,gaearon,trueadm,sebmarkbage,gaearon",2017-03-02 18:01:29,2017-03-07 14:09:23
PR,Fix invalid aria prop url,Change invalid aria prop url from short url fb me react unknown prop that does not work to the working regular url facebook github io react warnings invalid aria prop Issue has been open since November 2016 so while the fb me link does not work I think the error should point to the working url,,"gaearon,gaearon",2017-03-07 11:26:59,2017-03-07 14:10:18
IS,Incorrect warning link,Do you want to request a feature or report a bug Bug What is the current behavior The link provided when a warning is shown for an invalid aria prop redirects to Facebook com If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Fiddle to reproduce check console Use an invalid aria prop name on a component and click the link shown in the console screen shot 2016 11 22 at 10 22 17 am What is the expected behavior It should go to this link Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 0 0,,"gaearon,gaearon",2016-11-21 23:28:36,2017-03-07 14:15:17
IS,Maximum call stack size exceeded in ReactDOMComponent updateDOMChildren,First off I realize that this likely is not a problem with React but a problem with our application but I tought I would open an issue to see if you think it might be a problem in React or if you could give any pointers on how to dig deeper Since the call stack only contains React code there is not all that much for us to trouble shoot to see if we have messed up Do you want to request a feature or report a bug Possible bug What is the current behavior We sometimes get random Maximum call stack size exceeded errors from a small percentage of our users It does not look like it is related to browser device as it seems to happen on all types of devices from mobile to tablet to desktop and in Firefox Chrome Safari both iOS and Mac The stack trace does not contain any of our code only React It looks like this We have some pages that are larger than others but not anyone that have nesting deep enough that it could realistically cause a maximum call stack size exceeded error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 1 Do not know if this is true for other versions we have not had any other version deployed Any help reagarding this would be much appreciated,,"syranide,aweary,gaearon,gaearon",2016-10-21 08:21:55,2017-03-07 14:17:51
IS,how to use react native,I'm create a application use react native repository is MoviePlate i do not use the redux or flux so i want to kown this app whether to use correct,,"gaearon,gaearon",2017-03-07 11:22:57,2017-03-07 14:19:23
IS,Dynamically rendering a React component with JSX,Using React 15 1 0 and Node 4 6 2 When assigning a Component passed by props to a var and then trying to render this var it renders nothing In this example ParentComponent1 properly renders ChildComponent but ParentComponent2 does not Here is what console log this props dynamicComponent alt text As opposed to console log dynamicComponent alt text,,gaearon,2017-03-07 16:46:02,2017-03-07 17:38:08
IS,Why do not convert the third and later arguments of React createElement to an array when use babel,Same as 5403 of babel The member of babel does not know too much about this So I want to know your thoughts about this Thanks,,"monkindey,monkindey,gaearon,gaearon,monkindey",2017-03-03 01:21:59,2017-03-08 02:46:30
IS,RN APP will reject by apple,JSPatch applications are rejected by apple RN APP will be rejected,,gaearon,2017-03-08 02:49:20,2017-03-08 02:55:19
IS,Solved,I recently updated react to v15 4 2 and my app does not work which works great in v0 14 The problem is when I click a button use react router is jump to another page I tried to put the child components Dashboard users and test out side the container no error,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-03-08 09:10:08,2017-03-08 11:12:04
IS,Impure state allocation List can not append props to ListItem after declaration in Parent,I believe that List should be able to interface with ListItem is props I was thinking about sending the class names as props and having List instantiate them but there does not seem to be a way to do this with a dynamic JSX class this props classes 0 I saw that cloneElement is promoted but I cannot seem to update a cloned element is props after the initial construction I'm updating the child styles 60 times per second and do not want to clone an object for no reason but this may be the cost of React,,"gaearon,gaearon",2017-03-07 22:52:55,2017-03-08 15:30:33
IS,autoCompleteType attribute unknown prop warning,Do you want to request a feature or report a bug BUG What is the current behavior If you add an autoCompleteType attribute to an input react will warn with this Warning Unknown prop 'autoCompleteType' on input tag Remove this prop from the element here is a fiddle that shows the issue What is the expected behavior autoCompleteType does seem to be a standard there for it should not warn Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested version is 15 4 2 All browsers,,"gaearon,gaearon",2017-03-08 14:46:56,2017-03-08 16:52:59
PR,Fiber Performance measurements,Reconciliation phase img width 536 alt screen shot 2017 03 08 at 3 10 52 am src Commit phase img width 757 alt screen shot 2017 03 08 at 3 11 42 am src Should work with all Fiber features including error boundaries and incremental deferred work Deferred work example img width 635 alt screen shot 2017 03 08 at 3 13 15 am src x Basic implementation x Do not display bailed fibers x Show deferred work sensibly x Include lifecycles x Naming and style x Always clear marks and measures x Replace stack with a field x Fix Flow x Gate by DEV x Host effects x Track cascading updates x Check the overhead and decide whether to always emit measurements or not x I tried my best x Gonna test it soon x Verify in different browsers x Write tests maybe Or at least shim it in tests x Verify edge cases work x Nested subtrees x Error boundaries x Uncaught errors x What else,,"gaearon,gaearon,trueadm,trueadm,gaearon,gaearon,trueadm,trueadm,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-02-27 17:09:20,2017-03-08 18:28:54
PR,WIP ReactNativeFiber mixins refactor,Note This PR has changed significantly since it was initially created See commit history for more Addressed a circular dependency between NativeMethodsMixin and ReactNativeFiber Created new ReactNativeFiberHostComponent with similar interface but without unnecessary call to findNodeHandle Created new Flow interface for mixins to ensure ReactNativeFiberHostComponent and NativeMethodsMixinUtils stay synced Moved helper methods to NativeMethodsMixinUtils to be shared between the 2 wrappers Fixed bug in createReactNativeComponentClass that allowed duplicate view names to be registered and added a unit test to guard against a regression,,"bvaughn,gaearon,gaearon,bvaughn,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,bvaughn,bvaughn,gaearon,gaearon",2017-02-15 21:38:51,2017-03-08 18:37:20
PR,Do not count skipped tests when calculating Fiber facts,This should fix it,,"gaearon,gaearon,gaearon",2017-03-08 21:01:30,2017-03-08 21:03:21
PR,Switch UMD build to Fiber,Follow up to This PR switches UMD builds react dom js and react dom min js to use ReactDOMFiber as an entry point and removes fiber builds altogether The change breaks examples fiber and I intend to fix it with separate PR,,"gaearon,gaearon,gaearon,trueadm,gaearon",2017-02-18 12:49:09,2017-03-08 22:30:28
PR,Delete annotation 8882,,,gaearon,2017-03-08 22:33:40,2017-03-08 23:27:17
IS,Learning error find module error,Hello this is my first time on react and i have this issue DOCTYPE html html lang en head meta charset UTF 8 content text html http equiv content type title Title title head body div id container div script type text javascript src node modules react react js script script type text jsx React DOM var Hello React createClass render function return div h1 Hello at this props now h1 div React renderComponent Hello now new Date toString document getElementById 'container' script body html On browser Uncaught ReferenceError module is not defined What i am doing wrong EDIT More details from the error it is on the print,,gaearon,2017-03-08 22:12:42,2017-03-09 00:51:29
PR,Use more widely supported emoji,sebmarkbage reported he doesn t see so I ll use instead This one should be available everywhere img width 649 alt screen shot 2017 03 08 at 10 57 02 pm src,,"gaearon,gaearon",2017-03-08 23:13:23,2017-03-09 00:55:37
PR,Reorder sections in alphabetical order,,,gaearon,2017-03-09 20:45:41,2017-03-09 20:46:56
IS,Cannot mark a prop as isRequired when using custom propTypes validation,Do you want to request a feature or report a bug bug or missing feature rather that should be there What is the current behavior I can not define a prop as isRequired when using custom validation Simple stateless component that demonstrates the issue What is the expected behavior I can somehow define a prop as required after Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 I do not think it ever worked but might be that is just some black sorcery needed In the simplified example I posted I could not find any way of adding isRequired to that prop either by adding it at the end of the function abstracting the validation function away or even returning this to chain it it has to return null or an Error,,"dmatteo,acdlite,dmatteo",2017-03-06 21:45:49,2017-03-10 00:27:42
PR,Remove PR check from GH Pages build hook for stable branch,Circle seems to detect wrong PR numbers on commits in 15 stable img width 267 alt screen shot 2017 03 09 at 11 41 12 pm src doesn t exist for some reason Anyway this seems to prevent the build of the docs img width 370 alt screen shot 2017 03 09 at 11 37 27 pm src Do we need this check,,"gaearon,sophiebits,gaearon,gaearon,sophiebits,gaearon,gaearon",2017-03-09 23:42:34,2017-03-10 01:17:27
PR,Flat bundle using Rollup,This implements 6351 using Rollup It could be used to replace our Browserify build step i e it takes pre built files from build modules and it is pretty similar to 4230 Firstly I moved all our non top level requires to the top level and DEV on their usage we only have 5 files that have that Since we no longer have dynamic parts in our require exports they are pretty much ES6 compliant Then there is a Babel pass for Rollup to firstly rewrite all require exports to ES6 import exports and finally it bundles to a flat file in UMD format It sounds weird to transpile files from ES5 to ES6 but using this babel pass results in smaller file sizes comparing with using Rollup is CommonJS plugin This decreases our gzipped minified prod file size by 10 and some of the benchmarks look pretty good cc react core Size Comparison TODO x Let Babel throw if there are non top level requires exports x Instead of having Rollup config files make it a script that can be executed by gulp grunt,,"keyanzhang,zpao,gaearon,keyanzhang,keyanzhang,sebmarkbage,STRML,keyanzhang,keyanzhang,STRML,keyanzhang,keyanzhang,keyanzhang,keyanzhang,vjeux,sophiebits,keyanzhang,zpao,keyanzhang,keyanzhang,sebmarkbage,keyanzhang,sebmarkbage,keyanzhang,zpao,keyanzhang,keyanzhang,zpao,gaearon,keyanzhang,zpao,gaearon",2016-07-03 07:12:56,2017-03-10 02:08:32
PR,Create liugev6,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,,2017-03-10 16:37:28,2017-03-10 16:38:49
PR,Fiber Remove unnecessary second getComponentName,We already have one The other one is also less fragile and does not throw on null type I don t really have a test for this specifically but I don t think we ll be breaking that again Additionally simplified the check since it s unnecessary to call getComponentName for every update,,"gaearon,gaearon",2017-03-10 19:22:02,2017-03-10 19:29:21
PR,Use fiber by default,Affects our builds But not in tests yet,,sophiebits,2017-03-11 00:25:17,2017-03-11 01:06:03
IS,how to define create assign use engineer or otherwise use either a props property or a state to a class component button,Do you want to request a feature or report a bug how about an answer What is the current behavior 40 0000 foot high level of frustration not relieved by reading over 100 different articles doc articles 4 pluralsight courses stack overflow answers and many other useless leads code provided What is the expected behavior Something that works as good a plain HTML maybe that is what I should be using React v15 chrome browser edge FF Windows 10 This works in previous versions of React using the var foo React createClass but have not been able to get to work with the new class version and I can not find ANY examples that work and have been trying for well over a week I need to start migrating some react modules from v0 13 to v15 but this is telling me I should give up and move on React may be fast but it is a PITA to start with and to update your knowledge and the glorified DOCS do not help,,"gaearon,gaearon",2017-03-11 03:39:59,2017-03-11 04:14:17
IS,Warning message is swallowed when using shape inside oneOfType,See I would expect a warning that says Invalid prop bar supplied to App A foo should not have a bar ' Or even better Invalid prop foo bar supplied to But I only get Invalid prop foo supplied to App,,"arshabh,aweary",2017-01-31 09:33:40,2017-03-12 00:25:14
PR,Add a guide on routing,This guide demonstrates how to implement a simple Router using the history library It addresses the Routing item in 8060 I have tried to keep it as brief as possible there may be parts where I need to expand on the current content Let me know,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-01-23 06:27:08,2017-03-12 00:47:00
PR,Add diagrams to component lifecycle docs,To make more understandable,,,2017-03-12 08:13:36,2017-03-12 08:55:52
PR,Remove ref usage in main markdown example,from elsewhere in the docs Avoid using refs for anything that can be done declaratively,,"gadtfly,gadtfly,gaearon",2017-03-12 05:21:26,2017-03-12 15:29:10
PR,Simplify boolean associativity,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,aweary,2017-03-12 05:08:44,2017-03-12 20:12:12
PR,Fix two bugs in version bump script,,,sophiebits,2017-03-13 16:00:41,2017-03-13 17:04:14
IS,Coffeescript and React 16 Fiber,This could be a little bit early but I got confused about Thanks,,gaearon,2017-03-13 18:43:45,2017-03-13 20:29:45
PR,Updated React Native EU,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"bernard-lin,gaearon",2017-03-13 22:03:23,2017-03-13 22:43:04
IS,componentConstructed Life cycle step,Do you want to request a feature or report a bug Feature What is the current behavior The life cycle of the component creation is constructor componentWillMount render componentDidMount What is the expected behavior A new method componentConstructed like so constructor componentConstructed componentWillMount render componentDidMount In some cases a high order component needs to prepare the child after its instance gets created replacing the child is constructor is not trivial and using componentWillMount will work but it needs extra logic to prevent multiple initialization as it is called on updates too The name suggested for the method is not important and it was just an idea but there might be better options,,gaearon,2017-03-13 20:02:36,2017-03-13 23:19:49
IS,setState can only update a mounted component warning,I'm getting the following warning in the console img width 1231 alt screen shot 2017 03 13 at 8 16 36 pm src Here is the Snippet component causing the warning I'm setting state in componentDidMount img width 598 alt screen shot 2017 03 13 at 8 20 13 pm src I tried making a jsfiddle but there is too many dependencies The error logged will increment on resize but it does not always happen,,"milesj,aweary,milesj",2017-03-14 00:28:56,2017-03-14 05:39:58
IS,validateChildKeys fails on nested arrays,Do you want to request a feature or report a bug Bug What is the current behavior If you pass as children of a component a nested array the validateChildKeys check does not throw a warning error about missing key properties eg span span span span I asked about this problem on StackOverflow and an user pointed me to this problem If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem What is the expected behavior React should warn about missing key s even on nested arrays Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version is affected 15 4 2 I think all the browsers are affected I do not know if it worked in previous React versions,,,2017-03-14 12:19:43,2017-03-14 12:23:54
PR,Use Prettier,Because manual code formatting in so 2016 A few caveats Lint has an issue with some of this stuff We need to modify lint to exclude the rules that are incompatible with prettier We have been inconsistent with line wrapping We used to strict follow 80 characters but recently we have been more up to 120ish In this run I used 100 as a compromise to minimize reformatting but we should probably just pick one 80 characters seems like the way to go Overall it seems pretty good The change of concatenated string on multiple lines is probably the biggest change,,"sebmarkbage,vjeux,sebmarkbage,vjeux,sebmarkbage,sebmarkbage,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,vjeux,sebmarkbage,vjeux,sebmarkbage,vjeux,sebmarkbage,sebmarkbage,vjeux,sebmarkbage,vjeux,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,jlongster,jlongster,vjeux,vjeux,vjeux,vjeux,vjeux,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,vjeux,mxstbr,vjeux,mxstbr,mxstbr,cpojer",2017-03-03 03:52:01,2017-03-14 22:33:27
IS,Concatenated prefixed css properties does not work in React 15,Do you want to request a feature or report a bug Bug What is the current behavior React does not set property display to string display webkit box display webkit flex display ms flexbox display flex It just omit properties which contains concatenated strings like webkit linear gradient top rgba 137 255 241 0 50 rgba 0 0 0 0 5 100 background moz linear gradient top rgba 137 255 241 0 50 rgba 0 0 0 0 5 100 background linear gradient top rgba 137 255 241 0 50 rgba 0 0 0 0 5 100 or this I have mentioned If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Expected root div has property display display webkit box display webkit flex display ms flexbox display flex like it was in React 0 13 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 Cromium 50 0 2661 102 64 bit Calculate Linux 3 15 5 calculate Yes it worked in previous versions of React 0 13,,syranide,2017-03-13 17:02:53,2017-03-15 18:51:56
IS,Tutorial md and its tic tac toe example,I think that the React tutorial has some significant problems and my question to maintainers is whether there is an appetite to overhaul it If there is I will take the effort to do so I think that one big problem is that it does not separate the tic tac toe example from overall conceptual discussion Adding disparate non runnable examples muddles the focus of the tutorial It should be split up in my opinion As for tic tac toe example itself there are many structural design issues Probably the most glaring of these is the repetition in the render function of the Board class this renderSquare 0 this renderSquare 1 etc There is no hint of how one could use a more programmatic approach Another issue is the use of this everywhere which very often makes things harder to interpret and introduces bugs this is not always the same etc I think there should be both an ES5 and an ES6 version with fewer arrow functions and or something in between as this is meant to be a React tutorial example not an ES6 tutorial Many people are not familiar with a lot of ES6 syntax but for those who are there is also a bit of a tendency to er overuse arrow functions in the tic tac toe example While ES6 is useful to know one cannot teach by flooding the student with too many concepts at once Here is the current example on the site Here are my current versions with a Connect 4 option ES6 plus JSX ES5 I think plus JSX,,"gaearon,lacker,lacker",2017-03-12 18:31:12,2017-03-15 23:05:26
PR,Add React Rally to conferences list,,,jergason,2017-03-15 03:05:29,2017-03-16 00:20:58
IS,1,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-03-16 01:34:21,2017-03-16 01:34:55
IS,n scroll,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-03-16 16:53:40,2017-03-16 17:14:45
PR,Failing to run prettier should block CI,issuecomment 286610833 scripts prettier index js write will run prettier on source files Run using yarn prettier scripts prettier index js will throw if any source files are not formatted with prettier We will use this to block CI Based on similar script in Jest repo,,"acdlite,sophiebits,sophiebits,acdlite,sophiebits,sophiebits,acdlite,acdlite,gaearon,acdlite",2017-03-15 21:26:36,2017-03-16 18:55:41
IS,Equivalent of mountComponent in Fiber,In extjs reactor extjs reactor we use some react internal methods like mountComponent unmountComponent and receiveComponent as well as the ReactMultiChild mixin to defer rendering to Ext JS This interface was very helpful for anyone looking to make generic JS component libraries work in React as opposed to those built specifically for React Is there an equivalent alternative way to control the mounting of a component in the new Fiber architecture If it helps here is the code that references the React internal methods,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,iamdustan",2017-03-16 19:03:19,2017-03-16 19:09:28
PR,React Native Ignore event listener extraction on numeric text components,In ReactDOM we do not dispatch events in the synthetic event system on to text nodes We back up one to the element before dispatching In React Native we do not do that The iOS native side does not dispatch on the text nodes but only the parent The Android native side however does dispatch on text nodes We already covered this for strings but current element in Stack can be a number if it is numeric text content Verified on Android playground with,,"sebmarkbage,sebmarkbage,bvaughn",2017-03-16 22:18:15,2017-03-16 22:29:07
PR,Record fiber tests,I forgot,,sebmarkbage,2017-03-16 23:29:00,2017-03-16 23:29:06
PR,Upgraded Flow dev dependency for 'implements' support,Flow added support for the implements keyword in version 38 v0380 I rely on this for the ReactNativeFiber upgrade I have been working on This change does not affect any other dev dependencies,,bvaughn,2017-03-16 23:52:34,2017-03-17 00:12:51
PR,Bugfix for invokeGuardedCallback in DEV,Changes dev mode version of invokeGuardedCallback to use a higher order function instead of a global event listener More straightforward and avoids cross browser weirdness I'm almost a bit worried that I'm forgetting some caveat given that I did not implement it this way originally and instead opted for a more complicated solution Most likely I just was not thinking clearly Yup forgot something obvious Test plan Confirm that it fixes Confirm that browser devtools still break on exception,,"acdlite,acdlite,acdlite",2017-03-17 02:05:50,2017-03-17 02:10:02
IS,How to use React Component Lifecycle Methods in ES6,,,gaearon,2017-03-17 10:22:12,2017-03-17 12:30:27
IS,Need UI Automation help for React UI application,Hi Guys We are developing a UI application for our project using React and I read that CSS selectors are not supported Earlier I was doing UI Automation using Coded UI C CSS Selectors Can anyone please guide the right approach for Continuous Integration testing for UI application Thanks Tarun Babbar Varian Medical Systems Pune,,aweary,2017-03-17 10:49:42,2017-03-17 16:18:19
IS,React value setter overwrite lib value setter,Bug React value setter L183 overwrite lib value setter L2808 And does not save the call to the old setter IE 11 0 9600 18538 3 3 4 react 15 4 2,,aweary,2017-03-17 13:59:56,2017-03-17 16:21:51
IS,Chrome Not optimized optimized too many times for updateDOMProperties and unmountChildren,React 15 4 2 Chrome 56 0 2924 87 and 57 0 2987 110 I have been doing some profiling in Chrome of the render performance of some of our components and noticed a couple of deoptimizations in React screen shot 2017 03 17 at 9 21 37 am screen shot 2017 03 17 at 9 22 00 am The message Chrome reports is Not optimized optimized too many times which apparently happens when V8 optimizes a function but when running it found a reason to deopt it and this happened more than max opt count setting currently set to 10 More information issuecomment 145192013 Clicking through the profile it looks like most of the time is perhaps spent on this line but I'm not sure if that is a clue as to what the deopt might be in this case screen shot 2017 03 17 at 9 26 57 am It might be worth spending some time digging into this but I'm not sure if it will still be relevant after React 16,,"gaearon,aweary,gaearon",2017-03-17 16:30:43,2017-03-17 16:35:37
IS,Missing PropTypes warning when calling PropTypes directly with spread operator,Do you want to request a feature or report a bug Bug What is the current behavior According to dont call proptypes directly React should throw a warning when PropTypes are called directly However it does not do that when you use spread operator in validation function If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Minimal demo What is the expected behavior Both components from them example should throw a warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I see this issue on version 15 3 2 on Chrome I do not think it is browser related I do not know if it has worked in the past,,aweary,2017-03-17 10:25:50,2017-03-17 16:43:03
PR,Use explicit null checks in ReactFiberUpdateQueue,Follow up to 8978,,acdlite,2017-03-09 23:56:32,2017-03-17 17:44:12
IS,Very bad debugging for spread errors,bug When the spread operator is miss used the compiler goes crazy and does not give the developper any hint on why something went wrong Inside a react es6 class I was trying to render an array of jsx elements as follow I already know that I should have written actions and not actions I got an incredible load of errors that filled my terminal from babel compiler the first error message being did not recognize object of type JSXSpreadChild at Object getFieldNames I would expect some error message telling me that I miss used the spread operator I'm using React 15 2 0 npm and babel runtime 6 23 0 in meteor,,gaearon,2017-03-17 18:30:18,2017-03-17 18:31:50
IS,Not working on IEMobile 9 0,Do you want to request a feature or report a bug Bug What is the current behavior React does not work on IEMobile 9 0 but in documentation it says React supports all popular browsers including Internet Explorer 9 and above but it shows blank page Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2 Phone Nokia Lumia 800 IEMobile 9 0 P S Instagram also does not works for my phone it just shows blank page as I know Instagram also uses React,,syranide,2017-03-15 11:52:51,2017-03-17 22:11:08
IS,Feature Issue Throw Warning when defaultProp is set for a isRequired propType,Do you want to request a feature or report a bug Feature What is the current behavior Currently when you declare TitleBar propTypes title React PropTypes string isRequired And then declare TitleBar defaultProps title 'Default Title' When you go ahead and use the TitleBar component without declaring the title prop no error is thrown like is supposed to happen when using isRequired Based on the documentation here it states The propTypes typechecking happens after defaultProps are resolved so typechecking will also apply to the defaultProps So this is expected behavior I think when a user is using isRequired there should at least be a warning to change the propType typechecking to optional Also I would love to try and fix this myself so if I could get some pointers that would be much appreciated as I have never contributed to React before Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React version 15 4 2 Running Chrome on Mac OS X El Capitan V 10 11 6,,"Ethan-Arrowood,aweary",2017-03-15 06:28:34,2017-03-17 22:25:35
IS,What happens if you encounter custom properties that are not supported by react,I need to use these attributes but react does not support these properties at all how to do it,,,2017-03-14 08:17:29,2017-03-17 22:26:41
IS,CSSPropertyOperations js Failing during Setup,Uncaught SyntaxError Unexpected token CSSPropertyOperations js 60 I am getting this error when loading my page I am using React with the following web pack configuration Does anyone understands whats the issue Thanks,,"gaearon,gaearon,gaearon,aweary",2017-03-10 15:22:28,2017-03-17 22:30:28
IS,Badly timed update makes it impossible to determine the new value in checkbox is onChange handler,Do you want to request a feature or report a bug Feature I guess despite the subject formulation What is the current behavior If an update is performed exactly at the wrong moment on native click capture on document root it happens just between the moment React decides that the onChange handler for a checkbox should be called and the moment it is called As a result it is impossible to tell what the new value is inside the onChange handler In other words in that particular case event target checked is back to the old unchanged value when the onChange handler is called If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Here is a demo Note how clicking on the checkbox never checks it What is the expected behavior That is up for discussion I would probably expect the onChange not to be triggered at all and a warning to be issued so that it is easier to figure this out and remove the cause it took me quite some time Even nicer would be some special property of the SyntheticEvent holding the correct changed value but that might be too big of a change for such a edge case scenario Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome Win React 15 4 1 but it likely applies to all browsers OS,,"gaearon,aweary,jquense,jquense,aweary",2017-03-10 15:48:08,2017-03-17 22:31:36
IS,Ref can not replace ReactDOM findDOMNode,I notice that react will deprecated ReactDOM findDOMNode and encourage developers to use ref callback instead I agree with that in most cases it works fine But think about something like this For example Now I want to know containerB is clientLeft but I can not just add ref such as B ref ele this containerB ele span some content span B because the ele is instance of B not the containerB dom node But ReactDOM findDOMNode can do that just use ReactDOM findDOMNode this containerB clientLeft Of course we can add componentDidMout in the B and use div id containerB ref ele this props getContainerBClientLeft ele clientLeft div and in A add a method called getContainerBClientLeft and pass it to B But IMO this make the app more complex What is your thoughts,,"gaearon,gaearon",2017-03-19 09:36:48,2017-03-19 15:02:42
PR,Add unit tests for props to attribute mapping in SSR,This PR is a continuation of my port of SSR unit tests into master There are two parts to this PR 1 A bunch of test for the mapping of props to HTML attributes 1 Small fixes to some bugs in the actual test framework including 1 a reset of modules in between server and client render to reset dev errors and 1 testing to make sure that the client render did not blow away the server rendered DOM elements As always any feedback is welcome Thanks,,"aickin,sophiebits,sophiebits,sophiebits,aickin,aickin,aickin,aickin",2017-03-03 20:17:23,2017-03-19 16:08:55
PR,Docs Use single quotes remove extra whitespace,,,gaearon,2017-03-19 06:57:53,2017-03-19 18:34:54
IS,Browser back button not working with react router 4 0 0 beta 7 and react 16 alpha 4,Do you want to request a feature or report a bug Bug What is the current behavior After installing react next fiber Clicking to a new page inside the same domain same app and then clicking the back button does not move the page back It all works correctly with react 15 4 2 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template see above What is the expected behavior Clicking the back button should move back to the previous location Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 alpha4 chrome 56 osX Sierra It all works correctly with react 15 4 2 and react router 4 0 0 beta 7,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-03-18 13:55:43,2017-03-20 12:17:41
IS,Feature Request New lifecycle behavior to allow components to delay their own unmounting,Doing some sort of animation right before a component unmounts is currently very difficult Being able to delay unmounting by adding a callback to componentWillUnmount like react transition group is componentWillLeave componentwillleave or adding a new lifecycle method with this functionality componentIsReadyToUnmount would be very helpful for this The use case where this has come up for me is a list item with a button in it where clicking the button dispatches a redux action that causes some async work to be done instead of doing it right in the component On success the item is removed from the list Before it is removed I would like to give feedback that the action was successful by showing a checkmark in the button for a second Ideally this logic would live in a button component making it really easy to reuse anywhere you have a button But in order for that to work the button component itself needs to be able to delay its own unmounting Ideally with something like this Currently this has to be done by preventing all parents of the button from being unmounted also My current implementation handles this all in redux by delaying the state updates caused by the async work That logic is purely for display purposes though and does not really belong there It also makes it hard to replicate that behavior across different types of lists I have also looked at react transition group for this also but that only works if the transition group element itself is not unmounted This would make it hard to keep around an object like a button that is deeply nested inside an element that will be removed I recognize that misuse of this feature would lead to confusing hard to debug behavior and very poor performance but I think the risk is worth it considering the way this kind of behavior currently needs to be implemented I think that risk could also be mitigated with useful development mode warnings One example could be a warning logged if a component holds up unmounting for more than X seconds X could be globally configurable somehow with a sensible default,,"syranide,syranide,syranide,aweary",2017-03-20 05:05:59,2017-03-20 16:14:19
PR,Delete addons,I m deleting addons packages and a few other abandoned packages and React with addons UMD build on master See for rationale and the plan We will be releasing 15 5 with some updates to addons and some deprecations as explained in but we will be cutting it from a branch since it diverged too much already I d like to delete them in master so that we can fork a copy in www for old code that still depends on them Note this means that 15 5 release must be done manually and not with the release manager TODO x Fix tests to not depend on ReactFragment x Fix warnings to not mention createFragment,,"gaearon,sophiebits",2017-03-17 16:38:36,2017-03-20 16:15:02
PR,Re add tests unintentionally deleted in 9209,These tests are useful and do not test addons specifically I moved them to appropriate places in the codebase,,"gaearon,gaearon",2017-03-20 18:30:00,2017-03-20 19:38:54
PR,ReactNative upstream sync,Initial steps toward supporting string return type from createReactNativeFiberComponent Addresses a circular dependency between NativeMethodsMixin and ReactNativeFiber New ReactNativeFiberHostComponent with similar interface but without unnecessary call to findNodeHandle New Flow interface for mixins to ensure ReactNativeFiberHostComponent and NativeMethodsMixinUtils stay synced Moved helper methods to NativeMethodsMixinUtils to be shared between the 2 wrappers This diff was submitted and reviewed internally along with other related ReactNative changes This is an upstream sync of the React only portion This diff also requires upgrading Flow to get support for the implements keyword added in version 38 v0380 but I have done that via a separate pre requisite PR 9196,,"bvaughn,gaearon,bvaughn,gaearon,bvaughn",2017-03-16 23:59:49,2017-03-20 20:50:32
PR,Removed optimization for events without target in ReactNativeEventEmitter,This PR fixes the problem originally introduced in The problem is that ResponderEventPlugin and ResponderTouchHistoryStore relies on that fact that touch events are balanced So if one startish event happened should be coming endish event Otherwise there is no way to maintain internal trackedTouchCount counter So if we drop some events we break this logic Moreover that optimization clearly contradict with this statement from ResponderEventPlugin This issue causes several major problems in React Native and one of them finally is easy to reproduce The test also illustrates this problem please review,,"sophiebits,sophiebits",2017-03-19 20:08:59,2017-03-21 00:07:29
IS,react dom v15 4 2 fails to load for latest nodejs v7 7 3 missing dependencies from clean install on travis ci,Do you want to request a feature or report a bug bug What is the current behavior react dom 15 4 2 cannot successfully be required by node v7 73 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template reproduction here this travis ci build L330 What is the expected behavior react dom 15 4 2 should successfully be required by node v7 73 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React do not know only install latest version of react on latest version of nodejs on travis ci,,gaearon,2017-03-21 15:03:21,2017-03-21 15:08:44
IS,React app triggers apphangb1 in IE 10 and 11,Hi The react based product we developed works fine with other browsers But when it comes to IE most of the times the Apphangb1 error occurs with not responsive page The page is already loaded but whole page buttons text field etc is hung The error occurs more frequently for https connections For http and direct connections when connected to local host machine using ip the error frequency is very low There is no any error output in the console at this time However since the browser is dev tool also hangs there is no way to dig deep into the problem Is there any possibility that this kind of a condition can occur due to the way react is implemented If so is there any workaround to overcome it,,"syranide,aweary",2017-03-21 12:15:47,2017-03-21 15:14:33
PR,Fix erroneous DOM updates when setting textarea value,Currently upon setting state from a parent component and thus triggering a re render of a textarea the textarea always erroneously updates the DOM by removing and subsequently adding the value field in two separate updates even if you do not change the value or defaultValue props handed to it It turned out updateWrapper was trying to simultaneously set both value and defaultValue to whatever your new value was even if defaultValue was undefined Removing the second part fixed this flashing behaviour by removing the unnecessary DOM updates,,"gaearon,aweary",2017-03-04 02:44:47,2017-03-21 16:44:05
PR,Conferences,Added formatting to React Rally and moved React Conf to past conferences Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,bernard-lin,2017-03-22 15:36:42,2017-03-22 15:40:14
PR,Fiber Add injection for error dialog,I need this to unfork internal ReactFiberErrorLogger module and replace it with top level injection for flat bundle Does not affect the public API,,gaearon,2017-03-22 18:17:19,2017-03-22 18:21:13
IS,Odd behavior after i installed React through Bower,Reporting what seems to be a bug I installed React into my project using Bower inside of Sails js which sits on top of Node js More so wanted to bring this to your attention than it effecting me I had not tried to use React in anyway yet img width 1440 alt screen shot 2017 03 22 at 2 56 46 pm src I'm using the most current version of React and Safari img width 262 alt screen shot 2017 03 22 at 3 14 29 pm src These are the other things that i'm using in conjunction Mostly just an FYI for you,,gaearon,2017-03-22 19:16:57,2017-03-22 20:03:53
IS,Reactjs not rendering,capture,,,2017-03-23 06:39:52,2017-03-23 10:03:09
IS,Obscure errors with React in Webpack Generated Static Site,Spent a lot of time battling against these two errors today The project setup is kinda complicated but I'm trying to put together a minimal working example That said I'm not trying to do anything weird just a generated webpack bundle that requires React and ReactDOM with static site generator webpack plugin In the meantime I wanted to put this out there to check whether anyone knows of possible reasons for these obscure errors If I import ReactDOM before importing React,,gaearon,2017-03-21 01:23:43,2017-03-23 12:36:29
PR,Upstream ReactNativeStack findNodeHandle bugfix,,,"bvaughn,sebmarkbage,bvaughn",2017-03-22 20:16:33,2017-03-23 15:16:53
IS,Unable to render images on android device,We are using react with cordova to build a hybrid mobile application All the images are rendering on inspect browser but not on the actual device We have tried the following approach to render image 1 import redcar from ' RedCar png' image src redcar 2 var redcar require ' RedCar png' image src redcar 3 img src RedCar png 4 Copied image into android assets folder and tried image src ' android asset www RedCar png' responsive 5 index html meta http equiv Content Security Policy content default src style src 'unsafe inline' script src 'unsafe inline' 'unsafe eval' media src img src filesystem data 6 Only way it is rendering the image son device is by giving a background image to div in css file But we need to read the image paths from JSON so we can not use this approach background image url RedCar png 7 Also I tried changing the webpack output publicpath to or assets and making use of url loader file loader but could not get it right The images are supposed to render on device React version 15 3 1,,aweary,2017-03-23 13:19:40,2017-03-23 15:21:59
IS,Refs with react test renderer TypeError Cannot read property 'ownerDocument' of null,Do you want to request a feature or report a bug A bug in snapshots What is the current behavior It seems that there is a problem with the snapshots when you use other libraries like antd The snapshot launch With this OS Ubuntu 16 04,,"gaearon,gaearon,gaearon,gaearon",2017-03-23 15:48:27,2017-03-23 16:14:10
PR,Add dynamic injection to ReactErrorUtils,We have an internal fork of this I need to replace it with dynamic injection on module level for flat bundles,,gaearon,2017-03-23 18:43:08,2017-03-23 18:45:39
PR,Fix ReactErrorUtils injection,I added in 9246 but only later realized my code was flaky because ReactErrorUtils is destructured early at callsites This is fixing it so that the order of injection doesn t matter,,"gaearon,gaearon",2017-03-23 19:00:53,2017-03-23 19:13:08
IS,Uncaught Invariant Violation Element type is invalid expected a string for built in components or a class function for composite components but got undefined You likely forgot to export your component from the file it is defined in,Do you want to request a feature or report a bug I think this is most probably is a Bug index js 946 Uncaught Invariant Violation Element type is invalid expected a string for built in components or a class function for composite components but got undefined You likely forgot to export your component from the file it is defined in How ever i have exported All component properly Forms js import React from areact' import ReactDOM from areact dom' export default class App extends React Component render return div ul li Home li ul this props children div export class Home extends React Component render return div h1 Home h1 div main js import React from areact' import ReactDOM from areact dom' import App Home from ' Forms jsx' import Route hashHistory from areact router' import Router from areact router' ReactDOM render Router history hashHistory Route path component App Route path home component Home Route Router document getElementById 'app' history 4 6 1 react 15 4 2 react dom 15 4 2 react redux 5 0 3 react router 4 0 0 webpack 2 2 1 webpack dev server 2 4 2,,"gaearon,gaearon,gaearon,gaearon",2017-03-24 08:03:15,2017-03-24 13:05:38
PR,Updated Router import for example,Just simple update on Docs Updated import statement for react router dom in order to be a correct working example as in accordance with the,,,2017-03-22 09:43:02,2017-03-24 14:37:32
IS,A flat badge for facebook,Here is a repository for making badges more acceptable in documenting and I hope that the flat badge can be used in such an awesome project facebook,,gaearon,2017-03-24 16:30:52,2017-03-24 18:00:53
PR,Remove rethrowCaughtError injection,Syncing an internal change to this file,,"gaearon,gaearon",2017-03-24 18:18:54,2017-03-24 18:19:13
PR,Added a warning when a component is about to overwrite an updater property in dev mode,This should solve the issue reported in where React component would silently overwrite the updater property without any warning in development mode This is my first and not last I assure you PR to react so wish me luck,,"acdlite,acdlite,acdlite,acdlite,acdlite,aweary,acdlite,aweary,acdlite",2017-03-15 22:24:55,2017-03-24 18:27:57
IS,unstable handleError only seems to work on initial render,With a component that has the error boundary unstable handleError in it unstable handleError only seems to be invoked if an error occurs on the initial render not on subsequent renders For example in the following code visible at when the TriggerError component is rendered initially it recovers and renders the Error component,,gaearon,2017-03-24 18:27:40,2017-03-24 19:27:56
PR,Add more SSR unit tests for elements and children,This is a continuation of a series of PRs adding server side rendering unit tests following 9055 9089 and 9106 Like those PRs this one intends to add to the SSR test codebase in order to make writing a Fiber based server side renderer easier These tests focus on basic tests of elements component types and the different types of children allowed in React Please let me know what you think and thanks,,"aickin,gaearon,aickin,sophiebits,sophiebits,sophiebits,gaearon,aickin,aickin,sophiebits",2017-03-20 04:40:12,2017-03-24 20:31:16
PR,ReactElementValidator uses temporary ReactNative View propTypes getter,react native View propTypes have been deprecated in favor of ViewPropTypes In their place a temporary getter has been added with a deprecated warning message We should avoid triggering that warning during validation by using the temporary workaround accessor added to View propTypesSecretDontUseThesePlease This change can be removed any time after April 1 react native RC is tagged The getter warning wrapper will be removed then,,bvaughn,2017-03-24 21:44:30,2017-03-24 22:37:21
IS,Clarify the usage of Dynamic Children Key prop,I have seen a lot of people doing dynamic lists of items with add remove actions like this While static lists are probably ok with index as a key using index as a key in a dynamic list is wrong There is even an article robinpokorny index as a key is an anti pattern e0349aece318 dzoy90qka about it but no info about this in the docs This has to be added as a warning in the docs somewhere here dynamic children so that people could clearly see that they can not use index as a key in dynamic lists,,,2016-03-25 02:53:44,2017-03-25 23:35:00
PR,Fixed typo on implementation notes page,Added paren to mountComponent for consistency,,aweary,2017-03-26 01:53:56,2017-03-26 01:57:29
PR,Adding new SSR tests for context refs and reviving markup,This is a latest chapter in a series of PRs adding server side rendering unit tests following on 9055 9089 9106 and 9221 This PR adds SSR tests for context refs and markup mismatch warnings when reviving If we end up implementing the new SSR as a Fiber renderer then the context tests are probably not needed as I'm guessing that Fiber handles context by itself and is well tested If we write SSR from scratch though those tests will be useful Also while I found all these tests useful when I wrote my custom server renderer I totally understand if you find them repetitive especially the ones that repeat tests for both class components and stateless components Just let me know what you think,,"aickin,sophiebits,aickin",2017-03-25 03:03:13,2017-03-26 20:32:24
IS,bring classnames library into core react,Do you want to request a feature or report a bug a new feature What is the current behavior image What is the expected behavior It renders a className string as if I wrapped my object with a classnames Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React not it did not I do not know anyone who would be using the current behaviour for their benefit This is such a trivial thing to add yet it provides a great value for every react developer I know I understand react tries to be as light as possible but I can not help but wonder is it worth the extra trouble by deferring such a trivial thing to the react ecosystem No it is not worth the extra http request it is not worth an extra npm dependency The whole function is like 20 lines long Is there a consensus in the react community that this is the best way to transform objects into classnames Yes on NPM react was downloaded 3 3 million times last month and classnames 2 million times Seems like comfortable majority uses classnames library already So maybe let is add it to the core Pretty please,,"aweary,gaearon,gaearon,gaearon",2017-03-26 20:15:44,2017-03-26 21:03:05
IS,Simulate click does not call click handler if click handler passed via state in component,Hi We have component like this It starts work and handler called as expected can anyone explain why it not works thanks in advance,,,2017-03-14 17:49:35,2017-03-27 08:44:03
PR,Update lists and keys md,Docs should state what happens if keys are omitted,,,2017-03-26 13:31:36,2017-03-27 10:26:54
PR,Wrap DEV modules in explicit DEV condition,There are some issues with DEV modules such as ReactElementValidator ' content not being stripped in prod due to how DCE works in some minification tools This PR explicitly wraps the contents of each module in explcit DEV tags to ensure the code is not shipped in production,,"trueadm,trueadm",2017-03-27 12:30:03,2017-03-27 13:32:35
PR,Fix Chrome number input backspace and invalid input issue,In Google Chrome backspacing an controlled and uncontrolled number inputs causes an unexpected behavior backspace More cases and what fixes look like here issuecomment 236074326 Issues with uncontrolled inputs This is because assigning defaultValue causes side effects on value It seems to trigger validation on value as if it were directly assigned itself This Codepen provides a step by step reproduction case wat This PR wraps the defaultValue assignment in a conditional so that it will only ever be assigned if the defaultValue has changed Issues with controlled inputs It looks like the issue here is that value is being assigned using the standard React method of updating attributes when the props get passed in here L926 There is some logic in ReactDOMInput to prevent duplicate values from being assigned here L201 L210 Unfortunately the new value has already been assigned This PR adds a check for the value prop and only assigns it if is different It never assigns the value attribute if it has not changed I do not really know why this works I did not think node setAttribute 'value' value was meaningful What do you think Related to,,"nhunzaker,zpao,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,aweary,nhunzaker,sophiebits,nhunzaker,aweary,nhunzaker,sophiebits,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,sophiebits,aweary,aweary,nhunzaker,aweary,nhunzaker,nhunzaker,sebmarkbage,sebmarkbage,nhunzaker,sebmarkbage,sebmarkbage,nhunzaker,sebmarkbage,nhunzaker,nhunzaker,sebmarkbage,aweary,aweary,sophiebits,sebmarkbage,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,STRML,aweary,nhunzaker,nhunzaker,aweary,nhunzaker,aweary,nhunzaker,aweary,jimfb,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,jimfb,nhunzaker,jimfb,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,aweary,gaearon,aweary,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,jquense,nhunzaker,nhunzaker,aweary,gaearon,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,jquense,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,nhunzaker,jquense,nhunzaker,jquense,nhunzaker,nhunzaker,gaearon",2016-07-27 01:15:46,2017-03-27 16:39:19
PR,Warn on direct state manipulation 2272,Adds a warning when setting state directly using this state instead of this setState Resolves 2272,,"aweary,aweary,aweary,aweary,bvaughn",2016-11-10 23:41:00,2017-03-27 18:48:14
PR,Add a button to switch from Fiber with time slicing to Fiber without it in Triangles Demo,I found handy to have a button to switch off on Time Slicing This PR would hopefully close 9044,,acdlite,2017-03-26 16:38:35,2017-03-27 19:49:17
PR,Adds a Stack based Sierpinski triangle demo to compare with Fiber,Hi I would like to contribute to the main repo a Stack based Sierpinski triangle visualization demo that I used to compare with the Fiber demo and show the advantages of using Fiber to avoid dropping frames,,"acdlite,trueadm,madeinfree,acdlite",2017-02-22 15:46:18,2017-03-27 19:49:17
IS,Update renderToStaticMarkup documentation,There are some inconsistencies regarding the use of renderToStaticMarkup Current documentation says that Similar to renderToString except this does not create extra DOM attributes such as data reactid that React uses internally This is useful if you want to use React as a simple static page generator as stripping away the extra attributes can save lots of bytes But on release 15 0 there is a statement that suggests data reactid is no longer on every node As a result of using document createElement we can prime the node cache as we create DOM nodes allowing us to skip a potential lookup which used the data reactid attribute Root nodes will have a data reactroot attribute and server generated markup will still contain data reactid I was looking to optimize the server render content by removing all that extra markup and thought I was doing something wrong because there are still a lot of data reactid everywhere so Is it still possible to render on the server without those extra dom attributes,,zpao,2016-12-12 09:59:04,2017-03-27 20:59:23
IS,Bad reading number with digit using ReactJS NVDA and FireFox,Do you want to request a feature or report a bug bug What is the current behavior I write application with accessibility using ReactJS I have a problem with NVDA and FireFox NVDA can not read number correctly I have found solution use setTimeout with 0 delay but I think that can do it better I have created proof of concept to show the problem To reproduce sad path Run jsfiddle on FireFox Run NVDA you can open speech viewer Click sometimes on Random me in Not works example Check results first value will be ok but next not Sometimes will be fe 345 67 345 67 but sometimes it missing first digit 45 67 To reproduce happy path Run jsfiddle on FireFox Run NVDA you can open speech viewer Click sometimes on Random me in Works example Check results every value will be ok How can I resolve this problem without setTimeout What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Windows FireFox,,"jddxf,jddxf,aweary,aweary",2017-03-10 14:44:22,2017-03-27 21:12:30
PR,Added missing annotation to ReactNativeFeatureFlags file,Noticed this discrepancy while doing the ReactNative React sync Guess it had gotten added in fbsource and not synced upstream,,bvaughn,2017-03-27 17:02:23,2017-03-27 21:59:38
IS,Provide a mechanism for marking the React type so that it can be identified in HTML,It would be very helpful during analysis and debugging especially when unfamiliar with code base to be able to identify components by looking at the HTML For instance Foo reactType Foo that would yield div blah blah data react type Foo I realize I can do this with data react type Foo but it might be nice for formalize this,,aweary,2017-02-19 22:10:33,2017-03-28 03:12:23
IS,Old props and state in the render function,Do you want to request a feature or report a bug Feature What is the current behavior The render function returns what would be the result of the current state and properties only What is the expected behavior Having the old properties and state from the previous render as a parameter for example This would be useful to trigger animations with react motion Currently I am doing something similar for checkboxes when the checked state changes a ripple animation is started,,"brigand,gaearon",2017-03-17 00:59:02,2017-03-28 07:06:28
IS,Feature Request New PropType to check if a prop is a valid React Component Can be fed to createElement,There is no PropType to check whether a prop is a valid React Component As in the prop could be supplied as the first argument to React createElement This would be a nice feature for a composable component where the user could supply different components to a man in the middle component which creates elements of the supplied component and feeds props to them Example Edit For clarification instanceOf Component PureComponent does not work,,"Ethan-Arrowood,brigand,gaearon",2017-03-15 16:09:30,2017-03-28 08:08:11
PR,Upstream fix for possible null pointer in EventPropagators,This fix was accidentally omitted from PR 9219 and caused a regression after the most recent sync,,bvaughn,2017-03-28 16:33:32,2017-03-28 18:24:14
PR,Added jest cli to the package json for the Fiber record tests script,The scripts fiber record tests script currently does not work out of the box because it depends on jest cli which is not in package json Right now you have to manually npm install jest cli to get the script to run correctly This PR just adds jest cli to the package json so that record tests will work after a usual npm install Cheers,,"aickin,gaearon,sophiebits,aickin,sophiebits",2017-03-28 01:11:34,2017-03-28 21:55:23
PR,Fiber Adds DEV condition around getDeclarationErrorAddendum,Currently getDeclarationErrorAddendum makes reference to getCurrentFiberOwnerName in its contents This causes the ReactDebugCurrentFiber module to be imported when it is only a DEV module,,trueadm,2017-03-29 12:51:55,2017-03-29 12:55:04
PR,Add DOM fixtures for disabled button click events,Adds a DOM fixture for disabled buttons specifically click events on disabled buttons with a single child text node click events disabled buttons containing another element in this case a span Related to and cc,,"aweary,nhunzaker,nhunzaker",2017-03-28 01:57:08,2017-03-29 16:17:54
IS,ReactComponentTreeHook of undefined,Do you want to request a feature or report a bug Bug What is the current behavior chrome macOS,,gaearon,2017-03-29 20:21:33,2017-03-29 21:38:42
PR,Remove IE8 specific ChangeEventPlugin logic,Since React does not support IE8 anymore this logic can be removed saving those precious bytes,,"aweary,nhunzaker,aweary",2017-03-29 19:03:28,2017-03-29 22:37:56
IS,can not I use 'this' in async function,It shows Uncaught in promise ReferenceError this5 is not defined So what should I do avoid using async,,gaearon,2017-03-30 01:46:19,2017-03-30 09:56:25
PR,Remove captured scroll feature check,IE8 was the only browser that did not support captured scroll We no longer have that constraint Testing Methodology I extracted the feature check from React into a CodePen From there I ran the debug view in every single browser via BrowserStack Results YES IE9 FF 3 Chrome 15 Opera 10 6 Yandex 14 12 Safari 4 Windows Safari 4 Mac Windows Phone 8 1 iOS 4 3 2 Android 4 NO IE8,,"nhunzaker,nhunzaker,gaearon,gaearon",2017-03-29 23:54:20,2017-03-30 10:01:30
PR,Allow returning null as host context,If your renderer does not use host context you might prefer to return null This used to give an error Invariant Violation Expected host context to exist This error is likely caused by a bug in React Please file an issue I use a sentinel value instead now The code in ReactFiberHostContext is a little complicated now We could probably also just remove the invariants,,"sophiebits,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,sophiebits",2017-03-29 15:14:32,2017-03-30 12:18:40
PR,Added semicolons to addons imports examples,I'm not sure if this was intentional but I'm fairly sure that the semicolons should be there,,gaearon,2017-03-30 14:52:14,2017-03-30 14:55:28
PR,Add DOM fixture for unmasking passwords,Chips away at the checklist in IE11 and Edge have a password unmask field that React prevents the display of for controlled inputs This commit adds DOM fixture coverage for this test case Related PRs,,"nhunzaker,gaearon,nhunzaker,nhunzaker",2017-03-28 00:25:31,2017-03-30 15:16:37
PR,Remove IE8 specific setInnerHTML behavior,Another IE8 specific check that can be removed,,aweary,2017-03-30 15:12:05,2017-03-30 16:24:58
IS,Create a new JSFiddle for issue template,Right now the current JSFiddle can be a pain to use It does not have any syntax highlighting and defaults to using React createClass which in almost every case is not what people are going to be reproducing issues with,,"aweary,gaearon,aweary,christianalfoni,aweary",2017-03-20 17:45:01,2017-03-30 16:43:17
PR,Update JSFiddle for issue template,Resolves 9224 The new JSFiddle has syntax highlighting and does not need to load the Babel integration script JSfiddle seems to be the best balance between familiarity and accessibility as far as forking goes,,aweary,2017-03-30 15:40:45,2017-03-30 16:43:17
PR,Remove IE8 specific shorthand style property logic,This logic was only here for IE8 Setting stype prop for shorthand properties works fine in all other tested browsers Testing strategy Used the following snippet to verify shorthand property behavior Tested Browsers Verified all listed browsers behaved as expected unset the shorthand style property IE9 Firefox 3 OS X Snow Leopard Safari iOS 6 Safari 4 OS X Snow Leopard Android Browser Android 4 1 S3 Chrome Android 4 4 Note 4 Windows Phone 8 1 Opera 12 12 edit I updated the test to be more robust and noticed that font does not work in Android Browser for Android 4 1 or iOS 4 We may still need this if we support those browsers though we should be able to remove a number of the properties,,"aweary,aweary",2017-03-30 17:33:14,2017-03-30 17:51:34
IS,Bug Updating background style ignores backgroundSize,What is the current behavior I have a React Component rendering a div with background and backgroundSize styles When the user via the interface changes the background URL the background size style is no longer applied Here is a fiddle that demonstrates the issue Note how clicking the image container causes the grid to become twice as large 40px size being ignored and also causes the large background to start tiling cover ignored If you look at the generated DOM you can see that the background value is no longer a composite of the background background size declarations as it is in the first render but just reflects the background value What is the expected behavior I would expect React ReactDOM to combine these two style rules in a consistent way following the two render calls Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Unknown currently happening in React 15 4 1 and in the fiddle I have tested in both Safari and Chrome and have verified this is not a browser issue,,aweary,2017-03-30 18:45:18,2017-03-30 18:52:00
PR,Move takeSnapshot from UIManager to ReactNative renderer s,This is an upstream sync from a change committed to fbsource This prevents a potential cycle between UIManager ReactNative and unblocks flat bundling for ReactNative,,"bvaughn,bvaughn",2017-03-30 16:31:36,2017-03-30 20:10:15
PR,Remove captured focus feature check,IE8 was the only browser that did not support captured focus We no longer have that constraint Simpler to my last PR Testing Methodology I extracted the feature check from React into a CodePen From there I ran the debug view in every single browser via BrowserStack Results YES IE9 FF 3 Chrome 15 Opera 10 6 Yandex 14 12 Safari 4 Windows Safari 4 Mac Windows Phone 8 1 iOS 4 3 2 Android 4 NO IE8,,nhunzaker,2017-03-30 00:14:29,2017-03-30 20:47:15
PR,Deleted a specific code for ie8 in CSSPropertyOperations,React does not support ie8 so the code specific for IE was removed in CSSPropertyOperations js,,"Tom910,aweary",2017-03-30 21:05:22,2017-03-30 21:23:56
PR,Deleted a specific code for ie8 document selection,React does not support ie8 so the code specific for IE was removed document selection,,Tom910,2017-03-30 21:32:08,2017-03-30 21:32:22
IS,Problems with click events on IE and Edge,I would like to point out a specific behaviour when using React with IE and Edge I am building a user computer chat application where users are presented prompts to navigate them through a user journey One of the steps is where the user enters a street name postcode and they are presented a list of addresses to choose from Therefore I have a step with a text input field which after the user submits disappears for a list of addresses to appear I have an example where there are two ways for submitting One is by clicking on a send button and the other is by hitting 'Enter' on a keyboard When the user uses the mouse submission everything is ok on all browsers however if the user presses the keyboard key then click events do not work as expected on IE and Edge My assumption is that the problem comes because the field that has the focus is deleted from the DOM but I can not be sure To make things stranger I could only reproduce the issue by putting the addresses in the list in two nested div elements with display flex set in the styles Here is a link to a fiddle Expected After a value is entered in the input and enter is pressed or send is clicked I would expect the list of addresses provided to be clickable Actual When a value is entered end send is clicked with the mouse the events on the list items can be tracked When a value is entered and Enter is pressed the events on the list can not be tracked I am using react 15 4 2 with IE 11 713 10586 0 and Edge 25 10586 672 0 EdgeHTML 13 10586,,"aweary,jddxf,jdalton,aweary",2017-02-02 09:38:15,2017-03-30 22:08:35
PR,Show more meanignful stack trace for ReactNative errors,This is an upstream sync from a change committed to fbsource Clicking on the stack should jump to where the error actually occurred rather than to where it is logged in a redbox component Before image After image,,"bvaughn,gaearon,bvaughn,bvaughn",2017-03-30 16:25:36,2017-03-30 22:15:33
PR,Added explicit null return to completeUnitOfWork to resolve Flow error,completeUnitOfWork causes Flow errors because of this while true loop Here 0GYVwdgxgLglg9mABMOcAUBKAXIgzlAJxjAHNEBvAKEUQHcALGAGwFNE1CQWMLqbECLKCAJIA5GIDcfAL6U5QA is a smaller repro Maybe we should remove or reconsider this while loop but for now I have fixed the issue by adding an explicit null return outside of the loop It was blocking a merge in fbsource so I fixed it there and this is an upstream sync,,"bvaughn,acdlite,bvaughn",2017-03-30 22:38:55,2017-03-30 22:45:14
PR,Disabling a no unreachable lint error,Merged 9299 too quickly sorry,,"bvaughn,nhunzaker",2017-03-30 23:33:04,2017-03-30 23:40:46
PR,Deleted a specific code for ie8 document selection,React does not support ie8 so the code specific for IE was removed document selection,,"Tom910,gaearon,aweary",2017-03-30 21:34:28,2017-03-31 00:00:13
PR,Remove viewport metrics other pageX pageY behaviors,pageX and pageY are supported in every browser which makes it possible to remove a lot of code I do not expect this one to get merged so easily I'm happy to provide any additional testing Test methodology I created a case here using React is pageX pageY feature test Test Results YES IE9 FF 3 Chrome 15 Opera 10 6 Yandex 14 12 Safari 4 Windows Safari 4 Mac Windows Phone 8 1 iOS 4 3 2 Android 4 Native Browser Android 4 4 Chrome NO IE8,,"nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon",2017-03-30 15:58:08,2017-03-31 01:20:57
PR,Remove scroll capture support warning,I removed the scroll capture feature check for IE8 however I missed the associated warning I think it eliminates a dev only fiber test failure too,,nhunzaker,2017-03-31 02:10:39,2017-03-31 10:36:09
IS,this props undefined,SideBarDemo class SidebarDemo extends React Component constructor props context super props context this state isVisible false layout Hierarchial render return div App layout this state layout div App static createDefaultGraph if this props layout Hierarchial do something render console log this props layout return when I use console log this props layout in App I able to get value of layout but when calling this props layout in createDefaultGraph method it gives TypeError Cannot read property 'layout' of undefined,,aweary,2017-03-31 14:24:58,2017-03-31 14:27:14
PR,Port out bug fixes to ReactARTFiber,D4616127 D4629747 D4631778,,sophiebits,2017-03-31 15:12:14,2017-03-31 15:13:01
IS,this props undefined,SideBarDemo class SidebarDemo extends React Component constructor props context super props context this state isVisible false layout Hierarchial render return div App layout this state layout div App static createDefaultGraph if this props layout Hierarchial do something render console log this props layout return when I use console log this props layout in App I able to get value of layout but when calling this props layout in createDefaultGraph method it gives TypeError Cannot read property 'layout' of undefined,,aweary,2017-03-31 14:33:08,2017-03-31 17:56:08
PR,Removing specific event polyfil code for ie9 in ChangeEventPlugin,React does not support ie9 so the code specific for IE was removed Size report size change 2,,"Tom910,aweary",2017-03-31 20:12:38,2017-03-31 20:18:03
PR,Deleting a specific style name float for ie8,React does not support ie8 so the code specific for IE was removed,,"Tom910,gaearon",2017-03-31 19:34:44,2017-03-31 22:31:52
PR,Adding SSR test for form fields,This is the last of my planned SSR unit test PRs following on 9055 9089 9106 9221 and 9257 It tests form fields input type text input type checkbox textarea and select The first set of tests makes sure that the server renderer correctly maps React properties for each of those fields to correct DOM properties or for textarea to inner text It also makes sure that the renderer warns when a value is set without onChange or readOnly The latter tests attempt to make sure that form fields that have been server rendered work correctly with user interaction whether they are controlled or uncontrolled and whether the user interaction happens before client render or after I also deleted a duplicative unrelated test that mentioned in a review comment on 9257 This set of tests are more verbose and a little more complex than some of the others I welcome any feedback to make them more readable Thanks,,"aickin,sophiebits,sophiebits,aickin,aickin,aickin,sophiebits",2017-03-27 03:59:53,2017-03-31 22:42:08
PR,Docs Remove part about context being experimental,Removed from docs part about context being experimental feature It is there for few years now and I do not remember it being broken or planned to be removed modified In addition few high profile libraries use context it would be bummer if context went away react redux react router What is current roadmap regarding context Will it be removed in fiber,,"gaearon,gaearon",2017-04-01 17:24:37,2017-04-01 21:02:58
IS,react addons create fragment destructuring assignment remains in distributed code,Do you want to request a feature or report a bug bug What is the current behavior When running npm run build I get the following error The react addons create fragment index js 343 is a line with destructuring assignment I think code in the distributable should be es5 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template using create react app create an app add material ui npm install save material ui import Drawer import Drawer from 'material ui Drawer' What is the expected behavior This will build properly with npm run build Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React unknown,,"gaearon,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,gaearon,bvaughn",2017-04-02 04:25:39,2017-04-02 18:29:19
PR,Remove examples folder,This removes the examples folder Those examples are not very valuable by themselves show outdated or incomplete build configurations and are generally confusing I m happy to replace them with better examples contributed by the community but for now I ll delete the folder We also have a Wiki page for Examples For quick fiddling with the build I added fixtures babel standalone html I also moved Fiber triangle and Fiber debugger into fixtures fiber triangle and fixtures fiber debugger respectively,,gaearon,2017-04-03 18:59:03,2017-04-03 19:32:03
IS,Unable to find element with ID,I am trying to use jquery datatable by creating react component When I force to re render my component using componentObject forceUpdate I am getting this error Unable to find element with ID 4 and its because jquery datatable create three div is between react id 3 and 4 I want to know how I can get rid of this error Is there any other way make this work Because of this error sorting and other function are not working,,aweary,2017-04-03 17:41:16,2017-04-03 21:01:08
IS,Async event handlder can not use preventDefault very well,I create a jsfiddle demo I mean that maybe sometimes we need encapsulate the handler and the encapsulation is transparent so preventDefault is user is responsibility we can not in advance of adding it just like the first way above But the second way above can not work apparently Of course we can add some options such as needPreventDefault in the encapsulation and provide it to user but this looks like not a perfect way So I want to ask that is there any good way to solve this Thanks,,"aweary,gaearon",2017-04-03 08:51:39,2017-04-03 22:14:24
PR,Make it clear that textarea also supports defaultValue,I checked the docs for this but did not find it I ended up having to check the code and verified that it was in fact supported Just hoping to save the next dev the trouble,,cannona,2017-04-02 19:00:59,2017-04-04 04:05:50
IS,Updates grunt,Specifically grunt has released their first 1 0 update which bumps lodash dependency L31 from 0 9 2 to 4 3 0,,"glixlur,zpao,flarnie",2016-04-07 12:12:16,2017-04-04 15:40:17
PR,WIP Rollup build,Just opening PR so we can keep track of progress I will close this one before merging anything so that gets the squashed commit This PR has been closed A new PR to track this progress has been setup,,"gaearon,gaearon,gaearon,trueadm,trueadm,gaearon,Andarist,gaearon,flarnie",2017-03-10 02:08:00,2017-04-04 18:48:24
IS,Create Separate Copies of Each Renderer,A simple plan 1 Copy all files to each renderer package 2 Rewrite any require to the files in the isomorphic folder to require areact lib MyFileName' Hardcode a whitelist if needed That way they all share isomorphic modules but none of the other files That way versioning separate renderers is easy and does not depend on everyone updating their react peer dependencies,,"sebmarkbage,iamdustan,zpao,sebmarkbage,zpao,sebmarkbage,zpao,sophiebits,sebmarkbage,sebmarkbage,gaearon",2016-05-18 18:01:08,2017-04-04 19:06:14
IS,BUG ref function gets called twice on update but not on first mount first call with null value,Do you want to request a feature or report a bug bug What is the current behavior ref functions get called twice on update but not on first mount If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I have some code like this where this frames is always twice as expected What is the expected behavior The array should not contain null values only the divs NOTE render is not being called more than once and I am setting this frames to a new array inside render then componentDidUpdate shows that it has double the length with the first half of the values all null It seems like React is calling the ref functions one time too many for each frame element the first call with a null value the second call with the expected value Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2 Workaround As a workaround I can simply and consistently filter the null values out before interacting with the array,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-04-04 20:18:23,2017-04-04 20:27:34
IS,change state of one component affect the other component,Hi I'm having a problem using multiple component with one reducer and action What I'm trying to do is to reuse data grid on modal Here is the sample sample Originally the data grid behind has no record and when I showed the modal with data grid and pass a data the data grid behind it has now a data and also when select check the item in data grid on modal it will also select check on the other one I am using react and react redux Please help Thanks a lot,,aweary,2017-04-04 06:53:40,2017-04-04 21:28:49
PR,Fix grammar typo in Design Principles docs,features feature There is nothing bad about using state or lifecycle hooks in components Like any powerful feature s they should be used in moderation but we have no intention to remove them I can t explain the exact grammatical principle this violates but it sounds wrong to my native English ears that feature is plural here Another way to check if the grammar sounds right is to change the order of the clauses They should be used in moderation like any powerful feature sounds right whereas They should be used in moderation like any powerful features does not,,,2017-04-03 21:50:21,2017-04-04 22:16:54
PR,Nh scroll fix,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,nhunzaker,2017-04-04 23:56:19,2017-04-04 23:56:24
IS,Expanding render method behaviour,Regular by default I think this enhancement can save time a bit and you dont have to worry that u didnt wrap your jsx code,,gaearon,2017-04-05 08:33:23,2017-04-05 10:33:10
PR,Moved the JSdoc for invokeGuardedCallback to correct position,What A JSDoc comment for invokeGuardedCallback was not at the correct place This pr fixes that,,gaearon,2017-04-05 03:31:12,2017-04-05 11:34:15
PR,Remove MouseEvent button polyfill,Same old song and dance MouseEvent button is supported in every browser React targets I did a manual check too using YES IE9 11 Edge Chrome 15 Opera 10 6 Safari 4 Windows Mac Firefox 4 Android 4 iOS 3 NO IE8 What a strange IE8 quirk,,"nhunzaker,gaearon",2017-04-05 00:38:35,2017-04-05 11:34:51
IS,bug while a value change to null the input show value do not change,the demo is while i set the value to null the input only keep the last value rather than show a empty value while it should be,,gaearon,2017-04-05 02:10:30,2017-04-05 11:40:43
IS,Bundle React into a flat file,We have previously considered bundling React into a flat file without require s and a module map For example 4230 is a somewhat outdated implementation of this Rollup is another tool that if I m not mistaken bundles modules in the same way Do we really want to do this What problems does this solve for us If we want to try what is the plan and how do we evaluate whether the switch is worth it,,"gaearon,nhunzaker,gaearon,zpao,nhunzaker,syranide,zpao,zpao,gaearon,gaearon",2016-03-26 22:11:40,2017-04-05 15:47:29
PR,Convert current build system to Rollup and adopt flat bundles,The current build process for React using Gulp Grunt and Browserify is cumbersome and overly complicated It does not allow us to unify our external open source and our internal Facebook processes very well This PR introduced an entirely new system that replaces the old build system We now leverage the creation of flat bundles that force users to work with a single point of entry This allows us to make better optimizations improve our bundle size improve the DEV PROD experience and allows us to control how people use the APIs offered by React and the various different React renderers Supersedes 4927 Fixes x Set up a basic build process x Add forwarding modules x Fix ReactPerf circular dependency with ReactGKJSModule x Fix CurrentOwner exception x Fix addComponentAsRefTo Only a ReactOwner can have refs x Figure out a fix for Rollup flat bundle breaking www x Fix dynamic injection breaking because forwarding modules do not know which bundle to refer to x Clean up before build and add a shortcut for building one bundle type x Fix all missing static resources x Figure out how to inject feature flags into the bundle correctly x Figure out how to inject error utils and Fiber error dialog x Add a ReactART build x Add a ReactDOMServer build x Rebase www now that Sebastian landed the sync x CommonJS bundles should not contain DEV code for prod or process env NODE ENV checks since those are slow We should have separate CommonJS builds for development and production and switch based on NODE ENV between them x Fork addons internally x Make build handle NPM packages facebook www and UMD dist x Remove core indirection internally x Figure out a plan for responder tap plugins reactComponentExpect etc where we would still like to be the source of truth x Fix KB profiler not to rely on internals x Figure out how to remove ReactPerf and ReactTestUtils especially shallow renderer from www bundles in prod mode x Check for duplicated output and do some initial profiling x Ensure we have license headers both for our code and object assign in all bundles x Delete examples move examples fiber to fixtures and check docs for links to examples x Figure out the plan for ReactDOMServer bundle x Fix DOM fixtures and fiber debugger x Fix ART UMD build x Add ReactDOMServerStack CommonJS entry point to react dom server x Do initial work for RN flat bundle the rest is follow up x Figure out the plan for TapEventPlugin and friends x Remove dependency on Node 7 we only have Node 4 on devservers x Ensure packages contain PATENTS and other relevant files as they did before x Update www sync script,,"trueadm,gaearon,nhunzaker,maxdeviant,gaearon",2017-04-04 19:00:12,2017-04-05 15:47:29
PR,Update build paths in docs,They have changed with Rollup PR,,gaearon,2017-04-05 15:53:18,2017-04-05 15:53:25
IS,Use Babili instead of Uglify for browser builds,No idea if this is actually viable at this point but figured I would open an issue so we can track and determine the best way forward as it is pretty likely that we will end up there unless we find a reason not to Couple things to consider Currently we Browserify the already compiled modules We might not need to do that for Babili but would for Browserify to resolve correctly Maybe we can start dropping transforms from the npm package more aggressively and rely on native to support things but still compile more for the browser What is the risk of falling out of sync by basically having dual pipelines If somebody is interested in investigating this feel free just say something Let is hold off on PRs for the time being unless there are convincing results I do not foresee this being immediately doable and would rather collect info all in one place instead of splitting discussion,,"zpao,aweary,gaearon",2016-09-07 21:25:52,2017-04-05 15:58:26
PR,Build distinct dev prod min builds,Hopefully this helps reduce some confusion about what each build actually is and maybe we will see fewer people doing benchmarks with the dev version There is some more to do to make sure this is actually right and works but this is the general idea We would build react dev js and react prod js and the minified version of each We should do all the other ones as well addons less important long term but react dom definitely needs this treatment because 7164 We start recommending these file names as soon as they are part of a release We keep building the plain react js react min js for compatibility For v16 we stop building them entirely TODO Remove the minified dev mode warning It wo not make any sense We might still want it for npm though Make sure prod build is not already minified It mostly is because of the uglifify step We might not need those anymore anyway if we do this after rolloup that step is only there to remove some require s but rollup handles that I think docs updates Do 2 builds instead of 5 should be able to just run uglify over the non min code can even have a map then and then copy the right files instead of doing a duplicate build,,"zpao,zpao,gaearon,sebmarkbage,gaearon,keyanzhang,trueadm,gaearon",2016-07-11 02:37:56,2017-04-05 16:01:59
PR,fixes circleci upload build sh paths for dist files,Fixes scripts circleci upload build sh where the paths have now changed,,"trueadm,gaearon,aweary,gaearon",2017-04-05 16:13:22,2017-04-05 16:25:10
PR,Adds support for labels on building bundles,This allows us to run builds on specific bundles by their label for example npm run build fiber or npm run build fiber type UMD,,trueadm,2017-04-05 17:12:41,2017-04-05 17:30:13
PR,Fix the print warnings script,We misunderstood its purpose and removed it from CI but it was used in www sync script,,"gaearon,gaearon",2017-04-05 17:54:00,2017-04-05 17:54:49
IS,Post form as proper JSON,Is it possible to automatically transform a html form to a proper JSON document with react In contrast to old fashion form encoded data it would be wishful to get the whole JSON document such as unchecked booleans false etc Finally if files could be included aswell as base 64 string it would be a great bonus,,aweary,2017-04-05 17:50:10,2017-04-05 18:27:36
PR,Synced ReactNativeFiber bugfix for leaf node children,Upstream sync of a bugfix committed to fbsource,,"bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,gaearon,gaearon,bvaughn",2017-04-04 22:49:35,2017-04-05 18:29:46
IS,Lookup translate,Please any recommendation about using a lookup translate in react app and any type of file should be use it po mo or js,,aweary,2017-03-31 18:26:11,2017-04-05 18:52:53
PR,Fixes the eager react dom replacement on the rollup plugin,The react dom replacement in the Rollup plugin is far to eager this makes it far less so,,"trueadm,trueadm,gaearon,trueadm",2017-04-05 20:56:13,2017-04-05 21:42:12
PR,change permissions of test print warnings,,,trueadm,2017-04-05 22:18:35,2017-04-05 22:18:39
PR,Removed takeSnapshot util function from ReactNative rendererr,It was added to react native implementation in react native commit c7387fe Relates to this comment and issue facebook react native issues 13343 Upstream sync of react native pull 13347,,bvaughn,2017-04-06 17:25:06,2017-04-06 17:39:18
IS,TypeError Cannot read property 'firstChild' of null at precacheChildNodes react dom js 6619,With 15 5 0 rc 1 I get,,"gaearon,syranide,gaearon,aweary,bvaughn,aweary,nhunzaker,aweary,syranide,bvaughn,aweary,aweary,aweary,aweary,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2017-04-06 08:38:02,2017-04-06 23:31:54
PR,Move getNextDebugID to React package,See 8487 When multiple renderers are used in development react issues a warning from ReactComponentTreeHook Why Items are stored in ReactComponentTreeHook is itemMap for debug info during development The keys for these entries are generated by the following code The problem is both ReactDOM and ReactDOMServer have a copy of this and so will generate the same series of numbers overwriting the debug entries generated by the other Now it lives only in React,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon,gaearon,acdlite",2017-02-15 05:28:28,2017-04-06 23:36:32
PR,All doc updates forv15 5,To make this update easy all the doc updates are condensed into this one PR The smaller other PRs were for ease of review This PR includes Changes from 'Update docs for test utils add ons change' which was approved Changes from 'Update docs to deprecate React CSS TransitionGroup' Changes from 'Remove React createClass and React propTypes from the docs' Two new commits removing React addons from the docs To review please just look at the more recent diffs Review the 'Remove React createClass and React propTypes from the docs' Review the top two commits Remove 'addons' items from left nav and deprecate 'addons' doc page and 'Remove references to React addons from docs',,"flarnie,gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,gaearon,bvaughn,flarnie,bvaughn,gaearon,acdlite,gaearon,gaearon",2017-04-07 00:02:16,2017-04-07 00:20:55
PR,Remove React createClass and React PropTypes from docs,These commits update the docs to remove React createClass and React PropTypes replacing them with create react class and prop types libraries More details below I did not add sections for create react class and prop types under add ons in the navigation It seemed duplicative of the info on React without ES6 and Typechecking with PropTypes guides and long term we want to probably remove the add ons docs section anyway It is unclear how contextTypes will work without React PropTypes Let is assume that for now we will get users to use the external PropTypes when defining context I will update this PR if we want a different approach,,flarnie,2017-04-06 16:35:33,2017-04-07 03:58:24
PR,Update docs to deprecate React CSS TransitionGroup,Another piece of updating the docs for the 15 5 release removes link to the docs about ReactCSSTransitionGroup and ReactTransitionGroup from the main navigation updates 'prev' and 'next' pointers to skip this page adds deprecation warning to the top of the page remove references to these modules from the packages README updates 'add ons' main page to list this as a deprecated add on,,"flarnie,flarnie,bvaughn,flarnie,bvaughn",2017-04-05 03:28:31,2017-04-07 03:58:34
PR,Update docs for test utils add ons change,Wanted to get this up so I can get any corrections Continuing to work on the rest of the document updates which I can either push on separate branches as they are finished or on one branch PR that gets updated as I go I assume we will hold off merging until the actual 15 5 release happens Updating all references and docs on the React addons TestUtils and the shallow renderer to refer to the correct targets Instead of Also did a commit to update the incorrect or missing 'prev' and 'next' attributes on the 'add ons' doc pages,,"flarnie,bvaughn,bvaughn,flarnie,flarnie,bvaughn,flarnie,gaearon,flarnie,gaearon,gaearon,gaearon,flarnie",2017-04-04 23:29:11,2017-04-07 03:58:48
PR,Remove indirection in checking propTypes,TLDR I m removing react lib checkPropTypes import in favor of React checkPropTypes public API access from renderer and direct checkPropTypes access from the core Shared checkReactTypeSpec currently depends on react lib checkPropTypes which is gone in flat bundles So this breaks in React Native sync process In DOM we currently ship two copies in both React and ReactDOM flat bundles but this breaks until RN is also a flat bundle I could shim it but this seems like an easy fix because there s a public API for this now The fix inside React package is just to import the internal checkPropTypes module directly The fix inside renderers is to use the public API React checkPropTypes,,"gaearon,gaearon,gaearon,acdlite,gaearon,acdlite,acdlite,gaearon,gaearon",2017-04-06 20:20:19,2017-04-07 14:23:29
PR,Tweak Rollup setup,Removes unused exports in modules js Removes a shim for checkPropTypes that s no longer used Adds a way to build multiple bundles yarn build core dom type umd node,,"gaearon,gaearon",2017-04-07 15:02:55,2017-04-07 15:17:37
IS,componentWillReceiveProps Do not work,i'm trying to create my apps app have function like maps app of google my app have 2 scene first scene is mapview and have a search input in the top of the scene when user click on search input app will navigate to second scene search scene second scene i implemented module react native google places autocomplete when user input text this component will give suggestion and autocomplete place I get place info description and coordinate and pass this props through Actions pop method of react native router flux then get props and trigger componentWillReceiveProps to update region object of mapview component first scene But seemly componentWillReceiveProps do not work I stuck there Do you know how to solve it or know other way to do it Please help me This is my first scene code mapview componet,,"gaearon,aweary",2017-04-07 14:35:29,2017-04-07 15:25:19
PR,Make ReactDebugCurrentFrame shared state between core and renderers,This was the original intention but we missed it during the Rollup transition Previously it was embedded in the renderers but it should have been exported from the core package in DEV,,"gaearon,gaearon",2017-04-07 15:58:44,2017-04-07 16:03:22
PR,Update example snippet in old 'React addons' doc page,Made an improvement based on feedback from on If we have any other minor changes that get flagged they can be made on this branch,,"flarnie,flarnie,gaearon",2017-04-07 14:43:58,2017-04-07 20:47:54
IS,onclick handler default parameter value set to proxy,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2017-04-07 20:50:41,2017-04-07 21:00:39
PR,Replace shims with explicit React access from the renderers for shared global state,Remove non existent lib from souce files These files don t really exist anymore We are already using Rollup shims to alias them and the inconsistent usage of lib is more confusing than helping there Additionally this prevents us from syncing React Native to the flat React version Also removes a bunch of hacks from Rollup config Replace all shims with explicit access This deletes shims and changes to access require areact' DO NOT USE from renderers for global shared state I cloned flattenChildren and traverseAllChildren because they relied on CurrentOwner but were used both from Stack and Isomorphic The stack implementations will die and the isomorphic ones can be changed to be optimized for Children specifically in the future I also deleted UMD shims because they are now unnecessary I moved the internals assignment to main modules since they are now used in tests and made them direct UMD entry points,,"gaearon,sebmarkbage,gaearon,trueadm",2017-04-07 18:34:35,2017-04-07 21:07:11
PR,Blog post and changelog for 15 5 0,,,"acdlite,brigand,gaearon",2017-04-07 21:40:57,2017-04-07 21:41:16
IS,Bug Backspace in input type number behaves badly in Blink,This appears to have been introduced in a new Chrome version but I can not find any reference to where Affected Tested Browsers OS X Chrome 51 0 2704 106 64 bit Opera 39 0 2256 15 Unaffected Browsers Safari 9 1 Firefox 49 Backspacing in an input element with value or defaultValue set causes some very odd behavior Once a decimal point is gone it can not easily be re added Example react input bug In this example I simply backspaced twice On the second backspace when I expect 3 to be showing the input instead reads 3 and the cursor has moved to the beginning The next two jumps are my attempts to add another decimal point Fiddle Tested with React 15 2 Notes This only occurs when value or defaultValue is set If neither is set the input behaves properly We are currently working around this issue by unfortunately setting the input value on componentDidMount via a ref,,"STRML,zpao,jimfb,STRML,jimfb,jimfb,STRML,jimfb,STRML,nhunzaker,nhunzaker,nhunzaker,nhunzaker,jimfb,nhunzaker,jimfb,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,STRML,nhunzaker,nhunzaker,nhunzaker,STRML",2016-07-12 22:58:16,2017-04-07 22:27:57
IS,const in prop types lib ReactPropTypesSecret js,Do you want to request a feature or report a bug Bug prop types 15 5 0 contains an un transpiled const in lib ReactPropTypesSecret js Not sure where the code for this lives,,"acdlite,STRML,acdlite,acdlite,acdlite,acdlite,gaearon,acdlite,acdlite",2017-04-07 22:18:41,2017-04-07 22:44:13
IS,prop types package does not declare react as a dep or peer dep,Per 5 1 index js react is a dependency of prop types However does not list it as either a dependency or a peerDependency That makes it both an implicit dependency and one whose version compatibility is unchecked Could you add react as a peer dependency ideally over the entire range of React versions that prop types works with I'm particularly interested in if it works on 0 13 and 0 14 I would want the React peer dep to be 0 13 0 14 15 for example acdlite,,"sebmarkbage,acdlite,acdlite",2017-04-08 00:11:03,2017-04-08 00:54:11
PR,Point users to the npm page instead of the github project for prop types,It seems incorrect to point users to my fork of PropTypes since the npm releases are now based off source code in the react repo I have updated the readme for my project to reflect this fact but I saw that the documentation was still pointing to my repo and I think it would be better to point users directly to the npm page if not the source in the react repo itself,,aackerman,2017-04-08 03:00:58,2017-04-08 03:05:35
IS,Question hostParent vs rootNodeID,I'm curious what the hostParent and rootNodeID represent on the reactInternalInstance Also is there a method for getting a unique ID for a composite component like ReactNativeComponentTree getNodeFromInstance does with native components Or do composite components not have a unique ID Thus I would need to create a unique ID manually,,"gaearon,gaearon,gaearon,gaearon",2016-12-31 20:20:06,2017-04-08 03:56:34
PR,Fork ReactReconcileTransaction into ReactShallowReconcileTransaction,I think this might fix 9372 But I have not tested ReactReconcileTransaction is DOM dep so it did not get included into package I forked it and removed DOM specific code calls to ReactBrowserEventEmitter and ReactInputSelection,,"gaearon,bvaughn,bvaughn",2017-04-08 03:29:31,2017-04-08 04:04:16
PR,Build shallow renderer independently,Alternative strategy for which should not suffer from injection issues My concern here is I'm not sure what happens if components use react dom which is not deduplicated anymore but I guess any other solutions suffer from the same problem and we do not really interact with react dom in shallow tests anyway,,"gaearon,bvaughn,gaearon",2017-04-08 03:53:21,2017-04-08 04:06:48
IS,Cannot find module ' ReactReconcileTransaction' from 'ReactShallowRenderer js' in react test renderer,Do you want to request a feature or report a bug Bug What is the current behavior What is the expected behavior That ReactReconcileTransaction module is included in react test renderer package Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 1 If this is something relatively simple I would not mind making my first PR to React if given a nudge in the right direction I looked already in the grunt tasks for building the packages but nothing stood out,,"gaearon,bvaughn,bvaughn",2017-04-08 01:53:42,2017-04-08 04:36:45
IS,facebook messenger,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-04-08 10:55:30,2017-04-08 14:02:25
IS,How get parent DOM attributes in children by refs,I am understand what child mount first but i want get parent and span in parent width in ChildAnimated component i don t want add event listener from parent to resize and push it to state then pass as prop it to ChildAnimated and i don t want give parent or any in parent by document getElementById or querySelector i want get it from refs As example,,"bvaughn,bvaughn",2017-04-06 12:54:12,2017-04-08 16:17:31
IS,Question PropType deprecation warning,Do you want to request a feature or report a bug I saw the package for propTypes in my newsfeed this morning Is this a package that will be required to shut this warning off or is their a way to disable it if I'm not using propTypes On the initial render with a component designed with glamorous I received the following warning What is the current behavior screen shot 2017 04 08 at 12 04 32 pm Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"gaearon,gaearon",2017-04-08 17:17:58,2017-04-08 19:33:42
PR,Expose batchedUpdates on shallow renderer,I think this should help resolve issues with migration to react test renderer shallow in Turns out Enzyme relied on ReactDOM unstable batchedUpdates which stopped working with shallow renderer This is fixable if we expose an equivalent on shallow renderer itself,,gaearon,2017-04-08 21:35:23,2017-04-08 21:46:04
PR,Fix react addons create fragment package export,Fix the react addons create fragment package to properly exports the createReactFragment function as intended This package is currently exporting a function that returns the createReactFragment which is incorrect The package should be exporting the actual createReactFragment This fixes facebook react 9381,,"gaearon,gaearon",2017-04-08 21:41:50,2017-04-08 22:03:18
IS,Bug render before componentDidMount,How to reproduce Ubuntu 14 04 Chrome 57 React 15 5 3,,bvaughn,2017-04-08 18:06:34,2017-04-08 22:13:43
PR,Fixes for 15 5 addons,See for details,,"gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,gaearon,gaearon",2017-04-08 23:15:17,2017-04-09 03:01:36
IS,Incorrect export from react addons create fragment package,The react addons create fragment npm package v15 5 2 is not exporting the createReactFragment function as intended Instead it is exporting a function that returns the createReactFragment To reproduce Note that the React addons createFragment that comes with react with addons js is working as expected This bug only affects the npm package,,gaearon,2017-04-08 21:35:22,2017-04-09 03:28:35
PR,Amended implementation notes md with link to Dan Abramov is post describing difference between React components elements and instances,An understanding of this distinction is crucial in tracing through Implementation pseudocode and reading Dan is blogpost first may ease newcomers into understanding the implementation Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,aweary,2017-04-09 17:10:02,2017-04-09 19:37:42
IS,Warn for PropTypes that do not exist but do exist with a different case,We currently do not warn for properties that do not exist in the propTypes set I e we do not catch typos This is mostly a legacy artifact and there are many components out there that do not define their full set of props E g when spread is used Few components also define the children prop even though they use it Warning for all of these might be too much work initially However we can start small We can find missing properties that have corresponding properties with a different case and suggest that the developer use that instead This is essentially always a bug While it is technically possible to have the same property name with two or more different case it is considered bad practice to allow both It causes overhead to test for both in the diffing rendering It causes style guide issues where people have to pick which style to use It also makes it worth for tooling where search replace can easily miss less commonly used variants That is why React only allows a single case and ideally so should custom components,,"sebmarkbage,mxstbr,brigand,aweary,gaearon,aweary,gaearon",2016-03-01 02:25:23,2017-04-09 21:02:24
PR,Fixes 6153 Add case typechecking to provided props against propTypes,Grabs mismatched values compared to PropTypes can be used later to warn against props being provided that are not defined in PropTypes It then uses toLowerCase to find similar props and warn if there is a defined propType with the same composition but difference case as a prop passed on the element Warning follows the did you mean s type suggestions in other react warnings reactEurope hackathon,,"gaearon,gaearon,aweary,aweary,aweary,aweary",2016-06-01 09:53:30,2017-04-09 21:03:54
PR,Add case typo catching for prop types,We currently do not warn for properties that do not exist in the propTypes set I e we do not catch typos This is an attempt at fixing that This issue is at 6153,,"aweary,aweary,aweary",2016-09-10 22:41:05,2017-04-09 21:04:16
PR,Fix bug 1919,Added a warning when an array of PropTypes was supplied to as an argument to oneOf checker All PropType checkers now have a flag isReactTypeChecker that enables us to easily identify them later on,,"aweary,aweary,aweary",2016-11-12 16:07:27,2017-04-09 21:04:56
PR,PropTypes structures,8310,,aweary,2017-01-04 18:46:39,2017-04-09 21:11:14
IS,Feature request PropType name,Feature request Fill name attribute or add static toString method for all PropTypes For example btw Same feature implemented at tcomb lib,,"gaearon,gaearon,gaearon,aweary",2016-11-16 19:09:41,2017-04-09 21:11:22
PR,PropTypes type checking Add additional check to UnionType checker,PropTypes type checking Add additional check to UnionType checker to ensure only functions are used as argument of oneOfType This is especially handy to catch typos during PropType definition like for example The pull request will print a warning Invalid argument supplied to oneOfType expected an array containing check functions,,"aweary,aweary,aweary",2017-01-18 21:17:31,2017-04-09 21:11:39
PR,8955 Improve PropType warning and mention received prop type,I have added more detailed description for propTypes node PropTypeError now it provides name of actual type that was not passed validation Similar text is used for propTypes shape,,"aweary,aweary",2017-02-14 21:07:28,2017-04-09 21:12:03
PR,Fix Symbol to String conversion in ReactPropTypes oneOf,This PR addresses issues when using symbols in PropTypes oneOf 9181 1 The safe way to convert a Symbol into a String is to use String sym or sym toString Using template string interpolation ES6 or concatenation ES5 Babel throws a TypeError 2 The current warning does not include symbols because JSON stringify strips them A replacer is added to handle them This is done in the second commit so it can be easily reverted,,"aweary,aweary",2017-03-17 09:43:27,2017-04-09 21:12:24
IS,PropTypes oneOf relies upon stringification when using Symbols,Do you want to request a feature or report a bug Bug What is the current behavior React PropTypes oneOf prints a less than helpful error message when passed a Symbol which is not in the target value set Failed prop type Cannot convert a symbol to a string If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar 0 What is the expected behavior oneOf prints the same or similar helpful error message that other primitive types get Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2 macOS 10 12 3 Safari 10 0 3 and Chrome 57 0 2987 98 Never worked,,aweary,2017-03-15 08:06:08,2017-04-09 21:12:30
IS,Rename PropTypes func to Proptypes function and deprecate PropTypes func,Do you want to request a feature or report a bug Bug Inconsistent naming Leads to poor user experience for developers What is the current behavior Using PropTypes function in the propTypes object for a React class produces a warning or error Cannot read property 'isRequired' of undefined You must use PropTypes Func Every time I'm typing PropTypes I have to look up whether it is 'func' or 'function ' and sometimes that makes me wonder if it is 'object' or 'obj' too None of the other PropTypes names are truncated This is a poor user experience If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template MyReactClass propTypes someFunction PropTypes function isRequired What is the expected behavior The above works with no errors or warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 2 and previous,,"gaearon,gaearon,aweary,aweary,aweary",2017-02-08 01:01:39,2017-04-09 21:14:02
IS,React PropTypes does not handle undefined very well,The example shows Sometimes we will make a typo mistake e g enter PropTypes boolean not PropTypes bool PropTypes fun not PropTypes func and then the result are the same with the pic above This will make us very confused And sometimes will spend us 2 or more minutes to find the typo because at first we will check the code when we first see the error oh god I do not use PropTypes func why the error says it should be a func and then check it again and again and finally find that it is just a typo and react will treat the undefined as a func to check I think this is not very friendly and the doc does not mention Maybe it could be improved,,"aweary,gaearon",2017-02-27 13:19:31,2017-04-09 21:14:14
IS,Feature request PropTypes element,Currently checking for required prop s within passed children need to be implemented with the props validator function or with less than ideal PropTypes shape prop PropTypes XXX isRequired I would suggest the following,,aweary,2017-03-17 23:11:42,2017-04-09 21:14:21
IS,Improve PropType warning and mention received prop type,The warning Failed prop type Invalid prop children supplied to Div expected a ReactNode should include the actual type that was detected as invalid Something like Failed prop type Invalid prop children supplied to Div expected a ReactNode but got String,,aweary,2017-02-08 10:28:30,2017-04-09 23:29:35
PR,v15 5 Deprecate react addons update,This PR is for adding deprecation warnings for react addons update which is listed in 8854,,"koba04,acdlite,koba04,gaearon,koba04",2017-02-08 04:44:02,2017-04-10 01:52:55
PR,v15 5 Deprecate ReactTransitionGroup and ReactCSSTransitionGroup,This PR is for adding deprecation warnings for ReactTransitionGroup and ReactCSSTransitionGroup which is listed in 8854,,"koba04,acdlite",2017-02-07 05:43:12,2017-04-10 01:53:14
PR,v16 Remove duplications in ReactPerf,ReactPerl printDOM and ReactPerf getMeasurementsSummaryMap are deprecated from v15 new deprecations introduced with a warning This PR is for removing them in v16,,koba04,2017-02-07 05:41:20,2017-04-10 01:55:59
PR,v16 Remove the build settings related ReactLink,This PR is additional works for 8165 I guess react addons linked state mixin and react linked input does not work in v16 So it seems to be not necessary,,koba04,2017-02-13 06:26:16,2017-04-10 01:56:07
PR,Add support all lifecycle methods to ShallowRender,This PR has a breaking change Supporting all lifecycle methods in ShallowRender merged at 4993 but reverted at 5394 The reason why the PR is reverted is that it did not support string refs This PR is fixed it Currently ShallowRender is replacing renderValidatedComponent with renderValidatedComponentWithoutOwnerOrContext which it seems to be a little hacky I think it is better to assign null to onwer filed,,"koba04,koba04,koba04",2016-10-07 13:08:03,2017-04-10 01:56:35
IS,Caret misplaced after preventDefault in onBeforeInput,Do you want to request a feature or report a bug BUG What is the current behavior When using e preventDefault to omit some emoji input from MacOS is emoji picker the caret still moving as if the character already been input If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem apr 10 2017 14 44 06 As we can see from the gif I prevent everything in onBeforeInput I'm trying to insert an emoji using MacOS is emoji picker The caret then moved to the wrong position This issue is not only happen to contentEditable element but also apply to input element as well What is the expected behavior Caret should stay still if the input being blocked in onBeforeInput Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested react 15 3 and above Chrome on MacOS is affected,,aweary,2017-04-10 02:51:16,2017-04-10 15:34:40
IS,Ref is not passed through a HOC,Do you want to request a feature or report a bug Feature What is the current behavior The parent component of a child component wrapped in a HOC cannot assign a ref attribute to the child component The ref attribute instead refers to the HOC In order for the parent component to reference the child component it must use some of the below popular workarounds onRef prop innerRef prop getInstance func What is the expected behavior In accordance with the decorator pattern a child wrapped with a HOC should not be less accessible than a child not wrapped with a HOC It is expected that the ref attribute pass through the HOC,,aweary,2017-04-06 00:45:19,2017-04-10 15:38:03
PR,refactor shouldPrecacheNode Remove unnecessary boolean,Simplify the boolean expression Associativity still holds Less code too Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-10 19:41:12,2017-04-10 20:19:49
PR,Fix ReactARTStack bundles to not include DOM Stack inside,Only affects our internal FB bundles,,"gaearon,gaearon,gaearon,acdlite,trueadm,acdlite",2017-04-10 20:31:26,2017-04-10 21:01:57
PR,Delete examples dir from codebase overview,Removes doc about the folder that no longer exists,,"maciej-ka,gaearon",2017-04-10 21:10:53,2017-04-10 21:26:10
PR,Remove createClass,Tests that rely on replaceState or isMounted use updater enqueueReplaceState and updater isMounted instead Wo not be released until 16 In 15 5 we will deprecate and point users to an external module react create class After than we will continue to warn but it will no longer be accessible via the main React package,,"acdlite,gaearon,bvaughn,aweary,bvaughn,acdlite,gaearon,nhunzaker,kentcdodds,acdlite,sophiebits,acdlite,acdlite,sophiebits,acdlite,sophiebits,acdlite,sophiebits,bvaughn,acdlite,bvaughn,sophiebits,acdlite,bvaughn,acdlite,bvaughn,gaearon,bvaughn,acdlite,gaearon,acdlite,acdlite,acdlite,bvaughn,acdlite,bvaughn,gaearon,acdlite,acdlite,acdlite,sophiebits,acdlite,acdlite,acdlite,bvaughn",2017-03-22 01:47:15,2017-04-11 00:22:27
PR,Refactor React CloneElement function,I found some things that could be refactored which might improves the readability of the code x Moved the variable declared on top of the function to where it is being used Explanation I realised that the variable propName is being used just for an intermediate value of a for in loop 30 lines below from where it is declared x Using spread operator to handle the rest arguments for children to avoid reconstructing the rest argument logic by ourself,,gaearon,2017-04-09 03:40:46,2017-04-11 13:02:42
PR,Update tutorial md,,,,2017-04-11 19:40:27,2017-04-11 20:41:11
IS,Comments Reactjs,i was use so many way to comments my code in js file it not run the comment code but in website i still see my comments code it just show code like text can i not see my comment in website captbture capture,,"aweary,gaearon",2017-04-11 17:44:57,2017-04-11 20:52:47
PR,15 5 bump proptypes version,To fix a breaking change which was not supposed to be included yet we reverted the change in prop types v15 5 7 and are now pulling that into React Related to fixing,,"flarnie,flarnie,bvaughn,gaearon,gaearon",2017-04-11 16:22:08,2017-04-11 20:54:41
PR,Fix ignore patterns in package json,,,sophiebits,2017-04-11 20:55:46,2017-04-11 20:58:14
PR,Fix minor typo in lifting state up md,,,gaearon,2017-04-11 20:36:35,2017-04-11 21:03:53
PR,createClass PropTypes checkPropTypes warnings,This PR is prep work for a new 16 alpha release that temporarily re adds getters with deprecation warnings for React PropTypes React checkPropTypes and React createClass I'm hoping to get this new alpha cherry picked into RN 44 I have broken this PR into multiple commits to make it easier to review 08bd020 Replace all references to React PropTypes with prop types to avoid triggering our own warning message ef5b5c6 Removed several references to React createClass that appeared after rebasing this branch reviewed by 524ce20 Added getters for createClass and PropTypes to the main React isomorphic object behind one time warning messages reviewed by db48f54 Fixed Rollup bundles to inline 'prop types' and 'create react class' for UMD builds only reviewed by cf49cfd Updated tests passing txt to remove tests that were deleted in this branch d34109a Responses to PR feedback from Added package json dependencies to packages react and packages react dom Renamed a var Expanded on an inline comment 488c8d2 Added warning for moved package to React checkPropTypes accessor too and updated build script 83bcb29 Wordsmithing for deprecation notices added fb me links afdc9d2 Tweaked legacy module inlining to remove order of deps constraint d1348b9 Removed FlowFixMe 7dbc3e7 More wordsmithing of deprecation notices based on Dan is feedback,,"bvaughn,sophiebits,sophiebits,sophiebits,sophiebits,bvaughn,bvaughn,bvaughn,bvaughn,trueadm,bvaughn,acdlite,acdlite,acdlite,acdlite,gaearon,bvaughn,gaearon,trueadm,trueadm,bvaughn,bvaughn,gaearon,gaearon,bvaughn,bvaughn,bvaughn,flarnie,bvaughn,bvaughn",2017-04-11 00:38:27,2017-04-11 21:28:04
PR,Update typechecking with proptypes md,This updates the documentation for type checking with PropTypes removing the usage of React PropTypes in favor of the NPM package,,"trueadm,aweary,aweary,gaearon,gaearon",2017-04-10 13:44:34,2017-04-11 23:04:39
IS,When do we make context formal or find an alternative,Now we are moving to React 16 I'm surprised that there are zero change in context and it remains experimental and possibly break in the future Libraries like react redux and react router heavily depends on using context because it is experimental shouldCompomentUpdate and pureComponent will not check context at all That causes some extra work to be done just to make react router working with react redux like you have to wrap every component with withRouter to map context to props And to me it is not beautiful Can we formally accept context as the solution and let API take it into consideration or just find a better solution in the next version of React,,gaearon,2017-04-12 06:37:14,2017-04-12 11:11:09
IS,React cannot be compiled with latest Google Closure Compiler,When trying to compile React 15 3 1 with the latest Closure Compiler the following output is produced,,"gaearon,gaearon,Shastel,gaearon,Shastel,gaearon,gaearon,gaearon,Shastel,aweary,gaearon,gaearon,gaearon,Shastel,gaearon,Shastel,gaearon,gaearon,gaearon,gaearon",2016-08-24 09:12:41,2017-04-12 13:28:11
PR,Make React 0 14 compatible with prop types,Never thought I would go back to 0 14 but here we are It is reasonable for standalone prop types package to support both 0 14 and 15 to ease the migration effort for library authors So let is release React 0 14 9 that understands standalone prop types by passing the secret Also I hope this does not get me fired,,"gaearon,gaearon",2017-04-12 15:23:57,2017-04-12 15:32:52
PR,Refractor docs to indicate that state set to props in constructor will not recieve the updated props,Fix for issue Have updated the docs to indicate that state set with props in constructor will not receive the updated props Also updated the line if you know what you are doing to give a better picture of what will happen by setting state to props Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"hanumanthan,gaearon",2017-04-11 17:11:57,2017-04-12 23:56:22
IS,Please stay PropTypes in lib,Subj vary many packages use it and very very many dependencies or create symlink in lib to 'prop types' package,,gaearon,2017-04-13 12:13:12,2017-04-13 13:11:10
PR,Fix the proptypes deprecation warning url on the Do not Call PropTypes Warning doc page,The Do not Call PropTypes Warning doc page has a warning about the 15 5 deprecation pointing to an old proptypes repository This PR updates the link to the same link on the main PropTypes doc page,,gaearon,2017-04-13 13:41:01,2017-04-13 14:15:34
IS,Invariant Violation when rendering using both ReactDOM and ReactDOMServer,Using both ReactDOM render and ReactDOMServer render w causes an invariant violation in React 15 4 1 See console on There is Notice that I render completely different components with each of the render methods Some criteria have to be met for the warning to show like at least two nested components To me it seems like the ReactDOMServer is messing with itemMap in the regular React and the IDs of components does not match,,"aweary,gaearon,gaearon,gaearon",2016-12-02 22:08:16,2017-04-13 15:38:16
PR,Update addons test utils md,does work Tested both in a create react app v0 9 5 and creating a new project and installing react dom 15 5 3,,gaearon,2017-04-09 00:16:57,2017-04-13 16:20:44
PR,Check displayName when comparing trees in test utils,The core reason of this change is that src test ReactComponentTreeTestUtils js 1 does not check displayName when comparing two component trees It means that some tests are irrelevant For example I can change this line 2 from Unknown to blablabla and test will pass When I added check of displayName and runned tests I found two other problems Problem 1 In several tests we clear component name 3 as I fixed it by removing this check totally I seems better to always return string from getDisplayName 1 L28 2 L281 3 L354 4 L648 5 L361,,gaearon,2017-04-08 09:06:04,2017-04-13 16:27:10
PR,Update proptypes doc,Not sure where else this might be but just noticed it while I was reading,,"gaearon,aweary,gaearon",2017-04-10 12:29:28,2017-04-13 17:11:23
PR,Docs Clarification of setState behavior,setState is a frequent source of confusion for people new to React and I believe part of that is due to minimization of the impact of the asynchronous behavior of setState in the documentation This revision is an attempt to clarify that behavior For motivation and justification see setState Gate,,"aweary,aweary,aweary,aweary,aweary,acdlite,acdlite,gaearon,gaearon,acdlite,gaearon",2017-04-04 21:07:18,2017-04-13 18:13:56
IS,Confusingly structured Installation section,Hey guys I want to bring out some issue in docs Install section This happened to me and one of my colleagues and I guess others may get confused too For example I want to use create react app approach for installing react This means I need to follow ONLY this section right creating a single page application But after my colleague followed that he then thought had do follow things like this too enabling es6 and jsx In other words the installation docs does not say that if you follow the first link I gave for example above following second link is not necessary as create react app includes Babel for example Is not it I think the doc has to mention that it is an OR approach either use this section or this etc,,"gaearon,gaearon",2017-03-28 19:44:24,2017-04-13 19:54:13
PR,Add tabs to installation page 9275 9277,This adds tabs for create react app and existing apps to the installation section of the docs The tab implementation is a simplified version of React Native is installation page Fixes 9275,,"gaearon,gaearon",2017-04-11 09:44:43,2017-04-13 19:54:13
PR,Update installation md make the steps more clear,I tried to make it more clear that there are two popular ways of starting up with React my solution is not sophisticated by any means just tried to propose a simple temporary solution that could do the trick My PR is a reply to this issue,,"aweary,gaearon,gaearon",2017-03-29 14:53:50,2017-04-13 19:54:54
IS,DOCS The new tabs on installation page does not work with link,Opening the link adding react to an existing application displays the Try React tab,,gaearon,2017-04-13 20:06:26,2017-04-13 20:51:20
PR,Switch Installation to a tab when hash is present,Almost identical to how RN does it Fixes This does not update the hash as you switch the tabs It just changes the initial tab if you already have a hash Happy to take PRs for more comprehensive solutions,,gaearon,2017-04-13 20:50:58,2017-04-13 20:51:20
PR,Updated recommended links for installation in readme,Updated the recommended url for installation in readme file Found this issue when working on Please have a look Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"abhaynikam,gaearon",2017-04-13 21:33:52,2017-04-13 22:15:13
PR,Fix 3596 Add warning for components not following proper case convention,This adds a warning for when components are mounted with lower case letters rather than uppercase convention used by react React is JSX uses the upper vs lower case convention to distinguish between local component classes and HTML tags Docs It should however NOT throw warnings for valid components as stated in the 3596 issue dicussion The warning is only triggered on DEV environments The warning logic checks the following component being rendered is instanceof HTMLUnknownElement component is not a whitelisted supported html tag like SVG etc which are instances of HTMLUnknownElement React actually already has a list of these supported tags so we just checked against it ReactDOMFactories js component does not contain a hyphen or space character Valid custom HTML elements must contain hyphen characters so we should not warn about it See spec h note2 also whitespace in component tag will throw its own error thanks to the sanitize tag tests code already in react Let me know if I missed something obvious Thanks,,"aweary,aweary,jimfb,jimfb,jimfb,jimfb,zpao,zpao,zpao,aweary,aweary,gaearon",2016-06-20 19:15:57,2017-04-14 00:35:39
PR,To change the order of two paragraphs,After reading a piece of code it was told that the code would be warned This reading experience was less friendly to the beginner The first impression was important so it was more appropriate to show the correct code firstly Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-06 13:59:09,2017-04-14 10:26:16
IS,A beginner is guide to exploring the source code,I have been using React for a while now and I want to be able to contribute to the project But I can not seem to figure out where to start or which file to read first etc It would be great if you could incorporate a beginner is guide right in this issue which could be later sent to the docs or as a special section in the docs,,"abhisheksoni27,gaearon,abhisheksoni27,gaearon,abhisheksoni27",2017-04-14 06:59:45,2017-04-14 11:50:58
PR,Updated link for good first bug is in README md,Hey The link for Good First Bug in README is not correct With this PR I intend to update that,,acdlite,2017-03-28 10:10:33,2017-04-14 15:56:39
PR,Updated the Good First Bug section in readme,Good First Bug label was deleted and list URL is showing nothing Updated the URL to Difficulty beginner and some content as well According to the code conventions updated the example Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"abhaynikam,gaearon,abhaynikam,aweary,abhaynikam",2017-04-14 05:29:16,2017-04-14 16:02:08
PR,Add warning if rendering and HTMLUnknownElement,Fixes 3726,,"arshabh,syranide,syranide,syranide,aweary,aweary,arshabh,syranide,arshabh,syranide,arshabh,arshabh,arshabh,arshabh,aweary,aweary,sophiebits,gaearon,aweary,arshabh,syranide,arshabh,aweary,gaearon",2017-03-12 21:15:42,2017-04-14 16:30:39
PR,Use charAt instead of string indexing,Related This replaces the event 0 character access with charAt We are currently trying to use react with PrinceXML which does not have character access by index implemented causing a failure to render,,gaearon,2017-04-13 21:20:09,2017-04-14 17:42:00
PR,Added react dom test utils bundle,react addons test utils was moved to react dom test utils with the release of 15 5 This is my attempt to add a new bundle for 16 alpha in the same place I did a quick Jest test of the generated bundle and it seemed ok but I'm still learning my way around the new build tools I also removed some indirection in the build bundling process for checkPropTypes That is now imported directly from prop types checkPropTypes and the src isomorphic classic types checkPropTypes js forwarding file has been deleted I'm new to the bundles but I tested my build changes using fixtures dom and fixtures packaging and I ran some simple Jest tests against the result of the new test util target Seemed okay,,"bvaughn,gaearon,bvaughn,gaearon,gaearon,gaearon,bvaughn,bvaughn,gaearon,bvaughn,bvaughn",2017-04-13 00:26:59,2017-04-14 22:20:40
PR,Warn for missing keys in fragments,tldr Adds a warning for missing keys in array fragments The warning should probably have more detail but that might require more refactoring See commit message 'Add initial warning for missing keys in fragments' Test Plan Manual testing using new fixture fixtures fiber fragments index html Added unit test ReactChildFiber test js Updated other unit tests so that all tests pass when running npm run test and the same 8 which fail on master are the only failing tests when running REACT DOM JEST USE FIBER 1 npm run test,,"flarnie,flarnie,acdlite,acdlite,acdlite,sophiebits,sophiebits,acdlite,aweary,gaearon,aweary,flarnie,flarnie,flarnie,acdlite,flarnie,trueadm,gaearon,sophiebits,gaearon,flarnie",2017-04-13 16:39:04,2017-04-14 23:36:33
PR,Add component stack to uncontrolled to controlled warning,,,"sophiebits,bvaughn,sophiebits",2017-04-13 04:26:46,2017-04-14 23:57:47
PR,Add component stack to ReactControlledValuePropTypes,,,"sophiebits,gaearon,sophiebits,aweary,sophiebits,gaearon",2017-04-14 23:58:37,2017-04-15 02:50:44
IS,Server use the function of renderToString but the images link have been changed How to resolve,I use server rendering but output string is image is not same befor the link changed to a hash link the source Out string is different hope someone have some problem already resolved and tell me how to resolve this bug very thanks,,,2017-04-14 03:36:33,2017-04-15 11:20:56
IS,How to change rendered html of component outside the component,Is there any method to override the rendered html of an component outside the component class,,gaearon,2017-04-15 11:26:03,2017-04-15 12:14:12
PR,Add basic bundle type filters to Rollup build script,While working on the new react dom test utils and react test renderer shallow bundles I frequently found myself wanting to run the build command on only a subset of the bundles I just wanted to test some bundle config changes without rebuilding the entire suite This PR adds some basic filters that I think might be useful for others when iterating on the builds When filters are used results size will still be displayed but the results json file will not be updated This will prevent someone from accidentally deleting some of the stats locally,,"bvaughn,gaearon,bvaughn",2017-04-15 03:00:18,2017-04-15 15:32:21
PR,Make nodeType into constant for readability and reuse,HTML nodeTypes are represented by integers Currently we are separately defining constants for those integers in a number of files resulting in duplicates In some cases we use them as integers which is confusing to the readers Therefore I propose that we make a module that provides a set of well named constants for HTML nodeType values I included deprecated nodeType values for good measure,,"aweary,aweary,syranide,trueadm,trueadm,trueadm",2017-03-05 00:08:56,2017-04-15 17:37:13
IS,Tutorial please clarify use of spread properties,This part of the tutorial is confusing Data change without mutation The end result is the same but by not mutating or changing the underlying data directly we now have an added benefit that can help us increase component and overall application performance It does not appear to match up with either JSX is spread operator the JS Spread operator The closest match I can find is here Shallow Clone excluding prototype let aClone a,,"rthor,gaearon,rthor,rthor",2016-11-02 02:08:11,2017-04-16 00:52:25
IS,Documentation missing mention to refs,Do you want to request a feature or report a bug A bug What is the current behavior The Thinking in React document in the Quickstart section of the documentation contains some code that uses refs but refs are not mentioned in the text Refs are used in the JS code in this pen 0 at lines 71 and 78 What is the expected behavior Refs should be explained in Thinking in React or in an earlier section of the Quickstart section of the documentation so that the reader is able to follow along Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 4 0 The issue is live at this URL,,"gaearon,lacker,hanumanthan,gaearon",2016-11-22 17:51:48,2017-04-16 11:17:38
IS,Not clear how setState in this case works,Docs do not make following clear Imagine I have What will be output now,,"hanumanthan,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,hanumanthan,gaearon,gaearon",2017-04-15 17:06:09,2017-04-16 11:22:23
PR,Warn for keys in fragments second approach,If you return an array with React components that do not have the 'key' prop set we now throw this warning This is an improvement on the approach originally taken in Changes Not adding a fixture this time Using getCurrentFiberStackAddendum instead of trying to use old getCurrentStackAddendum Leave ReactCurrentOwner and ReactComponentTreeHook in isomorphic Test Plan Added test to ReactChildren test Manually tested via fixture that was not committed,,"flarnie,aweary,aweary,aweary,gaearon,aweary,aweary,sophiebits,flarnie,flarnie,flarnie,flarnie,flarnie",2017-04-14 23:36:02,2017-04-16 23:25:58
PR,eslint warning fixed for no primitive constructors test,Hey I was seeing a small warning in yarn lint With this PR I intend to fix that I am just adding eslint disable line to the necessary line,,,2017-03-28 10:06:51,2017-04-17 06:08:29
PR,A beginners guide to setup development environment,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-16 21:48:03,2017-04-18 12:33:30
PR,Only attempt to clear measures if we created the measure,This fixes an issue where if we decided not to create a measurement we would clear ALL measurements from the performance entry buffer due to passing undefined as the entry name The original bug here means any performance entries the user might have in their application will be inadvertently nuked For reference see the performance clearMeasures spec dom performance clearmeasures Todo Test s incoming would love some help in finding where to add such a test,,gaearon,2017-04-18 13:07:04,2017-04-18 13:31:47
PR,Updated installation doc for showing active tabs,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"abhaynikam,abhaynikam,gaearon",2017-04-13 21:03:07,2017-04-18 13:39:15
PR,Documentation Impreove the react component section of doc,9304,,"gaearon,aweary,aweary,gaearon",2017-04-06 03:11:51,2017-04-18 13:42:41
PR,Change target to currentTarget in documentation for React forms,Because currentTarget is more appropriate and it makes TypeScript typing works better and issuecomment 256045682 Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"aweary,gaearon",2017-03-29 15:47:09,2017-04-18 13:47:08
PR,Unique headings for linking purposes,As mentioned here issuecomment 255522350 Previously two headings in the docs 'JSX in Depth' were both 'Javascript Expressions' This made linking impossible The headings are now 'Javascript Expressions as Props' and 'Javascript Expressions as Children',,gaearon,2017-03-26 11:04:05,2017-04-18 13:47:45
PR,add bullet point for testing in tutorial 9248,9248 Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"bernard-lin,gaearon,bernard-lin",2017-03-24 16:41:19,2017-04-18 13:59:51
IS,Add Jest to Tic Tac Toe tutorial,Do you want to request a feature or report a bug Would there be any interest in adding a Jest section to the Tic Tac Toe tutorial doc I'm currently working on my own tutorial based on Eric is code so figured I would ask If it is beyond the scope of React docs it could also be added as another bullet point in the Wrapping Up section,,"bernard-lin,aweary,bernard-lin,gaearon,aweary,gaearon,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,bernard-lin,gaearon",2017-03-24 06:15:51,2017-04-18 14:00:20
PR,fixed warning of exceeding maximum line length,Fixed Eslint test Warning eslint rules tests no primitive constructors test js 37 1 warning Line 37 exceeds the maximum line length of 120 max length Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-03-17 01:45:17,2017-04-18 14:24:50
PR,Update jsx in depth md,Line 9 is not changed Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,gaearon,2017-03-15 00:56:15,2017-04-18 14:29:18
PR,Closes 9068 Enhance warning message when a PropType is not correct,Before submitting a pull request please make sure the following is done x 1 Fork the repository and create your branch from master x 2 If you have added code that should be tested add tests n a 3 If you have changed APIs update the documentation x 4 Ensure the test suite passes npm test Master did not lint 5 Make sure your code lints npm run lint x 6 Run the Flow typechecks npm run flow x 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes x 8 If you have not already complete the CLA,,gaearon,2017-03-08 23:31:43,2017-04-18 14:31:32
PR,Emphasize that Welcome is not a constructor,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Run the Flow typechecks npm run flow 7 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 8 If you have not already complete the CLA,,"gaearon,gaearon,gaearon,gaearon",2017-03-06 00:14:26,2017-04-18 14:34:13
PR,Add gzip size badge,,,"gaearon,gaearon",2017-03-15 00:45:06,2017-04-18 14:35:11
PR,Sort out conferences by date,,,gaearon,2017-03-14 01:16:52,2017-04-18 14:38:20
PR,Updated link and text for beginner friendly in how to contribute,Hey I am trying to update the necessary links for beginner friendly bugs in gh pages cc,,"gaearon,aweary,gaearon",2017-03-29 18:51:11,2017-04-18 14:45:50
PR,Lift state up Updating the documentation to mention that onClick is a synthetic event handler,Fix the documentation issue raised at,,"hanumanthan,aweary,aweary,hanumanthan,hanumanthan,hanumanthan,gaearon,gaearon",2017-04-14 03:32:30,2017-04-18 15:27:46
IS,React prop types warnings,Hey I'm getting some errors after migrating to react 15 Warning Failed Context Types Calling PropTypes validators directly is not supported by the prop types package Use PropTypes checkPropTypes to call them Read more at Is there any chance to add some indication where the error comes from file name maybe I have cleaned the entire project from React PropTypes and I do not use any other propType validators Thanks,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-04-18 12:53:50,2017-04-18 15:29:22
IS,Misleading wording in Documentation,Under Lifting State Up lifting state up The onClick does not have any special meaning here but it is popular to name handler props starting with on and their implementations with handle is misleading because it is special and references the SyntheticEvent handlers Instead the documentation should give a brief description of why onClick was used and reference the section on SyntheticEvent to allow the users to see available handlers other than onClick,,"gaearon,gaearon",2017-03-09 17:30:48,2017-04-18 15:37:15
PR,Update tutorial md,Specified which onClick is being referred to The onClick in Square is render has to be named onClick,,"gaearon,gaearon,gaearon",2017-04-11 20:20:42,2017-04-18 15:38:03
PR,Fixed grammar,,,"abhisheksoni27,gaearon,abhisheksoni27,gaearon",2017-04-14 18:34:43,2017-04-18 15:38:39
PR,Added codepen link,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"gaearon,gaearon",2017-04-15 02:19:58,2017-04-18 15:39:13
PR,Tutorial ES6 installation and button closing tag,Just some minor changes to the tutorial Refs I will see if I can come up with solutions to the remaining issues but the changes will likely be controversial so I will send them as separate PRs feel free to work on them because I do not know when I will get to it At worst we get more ideas to pick from Btw getting these files as dirty in git which I did not commit,,"brigand,brigand,gaearon",2017-04-16 01:49:27,2017-04-18 16:34:43
PR,FIX Move CRA build info under it is tab page,After splitting the steps for the installation options into tab pages the build info for Create React App remained under the 'Adding React to an Existing Application' tab page here create react app This PR moves it under the appropriate tab page,,gaearon,2017-04-18 16:46:40,2017-04-18 17:17:29
PR,Fix errors in React Native children management,Support using appendChild to move an existing child Fiber does this but we were assuming all children here were new Yoga throws if you insert a child that already has a parent Calculate beforeChildIndex after removing old child previously off by one when the new position is later than the old position,,"sophiebits,sophiebits,sophiebits,gaearon",2017-04-18 04:09:48,2017-04-19 00:31:33
IS,Maybe could use more accurate description of componentWillMount,Current doc about componentWillMount componentwillmount says that It is called before render therefore setting state in this method will not trigger a re rendering I thinks it would be better if we say It is called before render therefore setting state directly in this method will not trigger a re rendering because we batch it but setting state indirectly asynchronous will trigger a re rendering such as setTimeout this setState,,aweary,2017-03-31 14:13:20,2017-04-19 08:22:16
PR,Reorganize the following along instructions,This tries to reorganize the instructions in the following along section to be a bit simpler,,gaearon,2017-04-18 19:10:36,2017-04-19 11:00:16
PR,Fixing the instantiation of customized builtin elements related to custom elements,The custom element spec custom elements combined with the document createElement dom document createelement spec explain that in order to create a DOM element as a customized built in element customized built in element you should call document createElement with an object as the second parameter Customized builtin elements are a type of custom element that allow you to extend native DOM elements However React currently provides the second parameter to document createElement as a string instead of an object As far as I can tell that is just a bug I am not sure of the full history of the custom elements spec and so it might be possible that the spec used to say the second argument to createElement should be a string I'm also not sure if anybody is depending on the behavior being like it is right now or if this change would be considered a breaking change or not for React My thoughts are that it is a bug fix but I may be lacking some context here,,gaearon,2017-03-31 20:54:29,2017-04-19 11:07:16
PR,Docs Add accessibility to tabs in installation documentation,For your consideration After seeing the mention of the awesome addition of tabs in the docs I added some accessibility features so that all users will be able to use these tabs easily,,"AlmeroSteyn,AlmeroSteyn,gaearon,AlmeroSteyn,AlmeroSteyn,gaearon,gaearon,AlmeroSteyn,gaearon",2017-04-14 10:56:22,2017-04-19 11:31:39
PR,Warn for keys in fragments third approach,Even though it is ugly to duplicate nearly the same code that we have in ReactElementValidator L93 L127 I think it is less ugly than the version I came up with when trying to pull out the shared logic Passing multiple 'printErrorMessage' callbacks into the 'warnForInvalidKey' function seems awkward and unintuitive Simpler to keep all the logic for throwing the warning in the same place Note that this is an alternative to,,"flarnie,sophiebits,sophiebits,sophiebits,flarnie,flarnie,flarnie,sophiebits,flarnie,flarnie,aweary,flarnie,flarnie,bvaughn,sophiebits",2017-04-16 22:06:20,2017-04-19 15:05:05
IS,split the doc from React repository,Do you want to request a feature or report a bug feature What is the current behavior documentation is tightly coupled with the React repository What is the expected behavior There are many pros to keep the doc in the repo But when I git clone react I discovered the project is so HUGE lead to much slower when I cloned and forked image The docs folder have the 50M size and the git folder have the 113M because of the docs i think And I just want the src folder which only have the 3 5M There also are some project like vue webpack to split the doc from repository itself,,"monkindey,monkindey,gaearon,monkindey,monkindey,gaearon",2017-02-28 10:24:06,2017-04-19 15:34:28
PR,Fix CI failures in master,Fix some breakage that occurred in master after 9449 was merged This is just a bandaid fix so CI stops failing I left a TODO comment for us to follow up on,,"bvaughn,gaearon,bvaughn,vjeux,bvaughn,gaearon,vjeux,flarnie",2017-04-19 15:52:52,2017-04-19 15:59:41
PR,Docs Installation Fixed tabs responsive layout,gaearon I fixed the tabs responsive styling At the same time I made the tabs look more like tabs for the full layout with it breaking to a stacked layout at the 960px breakpoint used to stack the main navbar of the site What do you think,,"AlmeroSteyn,gaearon,AlmeroSteyn",2017-04-19 16:32:21,2017-04-19 17:21:55
PR,Very small changes,Added link about createElement note about React Component,,"gaearon,gaearon",2017-04-19 16:42:56,2017-04-19 17:45:14
IS,Default Props not set through multiple inheritance,If this belongs somewhere else like babel is issues then I will close and repost there Do you want to request a feature or report a bug Possible bug What is the current behavior When extending a class that extends React Component default props are not set in IE 9 or 10 causing some 3rd party components to throw errors In this case Select is made using React createClass The specific issue with this one is that the props inputProps on Select are not being set default to an object so the error cannot read property X of undefined is being thrown Setting the prop manually to an empty object on the TetherSelect fixes this error Link to line where default props are set L140 What is the expected behavior The default props should be set Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested with React 15 4 2 This only effects IE 10 Would ideally have this working in both IE 9 and 10,,"gaearon,gaearon",2017-04-19 18:21:01,2017-04-19 18:47:45
PR,Uncomment invariant in UIManager mock,,,sophiebits,2017-04-19 23:25:57,2017-04-19 23:28:59
PR,Shallow renderer and test utils bundles,Adds new bundles introduced with React 15 5 release to master and 16 alpha react dom test utils This new bundle contains what used to be react addons test utils This bundle shares things from react dom rather than duplicates them A temporary createRenderer method has been left behind as a way to access the new shallow renderer This is for the ReactNative release cycle only and should be going away before the final release react test renderer shallow This new shallow renderer is almost entirely stand alone in that it does not use the React reconciler or scheduler The only touch points are ReactElement and prop context validation This renderer is stack and fiber compatible PS I used SECRET INTERNALS please do not fire me,,"bvaughn,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,koba04,bvaughn,koba04,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn,bvaughn,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,koba04,bvaughn,koba04,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,koba04,bvaughn,bvaughn,gaearon,bvaughn,bvaughn,koba04,bvaughn,gaearon,gaearon,gaearon",2017-04-14 01:42:29,2017-04-19 23:45:32
IS,When will react fiber be officially released,We want to start a new project We did POC for about a month on choice of frameworks We chose React for building our application So what is the plan on officially releasing React fiber because we dont want to be doomed,,"gaearon,slorber,gaearon",2017-04-20 07:07:13,2017-04-20 09:04:40
PR,Docs Installation Fix tabs responsive layout Resubmit,gaearon Here is a clean PR From old PR I fixed the tabs responsive styling At the same time I made the tabs look more like tabs for the full layout with it breaking to a stacked layout at the 960px breakpoint used to stack the main navbar of the site What do you think,,"AlmeroSteyn,gaearon,AlmeroSteyn,gaearon,AlmeroSteyn",2017-04-19 17:26:56,2017-04-20 10:49:49
IS,How to render object with custom toString,I'm implementing a i18n library and would like to render a object with custom toString like this But got the error invariant js 44 Uncaught Error Objects are not valid as a React child found xxx If you meant to render a collection of children use an array instead or wrap the object using createFragment object from the React add ons Check the render method of App at invariant invariant js 44 Does anyone know if there is any method to do this,,"bvaughn,gaearon,bvaughn,gaearon,bvaughn,aweary,aweary,bvaughn,aweary,bvaughn,aweary,bvaughn",2017-04-20 16:19:10,2017-04-20 16:30:07
PR,Add component stack to invalid object child error,28 likes,,sophiebits,2017-04-13 04:13:29,2017-04-20 16:49:47
PR,Prettier 1 2,,,sophiebits,2017-04-19 23:35:50,2017-04-20 18:18:34
PR,Adds CSS Grid properties to list of unitless numbers,Adds the following CSS Grid properties to the list of unitless numbers gridColumnStart gridColumnEnd gridColumnSpan ie ms only gridRowStart gridRowEnd gridRowSpan ie ms only Without these values in the list the code appends a px which is not valid for these properties,,"gaearon,flarnie",2017-03-15 15:33:48,2017-04-20 18:20:15
PR,Updated PropTypes test to work with newer prop types version,The prop types lib got an anti spamming change in 15 5 8 e1d51dd that broke some of our tests This PR resolves that by resetting the prop types import between tests,,bvaughn,2017-04-20 19:44:45,2017-04-20 19:48:54
IS,Feature Better warning error message when attempting to require an export,Do you want to request a feature or report a bug Feature What is the current behavior I converted an old component from module exports to export default However I forgot to change a require to import when including the component I received the following error source L236 What is the expected behavior I would love to see a more helpful error message if at all possible The error provided on line 223 L223 is super helpful would be awesome to replicate You likely forgot to export your component from the file it is defined in Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 Tested in Chrome on Mac,,bvaughn,2017-04-20 19:01:52,2017-04-20 20:05:03
PR,Bumped version numbers for alpha 10,,,bvaughn,2017-04-20 20:06:28,2017-04-20 20:06:51
IS,Add support for CSS variables in style attributes,CSS variables is now supported in Chromium which we use for rendering They enable us to write cleaner more flexible code Sadly I cannot seem to use them in React without resorting to various tricks Ideally I would like to be able to use them like div style color hotpink which would make the variable available inside the scope of the div I am able to add them using the following syntax div style color hotpink but then they are not updated if I try assigning a new value which ruins much of the point of using a variable I am able to add and remove them using ReactDOM and ReactDOM findDOMNode this style setProperty color hotpink but that gets it out of sync with the DOM updates in addition to not being pretty If there are any questions on the usefulness of CSS variables I will be more than happy to explain,,"gaearon,gaearon,zpao,zpao,sophiebits,gaearon,sebmarkbage,sebmarkbage,aweary,sebmarkbage,trueadm,sophiebits",2016-04-05 12:26:32,2017-04-20 20:25:40
PR,Use setProperty when setting style properties,Work in progress Resolves Using setProperty does incur the cost of parsing the style name as setProperty requires the hyphenated property name background color not backgroundColor I'm also not sure if we want to special case IE given the performance benefits mentioned issuecomment 290579386 cc,,"aweary,sebmarkbage,trueadm,gaearon,trueadm,aweary,trueadm,milesj,gaearon,aweary,sebmarkbage,aweary,sophiebits,aweary,gaearon,aweary,sophiebits",2017-03-31 00:50:41,2017-04-20 20:25:40
PR,Add API for opting a tree or subtree into async by default updates,Implemented by adding a new field to Fiber called contextTag Naming suggestions welcome context is way overloaded It is a bitfield that describes properties about the fiber and its subtree For example the AsyncUpdates flag indicates whether the subtree should be async by default When a fiber is created it inherits the contextTag of its parent The value is set at construction and is expected not to change once the fiber is children have been reconciled The user facing API as implemented in ReactDOM is ReactDOM unstable renderAsync to create an async by default tree and instance unstable asyncUpdates true to create an async by default subtree We will use these to incrementally introduce async scheduling in our experiments The new features are behind a flag called enableAsyncSubtreeAPI Update Decided not to add a ReactDOM unstable renderAsync method in favor of always using unstable asyncUpdates true to avoid API bloat Also unstable asyncUpdates is now a static method instead of an instance method which means it works with both functional and class components,,"acdlite,acdlite,flarnie,acdlite,flarnie,acdlite,flarnie,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,sophiebits,sophiebits,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sophiebits,acdlite,acdlite,sophiebits,sophiebits,sebmarkbage,acdlite",2017-04-17 22:10:46,2017-04-21 06:37:17
IS,Reordering arrays with proper keys triggers a re render to the DOM,Hi I ran across some weird behavior while implementing some autoplaying video on a recent project The video is part of an array of modules and when this array was reordered the video would stop in Safari on Mac only to be rendered again I were eventually able to reproduce this resetting behaviour consistently between all browsers with CSS animations and transitions This simple example shows the issue quite well Each of the numbers has an animation that runs once that animates the element 100px to the right and back again You will see this when the page loads This animation should never be replayed unless I have completely misunderstood something Each number is also set as the key The buttons reorders the array Clicking from 1 2 3 to 1 3 2 resets the animation for 2 Clicking from 1 2 3 to 3 2 1 resets the animation for 2 and 1 What is happening here I would expect the behaviour to never reset an animation or otherwise cause the browser to remove an element and insert a new one A few pointers 1 In Chrome DOM inspector dragging one element node above the other does not reset animation 2 Changing the items to a React component and logging it is unmount proves there is no unmounting This seems to be outside of the component lifecycle 3 I first encountered this issue with React 15 3 0 and the fiddle is using 15 5 4 Thanks for reading I'm looking forward to hear your thoughts and learn something from this PS I am amazed that every other browser besides Safari is able to continue the video with this behaviour I suspect it has something to do with Safari using Quicktime,,"gaearon,gaearon,syranide,gaearon",2017-04-21 12:16:42,2017-04-21 13:45:21
PR,Ensure ReactTransitionGroup state children is always object,Since ReactTransitionGroup uses a for in loop on this state children it seems best to make sure that it is always looping an object Currently it can end up looping a non object falsey value which can cause errors e g in my case another library was extending the String prototype with enumerable properties There were two failing tests and 7 lint warnings on my system before and after making this change,,gaearon,2016-11-30 19:11:57,2017-04-21 14:15:54
PR,Pass props down from ReactCSSTransitionGroupChild to child,Useful for component wrapper that clone children and modify props new props should be passed down to child,,gaearon,2016-12-07 21:39:30,2017-04-21 14:15:58
PR,NOT FOR MERGE scripts fiber find errors to make future Umbrella task easier,In 7925 there is a task to Ensure we replace errors with invariant calls and they have sensible messages While it is likely a bit premature to begin that work this script will make it easier to find and replace the exact call sites to manage At the time of writing there are 42 ThrowStatement s It looks like there are a few outliers in src test but most of those are from src renderers shared fiber js Usage,,"iamdustan,gaearon",2016-12-21 18:43:15,2017-04-21 14:17:08
PR,ReactDOM DOMLazyTree add fix for IE11 popup rendering issue,When rendering to a popup in IE11 components with multiple children can break Other browsers do not have this problem render subtrees all at once while IE is get added step by step and the problem also does not happen when rendering a problematic component to the main browser window Demo Run the broken demo requires IE11 Run the fixed demo Repository TODO wait for feedback whether the current workaround is a good way to fix the issue add regression test Screenshot of broken behaviour screenshot broken Screenshot of fixed behaviour screenshot fixed React and ReactDOM versions tested 15 4 2 and current master Example for Problematic Markup Explanation when referenceNode is null it will insert tree node at the end of parentNode and can be replaced with appendChild For some reason appendChild does not crash rendering and fixes the issue I'm not really sure what causes insertBefore to crash when rendering to the popout Replacing it with appendChild fixes things in our app and tests still pass,,"syranide,syranide,aweary,gaearon",2017-02-23 17:33:13,2017-04-21 14:18:15
PR,interactive version of the JSX tutorial,Hello there The JSX in depth tutorial is really cool So cool that I decided to try to make an interactive version of it It uses a tool of mine named klipse Would you be interested by having other interactive tutorials,,gaearon,2016-12-14 13:24:27,2017-04-21 14:19:33
PR,shallow rendering create node mock,Following in the footsteps of 7649 and 8261 bringing createNodeMock to shallow rendering so enzyme is shallow rendering airbnb enzyme 721 can make use of it Currently this breaks the unit test related to shallow rendering and the legacy ref api Any suggestions about what to do in that case,,gaearon,2016-12-17 05:43:17,2017-04-21 14:21:47
PR,Fiber Throws when rendering null at the top level,Just a tiny PR fixing one test,,"rthor,gaearon",2016-11-26 14:04:20,2017-04-21 14:23:08
PR,RFC ReactSlim Modern build,Calling it modern feels weird although modern and classic are the internal folder names There s been some chatter about createClass and PropTypes being generally in maintenance mode as class and Flow are the future I was playing around with the build system anyway see 7850 and so decided to try to create a build removing createClass and DOMFactories Potentially createFactory and createMixin could be removed as well The build of react slim js vs react js is displayed in the screenshot below img width 511 alt screen shot 2016 10 05 at 9 14 54 pm src Diff Removing PropTypes may be problematic due to context still using it This is part of an experiment I m considering that would convert to a babel transform to run over arbitrary components outside of direct control aka babel over node modules Heresy heresy,,"iamdustan,iamdustan,gaearon,iamdustan",2016-10-06 01:20:21,2017-04-21 14:24:14
PR,One click benchmark runner script,It is a bit verbose to run our benchmark script now and I'm thinking about ways to make it easier open to better ideas It takes bundles from your local build folder and compares them with React is latest master build from Notice that it does not build React by default you can run npm run build manually before invoking the benchmark runner like npm run build scripts bench benchmark runner cc,,"keyanzhang,gaearon",2016-09-14 06:34:49,2017-04-21 14:24:57
PR,Ignoring files for vim users,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"rochestb,gaearon",2017-03-17 01:45:02,2017-04-21 14:25:35
PR,Fix 9122,alternatively it could just tell you to the whole tag with or something like that,,"gaearon,gaearon",2017-03-14 21:33:23,2017-04-21 14:26:12
PR,Add more details in jsx in depth md,added ternary statement as another option for props added an explanation regarding how to get false values for props,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-02-15 06:44:40,2017-04-21 14:27:40
PR,Documentation Add Ons Incorrect Prev Next links,The goal of this pull request is to fix issue,,"romamatusevich,gaearon",2017-03-20 21:28:57,2017-04-21 14:31:18
IS,Documentation Add Ons Incorrect Prev Next links,Articles in Add Ons have incorrect Prev Next links For example the first Performance Tools has Prev link to the Keyed Fragments which is actually the fourth Immutability Helpers does not have Prev Next links at all I think the easiest way is just to remove the Prev Next links from Add Ons articles It will allow to add update remove articles without need to update Prev Next links What do you think,,"romamatusevich,gaearon,romamatusevich,gaearon",2017-03-19 08:30:14,2017-04-21 14:31:26
IS,Unexpected unmount mount has occurred when delete node,Do you want to request a feature or report a bug bug What is the current behavior If props children has single node all behavior is right But props children has multiple nodes unexpected unmount mount has occurred on unchanged node when delete other node minimal demo of the problem Without any problem props children has single node When click toggle button toggle span loading span and do not affect on Dummy node Problem reproduce props children has multiple nodes i e Add h1 node to previous fiddle When click toggle button toggle span loading span and unmount Dummy and mount new Dummy node note key attribute is helpless about this problem What is the expected behavior Keep Dummy node regardless number of children Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Reproduced by react 0 14 8 15 4 2 and 16 0 0 alpha,,"aweary,gaearon,syranide,gaearon",2017-01-10 06:34:38,2017-04-21 14:38:37
PR,Add specs about issue 8731,This PR contains only two specs about issue 8731 First spec are passed second spec are failed,,gaearon,2017-01-10 06:38:11,2017-04-21 14:38:44
PR,Warn about Infinity in style value,Currently React warns about NaN values in style This PR adds warnings about Infinity Warning Infinity is an invalid value for the fontSize css style property,,"aweary,gaearon,syranide,gaearon,aweary",2017-04-07 12:51:39,2017-04-21 14:41:43
IS,15 5 addon bugs,This release has been a bit rocky I'm keeping track of known issues to fix them up together in the next patch x Expose unstable batchedUpdates on shallow renderer needed for Enzyme issuecomment 292747996 x Create Fragment CommonJS entry point is messed up x CRC package misses dependency on object assign x Some CommonJS addons inline fbjs unnecessary x UMD files contain process shim x UMD files are not envified x LinkedInput UMD is broken x Release linked input x prop types is missing LICENSE and PATENT file x Fix and release create react class tagging for this and add the rest of us Regarding create react class Add docs link to the main docs Currently just says Documentation is WIP Add peer deps for React 15 5 15 5 because of replaceState callback issue Currently there are no peer deps at all only dev deps Release update to NPM,,"gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,bvaughn,gaearon,bvaughn",2017-04-08 22:14:21,2017-04-21 14:42:53
IS,Decouple the old Addons from React Internals,E g cloneWithProps depends on ReactPropTransferer That is the only thing that depends on it but we can not delete it or move things around because cloneWithProps still uses it The other ones might be possible without reaching into internals If not we can not do flat builds Also FB still uses cloneWithProps shhhh,,sebmarkbage,2016-04-12 01:58:42,2017-04-21 14:44:00
IS,Text components in ReactTransitionGroup give Element type is invalid,js output throws Invariant Violation Element type is invalid expected a string for built in components or a class function for composite components but got undefined Check the render method of ReactTransitionGroup Not sure what this should do but at the very least the error message is terrible,,"sophiebits,sophiebits,gaearon,gaearon",2016-03-29 07:13:11,2017-04-21 14:44:50
PR,Warning added if defaultProps were defined as an instance property,Added a warning if defaultProps were defined as an instance property Added related testcases for the changes done Issue related to 9239,,"abhaynikam,abhaynikam,aweary,abhaynikam,aweary,abhaynikam,gaearon,gaearon,abhaynikam",2017-04-14 20:48:47,2017-04-21 14:46:20
PR,Refactor addons folder tests to ES6,I refactored addons folder tests to ES6,,gaearon,2017-01-13 15:58:25,2017-04-21 14:47:20
IS,ReactCSSTransitionGroup not working in ie 11 with webpack,Do you want to request a feature or report a bug bug What is the current behavior transitionAppear not working in ie 11 with webpack If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior transition appear in ie 11 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 3 0 react addons css transition group 15 3 0 browser ie 11 os window 7,,gaearon,2016-08-05 01:39:21,2017-04-21 14:47:50
IS,Move devtool warnings into standalone test,I talked with about this and this will hopefully lead to a clearer distinction of what is being tested when as we move towards that integrating that devtools api throughout,,"zpao,zpao,zpao",2016-01-16 00:42:30,2017-04-21 14:48:13
IS,Plan for Addons in React 16,Here s my outline of what I think we should do with addons in React 16 TLDR we ve done a poor job of supporting them and they pose a significant maintenance burden due to how our repo and build process is set up We re going to release final versions for them and won t be maintaining them further Plan Don t Do Anything react addons perf Internal dependencies will break in 16 react dom lib ReactPerf Plan for 15 5 don t do anything Plan for 16 we won t be releasing 16 for this package Right now there is no migration path planned for it because Fiber works differently Instead you would use the browser Timeline integration or polyfill it in your environment We may later reintroduce something like ReactPerf but in the renderers themselves However just like it took us a while to figure out how ReactPerf should work it will take us a while to figure out a better alternative that would be compatible with Fiber Plan Fix and Forget react addons create fragment Internal dependencies will break in 16 react lib ReactFragment Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Ensure there is a UMD build in the standalone package and that it is documented in package is README Make sure that accessing it via React addons createFragment but not via the package warns once and suggests using UMD build instead Release 15 5 without a peer dependency restriction on react and forget about it forever Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely react addons linked state mixin Internal dependencies will break in 16 react lib LinkedStateMixin Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Ensure there is a UMD build in the standalone package and that it is documented in package is README Make sure that accessing it via React addons LinkedStateMixin but not via the package warns once and suggests using UMD build instead Release 15 5 without a peer dependency restriction on react and forget about it forever Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely react addons pure render mixin Internal dependencies will break in 16 react lib ReactComponentWithPureRenderMixin Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Ensure there is a UMD build in the standalone package and that it is documented in package is README Make sure that accessing it via React addons PureRenderMixin but not via the package warns once and suggests using UMD build instead Release 15 5 without a peer dependency restriction on react and forget about it forever Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely react addons shallow compare Internal dependencies will break in 16 react lib shallowCompare Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Ensure there is a UMD build in the standalone package and that it is documented in package is README Make sure that accessing it via React addons shallowCompare but not via the package warns once and suggests using UMD build instead Release 15 5 without a peer dependency restriction on react and forget about it forever Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely react addons update Internal dependencies will break in 16 react lib update Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Ensure there is a UMD build in the standalone package and that it is documented in package is README Make sure that accessing it via React addons update but not via the package warns once and suggests using UMD build instead Release 15 5 without a peer dependency restriction on react and forget about it forever In README mention as a more maintained alternative Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely react linked input Internal dependencies will break in 16 react lib LinkedValueUtils Plan for 15 5 copy internal dependencies into the package to make sure it works standalone Release 15 5 without a peer dependency restriction on react and forget about it forever There is no extra step for React addons because it is not exposed there at all Plan for 16 we won t be releasing 16 for this package Nevertheless version 15 should keep working indefinitely Plan Deprecate and Forget react addons css transition group Internal dependencies will break in 16 react lib ReactCSSTransitionGroup Plan for 15 5 deprecate We won t maintain this further Suggest using CSSTransitionGroup from instead Work with its maintainers to ensure there s an UMD build and instructions for it in README Plan for 16 we won t be releasing 16 for this package react addons transition group Internal dependencies will break in 16 react lib ReactTransitionGroup Plan for 15 5 deprecate We won t maintain this further Suggest using TransitionGroup from instead Work with its maintainers to ensure there s an UMD build and instructions for it in README Plan for 16 we won t be releasing 16 for this package Plan Undecided react addons test utils Internal dependencies will break in 16 react dom lib ReactTestUtils I don t have a plan for this one yet Technically it s still going to be coupled to react dom package TestUtils is technically two completely different things a thin wrapper around react dom with some introspection and a shallow renderer Perhaps it would make sense to completely move TestUtils to react dom except shallow renderer which could be published as react shallow renderer,,"gaearon,bvaughn,acdlite,syranide,sophiebits,bvaughn,acdlite,syranide,acdlite,acdlite,acdlite,syranide,gaearon,syranide,gaearon,gaearon,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,bvaughn,aweary,gaearon",2017-03-17 15:59:49,2017-04-21 14:52:30
IS,Missing in tic tac toe tutorial throws errors on codepen,Do you want to request a feature or report a bug Report a bug What is the current behavior This line button className square onClick alert 'click' located here an interactive component throws errors in codepen as it is missing a closing tag Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Using the starter code so using,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-03-06 14:45:21,2017-04-21 14:53:26
IS,Expected onBeforeMountComponent parent and onSetChildren to be consistent,Do you want to request a feature or report a bug It looks like a bug What is the current behavior Setting the state before rendering a component with the test renderer shows a warning in the console Warning Exception thrown by hook while handling onSetChildren Invariant Violation Expected onBeforeMountComponent parent and onSetChildren to be consistent 3 has parents 0 and 2 Invariant Violation Expected onBeforeMountComponent parent and onSetChildren to be consistent 3 has parents 0 and 2 In the following example it weirdly happens consistently the third time you run it while in other more complex scenarios it does it earlier The steps to reproduce the issue are the following 1 first of all create an app and install the renderer Here is a demo renderer I understand this is not a common way of using React and the Test Renderer I'm more interested in knowing the reasons behind the problem and eventually see if there are some workarounds to apply What I'm trying to do is to serialize components and send them to an endpoint see snapguidist What is the expected behavior Ideally there should not be any warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react v15 4 1 react test renderer v15 4 1 I have been able to reproduce the issue on the latest versions of Chrome Firefox and Safari on MacOS,,"gaearon,gaearon",2017-01-05 07:12:28,2017-04-21 14:54:08
IS,Warn in dev if shouldComponentUpdate is defined on PureComponent,Currently if you define shouldComponentUpdate on React PureComponent nothing bad happens and it acts like React Component We should probably warn in dev since it defaults the point of PureComponent,,"aweary,gaearon,aweary,misoguy,misoguy,misoguy,aweary,abhaynikam,abhaynikam",2017-03-22 22:07:47,2017-04-21 14:55:17
PR,Warn in dev if shouldComponentUpdate is defined on PureComponent,Fix 9239,,"misoguy,acdlite,acdlite,misoguy,aweary,acdlite,aweary,misoguy,acdlite,misoguy,aweary,misoguy,misoguy,misoguy,aweary,misoguy,gaearon,gaearon,aweary,gaearon,misoguy",2017-03-23 00:54:18,2017-04-21 14:55:17
PR,docs docs reference react component Document throwing errors,So folks know not to intentionally throw errors from these methods and understand that if when that happens anyway the resulting error may not be very helpful It sounds 1 like 2 React will do a better job of providing helpful errors in the next release I have not been able to track down the commit branch where that is happening so I can not provide more specific advice on how to catch errors in components although there will be a way to do that 2 Spun off from 9037 1 issuecomment 281405036 2 issuecomment 281558149,,"gaearon,gaearon",2017-02-22 18:11:54,2017-04-21 15:00:46
IS,Calling a function from another component,Hi I need to call a method in a component from another component how can I do that In the below code I need to call the toggle method from a different component onClick I tried finding a solution but not successful Any suggestions Thank you,,"bvaughn,acdlite",2017-04-21 17:50:31,2017-04-21 17:54:25
IS,Do not resolve defaultProps in React createElement,Hi Do you want to request a feature or report a bug Feature request I guess What is the current behavior Currently defaultProps of component are resolved super early when React createElement is called This makes shallow rendering for purposes of snapshot tests with enzyme and enzyme to json see problematic If component A has some defaultProps they will appear in snapshots of all components that use this component This makes testing very fragile every change of defaultProps should affect only tests of component A but currently it will affect many other tests For example if some component uses A without any props this is what I would expect in snapshot What is the expected behavior Resolve defaultProps at later stage when they are actually needed so that in snapshots appear only actually passed props Will appreciate feedback thoughts workarounds and possible alternative solutions Have a great day everyone,,"bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2017-04-21 17:36:26,2017-04-21 19:43:22
PR,Pass prevContext param to componentDidUpdate,See this comment issuecomment 270450606 for my latest thoughts about this issue This PR resolves the issue of the missing prevContext param to componentDidUpdate calls Note that this approach is support option 1 below Options Considered It seems like we have a high level decision to make regarding how and if we support the prevContext parameter going forward Options include 1 Drop support for it If we do this we should update the ReactContextValidator test test to assert that the prevContext parameter is not passed and update to Stack to mirror this behavior 2 Support it option A Store it as an expando property on instance eg reactInternalPrevContext Adding to the instance avoids bloating Fibers for all of the types that do not need this property and keeps our Fiber consuming functions monomorphic 2 Support it option B Use stateNode to store a wrapper object around instance and previous context for the case of ClassComponent s This prevents all non ClassComponent fibers from growing while also keeping fiber consuming methods monomorphic Since this only impacts ClassComponent it should hopefully introduce minimal forking Regarding continued support At this time it does not seem like this parameter is being used by React components within Facebook but a quick Github search prevContext type Code ref searchresults seems to suggest the parameter is being used externally eg 1 L19 2 L13 3 L44 etc,,"bvaughn,sebmarkbage,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,sebmarkbage,bvaughn,sebmarkbage,bvaughn,bvaughn,bvaughn",2016-12-22 20:34:53,2017-04-21 20:15:23
IS,Audio source src attribute updates are not recognized,Do you want to request a feature or report a bug bug Searched other issues but could not find anything discussing using source tags within audio tags I think it is more of a browser problem than a React problem as it updates the DOM fine but I thought there should be a discussion on solutions next steps What is the current behavior Source src example Audio src example The browser is not recognising any changes React makes to the src prop of source if you change the src prop directly on the audio tag the browser re renders resets the audio tag as expected What is the expected behavior The source example should match the behaviour of the audio example Happens in all browsers,,"aweary,aweary",2017-04-17 19:42:28,2017-04-21 20:58:26
IS,How to stub component methods that use property initializer syntax,I'm finally updating my components from React createClass to ES6 classes after seeing the v15 5 0 deprecations 1 The first error I'm seeing in my tests after running jscodeshift t react codemod transforms class js is that some of my sinon stub calls are failing because my component methods are now in the ES7 property initializer syntax i e My question is how can I stub fetchSomeData using this new syntax My tests looks like sinon stub Foo prototype 'fetchSomeData' which no longer works assuming because fetchSomeData is not on the prototype anymore I imagine the standard ES6 method syntax a bunch of bind calls in the constructor would do the trick but I'm just not a fan of that approach I would love to know if there is a solution with this syntax Thanks PS I posted this to stackoverflow but it seems like there is lots more discussion happening here than there these days Sorry for the x post 1 new deprecation warnings,,"aweary,gaearon",2017-04-10 20:50:20,2017-04-21 21:00:11
PR,0 4 stable,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,zpao,2017-04-21 18:51:32,2017-04-21 21:15:49
IS,War and Peace bug Scrolling Embed Font Text with special characters,If you use embed fonts for text like War and Peace with russian and french characters and you programmatically scroll bottom after component was rendered componentDidMount you will have excess gap in the bottom of scrolling react bug Example code use separate window mode in Plnker editor if example dos not work Maybe it is because React rendering does not conform with fonts rendering React 14 15 Chrome Firefox Windows 10 Ubuntu 16,,"gaearon,aweary",2016-12-08 22:17:27,2017-04-21 21:28:53
IS,state prop collecting geoloacation data even before component is mounted,Ok so here is the problem I have a Map component that gets someones current location every x seconds and stores the data in an array When I launch my app I am in a home scene with the option of opening the map in a new scene using the navigator and so when I navigate to the map component the output gives me latitude 37 33282574 longitude 122 06131389 latitude Getter Setter longitude Getter Setter latitude 37 33230505 longitude 122 05871525 latitude Getter Setter longitude Getter Setter latitude Getter Setter longitude Getter Setter latitude 37 33282574 longitude 122 06131389 latitude Getter Setter longitude Getter Setter latitude Getter Setter longitude Getter Setter latitude Getter Setter longitude Getter Setter latitude 37 33282574 longitude 122 06131389 And so on all at once Why is it doing this I want to start fresh every time i mount this component setState is irrelevant because it will set it to and then start collecting data even before ComponentDidMount gets run,,"aweary,aweary",2016-09-13 19:31:58,2017-04-21 21:30:33
IS,Improve Warning Message When oneOfType Validation Fails,Do you want to request a feature or report a bug Enhancement What is the current behavior Running the above example results in the following warning Warning Failed propType Invalid prop 'name' supplied to 'Hello' What is the desired behavior The following improvement would be nice 1 Adding the type of the supplied the bad value 2 Would be amazing to have the name of the checker functions though this may involve changes to createInstanceTypeChecker and createPrimitiveTypeChecker to work ex Warning Failed propType Invalid prop 'name' of type istring' supplied to 'Hello' expected boolean number I know this is not high priority but I would like to at least add the type in I would gladly do the work,,aweary,2016-09-05 23:35:55,2017-04-21 21:47:01
IS,Possibility to return pure text from render without wrapping it in an element,I'm asking if in the light of 5753 it would be possible to also return plain text from render as an alternative to the current ReactElement return type such that one would not have to wrap it in an element Could the same comment wrapping method allow for this also for render methods Motivation is that it is sometimes hard to get layout to work as expected if one has to introduce span elements and the alternative is to write plain functions instead of react components to produce the expected result It would be syntactically nice to be able to componentize text only components the same way as html enabled components,,"syranide,gaearon,aweary",2016-07-26 10:24:52,2017-04-21 21:48:34
IS,Allow disable of tag prop warnings in 15 2,This only applies to 15 2 I'm curious first as to if this would cause any problems or if theres a strong reason why allowing people to disable these warnings would be disagreeable I would be open to alternative solutions We have the problem that some of our props are used only in lifecycles or HOC is We often do this in render So now otherProp gets passed to div causing an error But destructuring it out leaves an unused variable in render which is not very nice either My initial thought was create a helper eventProps that filters out just event props but that is both verbose and potentially heavy lots of O 1 lookups I guess Second thought is we could patch React createElement but that seems a bit hacky as well I do not see much downside in passing in props to elements though I guess I could see some dangers,,"milesj,syranide,aweary,aweary,gaearon",2016-07-28 22:34:36,2017-04-21 21:50:19
IS,Investigate why CI failed to add a file to gh pages,For some reason failed to detect and commit a new file Presumably the dirty state detection failed It did not happen with the previous build but that also had changed files not just added new ones maybe that helped trigger We have only done a couple builds on Jekyll 3 the new Travis container so could be related,,"zpao,zpao,aweary",2016-07-29 22:03:44,2017-04-21 21:51:49
IS,input file upload panel shows after 7 seconds in chrome opening 15 tabs,I am a new react user upload file in chrome which is opening 15 tabs when I click the upload button the upload file panel is display after 7 seconds but I use the same code with the Chrome opening 15 tabs in local ps file the upload panel show after 1 second but when I open the page in separate window with the Chrome the upload file panel show after 1 second which seem as normal thanks all,,aweary,2016-08-19 07:50:23,2017-04-21 21:53:14
PR,npm run prettier changed files,Running npm run prettier changed files pushed cc and not sure here Let me know if this is not required,,"abhaynikam,jddxf,abhaynikam",2017-04-22 08:17:58,2017-04-22 09:17:39
IS,class App extends React Component render return div h1 Hello this props name h1 div ReactDOM render App name world document getElementById 'container',Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-04-22 14:02:14,2017-04-22 14:56:31
IS,props register name,fetchData let data method 'POST' body JSON stringify Token KWXaDOyG1EgAAAAAAAAAAAAAAAAAAAAA LanguageId 2 headers 'Accept' 'application json' 'Content Type' 'application json' fetch '' data then responseData var react JSON parse responseData bodyInit for i 0 i reactdemo length i react SupplementList i Quantity '1' react SupplementList i CartDetailId i reactdemo react SupplementList this setState dataSource this state dataSource cloneWithRows reactdemo loaded true done render return Image source require ' public images BgiPhone 3x png' style styles Maincontainer View style styles header View style styles headersubcontainer View style styles headerBackArrow TouchableOpacity onPress this back Image source require ' public images BackArrow 3x png' TouchableOpacity View View style styles headerTrainerimage Image source require ' public images LogoNameiPhone 3x png' View View style styles headerCart TouchableOpacity onPress this cart Image source require ' public images CartBottomiPhone 3x png' TouchableOpacity View View View View style styles nofooterContainer View style styles subheader View Image source require ' public images SupplementriesiPhone 3x png' View Text style styles subheaderText Supplements Text View View ListView style styles listView dataSource this state dataSource renderRow reactdemo View style backgroundColor ' 222222' marginBottom 5 flex 1 marginLeft 10 marginRight 10 flexDirection 'row' View style flex 0 1 Image source uri reactdemo ImageURL style width 50 height 70 margin 10 borderWidth 2 borderColor ' f2f2f2' Image View View style flex 0 2 paddingLeft 15 Text style color ' fff' paddingTop 10 reactdemo Name Text Text style color ' fff' KD reactdemo Price Text View Text style color ' ccc' fontSize 12 reactdemo NetWeight kg Text View View View style flex 0 2 flexDirection 'row' top 45 Text style color ' ccc' fontSize 12 Qty Text View style borderWidth 1 borderColor ared' TouchableOpacity onPress this pickuptwo 1 reactdemo CartDetailId Image style width 20 height 20 marginLeft 10 source require ' public images MinusiPhone 3x png' TouchableOpacity View Text style color ' ccc' marginLeft 7 reactdemo Quantity Text View style borderWidth 1 borderColor ared' TouchableOpacity onPress this pickuptwo 0 reactdemo CartDetailId Image style width 20 height 20 marginLeft 10 source require ' public images Plus1iPhone 3x png' TouchableOpacity View View View View View Image when i click to the reactdemo Quantity it appears the error msg like output,,aweary,2017-04-22 06:36:27,2017-04-22 15:52:15
IS,Add the PropTypes docs back,Where does proptypes doc live It is confusing it is still on React object but inaccessible from the website through search or table of contents Let is either reinstantiate it or move it fully to the standalone repo Also it is confusing we are deprecating createClass but it still lives in the docs React without ES6 whereas we are just moving PropTypes but they are gone from the docs,,"flarnie,bvaughn,gaearon,bvaughn,flarnie",2017-04-20 15:56:25,2017-04-22 17:39:32
PR,Add link to 'Typechecking with PropTypes' under 'Advanced Guides',This should have been retained in our docs since PropTypes are only moved and not deprecated Partially handles 9467 and I will make a separate PR to to add more docs to the README there,,"flarnie,sophiebits,flarnie,flarnie",2017-04-20 19:45:14,2017-04-22 17:41:39
PR,Run 'prettier' on the v15 6 branch,This is an easy fix and I would like this branch to be as similar to master v16 0 as possible Either this or we should disable the 'prettier' test for the 15 x branches,,"flarnie,flarnie,flarnie",2017-04-22 00:27:21,2017-04-22 18:36:25
PR,Do not build gh pages branch on CircleCI,Turns out I was incorrect in my initial setup of Circle and if we want to tell Circle not to try to build the gh pages branch we need to do it in that branch So I just setup a new circle yml here that will get built into that branch when docs get built I did a quick test to confirm that the file does get built into the branch by running the build gh pages sh script minus the push part From the docs branches circle yml is per branch configuration file and the branch ignore list in one branch will only affect that branch and no other one,,"zpao,gaearon,zpao,zpao,gaearon,zpao,gaearon",2017-04-16 19:21:16,2017-04-22 21:33:43
PR,Updates to use JSFiddle referenced in submit Git Issue Template,aweary recently updated the JSFiddle used in the submit Git issue template 9289 This change updates the JSFiddle in the Reporting New Issues section of how to contribute md to use the new JSFiddle found in the submit Git issue template,,,2017-04-23 18:56:55,2017-04-23 23:03:12
PR,jjj,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-04-24 10:15:54,2017-04-24 10:31:52
PR,Create react addons dom factories package,Moves React DOM factories out of React makes new react addons dom factories package Adds basic documentation for new addon I hope this is most of the legwork for Sort of tangental but this reduces React down to 5 3kb gzipped Pretty neat img width 367 alt screen shot 2016 11 20 at 12 54 27 pm src,,"nhunzaker,nhunzaker,gaearon,nhunzaker,aweary,nhunzaker,nhunzaker,flarnie,flarnie,flarnie,aweary,flarnie,aweary,nhunzaker,nhunzaker,gaearon,flarnie,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,flarnie,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon",2016-11-19 16:38:48,2017-04-24 15:08:17
PR,ReactARTStack should use ReactDOM is ReactUpdates,,,acdlite,2017-04-24 23:58:25,2017-04-25 00:03:12
IS,Is it possible to alias routes in react router like the way it is done in VueJs,I want to request a feature Cannot alias routes For example const router new VueRouter routes path ' a' component A alias ' b' In VueJs you can say ' a' is the path which my application understands internally one will link components using ' a' only But from browser perspective one can hit ' b' that resolves to ' a' internally Asked for react 15,,aweary,2017-04-24 10:20:40,2017-04-25 00:11:43
IS,Debug issue in react native android app Crash befor landing activity,I am using react native cli 2 0 1 react native 0 35 0 I am having two issues in react native 1 when app launch it work properly befor landing screen of paypal app got crash after checkout 2 When I try debug my app it is give me error debugger error,,aweary,2017-04-24 14:00:40,2017-04-25 00:13:33
PR,Temporarily add stack target to react test renderer bundle,This will enable a React to ReactNative sync that is currently blocked by a stack compatible only test renderer forked from PR 7516 that is used in fbsource Once the changes proposed in 7516 have been made to test renderer this target can be removed from the bundle and the forked renderer can be deleted as well This PR also fixes a typo in the temporary checkPropTypes accessor that that had been added to the React object previously,,"bvaughn,gaearon,bvaughn,bvaughn",2017-04-24 23:51:37,2017-04-25 01:45:44
PR,Update tests to not warn due to moved PropTypes and shallowRenderer,This will unblock continued work on the 15 6 dev branch We added some warnings in v15 5 for calling React PropTypes and calling the shallow renderer from the wrong place These warnings were causing test failures and now they are fixed Most of these were for the React PropTypes change,,"flarnie,flarnie,sophiebits,flarnie,bvaughn,sophiebits,flarnie,flarnie,gaearon",2017-04-21 23:21:35,2017-04-25 01:48:21
PR,Describe fixtures dir in the codebase overview,Follow up of,,"maciej-ka,gaearon",2017-04-25 01:37:56,2017-04-25 09:25:33
IS,Wrong repo,wrong repo,,gaearon,2017-04-25 13:56:48,2017-04-25 13:57:21
IS,Question Close ReactJS widget on outside click,I have a search widget on a website it is a standalone react component the user just puts the script on the site and the box is rendered See it at When a search is performed e g test the results are shown right below the input box I want to close the search results if the user clicks outside of the widget anywhere else on the page But I do not know how to achieve this because the react component does not know anything about the rest of the page And also I cannot just hide the div with jquery right Because then I ruin React is virtual dom mechanism,,jquense,2017-04-25 13:54:44,2017-04-25 14:33:50
PR,Consolidate events between EventConstants and BrowserEventEmitter,This is a follow up to the request made by in This commit removes some duplication of event names by consolidating them into the EventConstants module It then renames that module to BrowserEventConstants,,"nhunzaker,sophiebits,sophiebits,nhunzaker,nhunzaker,nhunzaker,nhunzaker,sophiebits,nhunzaker,nhunzaker,sophiebits,nhunzaker,sophiebits",2017-04-24 21:36:35,2017-04-25 16:24:11
PR,Improve component type check in getComponentKey,The sequence sequence which yields true for all JavaScript objects and is well optimized by all JavaScript engines,,"bmeurer,gaearon,bmeurer,bvaughn,bmeurer,gaearon,bmeurer,bvaughn,bmeurer,sophiebits",2017-04-20 10:46:06,2017-04-25 16:39:30
PR,Rename react dom to ReactDOM in Facebook www,Test plan 1 yarn build test type FB 2 Confirm ReactTestUtils dev js requires ReactDOM instead of react dom,,acdlite,2017-04-25 20:14:33,2017-04-25 20:30:48
PR,Use prop types instead of prop types factory,Latest versions of prop types do not depend on React so the factory is not necessary and in fact bloats the build because it is intended for 15 5 and so does not strip out the checkers in prod,,acdlite,2017-04-25 21:26:42,2017-04-25 21:32:28
IS,Doc State and Lifecycle,From doc about State and Lifecycle there is this class My question is since setState is asynch can not it happen that some calls to setState inside tick function get a pending state and for example for three seconds update wo not be applied to the state In that case we could get three seconds missing from the UI is not it or applied after delay Or I am wrong,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-04-26 09:14:28,2017-04-26 12:24:22
PR,adds indirect refs to docs,If I remember I originally picked this trick up from and it goes a long way towards not making assumptions about child components I think it is worth a mention here indirect refs docs page,,"brigand,brigand,gaearon",2017-04-26 06:07:22,2017-04-26 12:40:10
PR,Updates yarn lock dependencies,Updates yarn lock to latest version of dependencies,,trueadm,2017-04-26 11:28:52,2017-04-26 12:43:37
PR,Prevent process polyfill to be included in builds because of process,Related By guarding process like this its polyfill is included by default when bundled with webpack It should be highly desirable to avoid such side effect I understand that this PR is not complete but as your build setup is way more complex than what is used in most projects I would need some guidelines how this should be proceeded further Maybe introducing TEST in similar manner how u introduce DEV Also this should land in 15 x branch too and aint sure how this should be tackled here cc Also maybe that could have been tackled on webpack is side as most of the people dont realise this is a problem and guarding against process seems like a right way to do things in the code Dunno if we can safely predict what was the user intention though cc,,"Andarist,gaearon,gaearon,gaearon,Andarist,Andarist,gaearon,gaearon,Andarist,gaearon,gaearon,Andarist",2017-04-25 07:53:51,2017-04-26 12:47:35
PR,Add a few more code pen examples of working code,Instead of only the final version it would be really helpful for us newbies if you added more working code samples throughout Once mine broke I could not figure how to continue moving forward did not understand if I put changes in the correct places and did not know where the code is not supposed to work Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"gaearon,brigand,gaearon",2017-04-24 14:18:21,2017-04-26 12:48:56
PR,Add reference to the Hyperscript libraries,I feel these should be mentioned as they provide terser syntax than using R createElement directly even with a shorthand,,gaearon,2017-04-25 04:25:16,2017-04-26 12:54:32
PR,Docs Fix confusing description for the script script usage,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-23 16:40:10,2017-04-26 12:57:22
PR,site Load libraries from unpkg,The site already loads one library from a CDN docsearch js from jsdelivr why not all of them We already suggest unpkg all over the site we should use it ourselves This diff removes all the third party libraries from the website instead loading them via unpkg docsearch js was also switched to use unpkg as using two different CDNs does not really make sense using the one CDN for everything allows pipelining and reduces the number of DNS lookups,,"Daniel15,Daniel15,gaearon,Daniel15",2017-04-22 19:14:48,2017-04-26 13:02:50
PR,fixed error formatting in live editor,This is for 9479 Quite not sure if this was the expected fix but looks to solve the reported issue This is how it looks now screenshot from 2017 04 22 20 12 09,,"tsriram,gaearon",2017-04-22 14:49:44,2017-04-26 13:06:54
PR,Added a Get your system ready tab,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-22 05:50:26,2017-04-26 13:10:26
PR,Remove outdated Troubleshooting section,Hi I found out that the troubleshooting section in the README md missed ' ' at the end of the sentence So I just added it Thank you for your time Hope you could merge it,,gaearon,2017-04-22 00:41:41,2017-04-26 13:14:08
PR,Update declaration of shouldComponentUpdate,Am I right in assuming that shouldComponentUpdate receives nextContext as well According to L910 L914 it looks like that is the case,,gaearon,2017-04-21 20:01:46,2017-04-26 13:18:05
PR,React createElement syntax,Added React createElement syntax I think this is required for this tutorial,,gaearon,2017-04-19 17:52:58,2017-04-26 13:25:41
PR,Add guide on integrating with non react code,One of the guides requested in 8060 Discusses how to integrate with jQuery plugins in the abstract then provides a concrete example with Chosen Moves on to Backbone specifically how to render React components from Backbone views and two ways to consume Backbone models and collections from React Using Backbone views that way is not something I have done before So hopefully I got that right,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-04-02 05:02:11,2017-04-26 16:24:23
PR,Completely remove Object prototype hasOwnProperty call,Using hasOwnProperty as a property name,,"aweary,aweary,aweary,aweary,gaearon,gaearon,aweary,gaearon,aweary,gaearon,gaearon",2016-10-03 19:44:02,2017-04-26 19:30:39
PR,Fix unnecessary ReactDOM require,Apparently when you mark something as external in Rollup a require statement is inserted even if the module is not used This is causing ReactDOM and several other modules to be inserted unnecessarily We need a better fix for this but I'm pushing this quick fix for now since it is blocking sync to www Would you mind taking a look,,"acdlite,gaearon",2017-04-27 01:07:42,2017-04-27 01:07:53
PR,Update tutorial md,remove function scope that not needed do not have access to code pen though todo for Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"exiadbq,gaearon,brigand,exiadbq,gaearon,exiadbq,gaearon",2017-04-26 13:44:49,2017-04-27 03:09:46
PR,pre format only compile time errors,This fixes the behavior changed by 9497 for 9479 Now it renders only the compile time error messages in pre and runtime messages as before in a div which wraps text Compile error compile error Runtime error runtime,,tsriram,2017-04-27 03:33:22,2017-04-27 10:49:34
PR,Fiber ReactDOM should not throw on import in Node environment if it is unused,Patch for 9102,,"prometheansacrifice,prometheansacrifice,prometheansacrifice,prometheansacrifice,prometheansacrifice,gaearon,gaearon,prometheansacrifice,gaearon,gaearon,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,gaearon,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,gaearon,prometheansacrifice,prometheansacrifice,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,gaearon",2017-04-10 02:36:46,2017-04-27 12:13:03
IS,Fiber Check for requestAnimationFrame throws when react dom is required on the server,Do you want to request a feature or report a bug Bug ish What is the current behavior When doing server side rendering with React requiring react dom which transitively requires ReactDOMFrameScheduling js throws an exception because rAF is not defined This can happen if you have a universal component that has top level imports of client side libraries like react router scroll that require react dom instead of react dom server What is the expected behavior I would expect not to get this error unless requestAnimationFrame were actually called Ex lazily check for rAF and define rIC Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 alpha 3 on Node 7 7 1 This started happening in alpha 3 which shipped and enabled Fiber,,"gaearon,prometheansacrifice,gaearon,prometheansacrifice",2017-03-03 05:41:09,2017-04-27 12:13:28
IS,node haste status,In the codebase overview there is still reference to Haste however I see elsewhere that it is been unsupported archived for several months Have you already migrated to CommonJS ES Modules I would like to pick up an open issue but wanted to validate first Thanks,,gaearon,2017-04-27 02:00:17,2017-04-27 13:12:13
IS,React app not compatible with facebook browser,When I shared my React site on facebook the link does not work on facebook is mobile app It works in any non facebook browser though such as Safari Chrome etc The error says 'Ca not Connect Link is not working ' We have the proper og meta tags such as og url og title og image etc Is there something wrong with our site is configuration Any ideas Thanks a lot this is a very knowledgeable group and we would appreciate any insight screen shot 2017 04 27 at 9 33 11 am,,"gaearon,gaearon",2017-04-27 13:35:40,2017-04-27 15:30:57
PR,Add missing testcases for warning messages,Object prototype is read only properties should not be added no extend native solved warning Added missing testcase for propTypes defined on instance property Added missing testcase for getInitialState defined on plain JavaScript class,,"abhaynikam,abhaynikam",2017-04-22 09:39:33,2017-04-27 18:43:17
PR,SSR fixture,Adds a server rendering fixture based on create react app without ejecting This is using the full page strategy because I wanted to flush out any issues with it Turns out there is a lot of little things that are fixable and some non fixable This actually surfaced some differences between the current strategy and the one I had in mind This uses the asset manifest from webpack to pass the final URLs to the client This ensures that we can render the same exact mark up on the client including the URL to our own script that we are running in Doing full document renders work with 15 x as long as the checksum matches However with the patch up reviving strategy I had in mind it would end up removing the CSS tags that webpack injects before running our render call This is a behavior change In dev mode the server runs a proxy in front of the normal CRA webpack server so that we can replace the HTML request for the root page I do not know what the best way to link in the react and react dom packages Each fixture has a different strategy so here is another one Just add NODE PATH build packages in front of all commands,,sebmarkbage,2017-04-28 03:44:05,2017-04-28 04:03:32
PR,Update error codes and rollup json,Is there any reason not to update these so we can stop getting all the warnings when we build locally,,"tomocchino,sebmarkbage,tomocchino,sebmarkbage,tomocchino,gaearon,trueadm",2017-04-28 04:10:47,2017-04-28 05:01:49
IS,Using node module with react native,As mentioned here 1 that Any modules that are pure javascript and run within node js io js are perfectly OK to be run in react native I need to resize and crop an image in react native so i was trying the nodejs sharp 2 image processing library and i think it should work with reactnative because its in pure node and working with io things But while installing it throws errors PS D ReactNative f sandbox npm install sharp sharp 0 17 3 install D ReactNative f sandbox node modules sharp node gyp rebuild D ReactNative f sandbox node modules sharp if not defined npm config node gyp node G Installed Node node modules npm bin node gyp bin node modul es node gyp bin node gyp js rebuild else node rebuild Building the projects in this solution one at a time To enable parallel build please add the m switch MSBUILD error MSB3428 Could not load the Visual C component VCBuild exe To fix this 1 install the NET Framework 2 0 SDK 2 install Microsoft Visua l Studio 2005 or 3 add the location of the component to the system path if it is installed elsewhere D ReactNative f sandbox node modules sharp build binding sln gyp ERR build error gyp ERR stack Error C Windows Microsoft NET Framework v4 0 30319 msbuild exe failed with exit code 1 gyp ERR stack at ChildProcess onExit G Installed Node node modules npm node modules node gyp lib build js 276 23 gyp ERR stack at emitTwo events js 106 13 gyp ERR stack at ChildProcess emit events js 191 7 gyp ERR stack at Process ChildProcess handle onexit internal child process js 215 12 gyp ERR System Windows NT 10 0 15063 gyp ERR command G Installed Node node exe G Installed Node node modules npm node modules node gyp bin node gyp js rebuild gyp ERR cwd D ReactNative f sandbox node modules sharp gyp ERR node v v6 9 2 gyp ERR node gyp v v3 4 0 gyp ERR not ok npm ERR Windows NT 10 0 15063 npm ERR argv G Installed Node node exe G Installed Node node modules npm bin npm cli js install sharp npm ERR node v6 9 2 npm ERR npm v3 10 9 npm ERR code ELIFECYCLE npm ERR sharp 0 17 3 install node gyp rebuild npm ERR Exit status 1 npm ERR npm ERR Failed at the sharp 0 17 3 install script 'node gyp rebuild' npm ERR Make sure you have the latest version of node js and npm installed npm ERR If you do this is most likely a problem with the sharp package npm ERR not with npm itself npm ERR Tell the author that this fails on your system npm ERR node gyp rebuild npm ERR You can get information on how to open an issue for this project with npm ERR npm bugs sharp npm ERR Or if that is not available you can get their info via npm ERR npm owner ls sharp npm ERR There is likely additional logging output above npm ERR Please include the following file with any support request npm ERR D ReactNative f sandbox npm debug log Is there any fix for this whats missing here Also on Stackoverflow 1 2,,aweary,2017-04-28 05:28:02,2017-04-28 16:19:30
PR,Fix proto bug in ReactDOMSelect,,,"sophiebits,sebmarkbage,sophiebits,sebmarkbage,sophiebits",2017-04-27 02:30:40,2017-04-29 15:23:00
PR,docs better indicate that state updaters shallowly merge with state,this was a surprise to me because the docs seemed to indicate that when using an updater the result needed to be a new state object I was not alone i think in discovering this as a result of the previous tweet in the thread i'm open to wording changes and such i debated the final sentence reading The output of the updater is shallowly merged with prevState allowing updaters to return only the subset of state they want to change but it felt awkward i think the other changes get the point across anyway but open to suggestions,,sophiebits,2017-04-28 16:07:49,2017-05-01 00:40:22
IS,Why react changed the behaviour of 'onChange' to behave exactly like 'onInput' when there was already onInput available,Here is what the official docs say about onChange The 'onChange' event behaves as you would expect it to whenever a form field is changed this event is fired We intentionally do not use the existing browser behaviour because 'onChange' is a misnomer for its behaviour and React relies on this event to handle user input in real time onchange But there is already an event which fires on every keystroke i e 'onInput' So I do not understand why react changed the behaviour of 'onChange' to behave as 'onInput' Also in the docs everywhere 'onChange' is used Is there any specific reason for it Are the two completely interchangeable in react Now there is no event with the behaviour of actual 'onchange' Does react intend to correct this in future Here is the code for that,,gaearon,2017-05-01 11:52:01,2017-05-01 12:32:09
PR,Reference process as global is property so webpack users dont get who,I know we have agreed discussion r113145331 that this should wait for React 16 but I have found a way credits to to improve those checks so they produce smaller polyfill when bundled by webpack only global which is few lines of code and not whole process If you agree on the change this commit should be cherry picked into the v15 line Can also be merged into the master as precaution for now if somebody is using already next I have confirmed that bundles are ok tests are passing and this is in fact 'fixing' the whole auto polyfill situation for webpack is users If you decide its not a time for such fix just close the PR cc,,"Andarist,gaearon,benjamn,gaearon",2017-05-01 12:27:46,2017-05-01 12:35:13
PR,Updated a broken link for installation,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,gaearon,2017-04-30 23:41:32,2017-05-01 12:35:57
IS,Getting warning about stroke linecap value,Do you want to request a feature or report a bug Bug What is the current behavior Shows warning to strokeLinecap with value butt when it should not be because it is part of the spec link If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Create a path with strokeLinecap and pass in butt in the value It will show the warning What is the expected behavior It should not show the warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 4,,"aweary,gaearon",2017-05-01 01:13:10,2017-05-01 13:36:09
PR,Update Changelog for v15 5 1 15 5 4,This could really use extra code review attention since the history of these changes was a bit convoluted to follow After talking to and we thought it might make sense to put the 'add ons' changes in a separate change log The other option of including them in the main React change log seemed the more confusing of the two Also this commit is related to and somewhat blocked by Also I will update the release tags after we land some version of a changelog what is the change Adding the change log for recent patch versions of React why make this change We missed this step in the flurry of releasing patches and it is useful for folks who want info about what version to use test plan Visual inspection of the change log issue,,"flarnie,sophiebits,bvaughn,bvaughn,bvaughn,gaearon,gaearon,gaearon,flarnie,flarnie,flarnie,gaearon,flarnie,flarnie,flarnie,flarnie,flarnie,bvaughn,flarnie,gaearon,gaearon,flarnie,flarnie,gaearon,flarnie",2017-04-27 02:43:33,2017-05-01 15:59:42
PR,Tutorial Make it easier to follow the instructions,It is just a few extra lines of code to show the full Square component so I have included it here Ref Also added a note about passing a function vs calling a function This comes up a lot on IRC especially with people coming from angular or with less experience with functions as values,,"brigand,gaearon,brigand,brigand,gaearon,brigand,gaearon,gaearon,gaearon,gaearon,brigand,brigand,brigand,brigand,gaearon,brigand,gaearon,brigand,brigand,brigand,gaearon,brigand,brigand,brigand,gaearon,brigand,brigand,brigand,gaearon,brigand,gaearon,gaearon",2017-04-18 20:42:53,2017-05-01 16:22:27
IS,Spitball ES6 help in tutorial,I was talking with a new React user in IRC and they were having trouble understanding the ES6 in the docs I think using ES6 in the docs is a good idea but what about giving the reader more ability to understand the code Concept react tutorial page react tutorial page with es6 class popup Maybe take text from Babel is ES6 Guide ecmascript 2015 features classes and modify it a bit to fit the surrounding content This could be done across the site but it is most important in the tutorial,,"brigand,gaearon,brigand,gaearon,brigand,gaearon,brigand,gaearon,gaearon,gaearon",2017-04-16 00:37:08,2017-05-01 16:36:28
IS,Mistake in Tutorial Instructions,I'm a struggling learner I have been trying to learn for 4 5 years and still really confused about everything I have not found a good way to learn yet so apologies in advance if this sort of thing is in that category of super obvious to the audience you are aiming to reach with the tutorial I'm trying to follow along with the tutorial about half way down the page it says Now we are passing down two props from Board to Square value and onClick The latter is a function that Square can call So let is do that by changing render in Square to have I think there is a mistake in the instructions It says arender' but there is no render in the Square class There is return The final result you share shows this button in the areturn' Maybe the instructions should replace arender' with areturn' Thanks,,"gaearon,gaearon",2017-03-06 05:44:01,2017-05-01 16:38:06
IS,Guidance on the Tutorial,Apologies first It appears there is already an issue for this in 8904 I'm going to check if there are any PR is detailing this Hi I have followed the tutorial getting started fine up to Storing a History storing a history and I'm confused now as to what to do image Is this telling me to change the renderSquare function inside the Board js component If so is that all that needs changing Or do we change the rest from state to props Is there a completed section somewhere I will be honest I have struggled with the documentation through this and now I have hit this and I'm losing interest any help greatly appreciated,,"gaearon,gaearon",2017-03-31 14:49:59,2017-05-01 16:38:27
PR,Large update to tutorial md is refactor section,So I think this section could use some fleshing out I think this was the hardest section to follow There simply is not enough instruction for beginners to follow along and even worse the removal of status logic from Board was never completed resulting in duplicate statuses in the final code This clarifies some of the major talking points in this section and it fixes the duplicate logic problem in the Board class Lastly it adds a state of code snapshot at the end of this refactor section to help students who may have broken their code along the way Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"lacker,lacker,lacker,lacker,lacker,lacker,gaearon,gaearon",2017-01-14 20:22:05,2017-05-01 16:40:20
IS,Storing A History Incomplete,When user gets to the Storing A History part of the React tutorial the user can easily get lost as the tutorial briefly becomes vague and without example at the point of text shown below Then remove the constructor from Board and change Board so that it takes squares via props and has its own onClick prop specified by Game like the transformation we made for Square earlier You can pass the location of each square into the click handler so that we still know which square was clicked The tutorial should reiterate the steps displaying the final code after Board has been edited as described so that it takes squares via props and has its own onClick prop specified by Game is vague and to someone who has never used React before This step is easier said than done and does not conform to the level of explanation with examples that the previous portions of the tutorial exhibit Long story short this point in the tutorial is where it falls apart and users are likely to just stop out of confusion and move on to some other tutorial This seems to be a critical stepping point that should be ironed out to be more clear and concise,,"acdlite,gaearon,lacker,lacker,gaearon",2017-01-31 18:38:56,2017-05-01 16:41:04
PR,Warning message updated if defaultProps were defined as an instance property,Updated the warning message as per asked for in PR 9433 Updated the warning message in the testcases as well Issue related to 9239,,"abhaynikam,gaearon,aweary,gaearon,gaearon,abhaynikam",2017-04-22 08:05:52,2017-05-01 18:30:41
PR,Do not use fibers as keys for native Map and Set,Most Map and Set polyfills work by adding a hidden field to the key We do not want to do this for fibers because it causes a de opt Because the only case where we use fibers as keys is to keep track of failed error boundaries and the number of failed error boundaries is usually low we can use arrays instead,,"acdlite,sophiebits,sophiebits,acdlite,acdlite",2017-04-29 01:01:49,2017-05-01 18:44:30
IS,Presedence is given to child component props,Do you want to request a feature or report a bug Feature What is the current behavior Button colours are being defined by the ones that are passed in and not by the ones given by definition What is the expected behavior I want the first button to have the colour blue and the rest of them to be green But that does not happen My idea is to create a group colour for the parent for default could and then if needed specifying colours for each component afterwards where needed,,"aweary,aweary",2017-04-30 23:15:13,2017-05-01 18:52:19
IS,Why provide different value of 'this' keyword for onChange event handler and other event handlers like onBlur onClick etc,React binds the 'this' keyword of event handler functions to 'null' explicitly But what I have noticed is it calls the function associated with 'onChange' event with 'this' as 'undefined' For other events such as 'onClick' 'onBlur' the value of 'this' is bound to 'null' as usual But there is no extra call to make 'this' as 'undefined' in the associated handler function What could be the reason for this Is this a bug Although both 'null' and 'undefined' are not of any use to the developer as we have to bind it explicitly Here is the link for the code on jsfiddle,,"gaearon,gaearon,gaearon,gaearon,aweary",2017-04-25 12:00:26,2017-05-01 19:01:30
PR,Do not prevent extensions on Fiber if using bad Map polyfill,Many Map polyfills work by adding an extra field to the key type In the future we will likely print a warning,,acdlite,2017-05-01 19:47:32,2017-05-01 20:23:38
PR,Move AsyncUpdates flag check to class only path,r114145436,,acdlite,2017-05-01 18:11:45,2017-05-01 20:23:55
PR,Change warning casing,Minor patch to 9493,,"gaearon,gaearon",2017-05-01 20:50:26,2017-05-01 20:51:47
IS,BUG ref function gets called twice on update but not on first mount first call with null value,gaearon You are arguing that ref functions need to be called twice once with null due to internal implementation details that are insignificant with respect to how end users use React End user do not care how their ref functions are called just that they work Honestly having them called twice is strange from a perspective of an end user who knows nothing about React is internal implementation You have not stated why end users actually need to guard against null values from duplicate calls to ref functions It only complicates end user code I would urge for the internal implementation to be modified to stop calling ref functions twice,,gaearon,2017-05-01 20:58:17,2017-05-01 21:01:40
PR,Fix typo in tutorial under Functional Components,Simple typo correction,,gaearon,2017-05-01 21:29:56,2017-05-01 21:30:16
IS,Q Security of controlled inputs for secrets,Hi I just run into an issue with controlled password fields when adding user tracking software to my app Generally speaking such trackers are going to claim that they do not capture text inputs They achieve that by simply ignoring values of change events they will still however record the fact that the event has occurred together with a selector uniquely identifying it is target When an input is controlled the value attribute in the markup is going to change resulting in a tracking software capturing it as part of the selector some input type password value mypassword which brings me to my question what are the security implications of having the value accessible not only via HTMLInputElement value but also by the virtue of parsing the markup Thanks K,,"aweary,aweary",2017-01-10 14:25:00,2017-05-01 21:52:48
IS,ReactClassEquivalence tests fail on Node v7 3 0,As the title says ReactClassEquivalence tests the same thing for es6 classes and CoffeeScript fails when run on Node v7 3 0 I can confirm that the tests pass on v6 9 3 v7 0 0 v7 1 0 and v7 2 0 I have included the output of the failing tests below and I briefly discussed the problem in 8667 where he confirmed the failing behavior,,"gaearon,gaearon",2017-01-09 05:46:26,2017-05-01 21:53:50
IS,separate out reactJS style inline styling css style styling as another npm module,First of all thanks for making ReactJS and spreading its core ideas to others Anyway the gist of this issue is how about separating out other files for styling into another npm module Here is my situation I'm using RxJS React for animation and I'm using a direct to dom method for performance I did it by creating a 'StyleStreamedComponent' which can be used like this ps separating out those CSS utility functionalities into a npm module might be helpful to other library maintainers authors as well,,aweary,2017-01-08 14:23:59,2017-05-01 22:00:07
IS,Components need key attribute,Do you want to request a feature or report a bug Bug What is the current behavior I have created a Dropdown component that receives a value and an array of options as props In MyComponent I render a multi step form currentStep is saved in state object When you switch between steps and MyComponent is re rendered Dropdown component keeps state from previous component instance For example on one step Dropdown component is giving you options for Font Family and on next step for Font Size I fixed this bug with setting key 1 key 2 etc on each Dropdown component Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 0 9 1 Chrome 54 0 Mac OS Sierra 10 12 1 I am not sure if I am doing something wrong here or is it a bug,,"brigand,aweary",2016-12-07 16:36:09,2017-05-01 22:05:04
IS,jquery bootstrap is not working,Do you want to request a feature or report a bug What is the current behavior Just run the example jquery bootstrap is not working What is the expected behavior jquery bootstrap is not working and showing blank page version 15 4 1 and OS Windows 7,,aweary,2016-12-31 03:52:17,2017-05-01 22:06:44
PR,Fix bug where null props is passed to constructor when resuming mount,Another example of where the pending progressed memoized props model would benefit from a refactor TODO unit test,,acdlite,2017-05-01 22:00:03,2017-05-01 22:55:58
IS,Uncaught TypeError Super expression must either be null or a function not undefined,when i npm install openseadragon annotations and i use import 'openseadragon annotations' in my project and its show error in chrome console Uncaught TypeError Super expression must either be null or a function not undefined how should i do thanks everyone,,gaearon,2017-05-02 06:11:38,2017-05-02 13:14:41
PR,Docs Show the name 'React' first in the homepage is title,I have increased the usability of the homepage is title so that the name 'React' is still visible a shorter browser tab This should also increase visibility when people are searching for 'React' Short and sweet,,"joecritch,gaearon,joecritch,gaearon",2017-05-02 11:05:45,2017-05-02 13:22:25
PR,Report version and bundle type to DevTools,This lets us do in a more future proof way,,"gaearon,bvaughn,gaearon,iamdustan,gaearon",2017-05-02 19:18:30,2017-05-02 19:34:10
IS,UI Tracking for React,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2017-05-02 21:57:43,2017-05-03 00:35:50
PR,Add more info about building for production,I just went ahead and tried all these approaches Turns out adding Uglify to each of these is not as easy as it might seem so I included that in the instructions now,,gaearon,2017-05-03 09:23:27,2017-05-03 10:01:54
PR,Add DEV mode note to installation doc 8784,gaearon First pass at adding a note to the installation guide reminding folks to use production mode flags I have initially placed this before the install steps as it is a pretty prominent place Any feedback welcome image,,"addyosmani,gaearon,addyosmani,addyosmani,gaearon,addyosmani,gaearon,gaearon,addyosmani,gaearon,gaearon,addyosmani",2017-03-11 05:48:02,2017-05-03 10:03:05
IS,Tag 15 5 1 2 3 4 update docs,Looks like the git tags were missed in the followup 15 5 x releases and the website still says 15 5 0 is the latest I would do it myself but just in case there are other things that happen these days I will let you all handle it,,"zpao,gaearon,zpao,flarnie,flarnie,flarnie,zpao,gaearon",2017-04-16 19:25:42,2017-05-03 14:43:52
PR,Add 'unreleased' incremental change log for v15 6 0,what is the change Adding a section to the change log where we start accumulating annotations for React v15 6 0 why make this change Saves us the trouble of writing the change log entry all at once when we do the release Adds transparency about what is in the upcoming release for those who are not following test plan Visual inspection issue,,"flarnie,gaearon,gaearon,gaearon,flarnie,flarnie,flarnie,gaearon,gaearon,flarnie,gaearon,flarnie",2017-04-27 17:30:20,2017-05-03 16:00:37
IS,Add 'DEV' flag,We want to have a check for whether React is in 'DEV' mode which would work for all previous versions of React,,"flarnie,gaearon,gaearon,gaearon,gaearon",2017-05-01 17:42:30,2017-05-03 16:43:45
PR,Remove loose check on non number controlled inputs Fix trailing dot issue,In I added a loose check before assigning the value attribute on all controlled inputs This was originally added to account for some edge cases in Chrome Safari when working on number inputs see the discussion However at some point I added a specific check for number inputs and never removed this check for other input types So that created an issue This commit removes that loose check adds tests for the associated cases and updates old tests to be in line with the new expectation I also added a new DOM test fixture and updated the input DOM fixtures to use the new format we are using in other tests Test page Related issues,,"nhunzaker,brigand,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,aweary,gaearon,aweary,nhunzaker,gaearon,gaearon,aweary,gaearon,flarnie,aweary",2017-05-02 12:37:54,2017-05-03 18:37:57
IS,setSelectionRange is not a function,Do you want to request a feature or report a bug Report a bug What is the current behavior Trying to move the cursor in a contenteditable div calling setSelectionRange on that div throws a TypeError Example code What is the expected behavior Caret is moved setSelectionRange is a function Environments tested on React 15 5 4 Chrome 57 Safari 10 macOS Sierra,,,2017-05-03 19:32:20,2017-05-03 19:34:46
PR,Update Flow to 0 45,,,acdlite,2017-05-04 06:21:46,2017-05-04 18:31:14
IS,Warn about overwriting React component is instance property updater,Do you want to request a feature or report a bug feature What is the current behavior React component silently overwrites instance property updater What is the expected behavior It would be very useful to raise a warning in DEV mode for such a case Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 4 2 Did this work in previous versions of React Yes,,"acdlite,acdlite,acdlite,acdlite",2017-03-13 14:30:50,2017-05-05 00:24:38
IS,SUGGESTION Return a promise,It would be nice if you could return a promise that resolves to a component in the render function or as the return value of a stateless functional component It might be complex because components need to rerender and promises get cached when they resolve,,"gaearon,gaearon",2017-05-05 04:58:02,2017-05-05 11:52:39
IS,How to get PropType info from a Component even built in is,Do you want to request a feature or report a bug Feature What is the current behavior Unknown If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior It would be nice if there was something like PropTypes getPropTypes Component that would accept a component and return its PropType definitions This should work for anything including default HTML element types Something like Even better would be if it worked with elements as well but that seems like you could just hit the element is prototype Currently I can not find a good way to do an extension and retain the prop types of the default component and or a way to get prop types from HTML elements Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react dom 15 5 4,,"gaearon,gaearon,gaearon",2017-05-05 13:27:56,2017-05-05 13:42:22
IS,There is no possibility to catch start stop pull to refresh gesture event of RefreshControl component,Do you want to request a feature or report a bug Feature What is the current behavior There is no possibility to catch start stop pull to refresh gesture event of RefreshControl component What is the expected behavior Would be great have something like onPullStart and onPullEnd event to know the moment of start stop pull to refresh gesture Related question on stackoverflow 3,,,2017-05-05 08:59:13,2017-05-05 14:00:43
IS,how to remove the warnings in v15 5 4 of unminified file,react js 3287 Warning Accessing PropTypes via the main React package is deprecated Use the prop types package from npm instead Warning LazyRenderBox React createClass is deprecated and will be removed in version 16 Use plain JavaScript classes instead If you are not yet ready to migrate create react class is available on npm as a drop in replacement,,"gaearon,gaearon,gaearon",2017-05-05 06:22:21,2017-05-05 16:30:11
PR,Fix sequencing in the Tutorial,This slightly tweaks it because otherwise it falls apart when you try to follow,,gaearon,2017-05-05 16:59:02,2017-05-05 17:02:13
PR,Fix horizontal scrolling in docs,Have not verified but should make this page better on mobile,,gaearon,2017-05-05 11:50:38,2017-05-05 17:03:39
PR,Do not recreate instance when resuming a class component is initial mount,Recreating the class instance causes refs and other callbacks to close over stale instances Instead re use the previous instance componentWillMount is called again We also call componentWillReceiveProps to ensure that state derived from props remains in sync,,"acdlite,sebmarkbage,sebmarkbage",2017-05-05 00:18:32,2017-05-05 21:04:18
PR,Fix return value of ReactDOMFiber unmountComponentAtNode,,,sophiebits,2017-05-06 00:13:27,2017-05-06 00:54:53
IS,Why does ReactDOMComponent get compiled to react dom server development and not react dom development,If this is the wrong place to ask this please let me know If I put a line like In src renderers dom stack client ReactDOMComponent js and then I run npm run build then search for OIJWEIOJAREAIJWOE in the build directory it appears only in build dist react dom server development js or build dist react dom server production js Why,,gaearon,2017-05-05 20:54:59,2017-05-06 14:10:18
IS,onCancel event,I do not see the onCancel event in the list of supported events Would it be possible to add it in the list It is used by the Dialog element the dialog element already available in Chrome,,"jimfb,jimfb,mxstbr,syranide,cbrwizard,aweary,aweary",2016-02-17 01:12:02,2017-05-06 19:24:29
PR,Update forms docs to include info about multiple selected options,This is my first pull request I have completed the CLA as well as the other steps required by the contribution documentation This is for the issue Better docs for select multiple 1700,,,2017-04-29 13:52:22,2017-05-07 12:02:58
IS,react PATENTS suck,What is wrong with you people who puts this sort of indirect limitation on an open source project I just started to use react and I love it why on earth this I do not have the right words for it So if Facebook breaks the rules they will break my projects this is a lowest thing ever done by you Facebook Maybe it is not code related but it is a developer potential abuse,,"gaearon,gaearon",2017-05-07 18:52:19,2017-05-07 19:23:41
IS,Supporting all of v15 without warnings,Coming in from the Twitters at the behest of This is not meant to be a discussion about what Really counts a breaking change or how to interpret Semver Instead I just want to share a use case and situation that has is causing me pain using React v15 I have a situation with an app that is stuck at v15 1 Before Unknown DOM prop warning Yes it is old yes they should upgrade There is not always the time bandwidth or business case to spend time quieting the warnings Now with v15 5 out everyone is updating libraries and apps to use prop types instead of React PropTypes The problem is that prop types does not work on v15 below 15 3 you get 100s of Do not Call PropTypes warnings There are two issues from my perspective with this situation From an app author My options are to chose between which warning I want flooding the console Unknown prop or Do not call PTs Most libraries are not considering the change to prop types a major bump reasonable so any feature and patch updates are getting rolled in with the prop type fix So To avoid warnings I need to pin all my react component libraries and miss out on bug fixes or deal with warnaggedon until there is bandwidth to upgrade everything to react latest From a library maintainer This has been covered at length before but the pressure to fix deprecation warnings in libraries immediately is real and stressful In this case the upgrade path for prop types is super easy thanks codemod so you do it and release Without realizing it though you have actually just upped the minimal required react peer of your library to 15 3 since anything below that 0 14 will warn forever That is a tough spot to be in while the swap of the dep is not a breaking change changing the minimal React version required feels more like one What even do we do I do not know It is a hard problem For me tho I think a reasonable rule of thumb might be that a library using only public APIs should be able to support an entire major version of React without unfixable deprecation warnings If React major versions happened faster I would be for a introduce warnings on major bumps and remove them on the next major bump We do that in react bootstrap and it is annoying and i'm impatient but it is a strategy that has worked out well for users The system feels fair and no one gets new warnings introduced accidentally by a fresh npm install Thanks ya will overall warnings are great I have always appreciated how much care and time React takes to tell me what is going on and what I need to fix,,"jquense,gaearon,jquense,gaearon,flarnie,gaearon,gaearon",2017-04-20 14:13:47,2017-05-08 12:44:44
PR,Deduplicate unknown prop warning to ease pain of version updates,Note There are other PRs open to fix some failing tests and I expect to rebase on top of those and fix any remaining failures before landing Hope folks can review this anyway in light of this Some widely used libraries which depend on React have used syntax that ends up passing non standard props to default React components like wouldom' and wouldiv' For example Since we started throwing warnings for this syntax in Reactv15 2 some libraries have not upgraded past v15 2 Now because of deprecations in 15 5 some libraries will only work with Reactv15 5 and this causes a conflict when other libraries are pinned at v15 1 The overall effect is that either there are version conflicts or the unknown prop warning is thrown all over the place and users of these libraries can not fix the warnings See for more context We are deduping this warning in hopes that it allows more library authors to update to the latest version of React React v16 0 may take a different approach to this issue For some related discussion see Test Plan Added a unit test Manually tested with a fixture that was not committed Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"flarnie,sophiebits,gaearon,flarnie,gaearon,flarnie,gaearon",2017-04-22 00:31:04,2017-05-08 12:45:46
PR,Add React benchmarking infrastructure,This is currently a WIP and is not yet complete The aim of this PR is to give us better tracking of performance and bundle sizes as we make changes to the React codebase To do this new infrastructure is needed to validate our code changes against pre defined benchmarks We can do this using Google is Lighthouse tool performance markers in the benchmarks an automated build process For now the benchmarking script does a build and benchmark run comparing the local React repo and a remote merge base React repo The end goal is to have this process run on a CI pipeline which can provide us feedback in builds PRs so we have constant feedback in regards to performance improvements and regressions To test how this works run yarn bench From the branch on this PR It should take a few minutes to run and report back the performance metrics of local and remote merge base There are still things that need to be finished x Provide a better visual output of results when yarn bench is run x Add bundle size comparison checks and remove the existing code for showing branches from the Rollup build process it will become redundant with this feature x Add more benchmarks other than the functional components benchmark x Add bootstrapped sampled data over results to help show confidence in figures x Add additional CLI options to better refine bench runs,,"trueadm,sophiebits,sophiebits,trueadm,trueadm,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,trueadm,trueadm,trueadm,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,trueadm,trueadm,gaearon,trueadm,sophiebits,trueadm,sophiebits,gaearon,trueadm,sophiebits,sophiebits,trueadm,trueadm,sophiebits,trueadm,gaearon,gaearon,trueadm,gaearon,gaearon",2017-04-20 14:10:10,2017-05-09 16:13:55
PR,Add PR 9584 to 15 6 change log,Updating the change log issue,,flarnie,2017-05-03 20:12:47,2017-05-09 17:22:17
PR,Add PR 8356 to the change log for v15 6,Another change log update v15 6 is closer than ever Issue,,flarnie,2017-05-09 17:31:38,2017-05-09 17:54:46
PR,Sync RN downstream fix,This syncs Let is merge when it lands,,gaearon,2017-05-09 18:22:36,2017-05-09 19:29:38
IS,Rename ReactEventListener to ReactDOMEventListener,Currently ReactEventListener is a DOM specific module but it has a generic sounding name that is confusing to contributors i e confusing to me Let is rename it to ReactDOMEventListener This should be pretty easy just rename the file and update and re sort the imports spiess is working on this task,,"sophiebits,philipp-spiess,sophiebits",2017-05-09 21:05:49,2017-05-09 23:17:04
PR,Rename ReactEventListener to ReactDOMEventListener,Closes 9639 ReactEventListener is a DOM specific module although the name suggests otherwise This change renames the module to the more specific ReactDOMEventListener,,"philipp-spiess,sophiebits,philipp-spiess",2017-05-09 22:12:47,2017-05-09 23:17:04
PR,Add browserify transform,Related to This tells browserify to remove process env NODE ENV conditionals during bundling for create react class and react addons create fragment,,gaearon,2017-05-09 23:34:10,2017-05-09 23:49:59
IS,External packages not transforming process env NODE ENV,Do you want to request a feature or report a bug Bug What is the current behavior process env NODE ENV checks are being shipped to the browser What is the expected behavior In React there is a browserify transform that converts process env NODE ENV to the actual environment variable In package json of React Packages x prop types x create react class x react addons create fragment x react transition group,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-05-09 22:49:41,2017-05-10 00:00:08
PR,Mention new fixes for addons in Changelog,This mentions We are still trailing React version in addons so I added these to a past release I will deprecate the earlier versions for these addons now,,gaearon,2017-05-10 00:03:27,2017-05-10 00:03:35
IS,Need to know when react 16 will get released,This is not bug or feature I have search a lot on internet to find out the release date of React 16 Can you please mention about it I tried to check where I can raise this question but did not any forum for such questions So raising here Thanks Kalpana,,"bjrmatos,gaearon",2017-05-10 05:14:05,2017-05-10 07:06:44
PR,Fix typo in tutorial md,The absence of the word this will cause CodePen to scream at you This fix should avoid that,,gaearon,2017-05-10 03:52:03,2017-05-10 07:23:53
IS,Why my page is state changed in some case while I did not use setState,I create Class Message in a Message jsx file and its component TestInput behind it When I click the Click button in TestInput Component it push a click string to its state Then I click show click result button in Message page it console the state as click But I did not use setState method in Message I use React with version 15 4 2 PS Maybe there was an issue like this could someone me and I would close mine,,"gaearon,gaearon,gaearon",2017-05-10 09:18:48,2017-05-10 09:22:59
IS,How to use localStorage in componentWillMount,I am learning react js and i want to check if authentication token is set or not in localStorage before the component renders Currently i am trying to do it inside componentWillMount method but it gives me warning that localStorage is not defined So how can i access localStorage,,aweary,2017-05-10 10:22:19,2017-05-10 15:49:42
IS,Class comparison only works when NODE ENV production,I would like to report a bug React type class comparison only seems to work when the NODE ENV is set to production I have created a repo to illustrate the bug here I expect the type class comparison to work regardless of what NODE ENV is set to,,"gaearon,gaearon,gaearon",2017-05-10 16:20:43,2017-05-10 16:26:36
IS,Fiber Custom ReactFiberReconciler renderer receives old props in commitUpdate after setState in parent component,Hi I am not sure if this is a bug or not probably I am doing something wrong just want to make sure I am trying to create a PaperJS bridge for React based on ReactARTFiber I am running Ubuntu 16 04 Chrome Version 58 0 3029 96 64 bit and using a hacked version of React 16 0 0 alpha 12 where I export ReactFiberReconciler through react dom I know about 9103 how can we import ReactFiberReconciler in the mean time Anyway below is the code for my App App component has a changePathColor method where I do this setState strokeColor newColor which triggers a re render but the commitUpdate function in PaperRenderer receives the old value for strokeColor BTW I have some other questions what would be the best place to ask or learn more about fiber apart from the source code,,gaearon,2017-05-10 10:57:05,2017-05-10 18:14:54
IS,onResize event on object s is missing,I get the unknown prop warning Warning Unknown prop onResize on object tag But as best I can tell this is actually something that should be expected to work since browsers support it on object I also found a post from someone discussing this behavior I looked at the HTML5 spec and after a cursory glance it apparently tells me it might actually be supported on many more elements But it also tells me the event is a bit complicated So should this work or should this not work I'm not looking for a workaround but if this is indeed a bug as I expect I would rather fix it than work around it,,,2017-05-10 21:35:08,2017-05-10 21:51:54
PR,Remove injectReactDOMEventListener from ReactBrowserEventEmitter,Follow up of 9640 This PR removes the injection of ReactDOMEventListener from ReactBrowserEventEmitter Instead the required initialization will happen directly in ReactDOMInjection This injection was probably originally implemented for React Native but never used so we can clean it up I played around with the test cases in the dom fixtures Seems to work fine I only had to move the initialization to ReactDOMEventListener setHandleTopLevel to ReactDOMInjection Finding out that I had to update the exports in ReactDOMFiber js as well took me a little longer I ran the record tests script saw it was all red and could not find a way to see the error output hence the second commit Running the build job did very minimally update scripts rollup results json I have attached the file to the PR but feel free to remove it tell me to remove it Please tell me if there is anything else I can do,,philipp-spiess,2017-05-10 22:30:06,2017-05-11 00:05:39
IS,TypeError Cannot read property 'updater' of undefined,Do you want to request a feature or report a bug Bug report What is the current behavior TypeError Cannot read property 'updater' of undefined img width 527 alt screen shot 2017 05 10 at 22 59 47 src To reproduce I cant provide the url of the post but I guess it doesnt matter Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome Version 58 0 3029 96 64 bit react 15 5 4 react dom 15 5 4,,koba04,2017-05-10 21:02:53,2017-05-11 04:17:17
PR,Move small utility modules out of ReactDOM Fiber Component,These are all going to be needed in the server renderer so I'm moving them out now so I can use them from in there,,"tomocchino,sophiebits,tomocchino",2017-05-11 00:36:36,2017-05-11 05:01:49
IS,ReactNative snapshot tests failing locally for me on 'master' branch,Do you want to request a feature or report a bug This is probably some kind of bug with our tests What is the current behavior When I run npm run test ReactNative there are two failing snapshot tests The failures have to do with escape characters that seem to be missing from the generated snapshot See the below screenshot screen shot 2017 05 10 at 5 53 53 pm If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template On my machine npm run test ReactNative on the latest master branch What is the expected behavior The snapshot tests should pass just as they are passing in CircleCI,,"flarnie,flarnie,flarnie",2017-05-10 16:56:13,2017-05-11 09:38:46
IS,Libjsc so has a segment error when my android application is running very low probability,05 11 13 56 54 886 1412 1412 I DEBUG r0 4ead1848 r1 4c42a328 r2 4c673800 r3 00000000 05 11 13 56 54 886 1412 1412 I DEBUG r4 4c672838 r5 4c42a328 r6 00000002 r7 4bd97fb9 05 11 13 56 54 887 1412 1412 I DEBUG r8 4c672834 r9 4c42a614 sl 4e588fdd fp 00000000 05 11 13 56 54 887 1412 1412 I DEBUG ip 7ffffff4 sp 4c42a278 lr 4add341b pc fffffffe cpsr a00f0030 05 11 13 56 54 887 1412 1412 I DEBUG d0 4052000000000000 d1 40527fffffffffff 05 11 13 56 54 888 1412 1412 I DEBUG d2 0000000000000000 d3 0000000000000000 05 11 13 56 54 888 1412 1412 I DEBUG d4 4275bf614dd62000 d5 7fffffff498f861a 05 11 13 56 54 888 1412 1412 I DEBUG d6 41dfffffffc00000 d7 0000004800000048 05 11 13 56 54 889 1412 1412 I DEBUG d8 4aea39e0fffffffb d9 4082555560000000 05 11 13 56 54 889 1412 1412 I DEBUG d10 0000000000000000 d11 0000000000000000 05 11 13 56 54 889 1412 1412 I DEBUG d12 0000000000000000 d13 0000000000000000 05 11 13 56 54 890 1412 1412 I DEBUG d14 0000000000000000 d15 0000000000000000 05 11 13 56 54 890 1412 1412 I DEBUG d16 7e37e43c8800759c d17 7e37e43c8800759c 05 11 13 56 54 890 1412 1412 I DEBUG d18 0083009600bb00e1 d19 0000000000000000 05 11 13 56 54 891 1412 1412 I DEBUG d20 0000000000000000 d21 000aaaa8000aaaa8 05 11 13 56 54 891 1412 1412 I DEBUG d22 0000000000000000 d23 0000000000000000 05 11 13 56 54 892 1412 1412 I DEBUG d24 0000000000000000 d25 0000002a00000029 05 11 13 56 54 892 1412 1412 I DEBUG d26 0707070703030303 d27 991f1f1f991f1f1f 05 11 13 56 54 893 1412 1412 I DEBUG d28 991f1f1f991f1f1f d29 0000002900000028 05 11 13 56 54 893 1412 1412 I DEBUG d30 009b40270095c026 d31 00a5c02a00a08029 05 11 13 56 54 894 1412 1412 I DEBUG scr 20000013 05 11 13 56 54 898 1412 1412 I DEBUG 00 pc fffffffe unknown 05 11 13 56 54 898 1412 1412 I DEBUG 01 pc 000ff417 data app lib com amt launcherah special 2 libjsc so 05 11 13 56 54 898 1412 1412 I DEBUG 02 pc fffffff9 unknown 05 11 13 56 54 898 1412 1412 I DEBUG 4c42a238 5b9d99e0 05 11 13 56 54 898 1412 1412 I DEBUG 4c42a23c fffffffb 05 11 13 56 54 898 1412 1412 I DEBUG 4c42a240 60b575a0 05 11 13 56 54 899 1412 1412 I DEBUG 4c42a244 fffffffb 05 11 13 56 54 899 1412 1412 I DEBUG 4c42a248 fffffffc 05 11 13 56 54 899 1412 1412 I DEBUG 4c42a24c fffffffb 05 11 13 56 54 899 1412 1412 I DEBUG 4c42a250 4aea39e0 data app lib com amt launcherah special 2 libjsc so 05 11 13 56 54 900 1412 1412 I DEBUG 4c42a254 4c672838 05 11 13 56 54 900 1412 1412 I DEBUG 4c42a258 4c42a328 stack 20725 05 11 13 56 54 900 1412 1412 I DEBUG 4c42a25c 00000002 05 11 13 56 54 900 1412 1412 I DEBUG 4c42a260 4bd97fb9 05 11 13 56 54 900 1412 1412 I DEBUG 4c42a264 4c672834 05 11 13 56 54 901 1412 1412 I DEBUG 4c42a268 4c42a614 stack 20725 05 11 13 56 54 901 1412 1412 I DEBUG 4c42a26c 4e588fdd 05 11 13 56 54 901 1412 1412 I DEBUG 4c42a270 00000000 05 11 13 56 54 901 1412 1412 I DEBUG 4c42a274 ffffffff 05 11 13 56 54 902 1412 1412 I DEBUG 00 4c42a278 4aea39e0 data app lib com amt launcherah special 2 libjsc so 05 11 13 56 54 902 1412 1412 I DEBUG 05 11 13 56 54 902 1412 1412 I DEBUG 01 4c42a278 4aea39e0 data app lib com amt launcherah special 2 libjsc so 05 11 13 56 54 902 1412 1412 I DEBUG 4c42a27c 4c672838 05 11 13 56 54 903 1412 1412 I DEBUG 4c42a280 4c42a298 stack 20725 05 11 13 56 54 903 1412 1412 I DEBUG 4c42a284 00000002 05 11 13 56 54 904 1412 1412 I DEBUG 4c42a288 4bd97fb9 05 11 13 56 54 904 1412 1412 I DEBUG 4c42a28c 4c672834 05 11 13 56 54 905 1412 1412 I DEBUG 4c42a290 4c42a614 stack 20725 05 11 13 56 54 905 1412 1412 I DEBUG 4c42a294 4e0cd697 05 11 13 56 54 905 1412 1412 I DEBUG 4c42a298 4c42a328 stack 20725 05 11 13 56 54 906 1412 1412 I DEBUG 4c42a29c 4e5885e7 05 11 13 56 54 906 1412 1412 I DEBUG 4c42a2a0 00000000 05 11 13 56 54 907 1412 1412 I DEBUG 4c42a2a4 fffffffb 05 11 13 56 54 907 1412 1412 I DEBUG 4c42a2a8 589c30b0 05 11 13 56 54 908 1412 1412 I DEBUG 4c42a2ac fffffffb 05 11 13 56 54 908 1412 1412 I DEBUG 4c42a2b0 5b9d99e0 05 11 13 56 54 908 1412 1412 I DEBUG 4c42a2b4 fffffffb 05 11 13 56 54 908 1412 1412 I DEBUG 05 11 13 56 54 908 1412 1412 I DEBUG 02 4c42a2d8 4e005600 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2dc fffffffb 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2e0 00000000 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2e4 fffffffc 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2e8 00000000 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2ec fffffffc 05 11 13 56 54 909 1412 1412 I DEBUG 4c42a2f0 00000000 05 11 13 56 54 910 1412 1412 I DEBUG 4c42a2f4 fffffffc 05 11 13 56 54 910 1412 1412 I DEBUG 4c42a2f8 00000000 05 11 13 56 54 910 1412 1412 I DEBUG 4c42a2fc fffffffc 05 11 13 56 54 910 1412 1412 I DEBUG 4c42a300 00000000 05 11 13 56 54 910 1412 1412 I DEBUG 4c42a304 fffffffc 05 11 13 56 54 911 1412 1412 I DEBUG 4c42a308 00000000 05 11 13 56 54 911 1412 1412 I DEBUG 4c42a30c fffffffc 05 11 13 56 54 911 1412 1412 I DEBUG 4c42a310 00000000 05 11 13 56 54 911 1412 1412 I DEBUG 4c42a314 fffffffc 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1828 fffffff1 fffffff0 00000014 4ec0c1f0 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1838 00000018 00000000 00000000 4dc5d440 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1848 4ad83887 fffffff4 fffffff2 fffffff1 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1858 00007c08 4ad86f57 fffffff6 fffffff6 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1868 00000002 00000012 4de5e3fc 00000000 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1878 5c71e48c 4dc5d460 4ad85af7 fffffff6 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1888 00000009 00000002 00000000 00000000 05 11 13 56 54 912 1412 1412 I DEBUG 4ead1898 4ad85c49 fffffff6 fffffff6 00000009 05 11 13 56 54 912 1412 1412 I DEBUG 4ead18a8 00000002 00000000 fffffff9 4dc5d480 05 11 13 56 54 912 1412 1412 I DEBUG 4ead18b8 4ad85af7 fffffff5 00000004 00000002 05 11 13 56 54 912 1412 1412 I DEBUG 4ead18c8 00000001 4e06ff60 4ad85c49 fffffff4 05 11 13 56 54 913 1412 1412 I DEBUG 4ead18d8 fffffff5 00000004 00000002 00000000 05 11 13 56 54 913 1412 1412 I DEBUG 4ead18e8 fffffff5 4dc5d4a0 4ad84499 fffffff5 05 11 13 56 54 913 1412 1412 I DEBUG 4ead18f8 fffffff4 00000015 4c814cc0 00000018 05 11 13 56 54 913 1412 1412 I DEBUG 4ead1908 00000000 00000000 4dc5d4c0 4ad84499 05 11 13 56 54 913 1412 1412 I DEBUG 4ead1918 fffffff5 fffffff5 00000016 4c8151c0 05 11 13 56 54 913 1412 1412 I DEBUG 4c42a308 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 913 1412 1412 I DEBUG 4c42a318 00000000 fffffffc 53f832c0 fffffffb 05 11 13 56 54 913 1412 1412 I DEBUG 4c42a328 4c42a398 4ef2a5d3 4d76c780 fffffffc 05 11 13 56 54 913 1412 1412 I DEBUG 4c42a338 53f832c0 fffffffb 4e004f70 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a348 00000003 4ead184c 4df7fa40 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a358 000007c1 ffffffff 00000000 ffffffff 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a368 4e004f70 fffffffb 00000000 fffffffc 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a378 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a388 00000070 ffffffff 00000000 fffffffc 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a398 4c42a408 4e8c4a6d 4de57480 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3a8 4e06ff60 fffffffb 4e004f40 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3b8 00000002 4d6473c8 4df7fa40 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3c8 502ae8f0 fffffffb 00000000 fffffffc 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3d8 4e004f40 fffffffb 4c8dff80 fffffffb 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3e8 4e004f40 fffffffb 00000000 fffffffc 05 11 13 56 54 914 1412 1412 I DEBUG 4c42a3f8 4df7fa40 fffffffb 00000000 fffffffc 05 11 13 56 54 915 1412 1412 I DEBUG 4c6737e0 00000000 00000000 00000000 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c6737f0 00000000 bff00000 00000000 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673800 00000000 00000000 00000000 7ff80000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673810 00000000 4c6690e0 4bd90008 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673820 0000d80d 00010101 4c42a8d4 00020000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673830 4c34d000 4c424920 00000000 fffffffa 05 11 13 56 54 915 1412 1412 I DEBUG 4c673840 00000000 4c66c828 00000000 4c679ea0 05 11 13 56 54 915 1412 1412 I DEBUG 4c673850 00000000 00000000 00000000 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673860 00000000 00000000 00000000 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673870 00000001 00000000 00000000 00000000 05 11 13 56 54 915 1412 1412 I DEBUG 4c673880 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c673890 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c6738a0 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c6738b0 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c6738c0 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c6738d0 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c672818 00000000 00000000 00000000 00000000 05 11 13 56 54 916 1412 1412 I DEBUG 4c672828 00000000 00000001 00000000 4c42a5c0 05 11 13 56 54 916 1412 1412 I DEBUG 4c672838 4c42a328 00000000 4c7d2010 4c7d2020 05 11 13 56 54 916 1412 1412 I DEBUG 4c672848 4c7d2030 4c7d2040 4c7d2050 00000000 05 11 13 56 54 917 1412 1412 I DEBUG 4c672858 4c7d2060 4c7d2070 4c7d2080 4c7d2090 05 11 13 56 54 917 1412 1412 I DEBUG 4c672868 4c7d20a0 4c7d20b0 4c7d20c0 4c7d20d0 05 11 13 56 54 917 1412 1412 I DEBUG 4c672878 4c7d20e0 4c7d20f0 4c7d2100 4c7d2110 05 11 13 56 54 917 1412 1412 I DEBUG 4c672888 4c7d2120 4c7d2130 4c7d2140 4c7d2150 05 11 13 56 54 917 1412 1412 I DEBUG 4c672898 4c7d2160 4c7d2170 4c7d2180 4c7d2190 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728a8 4c7d21a0 4c7d21b0 4c7d21c0 4c7d2210 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728b8 4c66b2a0 4c676400 4c6789b0 4c85ffe0 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728c8 4c85dfc0 4c85dfa0 4c85df80 4c85df60 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728d8 4c85df40 4c85df20 4c85df00 4c85dee0 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728e8 4c85dec0 4c85dea0 4c85de80 4c85ffc0 05 11 13 56 54 917 1412 1412 I DEBUG 4c6728f8 4c85ffa0 4c85ff80 4c85ff60 4c85ff40 05 11 13 56 54 917 1412 1412 I DEBUG 4c672908 4c85ff20 4c85ff00 4c85fee0 4c85fec0 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a308 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a318 00000000 fffffffc 53f832c0 fffffffb 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a328 4c42a398 4ef2a5d3 4d76c780 fffffffc 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a338 53f832c0 fffffffb 4e004f70 fffffffb 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a348 00000003 4ead184c 4df7fa40 fffffffb 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a358 000007c1 ffffffff 00000000 ffffffff 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a368 4e004f70 fffffffb 00000000 fffffffc 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a378 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a388 00000070 ffffffff 00000000 fffffffc 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a398 4c42a408 4e8c4a6d 4de57480 fffffffb 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a3a8 4e06ff60 fffffffb 4e004f40 fffffffb 05 11 13 56 54 918 1412 1412 I DEBUG 4c42a3b8 00000002 4d6473c8 4df7fa40 fffffffb 05 11 13 56 54 919 1412 1412 I DEBUG 4c42a3c8 502ae8f0 fffffffb 00000000 fffffffc 05 11 13 56 54 919 1412 1412 I DEBUG 4c42a3d8 4e004f40 fffffffb 4c8dff80 fffffffb 05 11 13 56 54 919 1412 1412 I DEBUG 4c42a3e8 4e004f40 fffffffb 00000000 fffffffc 05 11 13 56 54 919 1412 1412 I DEBUG 4c42a3f8 4df7fa40 fffffffb 00000000 fffffffc 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97f98 00000000 00000000 8018f8dd 0203f208 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97fa8 02c2ea4f 6812446a f8cdb000 47108018 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97fb8 8018f8dd 0205f208 02c2ea4f 6812446a 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97fc8 f8cdb004 47108018 8018f8dd 0207f208 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97fd8 02c2ea4f 6812446a f8cdb008 47108018 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97fe8 00000000 00000000 00000000 00000000 05 11 13 56 54 919 1412 1412 I DEBUG 4bd97ff8 00000000 00000000 0040ea4f 463c4240 05 11 13 56 54 919 1412 1412 I DEBUG 4bd98008 1d526a3a f8446821 68611030 f8461d26 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98018 34081030 d1f51e52 1c524602 f8442100 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98028 f06f1030 1d260103 1030f846 1c523408 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98038 4601d1f4 01c1ea4f 46ed440f 6879448d 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98048 1030f844 9004f8c7 00004770 00000000 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98058 00000000 00000000 4080e92d f642466f 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98068 f6c41c00 f8c75c9e f06fc008 eb070ca7 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98078 f643010c f6c40630 f8d64667 ebbcc000 05 11 13 56 54 920 1412 1412 I DEBUG 4bd98088 f2010f01 46bd804d 0ca7f06f 44e546ed 05 11 13 56 54 920 1412 1412 I DEBUG 4c672814 00000218 00000000 00000000 00000000 05 11 13 56 54 920 1412 1412 I DEBUG 4c672824 00000000 00000000 00000001 00000000 05 11 13 56 54 921 1412 1412 I DEBUG 4c672834 4c42a5c0 4c42a328 00000000 4c7d2010 05 11 13 56 54 921 1412 1412 I DEBUG 4c672844 4c7d2020 4c7d2030 4c7d2040 4c7d2050 05 11 13 56 54 921 1412 1412 I DEBUG 4c672854 00000000 4c7d2060 4c7d2070 4c7d2080 05 11 13 56 54 921 1412 1412 I DEBUG 4c672864 4c7d2090 4c7d20a0 4c7d20b0 4c7d20c0 05 11 13 56 54 921 1412 1412 I DEBUG 4c672874 4c7d20d0 4c7d20e0 4c7d20f0 4c7d2100 05 11 13 56 54 921 1412 1412 I DEBUG 4c672884 4c7d2110 4c7d2120 4c7d2130 4c7d2140 05 11 13 56 54 921 1412 1412 I DEBUG 4c672894 4c7d2150 4c7d2160 4c7d2170 4c7d2180 05 11 13 56 54 921 1412 1412 I DEBUG 4c6728a4 4c7d2190 4c7d21a0 4c7d21b0 4c7d21c0 05 11 13 56 54 921 1412 1412 I DEBUG 4c6728b4 4c7d2210 4c66b2a0 4c676400 4c6789b0 05 11 13 56 54 922 1412 1412 I DEBUG 4c6728c4 4c85ffe0 4c85dfc0 4c85dfa0 4c85df80 05 11 13 56 54 922 1412 1412 I DEBUG 4c6728d4 4c85df60 4c85df40 4c85df20 4c85df00 05 11 13 56 54 922 1412 1412 I DEBUG 4c6728e4 4c85dee0 4c85dec0 4c85dea0 4c85de80 05 11 13 56 54 922 1412 1412 I DEBUG 4c6728f4 4c85ffc0 4c85ffa0 4c85ff80 4c85ff60 05 11 13 56 54 922 1412 1412 I DEBUG 4c672904 4c85ff40 4c85ff20 4c85ff00 4c85fee0 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a5f4 4c42a710 00000000 4c673800 4c42a624 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a604 4c672800 00000000 00000000 4e028e10 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a614 00000000 53088320 00000000 00000000 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a624 4c66d000 4c87fa40 00000000 00000000 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a634 00000000 00000000 00000000 4d527c00 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a644 00000000 4e028e10 fffffffb 4e004cd0 05 11 13 56 54 922 1412 1412 I DEBUG 4c42a654 fffffffb 00000004 00000000 4dfdf740 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a664 fffffffb 00000005 00000000 4c42a710 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a674 00000000 00000000 4dfdf740 fffffffb 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a684 4c42a6e8 4c42a778 4e004cd0 4e004cd0 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a694 00000002 4c42a82c 4adccc0f 00000002 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a6a4 4c42a6f8 4dfdf740 fffffffb 4c42a700 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a6b4 00000000 4c42a700 4c42a778 4c42a708 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a6c4 4e04ff40 4c42a6f8 4ade1513 00000002 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a6d4 4c42a6f8 4dfdf740 fffffffb 4c42a700 05 11 13 56 54 923 1412 1412 I DEBUG 4c42a6e4 00000000 00000000 00000000 4e004cd0 05 11 13 56 54 923 1412 1412 I DEBUG 4e588fbc f642c024 f6c40638 60374667 f6414638 05 11 13 56 54 923 1412 1412 I DEBUG 4e588fcc f6c40148 f24361ad f6c42c71 47e02cdd 05 11 13 56 54 924 1412 1412 I DEBUG 4e588fdc 063cf643 4667f6c4 f1166836 f0430f06 05 11 13 56 54 924 1412 1412 I DEBUG 4e588fec 46bd82c3 0c87f06f 44e546ed 0c02f04f 05 11 13 56 54 924 1412 1412 I DEBUG 4e588ffc c018f8cd 0c5cf641 6cadf6c4 c024f8c7 05 11 13 56 54 924 1412 1412 I DEBUG 4e58900c 0c50f857 1c4cf857 91059004 0f05f111 05 11 13 56 54 924 1412 1412 I DEBUG 4e58901c 8012f042 6c00f245 6c00f6c4 0f0cebb0 05 11 13 56 54 924 1412 1412 I DEBUG 4e58902c 800af042 92026942 0c04f06f c00cf8cd 05 11 13 56 54 924 1412 1412 I DEBUG 4e58903c 4c4bf24b 0c41f6c5 46bd47e0 0cb7f06f 05 11 13 56 54 924 1412 1412 I DEBUG 4e58904c 44e546ed 0c50f847 1c4cf847 0104f06f 05 11 13 56 54 924 1412 1412 I DEBUG 4e58905c f8476938 f8470c50 f8571c4c f8570c50 05 11 13 56 54 924 1412 1412 I DEBUG 4e58906c 69801c4c 1c34f850 0c38f850 0c50f847 05 11 13 56 54 924 1412 1412 I DEBUG 4e58907c 1c4cf847 0104f06f 69006938 0c58f847 05 11 13 56 54 925 1412 1412 I DEBUG 4e58908c 1c54f847 0c58f857 1c54f857 f8506980 05 11 13 56 54 925 1412 1412 I DEBUG 4e58909c f8501c54 f8470c58 f8470c60 f8571c5c 05 11 13 56 54 925 1412 1412 I DEBUG 4e5890ac f8570c60 f1111c5c f0410f05 680687d9 05 11 13 56 54 925 1412 1412 I DEBUG 7fffffd4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 7fffffe4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 7ffffff4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000004 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000014 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000024 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000034 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000044 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000054 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 925 1412 1412 I DEBUG 80000064 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 80000074 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 80000084 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 80000094 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 800000a4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 800000b4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 800000c4 ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 4c42a258 4c42a328 00000002 4bd97fb9 4c672834 05 11 13 56 54 926 1412 1412 I DEBUG 4c42a268 4c42a614 4e588fdd 00000000 ffffffff 05 11 13 56 54 926 1412 1412 I DEBUG 4c42a278 4aea39e0 4c672838 4c42a298 00000002 05 11 13 56 54 926 1412 1412 I DEBUG 4c42a288 4bd97fb9 4c672834 4c42a614 4e0cd697 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a298 4c42a328 4e5885e7 00000000 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2a8 589c30b0 fffffffb 5b9d99e0 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2b8 4f4109a0 fffffffb 4dfdfd40 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2c8 60b575a0 fffffffb 589c30b0 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2d8 4e005600 fffffffb 00000000 fffffffc 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2e8 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a2f8 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a308 00000000 fffffffc 00000000 fffffffc 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a318 00000000 fffffffc 53f832c0 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a328 4c42a398 4ef2a5d3 4d76c780 fffffffc 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a338 53f832c0 fffffffb 4e004f70 fffffffb 05 11 13 56 54 927 1412 1412 I DEBUG 4c42a348 00000003 4ead184c 4df7fa40 fffffffb 05 11 13 56 54 934 1412 1412 I DEBUG ffffffdc ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 934 1412 1412 I DEBUG ffffffec ffffffff ffffffff ffffffff ffffffff 05 11 13 56 54 935 1412 1412 I DEBUG 4add33f8 3e70f898 4921b12b 44794630 f004463a 05 11 13 56 54 935 1412 1412 I DEBUG 4add3408 9a03fffd 33066bd3 4630d122 f7aa6879 05 11 13 56 54 935 1412 1412 I DEBUG 4add3418 e9ddf829 e023450a 60a22201 e9dde7bc 05 11 13 56 54 935 1412 1412 I DEBUG 4add3428 a8042308 e9cd4631 e9dd2300 f03e2306 05 11 13 56 54 936 1412 1412 I DEBUG 4add3438 f898fc17 e9dd3e70 b12b4504 46304910 05 11 13 56 54 936 1412 1412 I DEBUG 4add3448 4479463a ffdaf004 6bd39a03 d0033306 05 11 13 56 54 936 1412 1412 I DEBUG 4add3458 f7a94630 e006ffc1 68794630 f802f7aa 05 11 13 56 54 936 1412 1412 I DEBUG 4add3468 4500e9c0 46314638 ecbdb00d e8bd8b02 05 11 13 56 54 936 1412 1412 I DEBUG 4add3478 bf008ff0 000d34d6 00099899 00099869 05 11 13 56 54 936 1412 1412 I DEBUG 4add3488 00099821 4ff0e92d 4606b08b f73b460f 05 11 13 56 54 936 1412 1412 I DEBUG 4add3498 2500fa44 0a10f10d 43b0f500 46309000 05 11 13 56 54 937 1412 1412 I DEBUG 4add34a8 1d3b639e 68b96273 ffdcf7a9 930168fb 05 11 13 56 54 937 1412 1412 I DEBUG 4add34b8 46304680 fa31f73b f1082120 46830808 05 11 13 56 54 937 1412 1412 I DEBUG 4add34c8 f5009007 303450ea f92cf73c 43b0f50b 05 11 13 56 54 937 1412 1412 I DEBUG 4add34d8 60054604 f79d6cd8 4659f9ec 46204602 05 11 13 56 54 937 1412 1412 I DEBUG 4add34e8 fd76f73b 60a32301 43d0f50b f10d6125 05 11 13 56 54 938 1412 1412 I DEBUG ffff0000 ffff1000 r x vectors 05 11 13 56 54 938 1412 1412 I DEBUG no map for address 05 11 13 56 54 938 1412 1412 I DEBUG no map above,,,2017-05-11 06:03:52,2017-05-11 09:46:27
PR,Edit two errors in docs,I can not complete the CLA Because I am in the wall so that link can not be visited,,gaearon,2017-05-11 02:54:37,2017-05-11 10:34:35
PR,Always pass error code to CI,During Rollup PR we forgot to pass the error code from the Jest task As a result master currently has a failing test The failing test was introduced in 9608 This PR makes sure we always pass the code down It is expected to break CI In a followup PR we will look at the root cause,,"gaearon,gaearon",2017-05-11 12:04:13,2017-05-11 12:13:02
PR,Wrap fiber only test in feature flag,what is the change A test was added for a change to Fiber is behavior in 9608 and because of a bug in our CirclCI script it landed when failing for non fiber runs of the tests This just wraps the test in a feature flag because it seems clear it was only intended to test the new fiber behavior Thanks to for pairing on this why make this change So that tests are passing on master test plan npm run test ReactCompositeComponentState issue None figured it out before anyone opened an issue afaik,,flarnie,2017-05-11 12:20:49,2017-05-11 12:32:05
IS,Dynamically loading scripts in components,How can access object when we are dynamically loading scripts in components,,,2017-05-11 12:18:11,2017-05-11 12:46:51
IS,React Djnogo,hello I use react djnogo to develop web system but I meet a issue it can not upload picture use the form tag with input tag I put this tags in React render function I do not know where the problem is I need help thanks very much,,gaearon,2017-05-09 05:40:22,2017-05-11 15:06:22
IS,React is GitHub wiki security issue,When browsing React is GitHub wiki we noticed the following How did it get there Can anyone just edit the wiki without being reviewed EDIT it is linked from the main wiki page,,"gaearon,gaearon",2017-05-11 14:54:28,2017-05-11 15:55:06
PR,Move assertValidProps into shared utils since it will be used by the,Per the title need this utility as well might as well commit an extraction,,"tomocchino,sophiebits",2017-05-11 21:12:50,2017-05-11 21:43:36
PR,yarn prettier only checks changed files,CI still checks all of them,,sophiebits,2017-05-11 21:45:50,2017-05-11 21:47:30
PR,Run prettier on scripts bench,,,sophiebits,2017-05-11 22:18:41,2017-05-11 23:14:17
PR,Move 'lighthouse' and 'nodegit' to 'optionalDependencies',what is the change See title why make this change Both these dependencies were causing issues when working on React internally at FB 'lighthouse' requires node 6 and we do not want to folks working on React to using that version of node L11 'nodegit' for me throws an error related to libssh2 and it is annoying to make this work in every OS See test plan npm yarn install Runs with no errors on my CentOS machine and also on MacOSX laptop issue This is blocking work related to,,flarnie,2017-05-12 14:14:49,2017-05-12 14:41:31
IS,onClick unexpected behaviour on text selections,bug Current behavior On text selection in the component with onClick handler react fires onClick steps to reproduce console output What is the expected behavior onClick does not fires on both text selection and double click events versions of React and browser OS react latest 16 0 0 alpha 12 os macOS latest browser chrome latest,,aweary,2017-05-12 16:40:39,2017-05-12 16:56:33
PR,Fiber Fix to call deferred callbackQueue even if updates are aborted,Currently setState callback has never been called when the update is interrupted This PR is fixed it and added a test for reproducing it,,"koba04,acdlite,koba04,sebmarkbage,acdlite,koba04",2017-05-09 11:51:34,2017-05-12 17:45:51
IS,What is the difference between client server side react rendering What is the latter even is,Good day honest fellows I'm fairly new to react and single page apps and I really can not wrap my head around something here In the server routing serving apps with client side routing section in README md of create react app it is stated that we just send the index html again and again despite accessing different routes I guess it is ok to send this file again and again since it is almost empty and we usually only have div tag with id app os something And so that way react is injecting html that being sent from the server already on the client side right And building different html file of sorts And client side routing is being handled with no caveats either So my questions are sorry there is a lot of them What is the difference in client server side react rendering What is server side react rendering even is Why would one want it How to do client side routing with it That is a major one How then client accesses the data Via api on different route And for instance Redux reducers would do that kind of work right Help me to understand this please,,,2017-05-13 07:50:11,2017-05-15 04:47:20
IS,This is post patch,This is a basic post changed to patch test,,gaearon,2017-05-15 06:59:59,2017-05-15 11:01:51
IS,New Test post,This is a basic post test that is going to fail,,,2017-05-15 06:56:11,2017-05-15 11:02:06
IS,New Test post,This is a basic post test post,,,2017-05-15 06:58:24,2017-05-15 11:02:07
IS,Which is better approach,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-05-15 15:26:39,2017-05-15 15:26:56
PR,Provide non standard stack with invalid type warnings,I need rich information with full filenames for Create React App so I can show component stack prominently and map it back to source snippets Ideally I want it for all warnings but the invalid type is the most common and useful one and I would like to start with it I'm sending this against 15 6 because I want to get it in soon and start iterating on this idea Maybe we will drop it in 16 or maybe not I want to play with it for a while If it works well I ll send another PR against master later to do this in a more generic way The stack object format is Array fileName string null lineNumber number null functionName string null console stack and console stackEnd does not really exist but we ll define it in CRA environment and possibly in RN in the future If it works well we can look at proposing a standard since it can be useful for other use cases too,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,flarnie,gaearon",2017-05-12 23:09:55,2017-05-15 19:39:39
IS,Will there be a foo foo shorthand in jsx,Do you want to request a feature or report a bug I want to request a feature What is the current behavior Currently the only shorthand of jsx props are boolean as default and attributes spread however when writing jsx there are many cases of foo foo it could be better if there is a shorthand for this syntax for example Component foo,,,2017-05-16 08:08:44,2017-05-16 08:11:37
IS,feature request make writing css easy,For react we need some external apis for the write css that is quite difficult Like event handling react component should have support for the css with pseudo selectors which is missing Like we have static block for style styles classname pseudo or path to file css class Component,,"aweary,bvaughn",2017-05-09 06:55:00,2017-05-16 20:59:52
IS,persistant event,Do you want to request a feature or report a bug bug What is the current behavior persistent event is broken console prints different values before and after async operation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React i'm using react 15 5 4 chrome 58 0 3029 96 64 bit os mac,,aweary,2017-05-09 04:51:14,2017-05-16 21:06:13
PR,Make the world a better place by placing closing on a new line,,,"xixixao,sophiebits",2017-05-16 22:11:06,2017-05-16 22:42:48
PR,Update frame html,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-05-17 01:30:16,2017-05-17 01:30:48
PR,Update frame html,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-05-17 01:33:08,2017-05-17 01:33:35
PR,Update frame html,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,aweary,2017-05-17 01:28:22,2017-05-17 15:20:41
PR,Remove invalid css from DOMFixtures,A bit silly but I noticed this doing some testing on 7311,,"nhunzaker,flarnie,nhunzaker",2017-05-04 01:41:40,2017-05-17 15:22:33
IS,ES6 object shorthand as props,Hi there I find myself wanting this feature a lot I will name some const something and then find myself having to pass it in like so Does anyone else find this a worthwhile change,,gaearon,2017-05-17 19:06:47,2017-05-17 19:12:39
PR,Initial Stack Free SSR Implementation,This is an initial implementation of server rendering that does not depend on stack It is basically all copy pasted code shoved into a single file but it will hopefully be able to be cleaned up and refactored if we decide to land this,,"tomocchino,sebmarkbage,sebmarkbage,gaearon,gaearon,tomocchino,tomocchino,gaearon,sebmarkbage,koba04,sophiebits",2017-05-12 06:44:04,2017-05-17 21:54:00
PR,Add package builds for new server renderer and enable tests,Follow up to 9673 Rename ReactServer ReactDOMServerStream This file is going to be the replacement for ReactDOMServer I mock ReactDOMServer and user ReactDOMServerStream when we have the fiber flag enabled I'm now also enabling this as the default for distributions builds react dom server on npm and react dom server production min js as umd bundle I'm using traverseStackChildren instead of traverseAllChildren because traverseAllChildren is now only in the isomorphic package and we do not want to build all of that that into the server package I also have to require lower case react for the builds to work I also pulled in two commits from 9580 which fixes ReactDOMServer in Fiber mode which fixed tests we are no longer testing the injection and fixes some assertions in Fiber mode to ensure that we pass a proper amount of tests Test Plan Tested the SSR fixture,,"sebmarkbage,sophiebits,aickin,sebmarkbage",2017-05-17 23:47:21,2017-05-18 00:19:12
PR,Move some tests from failing to passing except dev,These throw because we are asserting on the warnings Make this not throw so that they instead only fail to assert the warnings We do not warn for this in the new server renderer atm,,sebmarkbage,2017-05-18 00:41:32,2017-05-18 06:54:27
IS,renderToString has a different result from a normal render,I have used React to render an entire page from the server side and got some errors like this one You are trying to render a component to the document using server rendering but the checksum was invalid This usually means you rendered a different component type or props on the client from the one on the server or your render methods are impure React cannot handle this case due to cross browser quirks by rendering at the document root You should look for environment dependent code in your components and ensure the props are the same client and server side client 8 data reactid 4 link rel icon t server 8 data reactid 4 link rel icon ty The problem here is the ending of tags both elements are rendered using React on Server with renderToString and on Client with render I'm using the same App Component on Server and the client,,,2017-05-17 19:43:28,2017-05-18 07:34:57
PR,9712 fix input type number value ' 98' should not be equal to '0 98',Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-05-18 05:48:39,2017-05-18 09:24:36
IS,Add to license FAQ Handling the patent grant on redistribution,Could you please add a clarification to the License FAQ which describes the rights and obligations concerning the patent grant when redistributing ReactJS E g something like this If I redistribute ReactJS to a third party in any form e g fork and modify it or incorporate it in my product Is it allowed to choose only the BSD License as my license and drop the additional patent grant My guess yes If I redistribute ReactJS to a third party in any form e g fork and modify it or incorporate it in my product Is it possible to also transfer the additional patent grant to my receivers of the derived work My guess No The patent grant is only a license between facebook and their direct receivers Formally you have to delete the patent grant and the third party has to receive this license from the react upstream project Is the Facebook license compatible with the GPLv2 My guess Yes it is Since the BSD 3 Clause is and the patents grant is only an addition,,"gaearon,lacker,gaearon",2017-05-18 15:59:13,2017-05-18 16:08:10
PR,Fix typo in explaining HOC,The example explaining how redux is connect works does not use the same component name Line 264 references Comment while 274 referenced CommentList Changed 264 to match 274,,nhunzaker,2017-05-18 22:34:53,2017-05-18 23:06:29
PR,Fix typo in benchmark docs,,,nhunzaker,2017-05-17 18:51:35,2017-05-18 23:14:00
IS,Bug react dom still contains reference to React PropTypes,React sends out a deprecation warning about using React PropTypes and the stack trace points to React Dom Because of our webpack config im not 100 sure where it is but here are the surrounding lines of code See the onChange key,,"nhunzaker,gaearon,nhunzaker,nhunzaker",2017-05-17 16:23:36,2017-05-18 23:16:16
PR,New blog post What is New in Create React App,Yay,,gaearon,2017-05-19 04:31:30,2017-05-19 04:31:36
IS,React 16 without ES6 virtually impossible,On thing I like about React is that we can still use it for micro apps where small portions of the website need user interaction but a declarative UIs can still simplify development a lot without having to setup a whole build environment that for this use cases looks definitely overkill I know I may sound like a grumpy grandpa but I'm worried that this will be not be true anymore in React 16 With the deprecation of React createClass and React PropTypes we will need external modules for sure Then we need to bundle that modules for the browser and expose them as globals We can not just load React from a CDN and write code anymore Also when using create react class warnings are still issued like getDefaultProps is only used on classic React createClass definitions Use a static property named defaultProps instead Maybe this is in fact a bug Possibly more issues Am I wrong If not should we stick with React 15 or what Maybe we can start making React builds specifically for non ES6 environments bundling needed external modules etc,,"gaearon,gaearon",2017-05-19 10:32:17,2017-05-19 12:01:12
IS,updateRenderedComponent Error When Rendered Child Components Repeatedly Throw,Apologies in advance if this has already been reported I did my best to thoroughly search through existing issues before posting this but could not find something this specific I would be happy to move close this as needed This is hopefully more nuanced than the issue about my render method threw and React blew up why that I mostly encountered Do you want to request a feature or report a bug Bug Minimal Test Cases Uncaught TypeError Cannot read property ' currentElement' of null Uncaught TypeError Cannot read property 'getNativeNode' of null What is the current behavior If a child component throws in its render method and attempts to be rendered more than once React throws an uncaught error inside of its internal updateRenderedComponent method Depending on the context this error is either 1 Uncaught TypeError Cannot read property 'getNativeNode' of null 2 Uncaught TypeError Cannot read property ' currentElement' of null Let is say we have a problematic component A When A renders it throws a runtime error This is what led to the discovery of this bug The promise handling here is technically incorrect since what we really meant was to use then onSuccess onFailure so that we did not implicitly catch synchronous render errors caused by the setState call in the onSuccess callback However I do believe there are valid scenarios where this occurs such as when manually handling a render error but where the recovering component rendered in its place also unfortunately throws and consequently leads to this untraceable error What is the expected behavior React should not blow up with this internal untraceable error on the second render I'm not even sure if this is possible but at a minimum I would like to better understand why this occurs Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Browser Google Chrome Version 58 0 3029 81 64 bit React v15 1 0 v15 3 2 v15 5 0 Those are just the versions I have tested there is no evidence that it works in any versions in between those posted above No this has not worked in a previous version to my knowledge Thank you in advance for your help,,,2017-04-24 19:37:05,2017-05-19 12:47:53
PR,Add React Brazil Conf,Adding the React Brazil Conf,,,2017-05-19 13:38:55,2017-05-19 13:52:14
IS,Licensing FAQ suggestion Adding links to remove ambigity,Referring to Specifically Does termination of the additional patent grant in the Facebook BSD Patents license cause the copyright license to also terminate No It is unclear as to what the 'copyright license' referred to in that quote is Would directly linking the words 'additional patent grant' to and the words 'copyright license' to or a more appropriate document be possible permissible for the Facebook Legal team Editing to note that the link would have to be to the Facebook OSS wide versions of these not just the React specific licenses,,"gaearon,gaearon",2017-05-18 19:05:55,2017-05-19 22:06:56
PR,15 dev,Going through the code,,aweary,2017-05-19 11:36:12,2017-05-19 22:12:07
PR,Add PR 9642 to 15 6 change log,Just keeping this fresh Issue 9398,,"flarnie,flarnie",2017-05-10 13:18:00,2017-05-20 16:22:07
PR,Backport input fix,cc fixes 7211 fixes 6822 fixes 6614 we should make sure it does not break 3926 any worse or works with 8438,,"jquense,gaearon,jquense,gaearon,aweary,gaearon,jquense,jquense,aweary,jquense,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,jquense,gaearon,sebmarkbage,jquense,nhunzaker,jquense,sebmarkbage,jquense,gaearon,jquense,bvaughn,aweary,gaearon,jquense,jquense,syranide,gaearon,slorber,nhunzaker,jquense,sebmarkbage,jquense,sebmarkbage,jquense,nhunzaker,bvaughn,mbrookes,gaearon,mbrookes,gaearon,flarnie,sebmarkbage,flarnie,flarnie",2016-12-14 18:29:54,2017-05-20 18:15:13
PR,Disable ESLint is no extend native for two lines,This fixes the following two no extend native warnings by adding eslint disable line comments src renderers dom shared tests ReactDOMComponent test js 819 11 warning Object prototype is read only properties should not be added no extend native 828 11 warning Object prototype is read only properties should not be added no extend native I also had to move the code around a bit so both ESLint and Prettier would be satisfied Initially the code was like like this Object prototype toString function eslint disable line no extend native But Prettier moved the comment on the following line which cased the ESLint warning to appear again Object prototype toString function eslint disable line no extend native Moving the comment before the assignment prevented Prettier from reformatting the code but did not disable the warning so I refactored the code like this let wrappedToString function Object prototype toString wrappedToString eslint disable line no extend native The PR that introduced the warnings is 9163,,nhunzaker,2017-05-07 22:52:56,2017-05-20 23:58:23
IS,docs Update Profiling Components with Chrome Timeline,Google Chrome 58 just dropped and there is a shiny new Performance tab instead of the old Timeline tab in devTools You can read all about it here but there is really not much to read except for The Timeline panel has been renamed to the Performance panel to better reflect its purpose As a result the docs for optimizing performance md needs to be updated here to reflect these new changes I tested by profiling a component in our React app at work seems to work the same so it is really just a matter of updating the docs I will submit a PR with the update,,,2017-05-04 03:00:55,2017-05-21 19:28:26
PR,docs Update Profiling Components with Chrome Timeline,As of Chrome 58 the Timeline tab is now called the Performance tab this updates the Optimizing Performance Profiling Components with Chrome Performance section of the docs to reflect that Resolves 9601,,"nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker",2017-05-04 03:09:28,2017-05-21 19:28:26
PR,Add test for key warning at top level,,,"sophiebits,flarnie",2017-04-20 19:45:41,2017-05-21 22:39:26
PR,Expose ReactFiberTreeReflection in FB build,I need this for some hacky stuff I'm doing D5060180,,sophiebits,2017-05-21 23:32:05,2017-05-21 23:37:18
IS,Android app hangs in production mode,Hi all Currently my Android app production hangs in specific screen I cannot touch any button even the hardware Back button but it works correctly in debug mode So can anyone spot out some possible problems My source is quite large so I do not post the code here I have tried to show an alert when it hangs Enter error screen hangs after timeout 5s show an alert I'm still able to press alert close button alert close app still hangs React version react 16 0 0 alpha 6 react native 0 44 0,,,2017-05-22 04:45:13,2017-05-22 05:03:58
PR,Move previous events to the end,Let me know whether this change is appropriate,,"ehellman,trueadm,gaearon",2017-05-20 22:46:03,2017-05-22 09:45:58
IS,ReactDOMServer renderToStaticMarkup will trigger componentWillMount on server side Is it a bug How can I avoid that,react 15 5 4 react dom 15 5 4 react router 4 1 1 calling ReactDOMServer renderToStaticMarkup on server side will trigger componentWillMount of one of my component but not all This strange behavior does not happen on some other components This is how I do server rendering using the recommended way from react router Now routes is defining a fetchData attribute that will call a static function of a component The component will define the static function and will use the react life cycle hooks to render on client To reproduce this behavior you can clone this repo npm i npm run dev visit 3000 blog you should see some server side rendering logs and see that re reducer FETCH ARTICLES SUCCESS is run and then fetchBranchData location blog which means that SSR is doing its job the INITIAL STATE is build everything fine visit 3000 blog the wizard of oz you will see FETCH ARTICLES REQUEST and FETCH ARTICLE REQUEST note the plural then fetchBranchData location blog the wizard of oz but then you will see componentWillMount FETCH from BlogArticle Component which will retrigger FETCH ARTICLE REQUEST a second time meaning that my global state is affected and you will see and object article loading true is my state INITIAL STATE By the time the client receive it will get this error on the client This behavious is quite strange because componentWillMount will be call on the nested route BlogArticle but not on Blog I am wondering if there is a bug in react there,,,2017-05-22 10:02:41,2017-05-22 11:17:07
IS,Can react proxy be served with a restrictive CSP policy from server without throwing error in Firefox,Do you want to request a feature or report a bug feature What is the current behavior Firefox throws error when running a react application and using a csp header with script src set to iself' In my case the error looks like this Content Security Policy The page s settings blocked the loading of a resource at self script src 8000 I set the iself' keyword on script src which in this error message is translated to localhost 8000 The error message in FF links to the following row in my react bundle ProxyComponent new Function 'factory' 'instantiate' areturn function ' displayName ' n return instantiate factory this arguments n ' function from the file react proxy modules createClassProxy js I can get rid of the error in FF by allowing unsafe eval in my csp policy but I dont want to do that If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Run a react application in FF browser and with CSP policy for script src set to iself' Check the console for errors What is the expected behavior There is a error handling in the source code for the event that execution environment does not allow dynamic evaluation but it still shows an error in FF try Create a proxy constructor with matching name ProxyComponent new Function 'factory' 'instantiate' areturn function ' displayName ' n return instantiate factory this arguments n ' function return CurrentComponent instantiate catch err Some environments may forbid dynamic evaluation ProxyComponent function ProxyComponent return instantiate function return CurrentComponent this arguments Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React name react proxy version 3 0 0 alpha 1 Firefox version 51 0 1 on Ubuntu,,gaearon,2017-05-22 09:31:21,2017-05-22 11:27:33
PR,docs conferences Move ReactEurope 2017 from Upcoming to Past,ReactEurope 2017 has now ended moved to Past Conferences Thanks to everybody who attended No playlists are available from the talks yet,,"ehellman,trueadm,ehellman,trueadm,gaearon",2017-05-20 18:54:10,2017-05-22 11:52:47
PR,Add ReactiveConf,,,trueadm,2017-05-19 11:59:13,2017-05-22 14:12:53
PR,updated examples to use functional setState,fixes 9703,,,2017-05-21 05:16:29,2017-05-23 01:11:14
PR,Updated the tutorial to use the functional set state per issue 9703,Fixes 9703 This fixes the tutorial md part of the issue,,,2017-05-21 04:29:02,2017-05-23 01:20:11
PR,Updated the docs to use functional setState,fixes 9703,,,2017-05-21 04:36:14,2017-05-23 01:20:36
PR,Updated conditional rendering docs to use functional setState,fixes 9703,,,2017-05-21 04:41:52,2017-05-23 01:20:46
PR,Updated form docs to reflect functional set state,fixes 9703,,,2017-05-21 04:47:50,2017-05-23 01:21:08
PR,Updated the rest of the docs to use functional setState,Fixes 9703,,trueadm,2017-05-21 05:31:08,2017-05-23 01:21:26
PR,updated lifting state docs to use functional setState,Fixes 9703,,,2017-05-21 05:03:48,2017-05-23 01:21:38
PR,Updated react wo es6 docs to use functional setstate,fixes 9703,,,2017-05-21 04:58:04,2017-05-23 01:22:04
PR,Downgrade deprecation warnings from errors to warnings,Doing this first on master then will cherry pick to 15 6 branch what is the change Swapping out warning module for a fork that uses console warn It looks like we were using the warning module for deprecation notices but there is also a wouldeprecated' module designed specifically for deprecation notices However we could not find any place that it was currently used Since React is build process is not 100 clear to me I assume it could still be used somewhere by something and just updated it along with other deprecation notices We might consider a follow up diff that does some clean up here remove wouldeprecated' module if it is unused OR use wouldeprecated' module for all our current deprecation warnings why make this change We have had complaints about noisy warnings in particular after introducing new deprecations They potentially cause CI failures Deprecations are not really time sensitive can ship without breaking your app etc For more context test plan npm run test Also planning to do some manual testing and paste in screenshots in comments to show how the changed warnings look There are some failing snapshot tests that seem unrelated but looking into those also issue,,"flarnie,flarnie,sophiebits,sophiebits,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,sophiebits,flarnie,flarnie",2017-05-10 13:27:23,2017-05-23 16:35:43
PR,Adds a ReactNativeInspector API to ReactNativeRenderer,Currently React Native has internal implementation details of how Fiber and Stack work in order to make the built in React Native Inspector tool This PR aims at adding an API to ReactNativeRenderer so React Native can access the internals via an externally made public API This API is DEV only so should not affect file size in production An upstream React Native PR will follow too adding support for React Native to use this new API,,"trueadm,sebmarkbage,sebmarkbage,sebmarkbage,trueadm,sebmarkbage,trueadm,bvaughn,bvaughn,gaearon,gaearon,sebmarkbage,sebmarkbage,trueadm,gaearon,sebmarkbage,trueadm,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,trueadm,sebmarkbage,gaearon",2017-05-15 16:34:36,2017-05-23 20:22:21
PR,Cherrypick commit to downgrade deprecations to warnings,This landed on master and we want to pull it into 15 6 I tweaked a couple of things to make it work on this branch,,"flarnie,flarnie",2017-05-23 17:56:14,2017-05-23 22:11:52
PR,Add 8575 to changelog for 15 6,Just two more items before we will have an RC ready,,flarnie,2017-05-21 14:58:59,2017-05-23 22:43:39
PR,Remove stray reference to React PropTypes in ReactLink,what is the change It looks like we missed updating this callsite in why make this change We are deprecating the React PropTypes syntax and splitting that functionality into a separate module please correct me if there is a reason we left this here test plan yarn test issue fixes 9755,,"flarnie,flarnie",2017-05-23 23:28:05,2017-05-24 01:39:18
IS,BUG create react class does not work in AMD environment,Do you want to request a feature or report a bug Report a bug What is the current behavior Unable to require such module This bug seems similar to 8301 React uses without proper require calls What is the expected behavior Able to load create react class without problem Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 4 create react class 15 5 3,,gaearon,2017-05-23 06:20:29,2017-05-24 07:30:52
IS,It seems the legal stuff is making things difficult,Hi Please make the legal language easier to understand and more user friendly so that anyone can use it without having to worry,,"gaearon,gaearon",2017-05-24 09:49:39,2017-05-24 10:18:18
IS,facing issue in load local images in react js,I have posted issue over here please check,,gaearon,2017-05-24 10:49:00,2017-05-24 12:50:29
PR,Improve low priority warning,Thanks to for suggesting this in code review of what is the change This change makes 'lowPriorityWarning' an exact copy of 'warning js' from where before we had skipped some checks from that module Adds an error which we catch in order to let people find the error and resulting stack trace when using devtools with 'pause on caught errors' checked Adds check that 'format' argument is passed why make this change To maintain a closer fork to 'warning js' To allow easier debugging using 'pause on caught errors' To validate inputs to 'lowPriorityWarning' test plan yarn test issue,,"flarnie,bvaughn,flarnie,flarnie,flarnie,bvaughn,trueadm,bvaughn,flarnie,flarnie,flarnie",2017-05-23 18:41:42,2017-05-24 14:55:01
PR,ReactNative flat renderer bundles,Introduces ReactNative flat renderer bundles There is more that could be done to improve consistency and sharing between the www and fbsource sync scripts Given the size and duration of this PR I would prefer to defer that work to a follow up issue 9763 Building and syncing ReactNative flat renderer This PR introduces an optional flag to the Rollup build scripts that enables syncing the built ReactNative renderer and its Flow types and shims to fbsource Changes Rollup changes Updated the Rollup build script to strip Haste providesModule headers for RN builds Updated Rollup build script to add noflow header to flat bundle to tell Flow not to try to infer types We will have to use explicit types instead This is necessary to avoid causing huge memory and CPU uses in Flow Added a new REACT NATIVE USE FIBER env variable to prevent a mismatch of stack fiber components at runtime ReactNativeFeatureFlags uses this env variable to enable tests to cover both versions The Rollup build script uses this variable as well to support proper bundles Packaging script copies PooledClass to fbsource rather than including it in the RN renderer bundle based on PR feedback discussion r115456809 Packaging script copies ReactTypes and ReactNativeTypes files as well to avoid Flow inferring the types which is super slow impossible New sync fbsource flag added to enable copying the built RN bundle and shims to fbsource cc Flat renderer bundle Added SECRET INTERNALS DO NOT USE OR YOU WILL BE FIRED object to ReactNative for objects required by fbsource Added shims for modules directly required in fbsource that read from the new secret property Re organized code to avoid circular dependencies that would break Rollup Move NativeRenderer the thing returned from ReactFiberReconciler out of ReactNativeFiber and into its own package ReactNativeFiberRenderer This way the fiber version of findNodeHandle can access NativeRenderer findHostInstance without having to require all of ReactNativeFiber Fork findNodeHandle internally based on feature flag rather than relying on injecting This is only temporary until stack has been deprecated This will ease the requirement that ReactNative be loaded before findNodeHandle can be guaranteed to be functional takeSnapshot uses new forked findNodeHandler wrappers rather than ReactNative findNodeHandle and avoids requiring ReactNative directly Collocated externally exposed ReactTypes and ReactNativeTypes into single files to be synced to fbsource automatically since types can no longer be inferred This mostly involved moving a few types around and changing their imports These types are used internally as well to ensure they stay in sync with the implementations Miscellaneous Addressed a TODO in NativeMethodsMixin and ReactNativeFiberHostComponent to correctly share the same underlying Flow type between them,,"bvaughn,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn",2017-05-08 23:12:49,2017-05-24 16:06:30
PR,Bind handleChange Instead of Calling,,,gaearon,2017-05-24 14:27:16,2017-05-24 16:26:45
PR,Adding dom manipulation examples to repo,Hi team I am trying to add some dom manipulation example to repo in example directory,,gaearon,2017-05-14 04:03:47,2017-05-24 16:53:51
IS,Example from documentation not working,Do you want to request a feature or report a bug Bug What is the current behavior Example from the documentation not working on MacOS in Chrome If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Go to step 2 build a static version in react try to filter things by entering data in the input textbox What is the expected behavior Filter out the content Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I do not know,,gaearon,2017-05-24 18:52:18,2017-05-24 23:34:17
IS,How to make Date Scheduler by week with Previous and Next button in html table,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-05-25 08:28:19,2017-05-25 08:30:23
PR,Improve deprecation warnings by more info and links,Not sure who to tag for review but this and adding the warnings for React createClass should be the last two things blocking the 15 6RC So anyone who wants to unblock by reviewing feel free what is the change Updates the warnings for React createMixin was never implemented React PropTypes React DOM I think we never added the warning for React createClass to the 15 5 line unless I'm missing it so a follow up PR will add that with a link to docs etc Does not update the older warnings for Factory type 'isMounted' and areplaceState' ReactPerf We could do a second pass if we want to improve those three warnings but for now I do not think they are as hi pri Still TODO Do an initial release of the react addons dom factories react addons dom factories package on npm making it 1 0 Improve the docs for react addons dom factories adding documentation and mention the codemod why make this change We want to make updating as easy as possible Warning messages should increase clarity and in the past they have caused confusion test plan yarn test and running these messages past some folks who use React issue,,"flarnie,sophiebits,gaearon,gaearon,sophiebits,flarnie,flarnie,gaearon,flarnie,gaearon,flarnie,flarnie",2017-05-24 19:18:46,2017-05-25 14:22:55
PR,Move warnings into under DEV conditions,,,"koba04,flarnie,koba04,gaearon,koba04",2017-05-25 07:20:00,2017-05-25 14:31:36
PR,Strip comments from UMD PROD and NODE PROD builds not FB PROD,This regressed with the recent addition of RN bundles I was accidentally stripping comments from FB PROD when I meant to do the opposite This corrects that mistake No significant bundle size change occurs when re running this build against the version prior to the RN bundles screen shot 2017 05 25 at 4 19 45 pm,,bvaughn,2017-05-25 15:19:32,2017-05-25 15:24:05
PR,RFC Remove build time extractErrors message when error codes can not be found,Per issuecomment 297949223 just removing these errors since they are noisy The extract errors process is documented as part of releases and we do not extract errors between releases,,"tomocchino,sebmarkbage,tomocchino,sebmarkbage,tomocchino,gaearon",2017-04-28 20:58:28,2017-05-25 16:07:56
PR,Prevent fiber code from leaking into RN stack renderer and vice versa,Since stripEnvVariables was used to replace DEV references I assumed it and other plugins we run before requires statements were processed Obviously I was wrong and as a result the RN Stack and Fiber builds were way too large This is an attempt to mimic the approach taken with DOM renderer and stub out modules that we explicitly do not want to include The alternative to this would have been to fork findNodeHandle NativeMethodsMixin ReactNativeBaseComponent etc and essentially avoid using the feature flag That did not seem tenable The previous injection approach also does not work here because the circular references it resulted in caused Rollup to choke when creating the modules A quick smoke test of Ads Manager and Catalyst apps both stack and fiber seems good Jest tests and flow also seem good And more importantly screen shot 2017 05 25 at 3 57 59 pm,,"bvaughn,sophiebits,bvaughn,gaearon",2017-05-25 14:34:18,2017-05-25 17:14:47
PR,Build command refactor extractErrors extract errors,This changes the argument that can be passed during the React build process to be extract errors rather than extractErrors,,trueadm,2017-05-25 16:42:56,2017-05-25 17:49:58
PR,Do not strip error messages from RN builds,Also refactors it a little bit for less mutation,,"gaearon,gaearon",2017-05-25 17:53:06,2017-05-25 17:56:19
PR,Hydration of previously rendered server markup,This strategy keeps track of any available DOM nodes host instances that we can reuse They are stored in ReactFiberHydrationContext as we are reconciling and then picked off if they match Any remaining non matching nodes are deleted others are inserted This is using the normal reconciliation model so it should be possible to run in async mode so that reviving does not block the main thread Currently there are some properties that are set eagerly and events gets wired up early so that will break in async mode I will leave that as a todo This detects whether to revive or clear the container based on whether the child has a data reactid attribute We might want to change this API to be explicit,,"sebmarkbage,iamdustan,sebmarkbage,sebmarkbage,iamdustan,sebmarkbage,acdlite,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,sebmarkbage",2017-05-02 04:41:17,2017-05-25 19:19:20
PR,Cherrypick warning and removal of react create class,Edit Fixed the rest of the issues this should be good to go now Changes cherrypick and hand edit various parts of commits from master to do the following add create react class and prop types as dependencies of React add the deprecation warning for React createClass and get it from the create react class package add tests for the React createClass and React PropTypes deprecation warnings adds test for create react class as used in React Original PR message below This is a butchered version of with some of mixed in I do not have the tests passing and there is something not quite right about the way this landed 1 Not sure if we want createReactClass or ReactClass createClass and updating that caused an error src isomorphic classic class createClass js was added to master in that file is used in src isomorphic React js and itself uses var Component require 'ReactBaseClasses' in 15 6 that line throws Cannot find module 'ReactBaseClasses' from 'createClass js' and I have no idea why So instead I left it using the old implementation of 'createClass' 2 There is still a test failing for ReactART and I have not figure out why Something in ReactReconcileTransaction perform triggers TypeError Cannot read property 'call' of undefined I would be happy for any guidance or tips from folks who made those PRs and or I am going to delay doing a RC of 15 6 because this is pretty vital to get right Still TODO improve the deprecation message itself,,"flarnie,flarnie,gaearon,flarnie,flarnie,flarnie,flarnie,sophiebits,flarnie,gaearon,gaearon",2017-05-25 02:24:56,2017-05-25 22:12:18
PR,rename react addons dom factories to react dom factories,what is the change grep r react addons dom factories src and the same in packages then s react addons dom factories react dom factories gc why make this change React dom factories were never part of the 'addons' and we want to minimize the whole 'addons' thing since we are deprecating the React addons API test plan yarn test and manually look at the README that was updated issue,,"flarnie,gaearon,flarnie,flarnie,gaearon,flarnie,gaearon,gaearon,flarnie,flarnie,gaearon",2017-05-25 21:44:29,2017-05-25 23:01:24
IS,Question How to make Table Date Scheduler with Previous and Next Button in React,screen shot 2017 05 25 at 4 33 50 pm,,aweary,2017-05-25 08:33:08,2017-05-26 01:38:13
PR,Corrected a stubbed modules problem for RN fiber bundle,I made a mistake when stubbing out the createReactNativeComponentClass module for fiber Corrected it by splitting files and updating the blacklist,,"bvaughn,bvaughn",2017-05-26 09:53:07,2017-05-26 10:15:38
PR,Fix typo,,,gaearon,2017-05-26 11:00:42,2017-05-26 11:37:36
PR,Update refs and the dom md,Code example did not work Proof link,,gaearon,2017-05-26 10:29:21,2017-05-26 11:38:19
PR,Update blog post which creates unhandled promise rejection,In case anybody else stumbles across this old blog post I wanted to submit a patch to help with unhandled rejections then and catch each return new Promise instances so here we actually create two new promises that are not assigned If the argument promise to makeCancelable rejects the promise created by then will be an unhandled rejection which in Node 7 will be an uncaught error By using the second argument of then to handle rejections instead we do not need to worry about the runtime finding any unhandled rejections here,,gaearon,2017-05-11 20:47:28,2017-05-26 13:35:20
PR,Add 'Test Utils' docs back to main navigation,why make this change We accidentally removed this still supporting the use of Test Utilities so we should have them in the docs test plan Manually tested the website will insert a screenshot issue,,"flarnie,gaearon,gaearon,flarnie,gaearon,gaearon,flarnie,flarnie,gaearon,flarnie,flarnie,flarnie,flarnie,flarnie,gaearon",2017-05-12 14:39:09,2017-05-26 14:47:18
PR,Update print warning script for low priority warning,NOTE This PR was made on a branch that goes off of and I will rebase it once that lands So when reviewing just look at the change in scripts print warnings print warnings js what is the change We print the logs from 'lowPriorityWarning' as well as 'warning' from the 'print warnings' script NOTE This PR is branching off of why make this change We want to use the same process of white blacklisting warnings with 'lowPriorityWarning' that we do with 'warning' test plan This is not super easy to test unless we are doing a sync with FB afaik I plan on running a sync in the next few days or next week at latest for the sake of not landing big things on a Friday That will be the actual test of this issue,,"flarnie,flarnie",2017-05-23 20:45:28,2017-05-26 14:47:49
IS,Two things I do not like about React,Do you want to request a feature or report a bug feature 1 css I love react but can not help notice vue components does this one thing better writing css the way css looks same syntax and more importantly having access to all css properties It looks elegant and simple just bind this way and try to pass the arguments some other ways Is there a good way to solve this,,"gaearon,gaearon,gaearon,bjrmatos,gaearon",2017-05-26 14:31:12,2017-05-26 16:24:52
PR,Fix externalization of 'lowPriorityWarning' in fb builds,Thanks to for pairing with me on this what is the change Add two more special cases for 'lowPriorityWarning' in 'modules js' treating it the same as 'ReactCurrentOwner' why make this change Without this the build was including 'lowPriorityWarning' seemingly both as an external module and as part of the bundle in fb builds test plan Ran yarn build and inspected the React dev build lowPriorityWarning did not get bundled in this time issue None yet flagged this for me directly,,"flarnie,gaearon,trueadm,gaearon,trueadm,gaearon,trueadm,gaearon,gaearon,trueadm",2017-05-26 17:18:15,2017-05-26 17:35:39
IS,Chrome scroll position not preserved,Do you want to request a feature or report a bug Bug possibly in React or Google Chrome What is the current behavior Scroll position is not preserved when children of an element list change order Bug seems to apply only when React keys of the child elements are unchanged If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo available here Broken case 0 Resize the demo window until it is scrollable if not already 1 Scroll to bottom of the window 2 Click on the refresh button on the left 3 Window will scroll up automatically What is the expected behavior Window should keep the scroll position Working case 0 Resize the demo window until it is scrollable if not already 1 Scroll to bottom of the window 2 Click on the refresh button on the right 3 Window will not scroll up expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested React version was 15 5 4 Older versions were not tested Affected browsers OSX 10 12 5 Google Chrome 58 0 3029 Official Build 64 bit OSX 10 12 6 Beta 1 Google Chrome 59 0 3071 71 Official Build beta 64 bit Not affected OSX 10 12 6 Beta 1 Firefox 53 0 2 64 bit OSX 10 12 6 Beta 1 Safari Version 10 1 2 12603 3 1,,"gaearon,syranide,aweary",2017-05-26 15:51:30,2017-05-26 17:44:07
PR,Add Videos link to React Europe 2017,Videos have now started appearing on React Europe is YouTube channel added the link in the docs,,"ehellman,trueadm",2017-05-23 11:21:21,2017-05-26 22:06:28
PR,Remove PropTypes dependency from ReactLink,It does not seem to be used It was probably used by internal FB consumers of ReactLink which has long been removed,,gaearon,2017-05-24 16:45:29,2017-05-26 22:21:50
PR,Ignore events on not yet mounted fibers,This is not necessarily what we want long term especially with more async but currently we crash in jsdom in some cases when an img load event gets dispatched synchronously Needed for FB internal D5060180,,"sophiebits,sebmarkbage,sophiebits,flarnie,sophiebits,sophiebits,trueadm,sophiebits",2017-05-21 23:33:52,2017-05-26 23:46:46
IS,Conditional Rendering not working in React Native,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-05-27 18:54:14,2017-05-27 19:16:33
IS,Paste Event Handler not invoked when focus is applied to element programmatically,Do you want to request a feature or report a bug Bug What is the current behavior Clicking on an element to set focus allows the onPaste handler to be invoked as expected When you apply focus to an element using the HTMLElement focus method the onPaste handler is not invoked If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template jsFiddle here 1 Open the console on the jsFiddle 2 Click on yellow div to focus 3 Use keyboard ctrl cmd V or edit menu to fire paste event 4 Notice paste event logged in console as expected 5 Click on input element to focus 6 Press an arrow key to set focus on yellow div programmatically 7 Use keyboard ctrl cmd V or edit menu to fire paste event 8 Notice no paste event logged in console You can double check the paste event is firing using dev tools What is the expected behavior I expect the event handler to be invoked regardless of how focus is applied to the element Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 4 React 15 4 Tested on macOS 10 12 5 w Chrome v 58 0 3029 110 64 bit,,"aweary,aweary",2017-05-24 20:09:08,2017-05-28 15:19:18
IS,Different behaviour on different devices,This is my first react app I must admit however the app works perfectly fine on chrome but when I access it from safari or safari mobile it is a bit lazy There is a function link here L6 that returns an array of content rendered in that same component based on props from the father is state and it should get called every time the user changes filters Yet on Safari the rendering happens less regularly The function returns the right object on Safari too but then the render method is lazy in Safari You can check out yourself Adding and removing the coding filter will not produce changes on Safari All the code is in this repo,,,2017-05-28 17:38:51,2017-05-28 18:39:29
IS,componentWillReceiveProps bug,Subj jsbin example console,,,2017-05-28 18:21:00,2017-05-28 21:32:55
IS,array map has not render in v15 5 4,My code screenshot 3 and screen console screenshot 4 show for me that problem Please Thanks,,gaearon,2017-05-29 09:17:45,2017-05-29 10:08:42
IS,React wo not work behind proxy with basic authentication,Hello I have a react application running in our local intranet All our apps run behind a web proxy with a Basic Authentication user password checked against our AD server When accessing my react app directly or via unauthenticated proxy everything works fine When I access the app with the proxy authentication enabled I manage to fetch the very first page but every other request performed using 'fetch' fails with a 401 Unauthorized Basically the Authorization Header with the hashed credentials is not passed to the fetch request while it works seamlessly for any other script or css request I looked on the internet for a workaround but I could not find anything other than hardcoding the Authorization Header in the fetch request which is really not a feasible solution Nor is implementing specific login logic to work around the proxy issue Could you please advise,,gaearon,2017-05-29 10:10:24,2017-05-29 10:13:26
PR,Rename Github to GitHub,,,"lipis,nhunzaker",2017-05-28 00:01:13,2017-05-29 11:36:14
IS,React ignores CSS grid properties in style attribute,Do you want to request a feature or report a bug Bug What is the current behavior Using CSS grid properties in an element is style attribute does not work React ignores them If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior React should include CSS grid properties and all other CSS properties in the rendered DOM If React only intends to support a subset of CSS then this should be made clear in the documentation and the supported properties should be enumerated As it is there is nothing to suggest that certain properties will work and others wo not without any error message or warning indicating that they have been ignored Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 5 0,,gaearon,2017-05-29 10:50:42,2017-05-29 12:13:12
IS,React Children map children child index but got child type name is undefined on IE browser,as title i want to get child element is tag name Success in Chrome browser image Failed in IE browser image,,"nhunzaker,aweary",2017-05-29 10:04:13,2017-05-29 14:23:57
IS,Is there an error in document of Optimizing Performance,img Reconciliation The algorithm React uses to diff one tree with another to determine which parts need to be changed The above is what I found about the define of reconciliation In my opinion reconciliation contains two part diff element tree and update actual DOM node I think the C8 in picture above need reconciliation so the color of C8 should be red,,,2017-05-13 13:59:49,2017-05-30 07:27:23
IS,Fiber ref instance cause error,Do you want to request a feature or report a bug I am not sure maybe a bug What is the current behavior And when I debugger I find below Imgur Imgur Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I use react 16 0 0 alpha 12 windows 64 chrome canary 61 0 3113 0,,"aweary,gaearon,gaearon,gaearon",2017-05-29 14:39:46,2017-05-30 11:38:26
PR,Add getName to RN base component,This is needed by RN Inspector to get component name for Stack components via inspector,,trueadm,2017-05-30 12:55:09,2017-05-30 13:27:42
PR,Remove createClass PropTypes DOM factories and createMixin from React object,There is still a few callers in www which I will fix internally before merging We also have some RN code that still uses them but plan to either codemod it or shim it for the time being In either case this will only matter after we cut another react package and update internal RN code to use it which probably wo not happen before codemodding,,"gaearon,flarnie,flarnie,gaearon",2017-05-26 14:33:43,2017-05-30 14:35:31
PR,Do not build some stack bundles,This removes ReactDOMStack and ReactARTStack FB bundles from build process because we no longer use them This change does not touch the sources except FB specific ReactDOMStack entry point There is more work before we can remove the actual DOM Stack source in particular ReactDOMServerStack still uses it and I'm not sure how TestUtils are currently set up,,gaearon,2017-05-30 12:56:13,2017-05-30 14:49:33
PR,Fiber WIP Shallow Renderer,A very early PR just to keep track of it,,"rthor,gaearon,rthor,iamdustan,gaearon,koba04,gaearon,koba04,gaearon,lelandrichardson,gaearon,lelandrichardson,gaearon,lelandrichardson,gaearon,lelandrichardson,aweary,bvaughn,gaearon",2017-01-17 00:27:19,2017-05-30 14:57:29
IS,React Children isValidChildren similar to React isValidElement,Do you want to request a feature or report a bug feature What is the current behavior No isValidChildren method available What is the expected behavior Returns true if passed in the 'opaque' children object,,"aweary,syranide,syranide,syranide,aweary",2017-05-26 18:45:13,2017-05-30 16:22:30
PR,Fix ReactFiberReconciler annotation to include PI,Fixing up comments at issuecomment 271970297,,"iamdustan,sebmarkbage,iamdustan,sebmarkbage,sebmarkbage,sebmarkbage,iamdustan,iamdustan,iamdustan,gaearon,gaearon,iamdustan,iamdustan,sebmarkbage,iamdustan,sebmarkbage,sebmarkbage,iamdustan,gaearon,sebmarkbage,iamdustan,sebmarkbage,iamdustan,gaearon,gaearon",2017-01-11 19:49:52,2017-05-30 19:15:49
PR,Improve warning for React createClass,This might be the last PR to land for 15 6RC what is the change Explain that this will be removed in v16 0 specifically Mention the version number for the drop in replacement module Link to docs in the blog post about how to migrate why make this change We want to make our deprecation warnings more clear and helpful test plan Visual inspection and yarn test issue,,"flarnie,gaearon,flarnie,gaearon,flarnie,gaearon,flarnie,flarnie",2017-05-25 23:14:12,2017-05-30 20:25:42
PR,Inputs should not mutate value on type conversion when they stringify to the same thing,This is a follow up on discussion r115642293 There is no need to assign the value property of an input if the value property of the React component changes types but stringifies to the same value For example Testing I have put up a build of the DOM fixtures for this branch here,,"nhunzaker,gaearon,gaearon,flarnie",2017-05-29 12:32:00,2017-05-30 20:25:45
PR,Fixed misc function arity issues,gabelevi recently submitted these changes to fbsource in advance of enabling Flow strict call arity checking just syncing them upstream,,bvaughn,2017-05-30 20:38:57,2017-05-30 20:50:11
PR,Rename Javascript to JavaScript,Not intrusive,,"lipis,aweary,lipis,gaearon",2017-05-27 23:58:13,2017-05-31 02:35:23
PR,Create ReactNativeComponent Abstract Class,Summary This creates ReactNativeComponent the modern replacement for NativeMethodsMixin This class is going to allow us to start migrating React Native off React createClass into a typesafe class based brave new world This also introduces IReactNativeComponent an interface that enforces consistency between ReactNativeComponent and ReactNativeFiberHostComponent,,"yungsters,gaearon,yungsters,gaearon,bvaughn,bvaughn,yungsters,bvaughn,bvaughn,bvaughn,yungsters,bvaughn,yungsters,yungsters,yungsters,yungsters",2017-05-30 18:34:03,2017-05-31 04:55:25
IS,Optimize defaultProps with propTypes,Do you want to request a feature or report a bug feature PropTypes string wouldefault string' What is the current behavior Two statics representing the same thing is kind of Trivial,,,2017-05-30 23:07:14,2017-05-31 05:32:14
IS,Returns the undefined question under this props form getFieldsValue,1 Version antd 2 10 2 2 Environment Chrome 58 window 10 3 What did you do Use this props form getFieldsValue to take the value in the form 4 The code is as follows 5 The result you expect is Use this props form getFieldsValue to take the value in the form 6 The actual result is qq 20170530182002 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2017-05-30 10:28:57,2017-05-31 16:45:36
PR,WIP Fix react dom factories,In order to publish the react dom factories package we need to make it work with AMD global scope and all other builds Since this should only be published once hopefully my initial approach is the simplest possible and does not automate anything Next steps are to test this but I would be happy for feedback and tips,,"flarnie,sophiebits,flarnie,flarnie",2017-05-26 22:30:36,2017-05-31 21:35:23
PR,Prepare react dom factories for publishing,what is the change copies the React DOM factory helpers into the package and wraps them with an IIFE set peerDependency on React to latest 15 version why make this change We are deprecating React DOM and this provides a fallback option for those using it We just copied the code in order to avoid a circular dependency which keeps complexity down since we are supporting every possible build system test plan DONE 1 Copy this into one of our fixtures using a UMD AMD build and see if it works there TODO 2 Do an initial publish of the package on npm and then pull it into CRA and try it there 3 Try it in or some other project that actually uses the React DOM helpers using the related codemod issue,,"flarnie,sophiebits,flarnie,flarnie",2017-05-31 21:31:03,2017-05-31 23:04:17
IS,Does keys for children really improve performance,Originally I try to use React Perf tool to prove this theory So I write code to do an experiment But then I found out the opposite the result image Can someone explain why or correct me if I am testing it in wrong way,,gaearon,2017-06-01 09:21:38,2017-06-01 09:38:43
IS,svg clip path url issue in 15 02,tried upgrading React from 0 14 8 to 15 0 2 but have run into an issue with SVG which seems to be related to a change in the way React emits the clip path css property I have the following in my jsx simplified Note the quotes around clip above which are new The clipping does not work in 15,,zpao,2016-05-09 12:38:21,2017-06-01 11:04:33
PR,Remove ensureScrollValueMonitoring,Working through 9333 I discovered that I never actually removed the rest of ViewportMetrics in We no longer need ReactDOMEventListener monitorScrollValue or its trail of stuff,,"nhunzaker,nhunzaker,gaearon,nhunzaker",2017-05-31 00:43:19,2017-06-01 11:18:52
PR,Update CHANGELOG for unreleased 15 6 branch,what is the change Added entries for the latest changes why make this change We are about to do an RC release and folks can look at these notes to see what is in the planned release test plan Visual inspection issue,,"flarnie,bvaughn,flarnie,flarnie",2017-06-01 15:49:27,2017-06-01 16:23:28
PR,Delete logTopLevelRenders flag and console timing,This was mostly used for timing of initial mounts However we have not implemented that in Fiber and yet nobody has complained despite running without it Further more the update tracks any update within the tree not just updates to the props of the top level This is much less useful due to the variation I could make this track initial mounts too but it is a bit awkward so I would rather just delete it if possible We can add the full profiler mode if we want more coverage,,sebmarkbage,2017-06-01 05:03:24,2017-06-01 17:00:45
PR,Hello 15 6 Release Candidate,what is the change We update the versions of all associated React packages when bumping the version of React why make this change We want to publish a RC to give folks time to try out the latest version before it is final Why bump the version of every other associated package It makes the dependency between them more clear There will be cases where we make a fix in React DOM and it requires changes in React core In that case it will be more clear to people when we update the versions of both and they remain in sync test plan Visual inspection issue,,"flarnie,flarnie",2017-06-01 16:58:46,2017-06-01 17:34:02
PR,Update to Flow 0 47,I was going to give rebasing a try and seeing what breaks but first catching up to latest release of Flow The big change here is that function call arity is now strictly enforces Specific call outs Reverted flow s understanding of getPooled and release variadic arguments with args args The Fiber implementation was passing arguments through that were not used in a few places ReactNative had a few issues with incomplete stubbed function typedefs Fleshed those out enough for flow to be okay ReactDOMFiber had an issue with is is as the second arg to createElement ignored it with FlowIssue ReactDOMFiber every single createElement call was erroring because the entry string type was erroring when flowing into the more constrained types such as ispan' or 'th' 'td' Got around it by changing the string type to the existential type,,"iamdustan,acdlite,iamdustan,acdlite,iamdustan,acdlite,iamdustan,acdlite",2017-05-30 20:04:57,2017-06-01 19:17:21
IS,N A,This issue was intended for another repo and was accidentally posted here by mistake,,,2017-06-01 19:43:59,2017-06-01 19:45:04
PR,Merge pull request 1 from facebook master,update from origin Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-02 06:09:31,2017-06-02 06:10:03
PR,Removed unnecessary RN fiber topsecret prefix,Removed temporary sanitizing function in ReactNativeFiberInspector that hid this prefix from the devtools Also added a test to ensure that duplicate view names can not be registered with createReactNativeComponentClass,,"bvaughn,sophiebits,bvaughn,sebmarkbage,bvaughn",2017-06-01 22:41:37,2017-06-02 14:57:29
PR,Add NPM 5 to devEngines,,,"bvaughn,flarnie",2017-06-01 22:46:21,2017-06-02 15:03:29
PR,shouldSetTextContent accepts type parameter in addition to props,This feature was recently requested by in support of a fiber terminal renderer he is working on The team discussed it during our weekly sync and no one seemed opposed to this change,,bvaughn,2017-06-02 17:07:35,2017-06-02 17:40:30
PR,Do not expose internal instance to React Native Inspector,This is the last leak of internal data structures to RN inspector I removed the only dependency on it in,,gaearon,2017-06-02 14:22:53,2017-06-02 18:34:27
PR,Update invalid prop type error strings to point to prop types,There are a couple of outdated error code strings that point to React PropTypes rather than the prop types package,,gaearon,2017-06-02 17:44:27,2017-06-02 18:35:45
PR,Update prettier to 1 3 1,,,"nhunzaker,nhunzaker",2017-05-04 20:43:38,2017-06-03 21:12:21
IS,Possible false positive on getDefaultProps warning with create react class in production environment,Do you want to request a feature or report a bug Potential bug What is the current behavior A dependency I am using is using create react class to get past the deprecation warning but they have still defined getDefaultProps in their class definition I am still getting the following warning from that If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I can not use jsfiddle because create react class appears not to have a CDN version I will try to create a minimal amount of code to properly reproduce this tonight What is the expected behavior I'm not exactly sure Is it supposed to trigger this warning when using create react class Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 4 OS Windows 7 Browser Chrome 58 0 3029 110 64 bit,,,2017-06-01 20:42:25,2017-06-04 01:44:33
PR,Fiber SSR assign props context and updater to instance,I discovered these while I was hacking on the renderer We are missing to set the props context and updater so if a React component does not pass these in the super call we wo not receive them at all,,"edvinerikson,gaearon",2017-06-04 14:22:52,2017-06-04 22:44:25
PR,Add 'create react class' to react dependencies for build,what is the change We needed this dependency in the package json why make this change Even though create react class was added as a dependency to the package json in we did not completely cherry pick this change onto 15 6 from master in This fixes that omission Following this fix we will review PR 9399 and make sure nothing else was missed test plan yarn build and inspect the builds packages react package json see that create react class is included issue Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,flarnie,2017-06-04 17:42:26,2017-06-05 01:08:15
PR,changed changes in Changelog,Inoffensive typo in the 15 6 0 changes,,anmonteiro,2017-06-01 21:05:55,2017-06-05 14:37:02
PR,Clarifying how to apply aria attributes,Provide explicit example of what keep lowercase means for aria attributes,,,2017-06-02 19:41:36,2017-06-05 14:48:21
PR,Insert blockquote on prop value explanation,While reading the page the chain of thought is broken by stating that the tempertature and onTemperatureChange do not have any special meaning Making this a blockquote makes that note look more like a comment and keep the chain of thought intact,,"gaearon,gaearon,gaearon",2017-05-24 21:54:41,2017-06-05 14:51:59
PR,Remove commented out code,There is no clear benefit of keeping that info there if warnings will be added later to the rules it is very straightforward on what have to happen,,lipis,2017-05-27 23:48:06,2017-06-05 14:59:19
PR,Update webpack according to brand guidelines,Following official webpack guidelines the webpack name webpack should always be written in lower case letters even at the beginning of a sentence,,"montogeek,gaearon,gaearon,montogeek,montogeek,montogeek",2017-05-03 15:07:39,2017-06-05 15:01:43
PR,Avoid adding trailing semicolons to inline styles,For 9353,,"gunn,syranide,gunn,aweary,gunn,gunn,sebmarkbage,aweary,gaearon,gaearon",2017-04-28 05:01:43,2017-06-05 15:17:42
IS,Question Use arrow functions or bind manually in es6 classes Any performance difference,In terms of performance is there any difference between using arrow functions and bind manually when using es6 classes Using arrow functions the methods are not on the class prototype it will be on the class instance only Using bind will attach the methods to class prototype It sounds like bind manually will have better performance does that mean we should consider using bind instead of arrow functions for class methods Any suggestions or comments are really appreciated So in terms of performance would you recommend using,,"gaearon,aweary,gaearon",2017-06-05 15:20:40,2017-06-05 15:38:28
IS,Question question regarding best practice,Apologies for the none standard git issue but I was not quite sure where else to ask I'm working with another developer on a React project using ES6 So I was just wondering is there anything wrong or bad practice about using fat arrow functions hoisted and parameters hoisted to a component class which are not set within the constructor So for example The reason I use approach 1 is because it automatically scopes this within the function so you do not need to write the additional line to bind a method within the constructor I figured ultimately this was down to preference as they both worth identically But I have been told my way first example was bad practice Thanks in advance,,aweary,2017-05-21 09:52:44,2017-06-05 19:44:16
PR,Disable tests of recovering from node normalize,According to 9836 we are intentionally choosing to not support this until we have better proof of this being a big need E g to protect against extensions In a way that it is not better to push extensions to be fixed I went with the xit model since jest does not yet have a way to intentionally fail We already have precedent for other xit in our tests,,"sebmarkbage,flarnie,sebmarkbage",2017-06-05 20:25:56,2017-06-05 20:46:27
PR,Fix CI,Looks like this should fix CI issuecomment 298475618 Not sure why CI did not catch it on PR Is it possible we are not running something on PR but run on master,,gaearon,2017-06-05 21:41:45,2017-06-05 21:44:53
IS,Passing children in props children works but not documented,In either raw React or JSX it seems that children can be passed as a property of the props object instead of the documented methods separate parameter in React createElement or enclosed by the component tags in JSX I encountered this syntax in a book and was rather confused because the book provided no explanation on this syntax and nor can I find it mentioned anywhere in the React documentation Intuitively it can be expected to work because it is documented that children is available as a propery of the props object but it should be documented that the reverse is possible as well passing children as props children If it is actually not supported perhaps this should be explicitly mentioned in the docs as a deprecated feature or something I also asked about this on Stack Overflow,,aweary,2017-05-18 23:12:22,2017-06-05 21:51:56
PR,Documentation Added Passing children as a key value prop,Added documentation for passing children as a key value prop as requested in this issue Basically explaining that Foo Bar Foo is equivalent to Foo children Bar and the pros cons with that approach,,aweary,2017-05-23 11:27:40,2017-06-05 21:52:17
IS,componentDidMount not being triggered on initial render,Below is the code in which i am facing the issue with all the life cycle method I am using electrode JS as a framework to make it render server side i am facing a random behaviour with the life cycle methods some time it triggered some time not class BannersList extends React Component constructor props super props this createTable this createTable bind this this onChangePage this onChangePage bind this this state skip 0 limit 5 componentDidMount this onChangePage 1 onChangePage page let skip page 1 this state limit this props setBanner endPoints adminBanner skip this state limit this setState currentPage page skip skip createTable row index return tr key index td img width 75px height 100px src row banner image row banner image alt row title className img responsive img thumbnail td td row title row title 'NA' td td row display section row display section 'NA' td td StatusLabel isActive row status labelText active Active inactive 'Inactive' td td moment row createdAt 'x' format 'DD MM YYYY' td td a className 'btn btn sm btn info pull right' href ' admin banner edit ' row id Edit a td td a className 'btn btn sm btn danger' href ' admin banner delete ' row id Delete a td tr render let data this props getBanners this props getBanners data this props getBanners data items this props getBanners data items length 0 this props getBanners data items map this createTable return div section className content header h1 Banner h1 ol className breadcrumb li a href admin dashboard i className fa fa dashboard i Home a li li a href admin banner list Banner a li li className active List li ol section section className content div className row div className col xs 12 div className box div className box header h3 className box title h3 div className box tools div className input group input group sm input name table search className form control pull right placeholder Search type text div className input group btn button type submit className btn btn default i className fa fa search i button div div div div div className box body table responsive table className table table hover table striped table bordered tbody tr th Image th th Title th th Display Section th th Status th th Created At th th nbsp th th nbsp th tr data data tbody table div div className box footer text center Paginator limit this state limit max this props getBanners data total count this props getBanners data total count 0 onChange this onChangePage div div div div section div,,aweary,2017-05-31 07:08:48,2017-06-05 22:03:19
IS,Controlled input allows dot,Do you want to request a feature or report a bug bug What is the current behavior React allows a dot in a controlled input that does not allow changing the value if the value set as a prop is a number If it is a string the issue is not present If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template In this example the first input allows a dot even though the code does not allow changes The second input does not allow the dot What is the expected behavior The dot should not be allowed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React version 15 5 4 Chrome and Firefox see the jsfiddle example,,"aweary,nhunzaker,nhunzaker,aweary",2017-04-29 20:31:21,2017-06-05 22:52:14
IS,Uncaught TypeError Super expression must either be null or a function not undefined,the error is Uncaught TypeError Super expression must either be null or a function not undefined how should i do i really want to know thanks so much,,"gaearon,aweary",2017-05-03 03:55:57,2017-06-05 22:53:42
IS,select multiple don t demand onChange if there is onMouseDown,Do you want to request a feature or report a bug Bug What is the current behavior React warns you to add onChange to select multiple even if there is onMouseDown the child options having onMouseDown should also be enough If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem What is the expected behavior There should not be the following warning Warning Failed form propType You provided a value prop to a form field without an onChange handler This will render a read only field If the field should be mutable use defaultValue Otherwise set either onChange or readOnly Check the render method of App Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Observed in 15 4 2 I m assuming all versions of React are affected,,aweary,2017-04-27 09:31:45,2017-06-05 22:55:41
IS,ReactPlayer autoplay muted video on mobile,I can not manage to autoplay video on mobile browser I dont have any audio and there is my code When I inspect my page I only see this video src preload auto loop autoplay style width 100 height 100 display block video,,"aweary,bvaughn",2017-06-05 22:34:17,2017-06-05 23:13:13
PR,Remove reactComponentExpect,Legacy,,sophiebits,2017-06-05 23:16:06,2017-06-05 23:42:57
IS,We have fully translated the latest version of react docs into Chinese,You can see the Chinese docs here react docs in Chinese Translated from the v15 5 4 docs We have directly modified the original markdown files so it is hard to pull request and merge the official docs Is there any plans to add i18n feature to the jekyll doc website,,gaearon,2017-06-06 09:52:46,2017-06-06 10:30:41
PR,Add PR 9302 to 15 6RC CHANGELOG,Just keeping things updated,,flarnie,2017-06-06 00:21:13,2017-06-06 14:26:25
PR,Tweak syntax in rollup build script,bvaughn and I already discussed this test plan yarn build,,"flarnie,gaearon,gaearon,bvaughn,flarnie,flarnie,bvaughn",2017-06-05 16:03:36,2017-06-06 14:26:48
PR,Fix url to ng animate,,,,2017-06-06 09:39:44,2017-06-06 15:16:27
IS,First 15 6RC bug CRA throws Ca not resolve 'create react class factory' with 15 6 0 rc 1,Looks like something about the 'create react class' removal was not correctly cherry picked into 15 6 Steps to reproduce 1 create a new CRA project 2 update the version of React in package json to 15 6 0 rc 1 3 run yarn build You will get this error,,flarnie,2017-06-01 20:07:12,2017-06-06 16:17:22
IS,Will ReactFiberReconciler become a public API for implementing 3rd party renderers,We are investigating using React for drawing custom native UIs that fall outside the scope of react native and react windows native ReactFiberReconciler seems like the most sensible place to start assuming fibers start getting used in mainline relatively soon which seems reasonably likely and it certainly seems to be very easy to get a proof of concept up and running using it at least so far If not this then what is the recommended entry point for 3rd party renders to use,,"bvaughn,gaearon",2017-06-06 16:42:51,2017-06-06 16:58:59
PR,Update reference react component md,Grammatical edit to match same statement in state and lifecycle html Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-06 16:48:48,2017-06-06 16:59:45
IS,Component Lifecycle Error Handling,Greetings React team Let me start off by saying that I am a big fan of the work your team is doing and keep up the good work With that said one of the major disadvantages of React is that it sort of throws up when an exception is thrown in one of the lifecycle methods i e null or undefined reference Although this is ultimately up to the developer to ensure proper error handling I was wondering if you would consider adding some additional component lifecycle method for catching unhandled exceptions i e componentDidFail From a developer perspective this would make my life so much easier and really help to improve the quality of the applications I produce Matt,,"bvaughn,gaearon,bvaughn",2017-06-06 17:22:59,2017-06-06 17:38:05
PR,Stop building ReactTestRendererStack,We no longer use it The diff is a bit confusing but all I did was remove ReactTestRendererStack dev bundle Git just got confused and merged its beginning with the end of the next bundle,,gaearon,2017-06-06 19:10:29,2017-06-06 21:23:16
IS,Improve React and ReactNative sync scripts,Follow up work from PR 9626 Sync React to www changes The current process of syncing React to Facebook www involves running a script from within the www repo It would be nice to relocate that script to the React repo since it is coupled with the React build process and shims anyway At this point we could better share code eg the auto generated change log between the React Native sync script and the React sync script Update add documentation for the new sync process Sync ReactNative to fbsource changes It should be possible to sync React and ReactNative simultaneously Update the ReactNative sync script to auto generate a change log based on the commits in master since the last sync This is something the React sync script currently does once that script has been moved into the React GitHub we can just share the code Remove js1 upgrade react script from fbsource Both React and ReactNative should be synced to fbsource in the same way as React is synced to www using the new central sync scripts Update add documentation for the new sync process Secondary goals Syncing www and fbsource should be as similar as possible to avoid confusion Would be nice if it was easy for non core team members to run sync scripts also,,"bvaughn,bvaughn,yungsters,bvaughn",2017-05-24 13:15:15,2017-06-06 21:36:07
PR,Updated label in build script,This is a tiny nit PR to pair with diff D5194769 Basically I think the string BUILDING makes for a more meaningful message in a react sync than STARTING screen shot 2017 06 06 at 2 20 49 pm,,bvaughn,2017-06-06 21:36:56,2017-06-06 21:54:36
PR,Do not hydrate any properties other than event listeners and text content,This strategy assumes that the rendered HTML is correct if the tree lines up Therefore we do not diff any attributes of the rendered HTML However as a precaution I ensure that textContent is updated This ensures that if something goes wrong with keys lining up etc at least there is some feedback that the event handlers might not line up With what you expect Attributes and styles etc might cause a slightly broken look but that is because the app is considered broken in this state The textContent updates is just a precaution against the worst things that can happen e g clicking delete on a row with an event listener that does not match the row content This might not be what you want e g for date formatting where it can different between server and client though Since that can cause janky layout and repaint It is expected that content will line up To ensure that I will in a follow up ensure that the warning is issued if it does not line up so that in development this can be addressed The text content updates are now moved to the commit phase so if the tree is asynchronously hydrated it does not start partially swapping out I use the regular update side effect with payload if the content does not match up Since we no longer guarantee that attributes is correct I changed the bad mark up SSR integration tests to only assert on the textContent instead,,"sebmarkbage,sebmarkbage,aickin,aickin,acdlite,sebmarkbage,sebmarkbage,aickin,sebmarkbage,aickin,aickin,sebmarkbage,sebmarkbage,sebmarkbage,aickin,aweary,aickin",2017-06-06 03:35:10,2017-06-06 22:19:39
PR,Remove prepareNewChildrenBeforeUnmountInStack flag,It was only useful for Stack and we have had it enabled both in www and RN for a while I think we can remove it now,,gaearon,2017-06-06 21:58:40,2017-06-06 22:22:35
PR,Delete travis yml,We migrated to Circle and this file has not been updated for a while As it stands it is currently broken and will probably get more outdated with time I suggest to delete it to reduce confusion If need it later we know how to find it,,gaearon,2017-06-06 22:31:37,2017-06-06 22:42:38
IS,Rendering array of JSX components,I have to build something between tree and table I have folder subfolders and elements There is one folder which keeps inside all subfolders Informations rendering correctly but react is ignoring part of my code const Folder props return tr key props id td className 'w1 20' input type 'checkbox' td td className 'w1 10' props id td td className 'w5 10' a href '' props name a td td className 'w2 10' td className 'w3 20' tr This is my folder component const Subfolder props return tr td className 'p 0 bt 0' colSpan '5' table className 'table table hover w 100' tbody props children tbody table td tr This is my subfolder component const Segment props return tr key props element id td className 'w1 20' input type 'checkbox' td td className 'w1 10' props element id td td className 'w5 10' props element name td td className 'w2 10' props element value td td className 'w3 20' tr This is element The structure should looks like Structure 1 1 Each subfolder should be next row after the folder row and it contains table inside this is really important as later I need to be able to manipulate these tables Inside subfolders can be element rows or another subfolder I know that subfolders should have key also but the major problem for me now is that React completely ignore that inside subfolder td element I'm using another table with props children return tbody Folder id 1 name Folder Subfolder Subfolder Segment segment id 1 name Element Subfolder Subfolder tbody If I try to use it this way it works fine But to parse my API response I have function where I push each element inside array which I return at the end const InitTable props let table const mapResponse data if data if data 'folder' table table Folder key data folder id id data folder id name data folder name let sf data 'children' map item if item return mapResponse item table table Subfolder sf Subfolder else if data isegment' if data istatistics' table table Segment statistics data istatistics' segment data isegment' if props segments mapResponse props segments root return tbody table tbody I need to create chunk of JSX and render at the end so i check type of each object in the API response and push different component to the array The main problem is that then React completely ignore my tables inside td elements are render all as regular table enter image description here 2 2 When I'm expecting something more like enter image description here 3 3 I know the easiest way is to build it as normal string and later use dangerouslySetInnerHTML method but I want to avoid it I'm not sure if it is bug or React or I do not understand how rendering array looks like 1 2 3,,,2017-06-07 08:32:34,2017-06-07 09:46:42
IS,Investigate why CI got broken on master but PR passed,See this PR It passed CI on PR but when merged to master it had a test failure which I later fixed in I wonder if we are missing some check in PRs,,"gaearon,trueadm,gaearon",2017-06-06 17:12:41,2017-06-07 11:17:34
PR,Remove useCreateElement flag,This removes the flag that used to force Stack into HTML generation mode even for client side It should make our CI runs a bit faster Note that we didn t rely on this in the bundles for a long time The only real use of this flag was the HTML generation test that we run on CI However it no longer represents the way forward server renderer was separated from Stack and we have a new suite that covers HTML generation specifically that is independent of this flag I still keep the actual HTML generation codepath in the DOMStack so that we can keep using the Stack bundle It is just not covered by the normal Stack tests anymore but it is still covered by new integration tests,,"gaearon,gaearon",2017-06-06 22:16:22,2017-06-07 12:22:26
PR,Add check for string and null 'rootElement' in ReactDOMFiber,what is the change Before we call 'rootElement getAttribute' we check that the method is defined why make this change There is an internal use case I found where 'rootElement' is a string and null at different points as the page is rendered It looks like this method was added as part of support for re hydration of server side rendered content I can not imagine we would want to reuse content if the rootnode is a string or null Not sure if we want an earlier check that it is an element before this point test plan yarn test and I manually tested this fix in the internal case where it was breaking,,"flarnie,sebmarkbage,gaearon,flarnie,flarnie,gaearon,gaearon,gaearon",2017-06-06 18:49:12,2017-06-07 14:51:06
PR,Add onBailout hook to React DevTools,I need to know if a Fiber bailed or not I currently have a comparison like this L40 L59 but it s not exhaustive and doesn t catch shouldComponentUpdate bailouts This is especially bad because Fiber DevTools actually traverse the whole tree on every commit so we need to be more aggressive about bailouts there than with Stack I talked to and we could not find any reliable way to deduce it from the structure which would change anyway Feel like an explicit hook is more appropriate Having this information should both help me avoid unnecessary traversal and updates in DevTools and fix once and for all which unfortunately makes the trace update feature pretty much useless Example before note how even bailed out AddTodo and other TodoItems are highlighted Example after note how TodoList and one TodoItem are highlighted others are skipped Internally is very interested in this for his project and I'm sure we can find many people interested in www as well who gave up on this tool before since it was not accurate,,"gaearon,bvaughn,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon",2017-06-07 16:27:28,2017-06-07 17:37:21
IS,Add an export of html props in react package since React is already using them for validation,Do you want to request a feature or report a bug feature What is the current behavior The react package does not provide a list of acceptable props for html node div span etc Sometimes other packages pass on other props like react redux passing dispatch when no mapDispatchToProps is provided This below will pop an error saying there is an unknown prop dispatch on a div tag If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Since React is using a list of those props for validation the react package should also provide them to allow react users to make sure they pass on normal props Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5,,"aweary,aweary",2017-06-07 06:58:34,2017-06-07 17:58:52
PR,Fix a bug with memoizedState affecting React DevTools,9580 accidentally added a branch that didn t memoize state for the root DevTools relies on root is memoizedState to tell if we are mounting or unmounting This should fix it Test plan verified this fixes an issue in another app I'm debugging with a version from master,,gaearon,2017-06-07 18:40:08,2017-06-07 18:54:58
PR,Pull all docs updates from 15 stable into 15 6 dev,In order to ensure consistency between the 15 stable and 15 6 branches we found all the diffs present only in 15 stable and cherry picked them onto 15 6 dev These are 100 documentation updates which is why we did not bother cherry picking them in the first place but having them on the 15 6 dev branch makes the two branches more consistent and that is better Nobody will accidentally see outdated docs on the 15 6 dev branch these diffs wo not somehow be lost or overwritten when we combine the branches to release 15 6 Test Plan Manually tested the docs looking at many of the updated pages Also ran all tests etc,,"flarnie,gaearon,flarnie,gaearon,gaearon",2017-06-07 22:33:53,2017-06-07 22:47:11
IS,Cursor jumps to end on controlled component,Do you want to request a feature or report a bug Bug as per issuecomment 281864796 What is the current behavior When typing inside a controlled input component the cursor will jump to the end if the value is modified in handleChange If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I have modified the Controlled Components example controlled components as described in the documentation with toUpperCase which you can see in my fork of the codepen Type abc123 transformed automatically to ABC123 Place cursor as follows ABC 123 Insert lower case d after the c character Observe how the cursor jumps to the end The cursor only jumps to the end if a lower case character is inserted On any other modification the cursor remains where it is presumably because the value is not overwritten by react What is the expected behavior The cursor should remain at the current position Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 1 Browser Chrome 58 OS Win 7,,gaearon,2017-06-08 09:13:48,2017-06-08 13:12:41
IS,Number isNaN in IE11,Number isNaN is not supported Browser compatibility in Internet Explorer 11 In a code sample from the Lifting State Up documentation Number isNaN is used Specifically in the Writing Conversion Functions writing conversion functions section see the tryConvert function I'm following the Quick Start guide using Visual Code 1 12 2 as editor with create react app When using Internet Explorer 11 to test the Calculator component after completing the Lifting State Up section I'm getting the following error TypeError Object does not support property or method 'isNaN' This can be fixed when using reguler isNaN in IE11 should the doc be updated to use this,,gaearon,2017-06-07 21:09:09,2017-06-08 13:17:43
PR,Pull request,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-08 07:39:00,2017-06-08 14:56:43
IS,JavaScript Responsible of rendering html issue,I have a question Related to binding html in JavaScript and making JavaScript responsible of creating the dom that is hiding this resources from the browser it is all blocked in JavaScript which lead to opting html out of optimization which the browser do like background parsing of html in a separate thread so when you bind html in JavaScript you just bind with your own code am I Understand react dom manipulation well or not,,bvaughn,2017-06-08 07:53:44,2017-06-08 15:20:51
PR,Delete ReactARTStack,We are not using it anywhere,,"gaearon,bvaughn,gaearon",2017-06-08 10:37:30,2017-06-08 16:05:22
IS,EventHandler on React Component without implementing it from the component side,Do you want to request a feature or report a bug feature What is the current behavior To add event handler to components outer layer it has to be implemented from inside the component as well like return div onClick this props clickHandler div without that can not add event handlers from parent While something like this should work in my opinion SomeComponent onClick do the stuff example So to sum it up what I request is that event handler props added to Component would pass on to the outer layer of the Component,,bvaughn,2017-06-08 17:43:20,2017-06-08 18:18:01
IS,viewBox of inline SVG sometimes rendered as viewbox,React js does not seem to be consistently rendering viewBox as camel cased viewBox it instead of rendered as viewbox Sample code file color button js L51 It works in Chrome but not in Firefox or IE11 Any ideas Version 15 5 4,,aweary,2017-06-07 17:34:09,2017-06-08 18:31:23
PR,Exclude Stack from DOMServerStream,I think the Stack specific injection in DOMServerStream was unintentional It dragged the whole Stack implementation into it whereas we only need the separate DOM injection Tests pass and the bundle got smaller,,"gaearon,flarnie,flarnie,gaearon,gaearon,sophiebits",2017-06-08 10:46:09,2017-06-08 18:41:03
PR,Add Bailout effectTag for React DevTools,I have not added tests since it is not observable via public API but I verified it works with React DevTools as expected if I make the necessary changes there This lets us fix this feature It also makes DevTools faster because we can confidently skip bailed trees which is important since DevTools now traverses the complete tree I added this both in development and production because it doesn t seem expensive to me and I would prefer this feature to behave consistently Its current pitfalls are already bad enough that people don t trust it I d rather not trade them for other pitfalls We can completely disable this in the future if we add a PROFILE build and PROD build becomes incompatible with DevTools because of advanced optimizations But I d rather not break it earlier Example before note how even bailed out AddTodo and other TodoItems are highlighted Example after note how TodoList and one TodoItem are highlighted others are skipped,,"gaearon,gaearon,acdlite,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage",2017-06-07 20:19:41,2017-06-08 20:23:34
PR,Remove fiber specific fixtures from 15 6 branch,what is the change Removes three directories in the 'fixtures' directory why make this change These fixtures were designed to work with Fiber and were accidentally pulled into this branch They were causing errors when we try to build the other fixtures test plan cd react fixtures node build all js no longer throws an error from fiber debugger App js although it still throws another error issue,,"flarnie,gaearon,flarnie,flarnie,gaearon,gaearon",2017-06-08 23:11:38,2017-06-09 00:23:28
PR,Adding React Alicante 2017 to upcoming conferences,Adding upcoming conference,,nhunzaker,2017-06-08 14:56:00,2017-06-09 01:14:21
PR,Add React Riot hackathon,React Riot is the first online worldwide hackathon for React No cost to enter and teams can win some cool prizes It is a community event to build the best React app in 48 hours Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon",2017-06-06 13:09:06,2017-06-09 01:18:49
PR,9712 fix input type number value ' 98' should not be equal to '0 98',fix bug 9712 I found in 15 5 4 is NOT OK but in 16 0 0 alpha 3 is ok In 16 0 0 alpha 3 the number type is not handled separately 15 5 4 is NOT OK L202 16 0 0 alpha 3 is OK L190 the change is base on master Maybe the pr is worth to accept,,"nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,nhunzaker,gaearon,flarnie",2017-05-18 11:01:59,2017-06-09 01:27:18
PR,Inline some internals reduce shared utilities between isomorphic and renderers,See individual commits The goal is to narrow down those utilities because they are copied into both bundles While we are at it also making some things DEV only There is a bit more duplication than I would like but it is partly due to Stack For things like Symbols I do not think modules are super useful Note this breaks IE8 hard,,"gaearon,gaearon,sebmarkbage,gaearon",2017-06-09 01:16:57,2017-06-09 11:41:50
PR,Remove Alder32 forwarding module and ReactDOM FB bundle entry,This removes the forwarding module and the entry in the ReactDOMFiber FB bundles Alder32 will be moved into FB react contrib and out of the React repo once has been merged the last internal reference to using Alder32,,trueadm,2017-06-09 10:16:33,2017-06-09 13:19:17
PR,Update CHANGELOG md 0 14 9,Update CHANGELOG md 0 14 9,,"aweary,aweary",2017-06-07 12:06:48,2017-06-09 14:18:41
PR,Add support for implicitly mocked components using ReactServerRenderer,Takes the current Stack support for implicitly mocked components automocked that return undefined,,trueadm,2017-06-09 15:07:22,2017-06-09 15:27:00
PR,Return empty static markup for null components,This matches Stack behavior Added a test that passes in both,,gaearon,2017-06-09 15:22:21,2017-06-09 15:32:01
IS,Get fixtures working on 15 branch,There are multiple errors thrown when trying to build the fixtures on the 15 stable and 15 6 dev branches I need the fixtures working in order to do some manual testing of add on fixes,,flarnie,2017-06-08 22:49:21,2017-06-09 20:07:15
PR,Remove extra brace,,,,2017-06-09 21:37:27,2017-06-09 21:40:50
PR,Remove extra brace,,,"bvaughn,gaearon,zpao",2017-06-09 21:42:39,2017-06-09 21:49:00
PR,Move Past Confs add React Conf Brazil 2017,Update community conferences md Move React London e React Amsterdam to Past Conferences Add React Conf Brazil to October 07 2017,,"nhunzaker,trueadm,gaearon",2017-05-16 21:41:12,2017-06-09 21:55:18
PR,Fix formatting for prop name note,Fixes formatting in Sorry about that I'm unable to build the docs locally due to some ruby gem issues but I'm relatively confident this will fix it since this is the same format used by other notes tips cc,,"aweary,aweary",2017-06-09 22:41:35,2017-06-09 23:08:12
PR,RN Inspector guard against clicks outside of RN,Clicking outside of a React Native app can cause the latest incarnation of the Inspector to choke This diff adds guards for this case,,"bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,gaearon,bvaughn,bvaughn,bvaughn,gaearon,gaearon,gaearon,bvaughn",2017-06-09 21:43:05,2017-06-09 23:10:40
IS,Urgent Does not support the latest builds of React Native and React,it is not possible to use with latest 2 builds of react native and react it is related that react native works already with 16 0 0 alpha xx builds But react dom does not support it and the app is crashes,,gaearon,2017-06-10 10:28:01,2017-06-10 12:44:07
PR,Add More Debugging for React DOM Fiber Component,This PR removes some TODO is and adds some debugging helpers in their place as the original author suggested,,"jfo84,gaearon,jfo84",2017-06-09 18:59:27,2017-06-10 14:41:39
PR,Remove TODO is from ReactDOMFiberComponent,gaearon in reference to 9908,,"jfo84,gaearon",2017-06-10 14:48:57,2017-06-10 14:51:13
PR,Do not build ReactDOMServerStack,We do not use it now,,gaearon,2017-06-10 14:34:16,2017-06-10 17:08:06
IS,Is it possible to delay the propTypes isRequired validation before constructor got called,Do you want to request a feature or report a bug feature What is the current behavior When element is wrapped like following I understand this is an expected behavior however the warning is really annoying What is the expected behavior Delay the propTypes validation till willMount or rendered or didMount to avoid unnecessary warnings Or maybe before the constructor got called Since the Child is wrapped in Parent The Parent can use React cloneElement props children height to merge and render the Child with height prop merged so we wo not see a lot of unnecessary warnings and keep isRequired as a mark in Child propTypes Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 4,,gaearon,2017-06-09 04:51:10,2017-06-10 17:09:13
PR,Fix missing react in create react class,refs 9689,,"flarnie,gaearon,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie",2017-05-24 10:30:27,2017-06-10 17:32:49
PR,Remove addons path deleted in 9209,Remove already deleted addons path in scripts rollup bundles js,,"taehwanno,gaearon",2017-06-11 18:22:08,2017-06-11 19:23:41
PR,Inline case statement in DOM Fiber Component,In looking through the TODO is I found this one concerning inlining trapping bubbled events since the function is being called in an equivalent case statement The function was a no op for input and select so those changes are just removals I was not exactly sure what to do with the comments For the isMounted one I duplicated it where the function was being called and for the one about null nodes I dropped it since it seemed specific to bubbling events,,jfo84,2017-06-11 20:00:09,2017-06-11 21:03:55
IS,Browser compatibility issue in Jquery 3 2 1 version,report a bug or need to confirm What is the current behavior I am getting the following error in console when I am using the jquery 3 2 1 min js at line var I C fn remove D C browser mozilla parseFloat C browser version 1 9 Uncaught TypeError Cannot read property aremove' of undefined,,"aweary,aweary",2017-06-05 03:51:08,2017-06-11 22:29:01
IS,If ReactCSSTransitionGroup children has text IE IE10 edge will be a false effect,Do you want to request a feature or report a bug I think may be a bug Or is it IE problem I'm not sure What is the current behavior When ReactCSSTransitionGroup children has text any text IE IE10 edge will be a false effect like this And if no text in there it will be ok Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React OS win7 React 15 4 2,,gaearon,2017-06-12 08:33:25,2017-06-12 10:56:38
IS,WRONG Javascript heap out of memory with 0 45 1,EDIT Sorry wrong project meant to post that on react native,,,2017-06-12 14:41:39,2017-06-12 14:43:18
PR,Fix missing react dependency in some addon umd builds,We absolutely need a build process and tests before making any further changes to these addons That said this is a quick fix to hopefully improve the situation in conjunction with the 15 6 release We will probably continue working on fixing the add on packages after 15 6 The fix what is the change Manually tweaking the UMD builds for both add ons to include a dependency on React why make this change They were broken before for AMD and CommonJS For reasons I have not debugged the CommonJS builds are still broken but the AMD is now fixed and globals still work The process for testing the fix what is the change Setting up the fixtures to enable manual testing of the react linked input and create fragment UMD builds This was a painstaking and frustrating process and we need something better before making any more fixes to addons Here is roughly what I did add 'console log' statements to the add on to confirm that you have loaded the right build case copy the add on into 'build packages' so that the 'webpack alias' can find it make copies of each of the following three fixtures for each add on you want to test renaming them to specify what you are testing globals js requirejs js webpack alias modify those fixtures to use the add on you intend to text why make this change We need to verify the current state of the bug before fixing it to confirm that the change actually is fixing the bug test plan open fixtures globals with create react fragment html open fixtures globals with react linked input html open fixtures requirejswith create react fragment html open fixtures requirejswith react linked input html cd fixtures webpack aliaswith create react fragment yarn build open index html cd fixtures webpack aliaswith react linked input yarn build open index html,,"flarnie,sophiebits,sophiebits,sophiebits,flarnie,flarnie,sophiebits,flarnie",2017-06-11 00:53:33,2017-06-12 15:43:09
PR,9712 fix input type number value ' 98' should not be equal t,fix input type number value ' 98' should not be equal to '0 98' 9714 9712 fix input type number value 98 should not be equal to 0 98 fix eslint error fix label error,,"flarnie,nhunzaker",2017-06-12 17:04:52,2017-06-12 17:10:25
PR,Delete prebuilt addon UMDs,They are hard to work with and some are already inconsistent fixes are made to js but lost in min js I just want to start from scratch here merge any fixes to the source and then add a build process for them,,gaearon,2017-06-12 18:24:39,2017-06-12 18:33:35
PR,Not read to merge Use Object assign polyfill update addon,This would fix but we do not have a build process to recompile UMDs,,"gaearon,gaearon,gaearon",2017-06-09 23:43:40,2017-06-12 18:43:29
PR,Remove from create react class,Fixes the remaining issue with nosideeffects and the create react class addon as mentioned in 7551 context issuecomment 294633325 Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"gaearon,gaearon,gaearon",2017-06-12 16:11:14,2017-06-12 18:45:41
PR,Remove broken GCC annotation from create react class,Fixes last issue in Same as but submitted against the right branch,,gaearon,2017-06-12 18:45:21,2017-06-12 18:45:57
PR,Use Object assign polyfill for update addon,Fixes Do not need to add to package json because it is already there,,gaearon,2017-06-12 18:40:41,2017-06-12 18:46:09
IS,Get CI passing on 15 5 stable branch,This is important so that we can get the docs updated,,"flarnie,gaearon",2017-04-11 21:18:48,2017-06-12 18:47:50
PR,Add wouldom' fixture to 15 6 dev branch,what is the change This seems useful even for this short lived branch and some commits we cherry picked were making updates to it So we just pulled the fixture in from master why make this change To bring things into a bit more consistency with master test plan Manually tested the fixture things seem to work issue None but related to cherry picking,,"flarnie,flarnie,gaearon",2017-05-03 20:06:55,2017-06-12 18:48:30
IS,ReactLink still using React PropTypes,Do you want to request a feature or report a bug BUG What is the current behavior React is using React PropTypes even though it states it is going to be deprecated If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template L62 What is the expected behavior Should use PropTypes from the prop types package Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 4,,"flarnie,gaearon",2017-05-23 20:30:17,2017-06-12 18:50:08
PR,9627 Fix create react class isMounted ordering issue,Split the IsMountedMixin in two so that the isMounted flag is set to false after componentWillUnmount is executed in mixins and the component Fixes I was not sure how to build the create react class js and create react class min js yarn build did not seem to touch those files,,"gaearon,gaearon,gaearon",2017-05-09 19:50:30,2017-06-12 19:21:28
IS,isMounted behavior different with create react class,Do you want to request a feature or report a bug Bug What is the current behavior Calling this isMounted in componentWillUnmount in prior versions would return true Now it returns false I believe this was untested behavior before but the new tests that were added may check the wrong value L417 Changing this line to test for true will exhibit the behavior The fix would be to defer setting the isMounted flag to false until after all mixins and the componentWillUnmount method were called on the component Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 x and anything using create react class is broken Working correctly in 15 4 x with React createClass,,"gaearon,gaearon,gaearon",2017-05-09 00:31:55,2017-06-12 19:22:16
PR,Update create react class,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-12 19:37:06,2017-06-12 19:37:14
PR,update create react class package json to use latest react,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"gaearon,gaearon",2017-06-12 19:37:43,2017-06-12 20:20:47
IS,create react class cannot be compiled with latest Google Closure Compiler,When trying to compile create react class 15 3 1 with the latest Closure Compiler the compiler complains This is related to The create react class npm package needs to be republished with the React 15 5 4 code This ticket is spun off of issuecomment 294633325,,"gaearon,gaearon",2017-05-23 08:42:58,2017-06-12 20:21:05
PR,Lint and test addons on CI,This adds addons to the linted directories I figured this was necessary because it was too easy to introduce undefined variables and similar issues To do this I had to introduce Prettier to addons run it on them with no manual changes and then do a few mostly cosmetic fixes in to fix all existing lint issues I recognize this significantly touches the source but since we decided to establish a proper process I need the confidence that linting gives me before making any other changes or working on builds,,"gaearon,flarnie,gaearon,gaearon",2017-06-12 19:47:36,2017-06-12 20:26:57
PR,Delete babelrc from addons,These are currently unused and at best are confusing since we did not actually compile them to ES5,,gaearon,2017-06-12 20:43:28,2017-06-12 22:42:45
PR,Use react transition group from npm,Note I have not tested this yet This should point react addons transition group to API compatible versions of react transition group package This lets it keep working in observable future So we do not need to deprecate it officially even though we will keep the npm package deprecated and suggest people to migrate to new package explicitly cc,,"gaearon,flarnie,gaearon,jquense",2017-06-12 20:37:31,2017-06-12 22:43:39
PR,Update minified version of 'create react class',what is the change We ran the latest version of addons create react class create react class js through why make this change The last corner case I'm thinking of is this The createClass deprecation warning never went out in 15 5 and is going out now for real in 15 6 The createClass UMD build is broken for AMD CommonJS but we fixed it But not for the minified version of the file If someone see the warning and tries to use the UMD build then it is going to be broken in some cases Since we are skipping mentioning the add ons in the blog post and this might be a new warning for them this could be a nasty surprise for folks We can do a quick 15 5 4 release of that package we would at least fix that case Seemed worth doing since it took 30 seconds This diverges from what is doing to fix the add ons I would probably try to use cherry pick and interactive rebase to move this commit to right after and then do the patch release of create react class from that spot in history Alternately I can merge this into the forked branch 15 6 before addon reconstruction and then do the patch release from there test plan I did not test this Ideally minifying this file wo not break anything and it is high cost to test add ons until we have some repeatable tests in place issue Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"flarnie,flarnie",2017-06-12 22:29:12,2017-06-12 23:42:00
PR,Add controlList to DOM property whitelist,Addresses 9594 Long term we can ignore this sort of stuff but the attribute white list change has not landed will it for 15 x Testing I have hoisted this build of React on surge sh and setup a fiddle The video tag should correctly receive the controlList attribute More info controlslist,,"nhunzaker,aweary,nhunzaker,nhunzaker",2017-06-13 00:48:44,2017-06-13 01:09:34
IS,BUG input type number,,,"nhunzaker,aweary,nhunzaker",2017-05-18 04:00:42,2017-06-13 02:20:12
IS,react addons update 15 5 2 uses Object assign,Do you want to request a feature or report a bug Undocumented breaking change for IE11 What is the current behavior Starting react addons update v15 5 the package has been changed from depending on an internal file from the react package react lib update js to actually include the full implementation While the internal implementation depended on the object assign polyfill the external one actually calls Object assign directly breaking support with IE 11 react addons update 15 4 2 15 4 2 react 15 4 2 lib update js 15 4 2 lib update js react addons update 15 2 2 15 5 2 This requires users that support IE11 to polyfill Object assign This was not mentioned in the release blog post of React 15 5 react addons If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Add a mention of this to the release blog post Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 5 Worked fine in React 15 4,,"gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,gaearon",2017-06-09 23:18:57,2017-06-13 11:12:02
IS,unstable handleError Cannot read property 'listeners' of null,Do you want to request a feature or report a bug bug What is the current behavior TypeError Cannot read property 'listeners' of null If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior renders error text Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 4 16 0 0 alpha 12,,"gaearon,gaearon,gaearon",2017-06-07 05:59:50,2017-06-13 11:13:30
IS,Remove streaming renderer from fb builds,We should not get html shared react ReactDOMServerStream prod js and html shared react ReactDOMServerStream dev js in the fb builds Correct me if this is wrong,,"flarnie,gaearon,flarnie,gaearon",2017-06-06 18:29:39,2017-06-13 11:13:48
IS,Unable to get property 'getHostNode' of undefined or null reference when built react application is accessed in IE,Getting this error in IE Moreover the react application works fine in IE when used as standalone webpack dev server but the built js file using webpack and babel fails to navigate when used inside of a jsp file inside our application The build application works fine in mozilla and chrome I have read other replies for this topic which talks about the promise raising an unhandled exception But that is not the case with the application coz the home page does not have any promise calls Understand that this has to do with component error or syntax error but since the application is working fine in mozilla and chrome not able to find out the exact issue We built our react application with testing it all along in chrome and only recently started testing it on IE Using below versions of libraries react 15 4 0 react redux 5 0 1 react router 3 0 0 react router redux 4 0 7 webpack 1 14 0 webpack dev server 1 16 2 babel core 6 20 0 babel loader 6 2 9 babel runtime 6 20 0 babel polyfill 6 20 0,,"gaearon,gaearon",2017-05-31 17:09:57,2017-06-13 11:17:10
IS,Problem with unstable renderSubtreeIntoContainer and refs,Do you want to request a feature or report a bug Report a bug What is the current behavior I use the usual technique of portals with unstable renderSubtreeIntoContainer Also I need to control portal children with refs using legacy syntax I know The problem is unstable renderSubtreeIntoContainer is async and can be called after componentDidUpdate When refs are used in componentDidUpdate they can be undefined due to async nature of unstable renderSubtreeIntoContainer If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo Open the browser console and press add button You will got this error componentDidUpdate called before unstable renderSubtreeIntoContainer callback What is the expected behavior Are needed defined refs in componentDidUpdate In the general case a completely completed render I know about pattern with using unstable renderSubtreeIntoContainer callback but this is not preferred solution Because of I have quite complex combination of two libraries and do not have access to unstable renderSubtreeIntoContainer callback If someone is interested in libs this is react autocomplete and react tether There may be a way with avoiding rerender and saving the refs from the first render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm using v15 4 2,,"gaearon,gaearon,gaearon",2017-05-29 14:57:29,2017-06-13 11:23:03
PR,Add build process for createReactClass,Changes Prettier trailing commas to be ES5 compatible Adds webpack build process for createReactClass Adds a test run for compiled bundles and runs it on CI I tried with Browserify first but it seemed significantly more complicated and I could not figure out how to get it to produce correct UMD wrappers that depend on react So went with Webpack instead,,"gaearon,gaearon,flarnie,gaearon",2017-06-13 13:13:40,2017-06-13 14:00:11
IS,Non shouldComponentUpdate for state AND prop updates,Do you want to request a feature or report a bug Feature What is the current behavior The only render independent lifecycle hook that is called for both state and prop updates is shouldComponentUpdate What is the expected behavior There are certain cases where it currently makes sense to run some code whenever state or props update even if a render wo not happen E g a context providing component which needs to update its child subscribers even if it is best not to re render the immediate child due to the frequency of updates Why are you using state for this In my case I'm re rendering only while my component is not passed any children then the component renders an instance of a shallow child component passed props based on our internal state When children is passed in I do not want to update since I would be re rendering a potentially large component tree for no reason but I still want to notify any context subscribers that the state changed It is workable to use shouldComponentUpdate but that is not what this lifecycle method is for ETA maybe componentWillReceiveState or similar Only called for state updates Should be called after componentWillReceiveProps which may have updated the nextState and before shouldComponentUpdate No setState allowed,,aweary,2017-06-11 19:18:27,2017-06-13 14:35:51
IS,Stateless React components with controlled input,I have asked this question on Stackoverflow but did not get any response so I am trying my luck here Currently to make controlled inputs work inside Stateless React components I am wrapping the stateless component inside a Sate full component For example What I would like to know is a couple of things Is this a good pattern If not how can I achieve my goal i e to have controlled inputs inside stateless components,,aweary,2017-06-12 17:35:23,2017-06-13 14:37:50
PR,15 6 Add controlList to DOM property whitelist,Adds 331ef3ec913f867159b6178ef35f8a0b4472ab4f to the 15 6 branch controlsList is a new attribute for media elements controlslist,,"nhunzaker,gaearon,nhunzaker,flarnie,nhunzaker,nhunzaker",2017-06-13 01:12:27,2017-06-13 14:56:56
IS,How safe is React Native with React 16 Alpha,I am currently on React Native 0 42 3 Since then 0 43 0 44 0 45 have been released as stable and 0 46 is around the corner RN 0 42 3 uses React 15 4 2 March saw the release of RN 0 43 which started using the React 16 0 0 alpha series and completely skipped version 15 5 This has prevented me from updating React Native as I have been waiting for a official stable release of React 16 We are now in mid June and the official stable Release of React is 15 5 4 It appears that version 15 6 0 is now entering RC1 and version 16 0 0 is still in alpha So the React world in using React 15 5 4 and the React Native world is using React 16 0 0 alpha 1 Does anyone know why React 15 5 was skipped 2 Is it safe to use a version of React Native 0 43 and up in production 3 What is the deal with React 16 anyway It is not even mentioned in the list of React releases,,gaearon,2017-06-13 16:46:57,2017-06-13 16:49:06
PR,Add build process to all addons,I think this should be it I have not verified the final replacement stage works yet still have to do it manually but apart from that this should be ready,,"gaearon,gaearon",2017-06-13 16:28:52,2017-06-13 17:08:18
IS,Fix systemjs html fixture on 15 branch,Do you want to request a feature or report a bug This is some kind of bug either in React or in the systemjs html fixture What is the current behavior When you open fixtures systemjs html there is an error in the console and React does not load If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Step 1 Check out 15 dev or 15 6 dev1 Step 2 Run yarn install yarn build Step 3 Open fixtures systemjs html What is the expected behavior You should see 'Hello World' appear Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This was also present in the last release of React 15 5 and is still present in React 15 6 0,,"flarnie,gaearon,flarnie",2017-06-13 16:39:06,2017-06-13 17:12:18
PR,Update changelog for 15 6,Since we compiled the changelog ahead of time this was a piece of,,flarnie,2017-06-13 17:51:41,2017-06-13 17:53:57
IS,onChange not firing properly in React 15 2 0 IE11 when paste text into textarea,Hello On IE11 React 15 2 0 when copy paste data from keyboard to a textarea onChange not firing this works fine in Chrome and FF I have included a test link a log msg should happen when you copy paste data into textarea Thanks,,"syranide,jquense,nhunzaker,aweary,aweary,jquense,gaearon,jquense,aweary,jquense,nhunzaker,gaearon,mbrookes,flarnie,gaearon",2016-07-07 11:19:49,2017-06-13 18:31:04
IS,Upgrading from React 14 to 15 breaks IE11 autofill behavior with controlled inputs,I have a sign in form with controlled inputs that works fine using React 14 When I upgrade to React 15 autofill behavior in IE11 no longer triggers onChange Strangely if I change document mode from Edge Default to 10 React 15 still behaves as expected Reading the changelog for R15 this change sounds like it could be related Input events are handled more reliably in IE 10 and IE 11 spurious events no longer fire when using a placeholder in 4051,,"jquense,jquense,jquense,jimfb,jimfb,jquense,jquense,jquense,sophiebits,jquense,jquense,flarnie",2016-04-25 20:01:11,2017-06-13 18:32:14
IS,onChange not firing properly in React 15 IE11 when clearing input with X button or rightclick Delete,The onChange event for inputs does not seem to be working correctly in React 15 when using the clear X button provided by IE I'm using IE11 Clicking the clear button does not fire an immediate onChange at the time of click rather it seems that it queues an onChange that fires the next time text is entered effectively rapid firing two onChanges in succession This becomes a problem when using a component that maps its state to two or more probably inputs' values I made two fiddles with different versions of React and ReactDOM React 15 fiddle buggy React 0 14 fiddle working In the React 15 fiddle you can reproduce in IE11 by 1 typing a value into the left input box 2 typing another value into the right input box 3 clicking the X button to clear the right input box 4 typing whatever in the left input box You should see that the right input box reverts to its value before you clicked X You can also see this happening if instead of clicking X to clear the right input you highlight the input text right click and click 'Delete' Both the X button and right click delete cases work fine with React 0 14 tested both fiddles with the exact same browser and code,,"gaearon,jimfb,jquense,flarnie",2016-05-20 20:48:26,2017-06-13 18:32:48
PR,Minor fixes to 15 6 0 changelog,Move unreleased changes to addons back into the collapsed section Move React DOM changes to React DOM section Replace apostrophes with backticks where necessary use the same verb tense everywhere Rephrase some changes to be more descriptive,,"gaearon,gaearon,flarnie",2017-06-13 19:56:17,2017-06-13 20:25:08
IS,create react class UMD module does not work in AMD environment,React is undefined in L764,,"gaearon,syranide,gaearon,syranide,gaearon,syranide,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-05-15 10:55:39,2017-06-13 22:19:53
IS,Set 'React' as dependency in AMD builds of addons,Right now 'React' is undefined in some of our addons which may depend on it create class L764 documented in create fragment L11 react linked input L1 The problem running these in an AMD environment without React defined globally will lead to the dependency not being found Probably this can be solved as follows 1 Manually edit the unminified version making it work like react dom 18697850 420365161667842 787782393 o 2 Test by modify requirejs or systemjs fixtures as one offs to test it specifically This does not need to be committed 3 Submit a PR and a React Core maintainer will rebuild the minified version for you this is not a process we had intended to repeat so it is not automated in an easy way to reproduce tag and or Ideally we are not making changes to the addons code but this is worth doing If someone wants to work on this I'm happy to review PRs otherwise will pick it up in the next couple of days,,"flarnie,flarnie",2017-05-24 16:01:59,2017-06-13 22:20:18
PR,Blog post for 15 6 0,what is the change A short and sweet summary of 15 6 0 changes why make this change To thank community contributors and call out important changes test plan Visual inspection I also looked it over in a markdown viewer screen shot 2017 06 13 at 1 57 51 pm screen shot 2017 06 13 at 1 58 00 pm screen shot 2017 06 13 at 1 58 10 pm issue,,"flarnie,gaearon,bvaughn,gaearon,gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,gaearon,flarnie,flarnie,gaearon",2017-06-13 18:42:17,2017-06-13 22:51:46
IS,Keys not working element loses css transition,If I swap the position of two react elements item0 and item1 positioned with transform translate a css transition is triggered only if the elements were rendered in the same order If I change the order of the render position swap still the same but now item0 renders after item1 the css transition is not triggered It looks like react is deleting the DOM element and recreating it even if they have React keys set and no componentDidMount componentWillUnmount are called Here is a simple JSfiddle with the problem,,"gaearon,syranide",2017-04-23 01:25:41,2017-06-13 23:40:55
PR,Use public API in tests wherever possible,This moves us closer to a world where we can test both DEV and PROD flat bundles and thus more safely experiment with PROD mangling We already have expectDev which will be very handy for this It turned out we are already doing a good job in many places the biggest violators are feature flags and event tests For now I am changing to use public npm like public API imports wherever possible I left a few Stack files untouched as they will go away I also did not touch feature flags which will fall away organically soon In places where it seems like we might want public API tests I left comments instilling skepticism into the reader The more tests we can run on bundles in the future the better I think that once Stack and feature flags are gone we can start enforcing that some files opt into testing on bundles and can not introduce internal dependencies This is future work and does not block this PR which just converts most cases,,"gaearon,gaearon,gaearon,prometheansacrifice,gaearon,sebmarkbage,gaearon,gaearon,gaearon",2017-06-13 23:38:59,2017-06-13 23:58:35
IS,Feature ReactCSSTransitionGroup delays,Hi I want to make a feature request for adding a way to delay enter appear leave for ReactCSSTransitionGroup component I propose adding new props to ReactCSSTransitionGroup transitionEnterDelay Delay in ms after which element begins enter transition Defaults to 0 transitionAppearDelay Delay in ms after which element begins appear transition Defaults to 0 transitionLeaveDelay Delay in ms after which element begins leave transition Defaults to 0 As all defaults for proposed props are 0 it would't add breaking changes for existing ReactCSSTransitionGroup users The example before describes my reasons behind the request Use case I'm currently creating an project that contains navigable subpages and each subpage has a unique enter and leave animation with a unique enter leave duration and it is possible to change to any subpage from another in any order When changing to a new page the previous subpage leave must end before the new page begins entering in So I need to delay the entering of the new subpage until old one leaves Currently I have an object that defines enter leave durations for each of the subpages and a helper function calcPageTimeouts currentPage lastPage that calculates the correct timeouts and delays for current subpage for the ReactCSSTransitionGroup component depending on current state Each subpage contains multiple different elements that in combination creates an enter leave animation sequences As ReactCSSTransitionGroup enter leave transitions are CSS class based it is not possible to add a additional transition delay on an parent element To add needed behaviour I would need to entirely manage the enter leave stuff in Javascript rather in CSS by adding a class,,"aweary,gaearon",2016-11-13 14:36:04,2017-06-14 05:29:21
IS,Refs not working properly in componentDidMount,Do you want to request a feature or report a bug Bug or user failure What is the current behavior this input click only happens when one child component is rendered it fails on the first one If the current behavior is a bug please provide the steps to reproduce What is the expected behavior the first component should open dialog box Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome on macOs react 15 5 4 react dom 15 5 4 In our application this comes up in a deeply nested component some times the dialog box shows up when the component actually unmounts weird thing is this still works on an older version of the application,,,2017-06-13 15:47:42,2017-06-14 11:29:10
IS,Lost setNativeProp and others methods when I create personal Component with Child nodes,Hi there I am creating a custom Component But when I try to use setNativeProp in Text inside my component SetNativeProp is undefined I am using the next code to reach the child inside of any method this refs tab0 children 0 Another way I tried was putting up refs to each text but I lost the refs also this refs text1 undefined There is any way to draw the Nodes without loss properties Or there are any form to rebuilt create the Node with the same characteristics inside this childrens,,"gaearon,bvaughn,gaearon",2017-06-08 01:48:19,2017-06-14 11:29:58
PR,Reword animation documentation deprecation,This captures intention more clearly,,gaearon,2017-06-14 12:03:35,2017-06-14 12:04:04
PR,Add future changelog for 15 6 0 addon release,Will un hide when I release them tomorrow,,"gaearon,flarnie,gaearon",2017-06-13 22:56:07,2017-06-14 12:52:26
PR,Add addon changes to 15 6 0 changelog,We published them a day later but it is easier to consider as a single release,,gaearon,2017-06-14 12:54:20,2017-06-14 12:57:01
IS,BUG version 15 6 is not working on iOS 9 3 and below inputValueTracking js,It appears that version 15 6 does not work on older iOS devices iOS 9 2 and 9 3 tested to be affected The root cause appears to be that Object getOwnPropertyDescriptor is broken on these versions it simply return undefined This method is used inside src renderers dom shared inputValueTracking js which causes React to break on ReactDOM render causing nothing to be rendered Error message,,"gaearon,gaearon",2017-06-14 14:21:30,2017-06-14 14:24:14
IS,undefined is not an object evaluating 'u get call' since 15 6 0,Since updating to 15 6 0 I have started having an uncaught exception undefined is not an object evaluating 'u get call' I have pinned version back to 15 5 0 and problem has gone away Per Rollbar problem seems me mostly ios safari 9 x but sometimes osx safari too We have been unable to repo ourselves but users are clearly experiencing it User agents,,"gaearon,gaearon",2017-06-14 14:56:05,2017-06-14 15:00:22
PR,Backport Safari fix for input changes,fixes 9956,,"jquense,gaearon,jquense,gaearon,gaearon,gaearon,nhunzaker,jquense,nhunzaker",2017-06-14 14:34:16,2017-06-14 15:20:10
PR,Fuzz tester that simulates Sierpinski Triangle demo,The tests only assert that the output of the tree is consistent after each action and that the final result after all work has flushed is the expected value It does not assert how work is reused which means it can not detect starvation issues However this also means that it is fairly resilient to changes in our incremental algorithm The tests currently fail which we would expect given the known problems with the progressed work model,,"acdlite,acdlite,gaearon,gaearon,gaearon,sebmarkbage,acdlite,acdlite",2017-06-13 20:51:26,2017-06-14 17:54:19
PR,Streamline Fiber Stack testing and bundling setup a little bit,A few related cleanup things that are easier to do together Makes all entry points explicit with Entry filename suffix This makes it hard to include one bundle into another bundle by mistake as we did a few times before and probably prevents new requires to React or ReactDOM Changes mocks setup to be consistent between all renderers Removes the hacky process env REACT NATIVE USE FIBER in favor of the same approach we use on www feature flags are externalized We already had a shim for this but for some reason also bundled an additional file Deletes Stack version of test renderer it is not used in product code anymore neither on RN nor on www Moves Fiber Stack switch into forwarding modules This seems more explicit than Jest mocks The relationship between ReactDOM which is stack and ReactDOMFiber was always a bit confusing to me and I feel like switching between them rather than overriding one with the other is a bit easier to understand,,"gaearon,gaearon",2017-06-14 15:56:14,2017-06-14 21:10:34
PR,Disable 'comma dangle' eslint rule for ' addons',what is the change Added an eslintrc which disables the 'comma dangle' rule just for addons why make this change To get CI passing again on the 15 branches We do not have dangling commas in the addons because it breaks GCC under certain conditions This does not affect React because we use Babel with React but it is not worth setting up Babel for the addons at this time test plan yarn lint issue None hopefully will fix this before it is a problem,,flarnie,2017-06-14 17:37:05,2017-06-14 21:14:00
PR,Prevents adding units to css custom properties,Ref,,"gaearon,gaearon,gaearon,aweary,gaearon,gaearon",2017-06-14 18:56:25,2017-06-14 22:15:09
PR,Wrap all non UMD DEV bundles into a condition,This should help with weak dead code elimination systems that can not DCE require s I have not tested this yet would appreciate help,,"gaearon,gaearon,trueadm,gaearon",2017-06-14 22:05:50,2017-06-14 23:53:22
PR,Try to enable Yarn on 15 stable,Prettier is very flaky I suspect it might be due to us using a different version on CI Let is try with Yarn,,gaearon,2017-06-14 23:56:28,2017-06-14 23:59:07
IS,Expose ShouldComponentUpdate from PureComponent,It would be nice to have the following API,,gaearon,2017-06-15 00:02:59,2017-06-15 00:09:46
IS,Do not add units to css custom properties,Do you want to request a feature or report a bug bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Leave values same as they are passed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 0,,"gaearon,gaearon,gaearon,gaearon",2017-06-14 15:54:20,2017-06-15 00:11:16
IS,onClick and onChange does not fire on radio buttons on iOS,Do you want to request a feature or report a bug bug What is the current behavior onClick and onChange does not fire on radio buttons on iOS TypeError undefined is not an object evaluating wouldescriptor get call' If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior onClick and onChange should fire Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 0 on iOS Was working on 15 5 4,,"gaearon,gaearon,jquense,jquense,gaearon,jquense,flarnie,flarnie,gaearon,gaearon,gaearon",2017-06-14 11:29:56,2017-06-15 00:11:24
PR,Remove local trapBubbledEvents,In looking through the TODO is I found this one concerning inlining trapping bubbled events since the function is being called in an equivalent case statement I was not exactly sure what to do with the comments For the isMounted one I duplicated it where the function was being called and for the one about null nodes I dropped it completely,,jfo84,2017-06-11 21:29:22,2017-06-15 00:15:33
IS,Error addComponentAsRefTo,started getting this error right after upgrading to 15 6 0 Error addComponentAsRefTo Only a ReactOwner can have refs You might be adding a ref to a component that was not created inside a component is render method or you have multiple copies of React loaded details,,gaearon,2017-06-14 19:35:11,2017-06-15 07:42:41
IS,same modules in react and react dom,Do you want to request a feature or report a bug No What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 6 1 I just analyze my bundle file with webpack I came across that serval modules exist in both react and react dom I guess these files are ignored These files are listed here reactProdInvariant js KeyEscapeUtils js traverseAllChildren js ReactElementSymbol js ReactPropTypesSecret js getIteratorFn js,,gaearon,2017-06-15 09:18:03,2017-06-15 10:04:38
IS,Error addComponentAsRefTo ES6 class,This is React 15 3 2 This is a bit complicated to report as I dont have a super isolated use case our application is extremely complex I can not confirm on the latest of React and I can not 100 confirm it is React is fault So if any of thats unacceptable feel free to close Here is the general layout of things exports a bunch of JavaScript including React via webpack 1 a private repo loads that code and extends it It imports things like React from window React using webpack is external feature 2 we are attempting to use React Compnent to provide a base class for some complex functionality This worked fine when using React createClass I'm fairly confident there is not two copies of React loading on the page It is really hard to understand webpack internals but we are only loading the React that comes from window React as I have investigated per webpack is compiled output It does however do some odd referencing internally This only happens when specifying an attribute with some static HTML with specific HTML but also not that specific The reference error is unrelated to the generated output and exists elsewhere as a parent element to the generated children So first here is the core issue in our case,,"gaearon,gaearon,gaearon,gaearon",2017-06-15 01:31:46,2017-06-15 10:11:59
PR,Changelog for 15 6 1,React DOM Fix a crash on iOS Safari jquense in 9960 Do not add px to custom CSS property values TrySound in 9966,,gaearon,2017-06-15 14:07:35,2017-06-15 14:09:14
PR,Remove SyntheticEvent Flow types and forwarding module shims,This is pending upstream changes on www and RN,,"trueadm,gaearon",2017-06-13 16:18:50,2017-06-15 16:07:35
IS,bug fontFamily wraps font names in nested double quotes Chrome only,Bug Current Behavior When the fontFamily declaration is used in React any multi word fonts are wrapped in double quotes in Chrome ONLY Nested double quotes are not valid in HTML attributes so React should not be creating the style attribute this way Steps to Reproduce 1 Open this React Fiddle in Chrome 2 Inspect the text that was rendered by React in the result pane 3 You will notice that in the style declaration the words 'Times New Roman' are in double quotes This results in nested double quotes i e style font family Georgia Times New Roman serif which is not really valid The original font family declaration did not have these quotes 4 Open the same React Fiddle in Safari or Firefox You will notice that the nested double quotes do not happen The font family declaration is left as is More evidence 1 Now open this simple fiddle in Chrome 2 Inspect the text rendered in the result pane You will notice that Chrome did not add the nested double quotes around 'Times New Roman' So it does not seem to be the browser doing this It seems to be only when React is used What is the expected behavior I would expect that one of two things should happen 1 The multi word fonts would be left as is i e style font family Georgia Times New Roman serif 2 The multi word fonts would be wrapped in a single quote instead of double i e style font family Georgia 'Times New Roman' serif React Versions We are seeing this in React version 15 4 2 I do not know if this was working in previous versions of react,,"gaearon,gaearon",2017-06-15 19:38:13,2017-06-15 22:09:21
IS,No compatible version found create react class ' 15 6 0 16 0 0,Is this only my env or the package on npm is actually missing Do you want to request a feature or report a bug bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior npm should install it with no problem Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 6 0,,gaearon,2017-06-15 22:32:12,2017-06-15 22:58:09
PR,Suggest Elsa for immutability,Elsa is a Babel plugin that makes your arrays and objects immutable by default This PR suggests it along with immutability helper as a way to speed up component reconciliation,,aweary,2017-06-15 23:32:49,2017-06-15 23:40:43
PR,Merge pull request 1 from facebook master,sync Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-16 07:18:38,2017-06-16 07:20:55
PR,Move out more ReactDOM FB shims,This removes more of the shims currently in the FB ReactDOM bundle This depends on changes being applied downstream to FB www,,trueadm,2017-06-16 11:08:30,2017-06-16 13:41:48
IS,What should be the proper compatibale version of react react addons test utils react dom,I tried various package version but I am still getting error when I run npm test console error node modules fbjs lib warning js 45 Warning Failed propType Calling PropTypes validators directly is not supported by the prop types package Use PropTypes checkPropTypes to call them Read more at What is causing the issue my package json file looks like name test version 1 1 description test devDependencies babel jest 18 0 0 babel preset es2015 6 1 2 babel preset react 6 1 2 babel preset stage 2 6 1 2 babelify 7 2 0 browserify 12 0 1 browserify incremental 3 0 1 enzyme 2 7 1 eslint 3 0 0 jest 18 1 0 react addons test utils 0 14 2 redux socket io 1 2 0 sinon 2 3 4 socket io client 1 4 8 dependencies history 3 0 0 prop types 15 5 react 15 5 react dom 15 5 react redux 4 4 5 react router dom 4 0 0 beta 8 redux 3 6 0 redux thunk 2 2 0 scripts test jest And when I update my react addons test utils 15 5 I am getting this error Cannot find module areact dom lib ReactTestUtils' from 'index js' at Resolver resolveModule node modules jest resolve build index js 151 17 at Object anonymous node modules react addons test utils index js 75 18 at node modules enzyme build react compat js 143 21 May I know what is causing this issue is there any dependency issue which i do not know,,"gaearon,gaearon,milesj,gaearon",2017-06-16 09:06:07,2017-06-16 21:39:25
PR,Add Promise support to setState,See 2642 Lint is clean Test fails for componentWillUnmount false though I do not believe it is from these changes I would appreciate feedback on this PR Are the tests failing due to these changes or something else It is not clear to me where the documentation should be updated,,gaearon,2017-06-16 16:09:06,2017-06-16 21:45:43
PR,Split out container methods in host config,This makes it so you do not need to pattern match manually to build a renderer where the container and instance types are not the same Prerequisite to 9835,,"sophiebits,bvaughn,bvaughn,sebmarkbage,sebmarkbage,bvaughn,sophiebits",2017-06-16 00:12:44,2017-06-16 22:00:38
PR,Use KeyboardEvent char in the fallback logic if available,When a user types an emoji via Touch keyboard in IE React is fallback logic creates the BeforeInput event based on the keypress However the length of an emoji character e g uD83D uDE0A is two so the which property does not represent an emoji correctly Because IE is KeyboardEvent has the char property holding an entire emoji we can use it directly instead of converting from the which,,msmania,2017-05-26 22:22:20,2017-06-16 22:14:10
IS,Inconsistencies among the documentation,Hi I'm trying to figure out whether adopting React would be a safe or risky choice It is very important to me to being able to draw the boundaries i e to be able to define which node elements should be managed by React and which ones should not It is pretty important that I should be able to integrate well with non react components So I was trying to understand what guarantees I get when using React and noticed two sections in the documentation that do not seem to be compatible To prevent React from touching the DOM after mounting we will return an empty div from the render method The div element has no properties or children so React has no reason to update it leaving the jQuery plugin free to manage that part of the DOM So it suggests using the mount unmount hooks in order to initialize and destroy the the third party components however this is not enough to guarantee the integration will succeed I will get more into that later It is important to remember that the reconciliation algorithm is an implementation detail React could rerender the whole app on every action the end result would be the same shouldcomponentupdate Currently if shouldComponentUpdate returns false then componentWillUpdate render and componentDidUpdate will not be invoked Note that in the future React may treat shouldComponentUpdate as a hint rather than a strict directive and returning false may still result in a re rendering of the component This is a problem to me If I can not really rely on the reconciliation algorithm to not touch the elements React is not supposed to manage then I have no guarantees that it would be possible to integrate React with third party components in the future This is a big concern So let me give you an example to illustrate that Suppose I want to integrate with a very lightweight multi options autocomplete component that only provides 3 public APIs a constructor a desctructor and some onChange hook It is an stateful component but we do not have direct access to its state so that we can restore it after destroying and recreating it It opens a menu with several items containing a checkbox and the item label As you click on the items checking its checkbox onChange would be triggered which we could use to change the state of some ancestor component managed by React While responding to the state change event if React simply decides to re render the ancestor component without respecting shouldComponentUpdate or ignoring the diff algorithm it means it would probably call componentWillUnmount in the autocomplete component wrapper which would only be able to destroy that component Then after componentDidMount we would only be able to initialize the component again but we would have lost all of its state like the scroll position and currently selected items and so on In other words that means React would not be able to play nice with third party components In order to have such a guarantee we need to have more guarantees from React itself The reconciliation algorithm should not be just an implementation detail without any guarantees shouldComponentUpdate should not be considered just a hint Otherwise how are we supposed to wrap third library components in a reliable way I'm really scared to start migrating our application to use React unless I feel confident that I will always be able to integrate with third party stateful components Could you please review such statements in the documentation,,"gaearon,gaearon,gaearon",2017-06-12 13:11:50,2017-06-17 11:32:52
IS,React is so dung and Vue is so beautify,I use React js some of time But the framework design is look like designed by a three years child This is very shit and fuck every developer But Vue that maked by a Chinexe is save me from hell Vue is fresh and freedom air for me This is so freedom and sweet I am not pointer at someone deliberately My meaning is everyOne is designed except me,,"nhunzaker,gaearon",2017-06-19 10:03:41,2017-06-19 10:59:13
IS,React 15 6 input value tracking is incompatible with zombie js,React 15 6 backports some input value handling fixes but the new input value tracking does not work in zombie js The problem is that React wraps the value property and zombie js assigns to that property in some functions e g browser fill selector value and this confuses the value tracking because it loses track of the value before the change It is definitely debatable whether this is a React bug or a zombie js bug but I find the behaviour of React a bit strange here Let is assume we have a controlled input id my input type text value onChange in React and we have a zombie js test that fills the initially empty text field with the value some value Zombie implements browser fill using these internal steps 4 Tracker currentValue no longer has the original value and now has the new value some value 5 Input event is fired 6 Eventually we end up in react dom inputValueTracking js function updateValueIfChanged 7 The tracker compares currentValue containing some value to the raw value in the DOM node containing some value no change no event is sent whatever is controlling the props state thinks the value is while React and the DOM node agree it is some value So with React 15 6 we lose change events in zombie js but React 15 5 works fine,,aweary,2017-06-19 11:28:37,2017-06-19 11:57:07
IS,Clear the entire call stack of the browser when a certain function gets executed,I want to clear my entire call stack of the browser when a certain function gets executed in my react js code,,gaearon,2017-06-19 07:05:48,2017-06-19 13:50:02
PR,15 6 dev,Before submitting a pull request please make sure the following is done fgsfg 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,nhunzaker,2017-06-17 06:30:22,2017-06-19 14:05:24
PR,higher order components md correction,Just a small correction,,,2017-06-15 12:37:22,2017-06-19 14:06:55
IS,Error info removes app,Feature it is really hard to track down runtime errors E g warning js b25d 36 Warning Stateless function components cannot be given refs See ref wrappedInstance in StatelessComponent created by Apollo Component Attempts to access this ref will fail None of my code is in the stacktrace swallowed by React,,"aweary,gaearon,gaearon,gaearon",2017-06-17 16:21:46,2017-06-19 14:08:40
IS,How to detect empty selection on input type file,I have a component which uses input type file value onChange e callback e target files to get user selected files But if user cancels the file selection popup the callback will never be called since there is no change This is nonsense since the expected action is callback gets called with null or empty array But how to implement this I did not find any related event to listen,,aweary,2017-06-18 12:27:30,2017-06-19 15:14:51
PR,Update flow to 0 48,,,acdlite,2017-06-19 18:42:26,2017-06-19 18:45:37
PR,Fix to work fiber debugger,Currently fiber debugger does not work due to accessing React PropTypes in some libraries This PR update the libraries to use fixed versions,,"koba04,aweary,gaearon,koba04",2017-06-19 06:39:16,2017-06-19 20:30:01
IS,Suggested words get appended to the currently typed word when writing a comment on FB using virtual keyboard on Windows,It only reproes when soft keyboard is being used Repro 1 Navigate to Facebook com and on the front page 2 Type won then select wonder from the list of suggestions Expected won is replaced by wonder Actual it appends wonder to won making it to be wonwonder,,aweary,2017-06-20 19:04:00,2017-06-20 20:16:11
PR,Remove Animation priority,Follow up to this comment discussion r121815361 If we are already performing work we should not schedule an additional callback e g if setState is called inside componentWillReceiveProps Update The scope of this PR increased from its original description Now it removes Animation priority as a feature There is no advantage to scheduling updates with animation priority versus scheduling sync work inside requestAnimationCallback So we can remove all the animation specific code Now there is only one type of callback,,"acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,acdlite,sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,gaearon,acdlite,acdlite",2017-06-14 21:43:38,2017-06-20 22:28:49
PR,9627 Fix componentWillUnmount test case in isMounted tests,This fixes the test case mentioned in 9627 and adds checks for a component is mixins to ensure that they are also getting the correct values,,"acdlite,gaearon,gaearon",2017-05-09 01:37:17,2017-06-20 22:37:01
IS,createReactClassIntegration test fails,Do you want to request a feature or report a bug bug What is the current behavior on running npm test on master branch createReactClassIntegration test fails If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I just installed the repo after cloning it ran npm install and then npm test What is the expected behavior Test should pass Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version as of commit 00ba97a,,"gaearon,gaearon",2017-06-18 19:13:18,2017-06-21 14:33:05
PR,Remove more isomorphic www shims,Preparing an internal diff for that Now we are using the open source entry point almost,,gaearon,2017-06-19 19:13:08,2017-06-21 16:54:12
PR,Remove unstable warning from ReactDOM,Seems like the warning is in the wrong place anyway in unmounting only I'm not sure this is very valuable now as this code is only present in alphas now,,gaearon,2017-06-21 17:28:16,2017-06-21 18:06:26
PR,Remove unused www shims,They are already deleted in www This just syncs changes back ReactDOMInputSelection this is just a typo this shim was never used in the first place ReactElement all occurrences are gone from www,,gaearon,2017-06-21 18:09:19,2017-06-21 18:10:46
PR,Remove Stack only www shim code,Should be good since Stack is not used in www now,,gaearon,2017-06-21 20:34:24,2017-06-22 01:38:03
IS,React is not getting installed in windows 10,Hello I am trying to install react on my windows 10 system and when i am entering npm install create react app command it is giving me this error I am attaching my npm debug log 0 info it worked if it ends with ok 1 verbose cli 'C Program Files nodejs node exe' 1 verbose cli 'C Program Files nodejs node modules npm bin npm cli js' 1 verbose cli 'install' 1 verbose cli 'create react app' 2 info using npm 3 10 10 3 info using node v6 11 0 4 silly loadCurrentTree Starting 5 silly install loadCurrentTree 6 silly install readLocalPackageData 7 silly fetchPackageMetaData create react app 8 silly fetchNamedPackageData create react app 9 silly mapToRegistry name create react app 10 silly mapToRegistry using default registry 11 silly mapToRegistry registry 8080 12 silly mapToRegistry data Result 12 silly mapToRegistry raw 'create react app' 12 silly mapToRegistry scope null 12 silly mapToRegistry escapedName 'create react app' 12 silly mapToRegistry name 'create react app' 12 silly mapToRegistry rawSpec '' 12 silly mapToRegistry spec 'latest' 12 silly mapToRegistry type 'tag' 13 silly mapToRegistry uri 8080 create react app 14 verbose request uri 8080 create react app 15 verbose request no auth needed 16 info attempt registry request try 1 at 12 53 12 PM 17 verbose request id a2301bbe08780480 18 http request GET 8080 create react app 19 info retry will retry error on last attempt Error connect ECONNREFUSED 127 0 0 1 8080 20 info attempt registry request try 2 at 12 53 23 PM 21 http request GET 8080 create react app 22 info retry will retry error on last attempt Error connect ECONNREFUSED 127 0 0 1 8080 23 info attempt registry request try 3 at 12 54 24 PM 24 http request GET 8080 create react app 25 silly fetchPackageMetaData Error connect ECONNREFUSED 127 0 0 1 8080 25 silly fetchPackageMetaData at Object exports errnoException util js 1018 11 25 silly fetchPackageMetaData at exports exceptionWithHostPort util js 1041 20 25 silly fetchPackageMetaData at TCPConnectWrap afterConnect as oncomplete net js 1086 14 25 silly fetchPackageMetaData error for create react app Error connect ECONNREFUSED 127 0 0 1 8080 25 silly fetchPackageMetaData at Object exports errnoException util js 1018 11 25 silly fetchPackageMetaData at exports exceptionWithHostPort util js 1041 20 25 silly fetchPackageMetaData at TCPConnectWrap afterConnect as oncomplete net js 1086 14 25 silly fetchPackageMetaData code 'ECONNREFUSED' 25 silly fetchPackageMetaData errno 'ECONNREFUSED' 25 silly fetchPackageMetaData syscall 'connect' 25 silly fetchPackageMetaData address '127 0 0 1' 25 silly fetchPackageMetaData port 8080 26 silly rollbackFailedOptional Starting 27 silly rollbackFailedOptional Finishing 28 silly runTopLevelLifecycles Finishing 29 silly install printInstalled 30 verbose stack Error connect ECONNREFUSED 127 0 0 1 8080 30 verbose stack at Object exports errnoException util js 1018 11 30 verbose stack at exports exceptionWithHostPort util js 1041 20 30 verbose stack at TCPConnectWrap afterConnect as oncomplete net js 1086 14 31 verbose cwd C Users Aniruddh react 32 error Windows NT 10 0 14393 33 error argv C Program Files nodejs node exe C Program Files nodejs node modules npm bin npm cli js install create react app 34 error node v6 11 0 35 error npm v3 10 10 36 error code ECONNREFUSED 37 error errno ECONNREFUSED 38 error syscall connect 39 error Error connect ECONNREFUSED 127 0 0 1 8080 39 error at Object exports errnoException util js 1018 11 39 error at exports exceptionWithHostPort util js 1041 20 39 error at TCPConnectWrap afterConnect as oncomplete net js 1086 14 39 error Error connect ECONNREFUSED 127 0 0 1 8080 39 error at Object exports errnoException util js 1018 11 39 error at exports exceptionWithHostPort util js 1041 20 39 error at TCPConnectWrap afterConnect as oncomplete net js 1086 14 39 error code 'ECONNREFUSED' 39 error errno 'ECONNREFUSED' 39 error syscall 'connect' 39 error address '127 0 0 1' 39 error port 8080 40 error If you are behind a proxy please make sure that the 40 error 'proxy' config is set properly See 'npm help config' 41 verbose exit 1 true,,"gaearon,gaearon,gaearon,gaearon",2017-06-22 07:26:25,2017-06-22 18:24:17
PR,Exclude src node modules from gitignore,src node modules is a directory of package stubs that is checked in for the test suite to use Unfortunately though there is a node modules line in gitignore which means the src node modules directory is ignored by git I ran into this in 10024 where I had to add a new file to src node modules but because of the gitignore I failed to commit the new file Obviously neither git commit a nor git stage A will add an ignored file My failure to commit the new file lead to a confusing situation where tests were working locally but not in CI and it took me an hour or two to figure out what was going on This PR just excludes src node modules from gitignore so that this kind of thing wo not happen again Thanks for all your work,,aickin,2017-06-23 04:19:04,2017-06-23 15:05:10
IS,refs root breaks between 4 9 0 and 4 9 1,Bug report I rely on a saved ref from the Fabric component to do some layout formatting for my Excel add in I used the ref property of the Fabric component and save a reference to alias refs root Between 4 9 0 and 4 9 1 this functionality broke alias refs root is no longer defined React Version 15 4 2 up to 15 6 1 Browser Reproduced on Safari and Chrome MacOS and Chrome Windows Here is a CodePen reproducing the behavior Thanks Nick,,"gaearon,gaearon",2017-06-23 14:50:05,2017-06-23 15:06:54
PR,Documentation ReactDOMServer is an object not a class,In code review comment discussion r123649131 correctly pointed out that the proposed documentation for ReactDOMNodeStream is not really a class I had copied and pasted that incorrect doc from ReactDOMServer is documentation so I thought we should fix it there too That is all this PR does,,"aickin,gaearon",2017-06-23 03:37:32,2017-06-23 15:07:26
PR,Add ReactDOMNodeStream adding streaming rendering,This PR builds on is work on the server renderer in React 16 exposing the server renderer as a Node js Readable Stream This allows folks to pipe a renderer out to the network and it is a fairly common request of folks using SSR The actual code part of it is pretty small as the existing read method of the server renderer in React 16 is already able to do partial async rendering all we needed to do was wrap that read method in a Readable stream which is pretty much all in src renderers shared server ReactDOMNodeStreamRenderer js The rest of the PR is code organization build test and documentation changes I'm not entirely comfortable with the build changes especially the changes in bundles js as I do not really know what things like fbEntry and hasteName mean Names in general were a bit sticky and I settled on ReactDOMNodeStream react dom node stream for the new object mindful that it is possible that a renderer for web streams might be created in the future I have some other ideas about naming after talking with but I will save those for another PR Thanks so much for all the work y'all do ETA I should also give props to who I believe wrote an earlier version of the server renderer on top of which Tom and Sebastian built their work Thanks,,"aickin,aickin,aickin,aweary,aweary,sebmarkbage,sebmarkbage,aickin,aickin,gaearon,aickin,aickin,sebmarkbage,sebmarkbage,sebmarkbage,aickin,aickin,aickin,aickin,sebmarkbage,aickin,gaearon,aickin",2017-06-22 16:56:09,2017-06-25 05:31:43
IS,Force React to hit server route instead of staying within the SPA,Hello I have been facing this problem for quite some time and none of the solutions I found through google worked Basically what I'm trying to do is make my React App go out of the SPA and hit my server route on Express e g app get auth steam However I have tried using react router is Link and Redirect and it still stayed within the SPA and then I found out react router is only for internal navigation I tried using a the anchor tag which supposedly forces the app to hit the server route but it still stays within the React page and gives me my 404 component The weird thing is that when I hard refresh cmd shift R on mac when I'm on localhost 3000 auth steam it hits the server route and redirects to the other website is login page in my case Steam login After I finish logging in the callback url is auth steam return which it shows again as the 404 component but when I hard refresh again it does everything it is supposed to and redirects to my homepage because I set the redirect to and I also have the req user available I know I gave the example of what I'm trying to do user authentication but I think this question is not specific to what I'm trying to do but it is more of a React question because if I wanted to use another server route to do something else app get exampleURL I would face the same problem So basically my question is how do I force React to hit the server route instead of staying within the SPA,,aweary,2017-06-24 09:46:42,2017-06-25 18:42:58
PR,Run prettier over the codebase to reduce CI problems,Throughout my work on 10024 I found that I would get intermittent prettier errors from CI and some of them seemed arbitrary Changes that did not fix any prettier issues would make CI prettier stop complaining and changes that did not add any bad formatting would make CI prettier get unhappy Further npm run prettier or yarn prettier the recommended fix never fixed the CI problems I was having I have since realized that the reason that npm run prettier was not working was that that command attempts to run prettier over only the changed files but CI checks all files to make sure they are correctly formatted And for whatever reason master has a few dozen files that are incorrectly formatted right now I suspect these files creeped in because of some problem in CI that was causing the arbitrariness I was seeing but I'm not entirely sure This PR is just a result of running npm run prettier all over the codebase and then fixing one tiny problem with linting prettier eliminated three eslint disable line comments in ReactDOMServerIntegration test js which I had to reinstate This PR does not fix the core problem that CI seems to sometimes approve of builds that violate prettier is formatting and thereby lets incorrectly formatted files in but I honestly can not really figure out why that happens In the meantime though I'm hoping that this checkin will reduce the number of times CI complains about my other PRs,,"aickin,aickin",2017-06-25 18:43:09,2017-06-25 19:01:42
PR,WIP Streaming server renderer on top of existing client checksum validator,This is a work in progress PR to further the discussion of 6618 It re implements server rendering in a way that supports streaming and is hopefully maintainable with unit tests I'm not asking for this PR to be merged right now I'm really only opening this PR to allow folks to easily see the diff and evaluate this implementation strategy as a robust discussion is going on in 6618 about the right way if any to achieve streaming render So I'm going to propose that for now we keep the discussion about this strategy over in 6618 The one exception is if you want to comment on the code of course feel free to do so here If you have any worries objections about this plan for the discussion please let me know Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master Done 2 If you have added code that should be tested add tests Done 3 If you have changed APIs update the documentation Not done 4 Ensure the test suite passes grunt test Currently passes but two tests have been xit ed out 5 Make sure your code lints grunt lint we have done our best to make sure these rules match our internal linting guidelines Done 6 If you have not already complete the CLA Done,,"aickin,aickin,aickin,aickin,aickin,aickin,aickin,aickin,aickin",2016-05-22 19:33:08,2017-06-25 20:56:25
PR,Remove Travis badge from readme,No build ran there for 7 months EDIT Diff is sorta unreadable look at the rich diff which renders the markdown,,"SimenB,gaearon",2017-06-26 06:04:00,2017-06-26 10:22:22
PR,Pin prettier to a specific version,Right now prettier is version is 1 2 2 which means that a range of versions are acceptable However different versions of prettier produce different output Notably there are a few dozen files in master that format differently with prettier 1 2 2 and 1 4 0 the most recent release This can cause inconsistencies between the formatting on dev machines and CI machines and even between different CI machines meaning builds can randomly fail depending which CI machine they get All this PR does is pins prettier to 1 2 2 which is how the current code in master is formatted Note this is a follow on to PR 10037,,"aickin,nhunzaker,aickin,nhunzaker,SimenB,SimenB,aickin,aickin,gaearon,vjeux",2017-06-25 19:10:21,2017-06-26 15:30:46
PR,Documentation added info about streaming character encoding,I just added two lines in the documentation noting that the streaming methods return buffers encoded in utf 8 with pointers to what to do if the user wants to get streaming rendering in another character encoding,,"aickin,gaearon",2017-06-25 22:40:01,2017-06-26 15:32:12
PR,Add node stream js to react dom is package json files entry,In 10024 I added node stream js to react dom is distribution but I did not realize that react dom is package json specifies which files are to be uploaded to the npm registry As a result if we tried to publish react dom right now out of master node stream js would not be a part of the package This PR fixes that Sorry,,"aickin,gaearon",2017-06-26 16:16:15,2017-06-26 16:17:15
PR,Docs A11y Add accessibility docs,I want to make a proposal to add Accessibility documentation to the React docs Being a great fan of both accessibility and React I have experienced how well React can be geared to easily adding accessibility features Adding docs about it would maybe help with more accessible React apps being built out there As base for the proposal I have created a taste of the docs it would become However I would first like to test if this kind and style of accessibility docs would fit the vision of the maintainers before spending too much time on it Here is a snippet from a section of what I have already made image I have gone for the Eutopia with a section in the main menu being dedicated to accessibility It is very hard to bring the necessary basics home in a one pager I think I know it is a big ask to add a major section to the docs but maybe it would be great to show off a11y as a first class concern in the docs So the sections I have in mind are Building accessible forms Here I have already created a section on labelling but it needs to be extended with validation error texts Controlling focus Showing how showing focus on form controls should be maintained and how one can ensure that keyboard users do not get frustrated by losing focus and how to bypass blocks of content in pages ARIA roles states and properties An overview of what ARIA is and how can be used to create more complex accessible widgets Developer tools A look at tooling that makes accessibility visible for developers Examples would be browser a11y inspectors eslint plugin jsx a11y react axe aXe itself and a quick how to on screen readers Looking forward to hearing your comments,,"AlmeroSteyn,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,jessebeach,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,jessebeach,jessebeach,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,nhunzaker,sophiebits,AlmeroSteyn,sophiebits,jessebeach,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,jessebeach,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,AlmeroSteyn,gaearon,AlmeroSteyn",2017-04-25 11:13:48,2017-06-26 17:17:06
PR,ReactNativeFiberErrorDialog mutates error message,The primary motivation for this diff is to fix an issue with the framesToPop property added by invariant and others not being copied over to the cloned Error object This caused problems with Facebook is automated error tooling After some discussion with Seb we decided to just mutate the incoming Error rather than cloning I also improved the error messaging for string type errors on the way as shown below in the screenshots img width 487 alt screen shot 2017 06 26 at 10 01 03 am src img width 487 alt screen shot 2017 06 26 at 10 01 09 am src img width 487 alt screen shot 2017 06 26 at 10 01 20 am src,,"bvaughn,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,sebmarkbage,bvaughn,bvaughn,flarnie,bvaughn,bvaughn",2017-06-26 16:24:06,2017-06-26 19:34:30
IS,guccccccgekfbfghhkkfrcincttgkceeknidjtdijklvlt,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-06-26 21:13:49,2017-06-26 21:16:06
PR,Do not use the render callback with promises,This covers up errors that are thrown in Fiber because callback gets fired and an error is thrown Created a follow up 10049 to reevaluate these semantics,,"sebmarkbage,aickin",2017-06-27 00:30:30,2017-06-27 15:24:32
PR,Fix Typo in ReactDOMFiberEntry,This PR removes a duplicate because from ReactDOMFiberEntry,,"jfo84,gaearon",2017-06-27 16:41:41,2017-06-27 16:53:10
PR,Fix Typo in ReactFiberTreeReflection,This PR changes a bit of text in ReactFiberTreeReflection from The return pointers pointer to the same fiber to The return pointers point to the same fiber,,"jfo84,gaearon",2017-06-27 16:43:08,2017-06-27 16:53:16
PR,Update yarn lock,,,"sebmarkbage,aickin",2017-06-26 20:40:30,2017-06-27 17:41:54
PR,Remove most comments from HTML generation output,Simplifies markup generation by only inserting a simple comments between consecutive text nodes I also skip past comments and other nodes while hydrating This leaves them in place instead of being removed by the hydration mechanism This is more efficient but will also be needed by hydration validator There is a special case for empty strings We probably should not have nodes for those at all For now I special case it by assuming there wo not be one so if we need one we will insert an empty text node I also dropped the ID part from the data reactid attribute We will remove the whole thing later,,"sebmarkbage,aickin",2017-06-23 04:50:38,2017-06-27 17:43:28
PR,Removed ReactMarkupChecksum from renderToString,I noticed while working on 10024 that the new server renderer still adds a markup checksum to the root HTML element However I'm fairly certain that given the new DOM walking rehydration strategy the checksum is not used on the client side at all This PR removes the markup checksum in renderToString and adjusts a few tests that explicitly looked for it to be there All the other tests of client rendering on top of server markup work untouched,,"aickin,sebmarkbage,aickin",2017-06-27 15:51:21,2017-06-27 21:20:45
IS,React 15 6 Umbrella,Update We just shipped 15 6 0 of react react dom s Still ongoing s x Fixes for React addons and the 15 6 0 release of those modules x Follow up work React addons fixes x Create a build step for UMD builds of addons x Update deprecation in prop types library L174 and check other add ons for deprecation warnings Release new versions s Why doesn t TransitionGroup have a deprecation warning Let s add if we forgot it Make sure the wording says moved since moving is all that happened note we should point to a specific version of the separate module to make this future proof against API changes to the transition group modules s Fixed in x Update add on versions in 15 6 and master branches x Fix and fixed by x Merge x x Release new versions of add ons x Cherry pick all these changes into 15 6 Other related items s Document the process for deprecating an API in React s Moved to x Can we remove junk code from PropTypes prod build It does not use bundle collapser so it ships all those method names e g fbjs lib invariant This is fixable if you add p bundle collapser plugin to browserify call Additionally there seems to be some junk invariant code which is easy to fix if we just turn this into an inlined error 5 6 prop types min js x Make sure deprecations are on master too Follow up issues s Find a solution for s we did merge this after all s Which unblocks adding the tests from which depend on 'inputValueTracking' s Further improvements to React warnings in general specifically to adress Steps we went through for React 15 6 0 Preparing the RC details summary Done RC was released summary x Write a proper changelog for 15 5 x releases and 15 6 X Cherry pick React createMixin deprecation Cherry pick X Maybe cherry pick Needs confirmation this is the right way x Cherry pick if it is merged by then x Cherry pick this fix x Cherry pick s Deduplicate unknown DOM property warning so that people do not stay on React 15 1 see discussion in s We have not reached a consensus here and will instead revisit the whole warning system in the future x Make sure we are using PropTypes checkPropTypes rather than inlining it like we did in 15 5 x Deprecate React DOM Factories Merge and cherry pick X Include a codemod from React DOM stuff to React createElement istuff' x Merge cherry pick 8575 x Downgrade console error to console warn for deprecation notices x Create deprecation 'warning' helper and x Update all deprecation warnings on master branch s Sync master branch s flarnie moved to 'prepping final release' section s Update deprecation in prop types library L174 and check other add ons for deprecation warnings Release new versions s flarnie moved to addons section X Update deprecation warnings on 15 6 branch s Update add on versions in 15 6 and master branches s flarnie moved to addons section x Add specific version numbers to deprecation messages In React 16 0 and x Add a link to warning messages Make it clear that those are not broken code but something that will be removed in React 16 Link to a dedicated page a gist a blog post gists are nice because they have comments but make sure that page touches on common confusion points x What should lib maintainers do Dependency or peer and x What does this mean for context API and x Is the warning firing on my code Or on a dependency How do I know and x What exactly will happen in React 16 and x How to automatically migrate my code and x Are we encouraging people to stop using createClass What about PropTypes Are we deprecating them as in they are bad nope or are we just moving them yes Make it clearer and x Use fb me for links just like we always did in deprecations This lets us update links in the future and x Cherry pick to 15 6 dev X Verify that any changes landed in 15 stable were also cherry picked to 15 6 dev s Cherry pick the fix for s gaearon I do not think we need to s Make sure deprecations are on master too s flarnie moved to 'prepping final release' section x Change react dom factories package to be named that consistently and avoid react addons dom factories x Cherry pick double check with x Release react dom factories on npm details Testing the RC details summary Done React 15 6 0 is out summary X Inspect the UMD builds x Share RC and proposed release date with library authors several weeks in advance x Publish release notes early details Preparing the final release details summary Done React 15 6 0 is out summary x Update x Share RC with library authors and get folks to try it x Post a target date for the release x Triage any issues reported with RC x x Sync master branch to test the deprecation downgrade internally at FB details Doing the release x Release on a Mon Thur day,,"flarnie,aweary,aweary,gaearon,flarnie,flarnie,flarnie,gaearon,gaearon,flarnie,nhunzaker,flarnie,flarnie",2017-04-10 23:08:44,2017-06-27 23:48:20
PR,Fix mount and unmount warnings in Fiber,Warn if unmounting a non container Warn if mounting into a container where the first child is not the root,,"sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,gaearon,sebmarkbage",2017-06-27 21:55:21,2017-06-28 00:15:54
PR,Support comment node as a mount point,This means you do not need an extra wrapper div for each component root you need Rendered stuff is inserted before the comment you pass in,,"sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,sophiebits,flarnie,flarnie,sophiebits,sophiebits,pieterv,sebmarkbage,aickin,sophiebits,sophiebits",2017-06-01 21:46:25,2017-06-28 00:22:07
IS,Installation warnings and errors on Ubuntu 6 4 x,Do you want to request a feature or report a bug Report a bug What is the current behavior Receiving errors and warnings while executing the create react app command If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template While creating a new app on Node 8 1 2 I received the following What is the expected behavior Should create app without any warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React Version latest Operating System Distributor ID Ubuntu Description Ubuntu 16 04 2 LTS Release 16 04 Codename xenial No browser used yet all in Node and nix,,aweary,2017-06-27 23:59:10,2017-06-28 00:34:34
IS,displayName questioning if its still needed,When its used error messages dev tools HOCs I would argue that its valuable only in DEV mode Even when it comes to error messages I think I have never seen any production log containing it I cannot be sure though if it never is And if its valuable only in DEV mode shouldnt we just ditch adding them or write a ditching transform codemod as they can be inferred from the functions classes variables anyway The only remaining use case would be using displayName for HOCs If Im wrong let me know This would however fix 2 minor problems smaller build outputs slightly remove problem of unintentionally preventing tree shaking of SFCs in flat bundles more can be read here,,"Andarist,gaearon,Andarist,gaearon,Andarist",2017-06-28 12:05:03,2017-06-28 12:13:46
PR,argument pooler with rest params and spread,,,"gaearon,gaearon",2017-06-28 12:47:36,2017-06-28 14:16:36
IS,How to read React source code where can I find a dir of special Component Function such as React PureComponent,How to read React source code where can I find a dir path of special Component Function Defined such as React PureComponent I just very confused with the nested dirs folders,,gaearon,2017-06-28 15:54:07,2017-06-28 15:56:45
PR,Types Fiber as an exact object type,Fiber is a fixed data structure It shares the same hidden class Never add fields outside of construction in ReactFiber I think Flowtype is exact object type makes sense to guarantee this,,koba04,2017-06-28 16:28:10,2017-06-28 18:01:47
PR,Do not build ReactDOMNodeStream for FB,require istream' does not work for us right now,,sophiebits,2017-06-28 22:02:05,2017-06-28 23:13:58
IS,React v16 is not release until now why,React v16 is not release until now why,,"milesj,nhunzaker,gaearon",2017-06-28 23:06:19,2017-06-29 00:35:38
IS,Element type invalid thrown for nested functional component,Do you want to request a feature or report a bug I think it is a bug What is the current behavior I am trying to render a with child b both imported from mod js mod js exports both function a and function b from elsewhere and the reference is fine note that b is purely functional image I think I tracked down the issue w stack trace Right here when info was added and ready to be thrown The mounting element was recognized with type of Symbol react element but type of undefined Does it mean that it was recognized as a react component alright instantiateReactComponent instantiateReactComponent js 852a 70 instantiateChild ReactChildReconciler js dd13 44 anonymous ReactChildReconciler js dd13 71 traverseAllChildrenImpl traverseAllChildren js 8c0a 77 traverseAllChildrenImpl traverseAllChildren js 8c0a 93 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I could not reproduce in jsfiddle coz it involves es6 module though What is the expected behavior the element recognized and mounted alright Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I have react 15 6 1 google chrome 58 0 3029 110 on os x strangely this only happens when built on linux I have already ruled out any upper lower casing issue and tested b mounted alone working alright Have not tested w previous version of react,,,2017-06-29 06:49:12,2017-06-29 07:04:53
IS,Missing return in Lists and Keys documentation,Do you want to request a feature or report a bug Reporting a bug What is the current behavior The return keyword is missing from the documentation at img width 673 alt screen shot 2017 06 29 at 10 07 13 src,,gaearon,2017-06-29 09:26:18,2017-06-29 09:27:24
IS,if invalid authentication token present then redirect user to authentication page at any stage,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-06-29 10:34:13,2017-06-29 10:55:33
PR,Tiny changes to tutorial,Changes Was reading through the basic tutorial and saw two tiny things that bugged me so I figured I would submit them,,"nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,gaearon",2017-06-26 21:54:47,2017-06-29 15:00:05
IS,componentDidMount not getting invoked in phantomJS,componentDidMount not getting invoked while opening a page in phantomJS is there any workaround for this because i need to do some automation stuff also i can not change the code to move somewhere else from componentDidMount Any help Appreciated Node Version v6 11 0 Phantom Version Latest ReactJs Version Latest,,nhunzaker,2017-06-27 07:37:14,2017-06-29 16:22:59
PR,Add test to ensure extra zeros are covered by tests,We received an issue related to a behavior exhibited in Firefox where extraneous zeroes like 3 0000 were dropped from the input display value This can be observed here There is nothing we can do about this but the input number logic is pretty hairy I wanted to make sure we had a test case to cover switching between the same number at a different level of precision like from 3 to 3 000 even if there is not much we can do about Firefox,,"nhunzaker,aweary,nhunzaker,nhunzaker",2017-06-23 23:39:40,2017-06-29 17:44:05
IS,Bootstrap checkbox button is not triggered in react,Do you want to request a feature or report a bug Bug What is the current behavior onchange event is not triggered when click the button If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior when I click the button the binded onchange event is supposed to be triggered Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React not sure other version This is 15 3 1,,,2017-06-29 18:35:18,2017-06-30 01:05:21
PR,Warn When The HTML Mismatches in DEV,In the new hydration strategy we do our best to recover when the server response is not valid but we do not check the attributes However we should still warn in DEV because that can end up pretty bad This starts adding warnings for those cases I still have several steps left but this can ideally be landed at any midway point if someone wants to review it x Warn for differences in text content x Warn for known props that have different values x Warn for extra attributes that are not known x Warn for dangerouslySetInnerHTML differences x Warn for extra nodes that will be deleted x Warn for missing nodes that will have a new node inserted Left this for a follow up PR x Warn for inline styles that have different values 10084 x Add more test coverage for individual attribute mismatches insert delete style mismatches single child text content mismatches 10084 Consolidate multiple warnings into a single warn ideally with a HTML diff like format instead of just warning for one difference at a time 10085,,"sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,nhunzaker,nhunzaker,sebmarkbage,nhunzaker,sebmarkbage,acdlite,nhunzaker,acdlite,bmeurer,sebmarkbage,sebmarkbage",2017-06-22 22:42:49,2017-06-30 02:47:44
IS,react react dom bundle size expand,try to bundle react react dom using browserify t v15 bundle js was bundled with react 15 and react dom 15 t v16 bundle js was bundled with react next and react dom next is there something wrong,,"gaearon,trueadm",2017-06-29 09:17:26,2017-06-30 04:05:08
PR,Accessibility docs Two small fixes,I found a typo and a grammar thing in the a11y docs page So I fixed them Changes The following link show us how to The following link shows us how And a focus outline similar to the that shown to a focus outline similar to that shown,,"AlmeroSteyn,nhunzaker,AlmeroSteyn",2017-06-30 09:12:42,2017-06-30 11:39:47
PR,Warn for inline style mismatches,I use the technique of generating a style string and comparing that against the attribute This was also the approach taken by in 6618 I can not think of anything better,,sebmarkbage,2017-07-01 00:17:26,2017-07-01 01:24:05
PR,Remove progressed work,The current implementation of resuming work is buggy The underlying model is also flawed Rather than attempt to fix a flawed model we will scrap the feature entirely and add it back later The triangle fuzz tester is now passing By keeping this test green we should have greater confidence that changes do not introduce regressions See for the larger plan,,"acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,gaearon,acdlite",2017-06-19 23:29:37,2017-07-01 01:47:56
IS,Failed to compile with error Line Num ' Variable ' is not defined no undef,bug cannot compile code react version 15 6 1 steps to reproduce 1 create component 1 load dynamically js file that introduces new variable HC 1 try to use that variable 1 compile 1 see error Line Num 'HC' is not defined no undef Problem is If I define this variable as global in component 3rd party script does not init HC for me And I cannot compile due to this error too Is there a way to skip this compile checks because I know that object exists as of this if typeof HC undefined executes and compiles but if typeof HC undefined HC asd fails with error above regards,,"gaearon,gaearon,gaearon",2017-07-01 12:07:28,2017-07-01 12:38:14
IS,Build of react dom server on unpkg com is broken,I am not totally sure whether this should be reported here or against unpkg for the issue against our project see umd react dom server development js is currently a bad build It redirects to 0 0 alpha 13 umd react dom server development js which ends like this The alpha 12 version looks fine,,gaearon,2017-07-01 09:26:43,2017-07-01 12:51:03
PR,doc switch the order of lint and prettier,Ref 9876 Thanks to bring it up,,"monkindey,gaearon,monkindey",2017-07-02 03:45:45,2017-07-02 12:24:45
PR,doc fix the order of lint and prettier,Ref 10094 As said fix order in Contributing section of the docs,,"monkindey,gaearon",2017-07-02 14:15:02,2017-07-02 16:39:10
IS,Refs callback is called twice on every render even when component instance is reused,Do you want to request a feature or report a bug Bug perhaps just in documentation What is the current behavior The documentation for Refs and the DOM says The ref attribute takes a callback function and the callback will be executed immediately after the component is mounted or unmounted But if I create a stateful component like and use it via ScrollHelper ref obj console log ScrollHelper ref obj within an app I do not see the behavior documented but rather the following pattern of logs first render ScrollHelper render ScrollHelper componentDidMount ScrollHelper ref props etc some data changes elsewhere in the app ScrollHelper ref null ScrollHelper render ScrollHelper ref props etc some data changes elsewhere in the app again ScrollHelper ref null ScrollHelper render ScrollHelper ref props etc some data changes causing the ScrollHelper to actually unmount ScrollHelper ref null ScrollHelper componentWillUnmount What is the expected behavior According to the docs I would expect my refs callback to be called exactly two times during the events above once with the component after the ScrollHelper componentDidMount and once with null before the ScrollHelper componentWillUnmount Instead it gets reset basically every time the page is re rendered even though it is pretty clearly ending up with the same component instance each time I verified this is true via some additional code as well but should be evident from the lack of additional componentDidMount logs anyway Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 4 1 no idea what the behavior was earlier,,gaearon,2016-12-22 00:10:34,2017-07-03 12:53:23
IS,React variables scope defined how,This is mostly a security question How does React store all it is javascript variables state Is there any way from the window object to access a variable defined inside react Lets say you are also using redux and you store some sensitive data on a variable of the state is there any way an attacker that is able to perform a successful XSS attack could do something like alert window react state store myVariable,,aweary,2017-06-30 14:33:52,2017-07-03 17:26:58
IS,input type number re formats already valid numbers,I would like to report a bug What is the current behavior Using input type number will shave off any trailing 0s behind the seperator See e g the state starts as being 3 0000 but the number input only shows 3 What is the expected behavior The number input should show 3 0000 Or at least provide a way to specify that toFixed is used with N numbers behind the seperator Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 6 15 6 x tested in FF 53 It goes wrong on these lines L192 L200,,"gaearon,aweary,aweary,nhunzaker,aweary",2017-06-21 22:47:54,2017-07-03 17:29:00
PR,Update components and props md,Incorrect link,,nhunzaker,2017-07-03 13:48:51,2017-07-03 18:30:11
PR,Fix the data height of Step 5 CodePen embed,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"nhunzaker,nhunzaker",2017-06-30 23:57:52,2017-07-04 01:05:36
PR,Add React Boston 2017 to upcoming conferences,We just announced React Boston and would like to add it to the upcoming conferences page if that is possible Thanks Andrew,,"andrewrota,nhunzaker",2017-07-03 19:06:13,2017-07-04 01:07:09
PR,Disbled eslint warning for no extend native,Disabled eslint warning for no extend native warning Object prototype is read only properties should not be added no extend native,,"abhaynikam,nhunzaker",2017-04-27 18:42:14,2017-07-04 02:10:37
IS,React component is using ReactNoopUpdateQueue in dev build preventing state updates,Do you want to request a feature or report a bug I'm reporting a bug I'm facing a really strange issue in which every now and again my app stops working when running via webpack is hot dev server When this issue presents itself I struggle to get it to work again even after cleaning everything stashing all git changes resetting yarn lock etc In production builds I noticed this issue never occurs I have a simple component that renders two fields hostname and port and maintains the field values in the component is state Essentially just this controlled components Expected behavior I expect in such a basic case that I should be able to update the form fields without issue I enter text in a field which triggers the field is onChange event which in turn invokes setState updating the value that the field gets re rendered with Actual behavior I observe the expected behaviour every time in production and some of the time during development I have no idea why but sometimes after rebuilding certain modules I will see this issue again When it does occur I'm not able to change the value of either of the fields and instead I see the following error in the Electron console,,aweary,2017-06-20 14:39:04,2017-07-04 06:55:38
IS,Tutorial Starter Code,The starter code in the tutorial is linked to the final code on codepen not to the starter code,,"gaearon,gaearon",2017-07-05 13:16:11,2017-07-05 14:07:19
IS,Render gets out of date state when it was set from componentWillReceiveProps using updater function,This is either a bug in documentation or in implementation According to setState doc setstate when there is a need to refer to previous state one must use the updater function Problem is that when this updater function is used to change state from componentWillReceiveProps state is not updated before render function is called In result render gets new props but old state and is not called again after state is really updated This illustrates the problem I observed this problem in react 15 2 0 and 15 6 1,,aweary,2017-07-05 15:34:55,2017-07-05 21:32:08
IS,bug style undefined in setValueForStyles,It appears that it is possible to have the style property on node undefined in the setValueForStyles method in CSSPropertyOperations js using v15 5 4 L220 It is unknown how it was able to get into this state but here is the stack trace TypeError style is undefined at style react dom lib CSSPropertyOperations js 190 0 at CSSPropertyOperations react dom lib ReactDOMComponent js 880 0 at this react dom lib ReactDOMComponent js 514 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0 at this react dom lib ReactCompositeComponent js 258 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactMultiChild js 238 0 at this react dom lib ReactDOMComponent js 697 0 at this react dom lib ReactDOMComponent js 516 0 at internalInstance react dom lib ReactReconciler js 46 0 at ReactReconciler react dom lib ReactCompositeComponent js 371 0,,"gaearon,gaearon,aweary,gaearon",2017-06-14 23:34:12,2017-07-05 21:33:50
IS,Warning about unsupported style prop webkitOverflowScrolling,Potential bug Warning Unsupported vendor prefixed style property webkitOverflowScrolling Did you mean WebkitOverflowScrolling Check the render method of TrackList This warning did not used to come up I tried to remedy it by using a different style lib I was using Radium and tried styled components instead The warning still shows up yet the div is properly styled in the browser with webkit overflow scrolling touch So the warning seems to be obsolete Mac OS 10 12 5 Chrome 59 0 3071 104 React 15 6 1,,"aweary,aweary",2017-06-19 23:49:26,2017-07-05 21:35:51
IS,PropsTypes from do not show any kind of warning or error for wrong props in Windows but if you running your app under OSX everything works fantastic Why,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"aweary,aweary",2017-07-02 03:31:46,2017-07-05 21:36:27
IS,Runtime issue TypeError internalInstance is null You may need to refresh the page,Bug This is due to version incompatibility of react and react dom for certain versions I have managed to fix the issue by using compatible react and react dom versions react 15 3 2 react dom 15 4 1 What is the current behavior We have had a react codebase work for 2 years and as of recently we encountered run time TypeError internal instance is null errors The cacheBuster was of no help as it would point to a generic window onerror function The following is the error message in the browser The following error occurred TypeError internalInstance is null You may need to refresh the page File 8080 dist js app js cacheBuster 1498505575156 Line Number 102926 What is the expected behavior No runtime errors Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The version that we encountered issues with are react 0 14 7 react dom 0 14 6,,"gaearon,gaearon",2017-07-05 19:51:25,2017-07-05 21:44:49
IS,Is it possible to make React Component React StateComponent,Feature I would like to represent the application state and state validation using JSX Instead of defining context redux state using reducers It would be nice if it was possible to create components that on result data on arender' arender' is not the most descriptive name because I do not mean to represent UI but what I'm mostly interested in is using react lifecycle methods and recursive update on setState Currently when setState is called to a React Component the renders are not instant and this is troublesome for me Example case Is it possible to make Components to render recursively when setState gets called before the next line of code gets executed to avoid the situation represented above Needing a document to arender' into is a whole other issue but for now I will just use span s with wouldisplay none' to get around issue with rendering invalid elements into DOM,,aweary,2017-06-30 19:49:05,2017-07-05 22:38:16
PR,Add ReactNext 2017 to conference list,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,ilyagelman,2017-07-05 23:38:12,2017-07-05 23:44:04
PR,docs jsx in depth Add reference to the Repeat component repo,Hi I think that perhaps it would be useful for people to found a link to the ready to use Repeat component directly from the corresponding docs section Any comment is welcomed and appreciated Thanks hugs,,aweary,2017-06-25 11:08:11,2017-07-05 23:49:48
PR,Fixed typo in Implementation notes,changed node s to nodes,,aweary,2017-06-18 20:24:50,2017-07-05 23:58:10
PR,Updated Immutable Data Stuctures Docs,I corrected the issue I raised in issue 9844 in the Optimizing Performance Using Immutable Data Structures of the documentation I also just submitted a CLA Thanks,,"aweary,aweary",2017-06-04 07:00:43,2017-07-06 00:08:44
IS,FF Mobile Duplicated characters with a controlled component,Do you want to request a feature or report a bug bug What is the current behavior Go to this is a modified version of the 'Controlled Components' docmentation page to put the chars in upper case Type 'a' into the input you get 'A' Then type 'b' you get 'AAB' What is the expected behavior We should have 'AB' Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The CodePen uses React 15 6 1 and the bug only occurs with Firefox mobile not with the desktop version I tested with FF53 and 54 The bug only occurs because i change the case,,"nhunzaker,nhunzaker",2017-06-28 08:36:35,2017-07-06 12:11:42
IS,Proposal for an ordered attribute white list and new property injection types,I have been working a lot with the ReactDOMInput wrapper to fix IE and Chrome bugs and I have noticed that a good portion of the code exists to prevent attributes from being assigned in the wrong order and for inserting them in a specific way So that got me curious about benefits centralized ordered property assignment might yield I'm interested in 1 Eliminating special attribute assigning ordering cases Like assigning type and step before value 2 Eliminate most special value defaultValue checked and defaultChecked assignment order code I have been investigating that by reimplementing my Chrome backspace fix with more logic moved to DOMProperty Code from ReactDOMInput can be eliminated because of guarantees in property assignment order I'm very curious if it could be eliminated from the other wrappers and other DOM utilities This work is here nh ordered props I sort of hesitate to share but I'm curious if this the type of thing you would accept as a contribution and is it safe to do this work in parallel with the React Fiber feature If so I was going to start reproducing all of the edge cases fixed by the wrappers and start working towards reducing the amount of rule breaking they require to get properties to assign as expected Otherwise I guess I have a much better understanding of how property assignment works,,"nhunzaker,zpao,nhunzaker,syranide,nhunzaker,nhunzaker,zpao,nhunzaker,nhunzaker,nhunzaker",2016-08-04 22:47:40,2017-07-06 12:34:21
IS,Consistency in parameter names comment,In the comment it is named 'componentInstance' but as function parameter it has a different name 'wrapperInstance' Mounts this component and inserts it into the DOM ReactComponent componentInstance The instance to mount DOMElement container DOM element to mount into ReactReconcileTransaction transaction boolean shouldReuseMarkup If true do not insert markup function mountComponentIntoNode wrapperInstance container transaction shouldReuseMarkup context,,gaearon,2017-07-07 10:29:52,2017-07-07 10:31:38
PR,Add missing displayName prop to createReactClass example,Without a displayName prop snapshots generated by Jest would not contain the component name Before this change a snapshot test might fail with a diff that looks like After this change the snapshot test referred above would not fail in this manner,,"hramos,javache,gaearon",2017-07-07 20:27:40,2017-07-07 20:45:28
PR,Do not increase priority when cloning current children,This fixes a snapshot test regression introduced by 10008 I had noticed this change and believed the new behavior was correct but upon further investigation I was wrong This reverts the snapshot test and fixes it accordingly,,"acdlite,sophiebits,acdlite,sophiebits,acdlite",2017-07-07 22:04:32,2017-07-07 22:34:28
IS,Fiber Umbrella for remaining features bugs,This is an umbrella issues for remaining fiber issues More can be found by running the unit tests with the useFiber flag in ReactDOMFeatureFlags turned on See 8830 for additional tasks beyond the scope of the initial Fiber release details summary Phases 1 6 summary Phase 1 Infrastructure x Set up infra to know which tests are failing x ReactTestUtils features x reactComponentExpect 8258 x scry etc 8257 Phase 2 Smaller Initial Tasks x ReactDOMFiber render Simple synchronous case sebmarkbage 8029 x String refs using owner acdlite 8099 x Pass the correct previous state to componentDidUpdate 7941 x componentWillMount componentWillReceiveProps componentWillUpdate life cycles sebmarkbage 8015 x componentDidUpdate should not fired if shouldComponentUpdate returns false sebmarkbage 8028 x Instance should be recreated when already started work gets resumed no componentWillReceiveProps without didMount sebmarkbage 8015 x Fix module pattern in mountIndeterminateComponent sebmarkbage 8015 x findDOMNode 8083 sebmarkbage x Switching between types does not track deletions updateSlot does not return null sebmarkbage 8085 x PureComponent flag acdlite 8118 x Ensure that scheduling works synchronously by default but batched in DOM events Initial default priority acdlite 8127 x unstable batchedUpdates acdlite 8127 x setState in componentDidMount componentDidUpdate should always be synchronous at the end of the batch Even if work is deferred acdlite 8206 x Make sure setState error boundaries work in it gaearon 8193 x Unmount failed trees before attempting to recover acdlite 8304 Phase 3 Larger Tasks x Allow testing Fiber in Facebook web codebase spicyj x Error boundaries gaearon x Context gaearon 8272 x DOM attributes properties update sebmarkbage x DOM events Plug in the event system sebmarkbage x renderContainerIntoSubtree Preserve state and such spicyj 8368 x fb Bug Switching from text children to regular children wo not clear the old text content Not an easy fix since the side effect of the parent is scheduled after the child insertions acdlite 8331 x Recover from errors during commit phase including errors thrown from host environment Should only use a single try catch block acdlite x fb SVG mode switch based on if a parent is SVG or HTML gaearon 8417 x fb setState behavior when called in all possible life cycles including sibling life cycles and parents and children acdlite Phase 4 Uncovered Bugs x Root container is wrong in commit phase issuecomment 266848256 sebmarkbage 8607 x Update state props object pointers even if bailout happens This will currently cause an unnecessary componentDidUpdate Solve that somehow acdlite 8655 x Validate if inputValueTracking does indeed need to be cleaned up on unmount I do not think it needs to but we should revert anyway x autoFocus does not work Todo in ReactDOMFiberComponent bvaughn 8646 x fb When the last effect renders there is an infinite loop acdlite x fb Defer clearing of initial nodes until work is actually begun Ensure that unmounting and rerendering in the same batch works acdlite x Updates on different roots in componentWillMount ReactUpdates test acdlite x Refs should update even if shouldComponentUpdate returned false However componentDidUpdate should not fire acdlite 8685 x fb Make top level render and unmount synchronous by default even when they are in a batch Even for updates No not for updates acdlite 8634 x fb Uncaught TypeError Cannot read property 'children' of null L213 probably due to context change based on the caller We should probably either avoid rerendering or set pendingProps to memoizedProps in this case sebmarkbage 8613 x Does replaceState remove any previous callbacks scheduled acdlite x Root fiber should use updateQueue instead of pendingProps acdlite x fb Ensure that we get the current props for controlled components in restoreStateIfNeeded spicyj 8443 x fb Iterable children E g immutable js Set etc gaearon 8446 x fb Reuse HostText when bailing out sebmarkbage 8371 x fb Ensure that renderSubtreeIntoContainer twice enables the context to pass through the middle subtree I e two nested layer with a single context provider at the very top spicyj 8407 x Make HostContainer append insert remove child instead of always updating all Detach return when a child gets unmounted removed sebmarkbage 8400 x Handle selection restoration 8401 8353 x Swap out the active Fiber when a host node is updated including if listeners change so that we can know which listener is active This needs to remain even when prepareUpdate is fixed x Remove traversal of output 8406 x findDOMNode and findAllInRenderedTree are broken If an insertion happens and we happen to look at the previous work in progress then it will not have any deletes or removes So it looks like it is current I assume the same can happen for a deletion after it is done sebmarkbage 8450 x fb Batch different roots together into one commit ReactUpdates test Wo not fix Use Portals instead 8508 x Error handling when an error is thrown in detachRef callbacks acdlite x Ensure that if we walk up return in TreeTraversal we always get the current Fiber for props or possibly just walk up the parentNode tree instead sebmarkbage 8491 x Ensure that when we switch on tag names we cover mixed upper case E g React createElement 'INPUT' Wo not fix Instead we will warn if upper case is used on HTML tags sebmarkbage 8563 x Some scheduling issue is causing ReactCompositeComponentNestedState test to fail It performs the first setState before the second one Will any of the Task priority stuff fix this acdlite x fb Scheduling an update during render does not work We mostly already warn if setState is called from render but it might required that componentWillMount and others calling a callback which sets state on a different component works Currently the complete phase resets both the updateQueue and pending priority This can cause infinite loops to happen Apparently still used We need to either warn log better and upgrade everyone or support it in Fiber acdlite x Top level context push pop is not properly matched up lots of tests fail if you patch in this 8568 bvaughn x fb Reentrant mounting in synchronous mode spicyj 8623 Phase 5 x Feature flag to disable Fiber only features acdlite 8797 x Polyfills or alternate paths for Map requestAnimationFrame and requestIdleCallback sebmarkbage 8833 x isMounted technically not deprecated yet 8083 sebmarkbage x Top level render callbacks Second argument to render 8102 koba04 x Ensure that server rendering works using Stack when Fiber is enabled 8372 x Declarative portal API 8386 x Add tests for event bubbling This will need to track 8117 for changes to how top level event listeners get attached x React Test Renderer support iamdustan 8628 x React ART support 8521 bvaughn x Land basic React Native support in React repo 8560 bvaughn x Mark root renders during mount perf testing see tests for marks top level updates bvaughn 8687 x Merge callbackList onto the updateQueue instead of a separate field acdlite 8728 x Separate priority level for state updates 7457 acdlite x Fix coroutine issue where Fiber is passed in user space and could become stale sebmarkbage 8840 x DOM Dev Tools gaearon Phase 6 Unit tests and known bugs push x fb Fix findDOMNode bug when used in certain cases from componentWillUnmount sebmarkbage 8897 x fb Provide ability to block event bubbling in portals spicyj x Unit tests ReactFragment test invariants acdlite 8890 x Unit tests ReactDOMProduction test invariant acdlite 8907 x Unit tests ReactEmptyComponent test invariant acdlite 8908 x Ensure we replace throw new Error with invariant calls and they have sensible messages acdlite 8926 x Unit tests ReactMount test acdlite 8919 x Unit tests ReactMultiChild test remove Map as children support in Stack acdlite 8911 x Unit tests ReactMultiChildText test acdlite x RN Fix event bubbling regression spicyj bvaughn x Make sure Babel does not generate bad code e g IIFE for let const maybe fork Babel plugin to throw spicyj x RN Land React update in fbsource with Fiber disabled sebmarkbage x Verify Fiber works in IE on Facebook Map Set open IE10 11 and make sure it works spicyj x fb Figure out Ads Image Cropper issue spicyj x Unit tests ReactDOMComponent test acdlite 8948 x Unit tests ReactComponentLifeCycle test warnings ex fDN in render acdlite 8949 x Allow assigning this state in cWRP with warning acdlite 9040 x Unit tests ReactStatelessComponent test warning trueadm 9043 x Unit tests refs test trueadm 9045 x Make a new manual propTypes checker acdlite 9004 x Unit tests ReactCompositeComponent test warnings ex setState in render acdlite 8950 x Ensure break on all uncaught exceptions works as expected in browsers acdlite 8961 x Investigate what modules and unit tests fail if we remove Stack trueadm 9069 x Quick investigation into FB require js perf trueadm x Quick investigation into Fiber bundle perf cutting out extra dev only code trueadm 9096 x fb Move hidden check into hostConfig details Phase 6 1 15 5 Release Warn throw when doing an update on a container that was manually emptied outside of React in stack this mounted a brand new tree in fiber it tries to apply an update and usually fails keyanzhang took over this blocks beta x Extract propTypes into a separate npm package Get prop types package name acdlite x Unit tests ReactContextValidator test Pass the correct previous context to componentDidUpdate or deprecate feature and remove test bvaughn 8631 x fb Better fix to ReactART Text x Update warning when calling propTypes directly to refer user to checkPropTypes API x Docs updates for test utils and removed add ons flarnie Phase 6 2 React Native Fiber x Reimplement Shallow Renderer without Stack dependencies lelandrichardson trueadm 8982 RN ensure we keep all important invariants such as that text must be wrapped L32 L36 in Text does not block anything but we should do this Ensure that we call the FB specific warning module instead of the fbjs lib warning one in RN spicyj does not block anything OSS internal to FB x Convert propTypes callers to use checkPropTypes acdlite x Deploy forwarding modules to react lib ReactCurrentOwner react lib ReactComponentTreeHook fbjs lib invariant fbjs lib warning fbjs lib ExecutionEnvironment fbjs lib performanceNow fbjs lib emptyObject fbjs lib emptyFunction fbjs lib shallowEqual So that we can keep using providesModule in this repo until we have flat bundles Or better yet Do the inverse and switch to using CommonJS naming convention in www sebmarkbage See if we can codemod createStrictPropTypeChecker away and use exactShape instead does not block OSS release x Release a new version of react redux whose peer is compatible with 16 alpha Update RN to use it x Enable prepareNewChildrenBeforeUnmountInStack feature flag one week after landing sync x Codemod Flow errors yielded by properly typing findNodeHandle we added types and FlowFixMe comments good enough for now x Redesign the host component type the type of host component refs and integration with NativeMethodsMixin to be upgrade compatible bvaughn x Unblocks RN Dev Tools gaearon x Unblocks RN Inspector see known issues section of PR 8560 gaearon Make sure instanceProps in ReactNativeComponentTree does not leak sebmarkbage Phase 6 3 Flat Bundles Rollup x Make React Perf work with Fiber ReactPerf test gaearon Decided not to in favor of deeper timeline integration x Unit tests ReactComponentTreeHook test gaearon x Unit tests ReactHostOperationHistoryHook test gaearon x Make a list of all internal React modules required by FB code x Come up with a better strategy for dealing with DEV code and make sure we do not ship it in prod x Change www sync script to run rollup using commonjs source x Shimming the required files ex ReactDOMInjection warning x Exporting a single bundle that exposes the internals we need x Make fowarding modules for ReactDOM etc as well as internal modules Convert OSS repo to ES6 modules does not block release nice to have follow up x Make separate dev and non dev build in one file for www if DEV all of React else all of React x Convert OSS repo to rollup x Replace current Grunt Gulp build system with a unified build system maybe purely using Rollup Add Closure Compiler with ADVANCED and deal with mangling properly does not block release nice to have follow up Phase 7 Async Compatible does not block release Fix incremental regression if it is a regression fb Fix resumeMountClassInstance so that newProps gets passed to construct class Otherwise this props can be null RN Aborting async work or unmounting a tree due to an error leaks native views Add cross renderer support for portals necessary for async ART ReactDOMFiber render Return the root instance from render even if priority is deferred Test and cover incremental cases Decide on replacing priorities with deadlines to fix starvation Phase 8 Server Side Rendering x What are we doing x Unit tests ReactRenderDocument test SSR Reviving server rendered markup including rendering into document and shadow DOM containers Phase 9 Improvements does not block release The getPublicInstance internal API should consistently be used before exposing any stateNodes See discussion r119161506 x Key warnings on fragments flarnie x Do not mark update effect on newly mounted components unless they have a componentDidMount life cycle Add support to Enzyme for Fiber Currently bailing out on equal props state equality means that we still copy all of our children and traverse all of them Meaning that a parent with many children will still do a lot of work even if it bails out skips If pendingWorkPriority on referred only to children we would know if any children has additional work acdlite 8716 x Unit tests ReactDOMTextComponent test normalize case Reconsider the ContentReset flag Is there a cleaner solution for clearing out text content innerHTML Such as changing the insertion order Reconsider storing masked contexts on instances Revert inputValueTracking and replace with different comparison strategy getter setters is slow and complicated Subscription model is not helpful for Fiber is goals The principle of over listening to lots of events and diffing the value is sound s We have not shipped in OSS yet so not too hard to fix s This will probably get pushed back to 16 17 Fiber drops the lazy DOM insertion order Is there a solution that is not slow in IE11 Is it worth fixing or should we leave IE11 slow and wait for a fix in the browser related 8417 Follow up from previous task discussion r95643611 use a linked list for callbackList acdlite Ensure that it is possible to resume incomplete parents without rerendering A shallow reuse Store it on memoizedProps Resuming completed parents is already possible acdlite 8716 Move callback invariant closer to usage as requested in issuecomment 271944608 Replace some invariants with warnings to help code size issuecomment 270335705,,"sebmarkbage,sophiebits,gaearon,acdlite,acdlite,sebmarkbage,flarnie",2016-10-10 08:04:34,2017-07-07 23:21:18
IS,document addEventListener callback cannot update the component,This may be a bug In my simple react app inside a component is componentDidMount I have a document addEventListener 'message' function e callback However the callback of this event listener DOES NOT update the component even after calling this setState states states inside it I can confirm indeed that the callback is fired but it does not update the component Is this a bug What would be a work around for this,,nhunzaker,2017-04-22 16:07:03,2017-07-07 23:32:57
IS,Stop attribute blocking,I write this JSX and React prevents the attributes from appearing in the DOM This means React will not always play nice with elements whose behaviors are defined by jQuery Angular etc other APIs whose routines read from DOM In the above example I could use jQuery or Angular to define routines that observe those attributes and render a 3D WebGL scene in a separate canvas If an author wants to animate the sphere they will not be able to and my Angular or jQuery routine will not find the required attributes Please uplift this limitation Do not limit the web,,nhunzaker,2017-07-08 20:48:26,2017-07-08 21:15:26
PR,Add Node v8 x support to devEngines in package json,Adds support for Node v8 x as described here,,gaearon,2017-07-09 19:14:01,2017-07-09 19:24:33
IS,Node v8 x not allowed due to devEngines setting in package json,Do you want to request a feature or report a bug feature update What is the current behavior Currently only the following Node versions are allowed because of the devEngines value in the package json when executing npm install or any other script node 4 x 5 x 6 x 7 x Error Current node version is not supported for development expected 8 0 0 to satisfy 4 x 5 x 6 x 7 x What is the expected behavior Unless there is a reason for not allowing version 8 yet could we update this,,"gaearon,gaearon",2017-07-09 09:21:46,2017-07-09 19:24:53
PR,Fixing typo in ReactDOMComponent test name,objectsd objects,,"TheSavior,nhunzaker",2017-07-09 22:30:03,2017-07-09 23:34:40
IS,Support inheritance,I recall discussing about supporting inheritance for React components here but unfortunately I can not find the discussion with github is search I know most of React is repository owners are functional programming lovers and I respect it But there are other people who think while functional programming is good for many usecases it is not best approach for every use case Please do not ask me what is your use case and try to handle it in your own way I prefer to code in my own way and I do it fine never had any problems with scalability readability maintainability extendibility of my code over past 16 years At least I never chose php for building web servers and then try to change php itself even though my websites were much smaller than Facebook Another thing is that when you open source a great library like React considering its huge user base you should also take responsibility for all those users relation to your work And those who respect people do not force things to them We expect our politicians to follow this rule but we should also follow it when we are in a place that we make decisions that affect many others We hate it when politicians use media to brainwash people and raise votes with populistic methods I strongly believe React developers unconsciously and out of excitement did the same thing while they were advertising functional programming and things like Redux So there is no wonder that if you make a poll today and ask how many agree that we should support some basics of OO too most wo not vote for it Another thing is that while a framework that forces a specific coding style may be a good framework the one that does not force any coding style or avoids forcing as much as possible is much better Another thing is that while I agree with all the problems you described here and there about inheritance there are usecases when none of those problems apply and natural thing to do is using inheritance I just can not believe all the trouble I went through past year just because React does not support inheritance Many many times I reached to the point that I should stop doing frontend project till JS supports compiling python or C and browsers run it and people from those communities who still do their projects with OO come and write some good frameworks for Frontend developers I bet while reading this you are tempted to respond with please just describe your usecase so that we tell you how to do it without inheritance and stop complaining but believe me you should avoid asking such questions If I wanted to ask how to do it with composition I would ask so I know how to do it with composition but it just does not make sense as much as doing it with inheritance So I'm here to ask please support inheritance in React Just remember all the dirty full of parentheses code people were writing before you add support for classes in React You said you did so just to improve code readability Ok now lets support inheritance to bring more readability to codes written with React Default values set in a class and inherited to its subclasses and still changeable by its subclasses can be done with passing props to a Component you compose in your render method But sometimes it is just makes more sense to simply inherit sometimes passing callback as props and taking care of it is just extra work for no gain Disclaimer I like many many others do appreciate all the good things you did in React my aggression is just a natural reaction to your passive aggression with forcing others to do things the way you prefer and all your explain your problem we will tell you how to solve it our way responses and all the troubles I had to adopt to your patterns the patterns you force with your framework Btw I took time and wrote this just to improve React js,,"gaearon,gaearon,gaearon,aweary,gaearon,gaearon,gaearon",2017-07-09 20:16:29,2017-07-10 08:12:34
IS,Using native DOM events and react events,I have a react element Inner inside the outer and there are click event handlers for both the outer and the react element Inner So when I click on the react element Inner I expect the Inner element click handler to be triggered first and then the outer element click handler But it happens in reverse direction i e the outer element click handler gets triggered first and then the Inner element click handler gets triggered I know that react has its own event system and Native DOM events propagate before react events are triggered and propagate But what will be the most correct way to achieve my expected behavior Note The above code is only for example I am working on a large code base So please keep that in mind while answering,,"gaearon,aweary",2017-07-07 09:18:42,2017-07-10 16:29:01
IS,FR Support style as string set via cssText,Do you want to request a feature or report a bug feature What is the current behavior The style prop must always be an object What is the expected behavior The style prop could optionally accept a CSS string which would be set under the hood via element style cssText styleStr,,aweary,2017-07-07 00:13:11,2017-07-10 17:06:03
IS,animationDelay not applying,Using React v15 6 1 the animationDelay style does not appear to be applying Here is the specific I was working with trying to debug the problem,,"aweary,aweary",2017-07-10 16:30:36,2017-07-10 17:13:57
PR,fixed a typo in readme,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,aweary,2017-07-08 10:33:51,2017-07-10 21:29:57
IS,react test renderer shallow setState callback is never called,Do you want to request a feature or report a bug Bug following on from What is the current behavior In node modules react test renderer cjs react test renderer shallow development js the callback second argument to setState is never called If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The callback is called Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v16 react test renderer v16 I do not know if this worked before,,"gaearon,gaearon,bvaughn,bvaughn,koba04,bvaughn,bvaughn,koba04,bvaughn",2017-07-01 12:28:59,2017-07-10 21:41:51
PR,Fix shallow renderer callbacks,Shallow renderer now executes any callbacks passed to setState replaceState forceUpdate Fixes 10089 I have incorporated failing tests provided in 10092 by eBooks,,"bvaughn,bvaughn,bvaughn",2017-07-04 20:09:45,2017-07-10 21:41:51
PR,Add failing test for shallow test renderer setState callback,Added a failing test to show that the shallow test renderer does not call setState is second callback argument See following on from Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,bvaughn,2017-07-01 16:44:14,2017-07-10 21:41:57
PR,keep the same style,keep the same style Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,aweary,2017-06-29 05:01:43,2017-07-10 23:20:50
PR,Adding missing assertion to ReactDOMComponent test,It seems clear that this assertion was meant to be there Test still passes of course,,TheSavior,2017-07-09 22:20:51,2017-07-11 00:51:44
IS,Fiber Missing error causes an infinite loop,I'm getting an issue where throwing an unhandled error turns into an infinite loop because the guarded callback wrapper fails to extract the error from the event img width 468 alt screen shot 2017 03 02 at 3 19 09 am src This causes the reconciler to ignore the error thus triggering it again To reproduce I flipped useSyncScheduling to false in ReactDOMFiber not sure if that was important started examples real world from Redux and added a throw to its User component,,"gaearon,gaearon",2017-03-02 03:20:59,2017-07-11 09:48:07
IS,Fiber Infinite loop when error is thrown in render,Do you want to request a feature or report a bug bug What is the current behavior Using React 0 16 alpha 13 and most other recent versions of 0 16 IIRC whenever an error is thrown inside of render React Fiber goes into an infinite loop Screenshot screen shot 2017 07 10 at 5 04 30 pm If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Unfortunately I don t have a minimal repro case yet I just wanted to flag this before 0 16 goes into beta I do not think there is anything we are doing that is special no weird recursive componentDidUpdate calls or similar I tried stepping within the loop and it is all inside the Fiber internals no user code involved What is the expected behavior React throws an error and stops Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Repros with 0 16 works fine with React 0 15,,gaearon,2017-07-11 00:08:41,2017-07-11 09:48:41
IS,I have a problem and i not solve it Please help me,I write a function to href another web function openPage window location href i onClick openPage The function is useful but it have a wrong When 'npm run build' it have a 'window is not defined' I dont know it,,gaearon,2017-07-11 09:37:12,2017-07-11 10:05:49
IS,Unknown DOM property autocomplete when W3C spec says HTMLInputElement autocomplete autofocus,Do you want to request a feature or report a bug bug What is the current behavior I get Warning Unknown DOM property autocomplete Did you mean autoComplete When I use autoComplete works fine This is misleading because the name of the DOM property is autocomplete not autoComplete React implies that the DOM property is named differently than it really is If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Accepts autocomplete rejects autoComplete OR The error message should not claim that autoComplete is the name of a DOM property because it isn t I don t see any mention of a DOM property called autoComplete in the IDL documentation for HTMLInputElement htmlinputelement but I do see mention of autocomplete It should claim that autoComplete is a React property name mapped onto a differently named DOM property or use some other wording I m not good at coming up with wordings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 6 1 Same issue exists for at least HTMLInputElement autofocus,,gaearon,2017-07-11 02:53:33,2017-07-11 10:09:25
IS,Base component is context overriden by child context,Do you want to request a feature or report a bug Bug but might be a feature What is the current behavior When a base component defines its own context type and an extending component also defines its own context the base component is context is overriden by the child is context If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo What is the expected behavior Each component should have its own defined context Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested in 15 6 1 15 5 4 other versions did not test,,"aweary,gaearon",2017-07-10 17:49:44,2017-07-11 10:10:29
IS,a href javascript scrollTo 0 0 can not scroll to top,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-07-09 15:19:21,2017-07-11 10:12:19
IS,Tic Tac Toe Tutorial,Hi I am in the middle of the tutorial I found that the naming of a variable xIsNext is not clear this state xIsNext 'X' 'O' If X is next are we supposed to display O instead of X Thank you,,"gaearon,gaearon,gaearon,gaearon",2017-07-07 01:39:44,2017-07-11 10:13:47
IS,Why are react dom error messages so cryptic,When react dom v15 5 4 throws an error during jest tests using test utils error messages can be so cryptic Makes it harder for us developers to understand the problem For example this one,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-05 01:30:33,2017-07-11 10:15:55
IS,React server render error are hard to debug,Do you want to request a feature or report a bug feature What is the current behavior Like When using react server render if error occurs like using document or window object in Node environment the error log is hard to find which line is broken error info like picture below image If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior When server render error occurs from error message we can see which line is broken Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 6 1,,gaearon,2017-07-04 07:31:13,2017-07-11 10:18:27
IS,why would reordering be slow when passed index to key prop,there is already a same question in this issue but havent been answered ps i have already read the documentation but as said it is a bit indistinct,,"gaearon,gaearon",2017-07-04 04:53:56,2017-07-11 10:19:26
IS,enhance feature request Hope to provide render props state,Hope to provide render props state,,"aweary,gaearon",2017-06-29 03:41:39,2017-07-11 10:26:35
IS,Style object with columns shorthand property wrong expansion,Do you want to request a feature or report a bug Report a bug What is the current behavior Adding a style object to an element with the columns shorthand property expand it the wrong way it should be left untouched Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest 15 6 1,,,2017-06-26 13:30:23,2017-07-11 10:28:58
PR,Treat columns property as a unitless number,Resolves,,"aweary,gaearon,aweary,nhunzaker,gaearon",2017-07-06 01:29:02,2017-07-11 10:28:58
IS,Feature Request Need ability to debug checksum mismatch in production environment,Do you want to request a feature or report a bug Feature What is the current behavior Currently if checksum mismatch happens when mounting React tree on server rendered markup we can only get markup difference in dev environment Reality is mismatches happen more in production env where there are much bigger variety of user contexts that can trigger the mismatch It is very hard to reproduce the mismatch scenarios in dev environment without knowing where the markup difference is What is the expected behavior What I'm proposing is to provide apps a way to obtain the markup difference even in production environment so that the diffs can be reported back to developers for debugging mismatch root cause Fiber would probably change how checksum works But before it is ready we still need ability to debug this issue in production env I was trying something like this It works but probably is not the best approach The idea is simple though provide a way for application to control which react tree to report markup diff upon checksum mismatch as application might only care about mismatch in a subset of the React trees mounted and there would be concerns with markup normalization L691 L707 cost I am using a data attribute on container node but it is not the best approach since container can also be document node I thought about two alternative ways but neither of them is perfect add reportMarkupDiff option to ReactDom render signature add a prop like reportMarkupDiff to the element being rendered allow application to collect the markup diff even in production environment I'm setting the markup difference as the value of the same data attribute on the container node Please share your thoughts and ideas I am up for raising a PR to implement the most ideal approach Thanks,,gaearon,2017-06-21 05:26:05,2017-07-11 10:36:02
PR,move augmentClass definition above SyntheticEvent Proxy replacement,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"aweary,gaearon,aweary,gaearon,aweary,gaearon",2017-06-20 06:22:51,2017-07-11 10:37:12
IS,SyntheticEvent augmentClass undefined in QtWebKit browsers,Do you want to request a feature or report a bug bug What is the current behavior Everything seems terrible In a certain WebKit browser a page that pulls in a bundled script does not seem to finish loading with console errors about augmentClass being undefined Build details webpack ing using babel loader with es2015 and react presets in webpack config js If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template After building use a QtWebKit test browser from WebKitBuild Release bin QtTestBrowser to visit the offending page What is the expected behavior to not see complaints about SyntheticEvent in the console Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react and react dom 15 4 QtWebKit 5 212,,gaearon,2017-06-20 03:29:28,2017-07-11 10:37:48
IS,Minified Version of React is CDN Throws Errors but Unminified CDN Works Fine,Using React is official CDNs minified version throws Uncaught TypeError but unminified dev version does not CDNs used 6 1 dist react js 6 1 dist react min js My Code minified throws Uncaught TypeError script src 15 6 1 dist react min js script script src 15 6 1 dist react dom min js script unminified works fine script src 15 6 1 dist react js script script src 15 6 1 dist react dom js script jsx var ParentComponent React createClass handleSearchFieldChange function value search code render function return SearchField searchCallback function queryTerms self handleSearchFieldChange queryTerms child jsx component var SearchField React createClass onChangeHandler function event this props searchCallback this state value render function FormControl type text onChange this onChangeHandler Results Unminified version works without any errors Minified version results in the following error Uncaught TypeError self props searchCallback is not a function This is an error with the react is official minified CDN version,,"aweary,aweary,gaearon,aweary,aweary,gaearon,aweary,gaearon,aweary,gaearon,gaearon",2017-06-19 15:12:24,2017-07-11 11:00:03
IS,Curried onBlur handler not triggered anymore when using v15 6 1 in production mode,Do you want to request a feature or report a bug bug What is the current behavior When switching from v15 6 1 is development into production mode the in the examples below defined curried onBlur handler suddenly stops working It seems to have something to do with the number of arguments If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template React v15 6 1 production partially working React v15 6 1 development fully working React v15 1 0 production fully working also works fine in development mode React v16 0 0 alpha 13 development partially working What is the expected behavior Whatever the correct usage of the handler function might be in the end at least the behavior should stay the same across the different build modes Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This was working fine with v15 1 0 development and production,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-08 12:04:44,2017-07-11 11:42:01
IS,dispatchEvent on input textarea is ignored,Do you want to request a feature or report a bug bug What is the current behavior The dispatchEvent method has no effect on input textarea elements If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template v 15 5 4 working v 15 6 1 not working What is the expected behavior The dispatchEvent method results in an event being handled Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm using the latest Chrome browser This has worked in 15 5 x stopped working in 15 6 0 and is still not working in 15 6 1 Usecase for this some old tests that I would happily remove but have to support for now,,"gaearon,gaearon,jquense,gaearon,gaearon,jquense,jquense",2017-07-10 16:32:09,2017-07-11 11:52:12
IS,setValueForProperty DOMPropertyOperations js 142 throwing untraceable unpausable error,Hey there I am getting the following error many time over in my console I have tried setting pause on exceptions to true but it does not seem to pause on the error The actual error message itself is very unhelpful for debugging what the underlying issue is because I have many places in my component where I am rendering an svg path Error path attribute d Expected number A 111 111 0 0 1 NaN NaN L NaN Na Any help tracking down which path component is actually causing this error would be greatly appreciated Thanks,,"gaearon,aweary,aweary,gaearon",2017-06-16 06:21:56,2017-07-11 11:53:58
IS,Input type number when initial value is 0 or 0 and value changes to empty string value does not update,Example of bug here My best guess is that maybe React is doing some truthiness checking which thinks that 0 is the same as so it is not updating the value of the component,,"aweary,gaearon",2017-06-07 17:06:12,2017-07-11 11:56:01
IS,Order of linting and prettier in contributing docs,Do you want to request a feature or report a bug This is more of a documentation discussion What is the current behavior Currently the contributing guide lists the lint step before running prettier For example github PULL REQUEST TEMPLATE md says If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I think it would make more sense to run prettier first since it can automatically get rid of certain lint errors like single quotes or comma dangle A first time contributor following the steps in order might waste time fixing things manually at the lint step before proceeding to the formatting step Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A,,"gaearon,monkindey,gaearon",2017-06-07 03:56:35,2017-07-11 12:07:54
IS,Error in 'Using Immutable Data Structures' section of Docs,Do you want to request a feature or report a bug Report a bug What is the current behavior In the Optimizing Performance section of the docs there is a sub section called Using Immutable Data Structures At the end there is a sentence In this case since a new reference is returned when mutating x we can safely assume that x has changed The sentence should read if my assumption is correct we can safely assume that x has not changed If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template The doc in question is posted here What is the expected behavior As described above we can safely assume that x has not changed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A,,"aweary,gaearon",2017-06-04 06:50:12,2017-07-11 12:08:16
IS,Needed Simplified Chinese Documentation,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-05-15 16:42:57,2017-07-11 12:09:15
IS,Orphaned doc page,Just found out this page which is not being linked to from anywhere else of the online docs as far as I can tell Is this an old page needs to be removed or a new page that somehow were not added properly,,"gsklee,gaearon,flarnie,gaearon",2017-05-26 07:58:34,2017-07-11 12:35:53
IS,Convert elements to test objects for toMatchObject in Jest,Do you want to request a feature or report a bug Request your guidance to add a feature for testing especially with Jest and Enzyme What is the current behavior To get the benefit of descriptive JSX you must pay a cost of irrelevant details in some snapshot tests which cause unnecessary updates and risk incorrect decisions What is the proposed behavior Goal balance effort to write tests initially and update tests correctly when components change Replace some toMatchSnapshot with toMatchObject for elements with a relevant subset of props Therefore this issue to convert the expected React elements directly to test objects especially for shallow rendering and a new deep event shallow test pattern see Table C example For more information see Overview interlude about snapshot testing Status issuecomment 297745964 Proposed be able to import from react test renderer irrelevant String sentinel value to ignore children or absence of children in received object relevantTestObject Given a React element return the unrendered element as a test object typeof is enumerable see props is omitted if there are no properties not including children children is omitted if it is irrelevant Can you think of clearer names I am willing to contribute with your guidance Draft of code Because toMatchObject expects an object relevantTestObject doesn t expect an array of elements which components can render in React 16 Can you think of test cases when it should Examples of tests enzyme although is pending mountToDeepJson in mountToShallowJson via tbodyShallow in and so on react test renderer L54 L129 react test renderer shallow,,"aweary,gaearon",2017-05-22 16:51:38,2017-07-11 12:37:24
IS,Question Listen all user events SyntheticEvents,Hello smile My question is about react synthetic events and how listen all this events in parent component I want track my user activity so i want handle all mouse events wheel events etc It is possible to listen this event and if yes how I can do that Yes I can listen window or document events but i can not localize what component make this event Or maybe it is possible to localize component by using EventTarget Thanks,,gaearon,2017-05-22 13:39:22,2017-07-11 12:37:50
IS,debugID may not be empty,Do you want to request a feature or report a bug bug What is the current behavior Our tests are sporadically logging a warning Warning ReactDebugTool debugID may not be empty We fail any tests that log warnings so this is causing flakiness If the current behavior is a bug please provide the steps to reproduce I'm unable to consistently reproduce but we are seeing roughly a 2 failure rate for our test suite Does not seem to be any patterns around which tests will fail with this error What is the expected behavior I would expect our tests to either log a warning consistently if we are doing something wrong or to not log a warning at all Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The appearance of this warning correlates pretty closely with our migration from node 4 to node 6,,"gaearon,gaearon,gaearon",2017-05-16 22:01:49,2017-07-11 12:39:01
PR,Tweak deprecation messages to be less scary,This should make them more actionable,,gaearon,2017-07-11 13:05:15,2017-07-11 13:05:28
IS,Scrolling gets jammed under specific condittions,See this fiddle using chrome The bug This is just a small problem that occurs under very specific conditions The fiddle shows a scrollable box where half way down the color of the box is changed from a solid color to a semi transparent color When scrolling down and only down you will see that it seems to get a little stuck on the way It becomes much more apparent when using the page down key where it will only scroll until the color change point and no further even on repeated pushes of page down Page up or going from a semi transparent color to a solid color works just fine Expected behavior When scrolling it should not hitch at the color changing point When pushing page down it is supposed to scroll the box all the way Recreating the bug The container must be positioned absolute or relative and it must have a z index set This problem only occurs when going from a solid color to any rgba color where alpha is not 1 Enviorment This was tested on Fedora Linux and on Windows 10 The behavior only seems to occur in chrome In firefox it works fine React version 15 5 4,,"syranide,syranide,syranide,syranide,gaearon",2017-05-13 04:59:09,2017-07-11 13:15:20
IS,Error boundaries in renderToString TypeError Cannot read property 'listeners' of null in renderToString,Do you want to request a feature or report a bug Report a Bug What is the current behavior We are seeing errors in Kibana across our userbase when rendering in NodeJS If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Because this happens in React internals and we have not been able to reproduce the issue I'm struggling to create a minimal repro I have searched for this issue but have only been able to find gaearon react hot loader 466 which was not exactly helpful as we do not use React Hot Loader Can someone maybe explain to me what type of behavior would cause this Based on that I can dig a bit further What is the expected behavior No error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Packages React 15 4 2 React DOM 15 4 2 update could have coincided with 15 4 1 15 4 2 upgrade Server Node 5 x,,gaearon,2017-05-12 13:11:25,2017-07-11 13:17:18
IS,TestUtils documentation missing,Hey I can not find a link to the TestUtils documentation anywhere in the React website Is it because it is going through some updates Omer,,"gaearon,gaearon,gaearon,gaearon,flarnie,gaearon",2017-05-10 15:01:51,2017-07-11 13:18:36
IS,Warning message for zIndex unitless number in a future version of React,Do you want to request a feature or report a bug report bug What is the current behavior warning message If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template when setting css style property z index to a numerical value the warning is displayed 'Warning a img tag owner Logo was passed a numeric string value for CSS property zIndex value 1 which will be treated as a unitless number in a future version of React ' What is the expected behavior no warning for z index because according to CSS MDN The z index property is specified as either the keyword auto or an integer Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 5 4,,gaearon,2017-05-09 09:30:17,2017-07-11 13:19:18
IS,React Webpack Socket io,Hi i'm working in a personal project and I want to use webpack dev server with hot loader for dev and SSR for production with react router and I'm not finding a way of make these things work together Does anyone already had this problem or try to build something like this,,gaearon,2017-05-05 20:04:40,2017-07-11 13:20:25
IS,need better warning message about PropTypes deprication,I have no problem with the removal of the PropTypes from the main React package But I do import a lot of packages and the warning message could help me track down which is the culprit Right now it is not to helpful,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-05-04 13:53:46,2017-07-11 13:20:54
IS,what does total time mean in console log the total time is less than the sum of the time print by printInclude function,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-04-25 15:24:01,2017-07-11 13:21:40
IS,Add 'Unreleased' section to CHANGELOG,Let is make releases a bit faster easier by keeping the CHANGELOG updated incrementally Whoever does the release of a new React version must manually read through the recent git history and write the CHANGELOG update If we incrementally add to the CHANGELOG under the 'Unreleased' header as we make PRs then to release a new version will just be updating 'Unreleased' to be the new version number and adding a blank section for 'Unreleased' See for more info about this idea,,"flarnie,flarnie,flarnie",2017-04-26 02:46:32,2017-07-11 13:21:49
IS,each child component render sync,i have wrote a tree component a parent node has 500 child node in a array When the parent node update each child node is shouldComponentUpdate compute sync each cost 2ms total about 150ms is there a way to compute shouldComponentUpdate asyc to avoid waste time,,"gaearon,gaearon,gaearon",2017-04-26 16:30:04,2017-07-11 13:24:20
IS,Why remove shouldComponentUpdate property for functional components,Do you want to request a feature or report a bug feature What is the current behavior shouldComponentUpdate for functional components feature is already implemented in fiber alpha release But in comment it is written that it will be removed in final release If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Allow optional shouldComponentUpdate property for functional component Which versions of React and which browser OS are affected by this issue React v16 Did this work in previous versions of React No Today I was planning to add shouldComponentUpdate property for functional component and open a issue on GitHub for adding shouldComponentUpdate and send a patch for it But I saw shouldComponentUpdate is already implemented for functional components But there is comment written in code that TODO Disable this before release since it is not part of the public API I use this for testing to compare the relative overhead of classes if typeof fn shouldComponentUpdate 'function' fn shouldComponentUpdate memoizedProps nextProps I think this is very useful feature and should be part of the public API We do not need to use class based Pure component Any idea why this is not going to final release shouldcomponentupdate,,"Daniel15,gaearon,gaearon,gaearon,gaearon",2017-04-24 23:33:43,2017-07-11 13:24:58
IS,React Multi threading Issues with Nashorn,Do you want to request a feature or report a bug Bug Not sure if it is from React What is the current behavior Using react 15 4 0 with Nashorn Engine on JDK 1 8 092 A request of 500 threads per second throws 2 errors saying Error 1 Error Transaction closeAll Cannot close transaction when none are open react dom fbjs lib invariant js 44 Error 2 Error Transaction perform Cannot initialize a transaction when there is already an outstanding transaction react dom fbjs lib invariant js 44 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I'm not sure if it is a bug What is the expected behavior Out of 500 requests 10 to 15 fails in Server Side Rendering Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tried with 15 4 0 15 5 0 It is basically a server ride rendering fails in multiple thread scenario from Java I have attached the exception trace below Error 1 txt Error 2 txt,,gaearon,2017-04-20 19:30:05,2017-07-11 13:27:03
IS,Releases changelogs and or tags for patches,Currently I only see releases on github changelog entries and tags for major and minor version bumps But being a curious developer I would also like to see what changes between patch versions on npm I do not know how or where to see those,,"gaearon,gaearon",2017-04-12 17:37:14,2017-07-11 13:27:17
IS,Set initial state to undefined,Do you want to request a feature or report a bug Feature What is the current behavior Initial state is null What is the expected behavior Initial state is undefined We can manually set the state to undefined in the class but it would make sense to be out of the box as it would allow destructuring without errors Version React 15 6 1 React Dom 15 6 1 Sorry if this has been suggested before,,"gaearon,gaearon",2017-06-16 20:15:20,2017-07-11 14:27:58
IS,Fix function arity issues,Flow 0 46 supports verifying the number of arguments passed to a function Enabling this feature experimental strict call arity true and updating to Flow 0 46 0 in master results in 40 arity errors x PR 9816 reduces this to 28 errors Fix remaining errors,,"bvaughn,iamdustan,bvaughn,gaearon,bvaughn",2017-05-30 20:50:00,2017-07-11 14:38:53
PR,explicitly warn against updating external state in componentWillUpdate,I mistakenly assumed it was okay to update external state during componentWillUpdate for instance by dispatching redux actions so to help other developers avoid this pitfall I added an explicit warning about this,,jedwards1211,2017-06-15 16:36:42,2017-07-11 14:40:17
IS,HOC onClick does not work without adding new element,Do you want to request a feature or report a bug bug What is the current behavior When Some button button clicked it wo not alert If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This is the demo link What is the expected behavior onClick event with this HOC will not triggered I do not want to add div element on my Component Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 6 1,,"aweary,aweary",2017-07-11 16:15:13,2017-07-11 16:20:14
IS,Form submitted on button type button click,Do you want to request a feature or report a bug Report a bug What is the current behavior Strange behavior a form is submitted when I click a button type button The following sequence induce this behavior click on button type button call setState button is transformed into a button type submit the form submission handler is called What is the expected behavior A button type button is not expected trigger form submit Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I reproduced with react 0 14 8 and 15 4 0 with Google Chrome v54 and Firefox v50 see this fiddle This behavior does not happen if I add an unique key property to both my buttons,,"aweary,maciej-ka,nhunzaker,aweary",2016-12-12 16:36:48,2017-07-12 00:11:46
IS,Optimized build,We target newer browsers only Chrome Firefox MS Edge without supporting Internet Explorer Is there or can there be a build that optimizes output for this scenario by excluding code that deals with Internet Explorer quirks Also is it possible to have ES 6 output to minimize the size of the output,,"gaearon,iamdustan,nhunzaker,gaearon,nhunzaker",2016-11-28 01:14:08,2017-07-12 00:16:18
IS,onChange in IE11 input type range,Verify if it works or not Mentioned recently here issuecomment 255402320,,"sebmarkbage,nhunzaker,sophiebits,sophiebits,nhunzaker",2016-11-01 03:31:02,2017-07-12 00:24:54
PR,Add react dom unstable native dependencies,react native web and react primitives currently access a few internals for shimming DOM events into native ones Changes in react 16 packaging hide these internals which has made it difficult for these projects to upgrade change adds a submodule to react dom unstable native dependencies that includes the necessary modules to continue enabling that method of dom native event injection The bundle config is currently a bit of dogscience The one thing I really changes were basically copied it from react dom added an externals globals alias for react dom in order to import it from inside the module which was required to inject the shared ComponentTree into this module removed the fb entry point since I was not sure what it did or if it would be necessary,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-11 00:53:55,2017-07-12 01:27:26
IS,Remove or rewrite examples,Prompted by issuecomment 275452387 Our examples are really not great examples of how to use React They are not maintained at all and add little value We should consider either 1 Rewriting all the examples so they are easier to use and represent good practices 2 Rewrite only a couple and remove all the rest 3 Remove all examples I'm partial to just removing all of them or if anything providing a single example that is well built cc,,"aweary,bvaughn,gaearon,nhunzaker,gaearon,nhunzaker,aweary,bvaughn,nhunzaker,gaearon",2017-01-26 18:11:37,2017-07-12 11:22:33
IS,dangerouslySetInnerHTML should NOT remove script tag,Do you want to request a feature or report a bug Bug What is the current behavior There are many cases in the real world where we need to inject external 3rd party script For example adding google analytics code adding stripe button and so on Currently dangerouslySetInnerHTML removes the script tag making it hard to simply inject JS code to the page Because of this issue people are writing bloated components like react ga google analytics that is 12KB minimized and all it does it to add a script tag There are other similar libs like react scripts and stripe checkout 8KB minimized to add the script I believe that at least when using dangerouslySetInnerHTML we should not remove script tag and instead run the script For example adding stripe is button is as follows embedding What is the expected behavior It should display a Stripe button button Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 2 I believe that this is how React worked for a long time,,"brigand,nhunzaker,nhunzaker",2017-01-21 01:36:59,2017-07-12 11:23:41
IS,Request a 16 0 0 alpha 14 build,I'm not entirely sure whether this is the correct place for my request if not then my apologies for wasting your time We are integrating React 16 in a large legacy webclient and jumping through hoops to render at comment nodes To our great joy we noticed that 9835 is merged which allows us to remove our hacks However it is merged after the latest alpha build 13 was created so I would love to get an alpha 14 build published,,gaearon,2017-07-12 09:10:55,2017-07-12 11:24:18
IS,HTML5 datepicker not updating after type change,When toggling an input is type between wouldate' to wouldatetime local' there are strict formatting rules at least in Chrome Here is a breaking example js output Changing React to version 15 1 0 in the example fixes the bug,,"rickbeerendonk,nhunzaker,nhunzaker",2016-10-26 21:52:00,2017-07-12 11:48:16
IS,Proposal ReactDOMServer render to Stream,tl dr I would like to know how much enthusiasm there is on the core React team for accepting a PR with the ability to render markup to a stream I do not need a guarantee of course but I would like to get an sense if it is something the React team might do before spending a ton of time working on it Background Currently server rendering is accomplished by ReactDOMServer renderToString or ReactDOMServer renderToStaticMarkup which are synchronous functions that return a string The server render methods can be somewhat slow Large 500K web pages can easily take over 100 or 200ms to render depending on the server Also since node is single threaded and single core performance has not been improving rapidly this is not just a problem that Moore is Law will eventually solve The slowness in turn causes two problems in production websites with large or somewhat large HTML pages 1 First because the methods return a string they completely render the entire component before you can return even the first byte to the browser meaning that the browser is waiting idle while the render method is called 2 Second because the methods are synchronous and node is single threaded the server is unresponsive during rendering which means that a large page render can easily starve out renders of smaller pages which may only take a few ms An asynchronous render method would let large page renders yield CPU to small pages improving average response time Proposed Solution The proposal is to add two methods to ReactDOMServer both of which return a node Readable Stream In terms of behavior these methods would return a Readable Stream that outputs the same markup as renderToString and renderToStaticMarkup respectively These methods could solve both problems above A stream can begin emitting content immediately to send to the browser keeping TTFB constant as components get larger Streams are also inherently asynchronous which allows large pages to not starve out smaller ones A few months back I forked react into a library called react dom stream to do this exact thing and it is been fairly well received 1 100 stars on GitHub though modest actual downloads on npm There is also a wishlist bug thread on this repo about it However maintaining a fork is a less than desirable position and I wonder if I can get it integrated in to the core code base My implementation in react dom stream is not ideal I ended up copying basically every implementation of mountComponent and making the copied versions asynchronous The benefit of this approach was that it did not affect renderToString performance but the obvious drawback was that any code changes or bug fixes would have to be performed in both forks of the code which is not ideal Recently I figured out a way to share code in a better way between renderToString and renderToStream but the result was that renderToString slowed down relatively significantly 30 plus or minus I'm trying to figure out how if I can tune it more carefully but it is not looking great yet Questions So I think the questions I would like to ask to the team are 1 Assuming it were perfectly implemented with no performance degradation of the current code is this even something you are willing to accept a PR for this feature 2 If you were to accept this how important to you is it that the string and stream versions of the code follow the same code path 3 Are you willing to accept any degradation in performance of the string version of server rendering in order to get stream rendering that has constant TTFB and keep a single code path Thanks for your time and thanks for all the great work you do on react Tagging and as I was instructed to do on the react IRC channel,,"aickin,sophiebits,aickin,sophiebits,jimfb,aickin,aickin,jimfb,lelandrichardson,aickin,aickin,jimfb,sebmarkbage,aickin,aickin,gaearon,wincent,sophiebits,wincent,gaearon,gaearon,aickin,gaearon",2016-04-06 02:25:29,2017-07-12 13:28:27
IS,Add In Browser Unit Testing,We currently do not run the unit test suite in browsers in open source We only run the internal Web Driver suites at Facebook however that is not very helpful to external contributors nor is it helpful to browser vendors since they can not run these tests against their own builds We disabled it in 4393 but if we can solve those issues or replace it with a new runner that would be great for the community,,"sebmarkbage,sebmarkbage,sebmarkbage,cpojer,gaearon,cpojer,cpojer,sebmarkbage,sebmarkbage,cpojer,cpojer,cpojer,cpojer,milesj,gaearon,jdalton,nhunzaker",2015-12-21 19:25:09,2017-07-12 13:34:42
IS,RFC Testing Browser Compatibility,Testing browser quirks is challenging What if we set up a page or site local to the React repository that made it easier to isolate browser differences and document known issues For example We could start with some of the outstanding input issues like and work our way backward to historical decision points for adding additional rules to support specific browsers Speaking with and about this We see a couple of outstanding tasks x Add a page site local to the React repository that includes test cases for reproducing specific browser quirks x Make it easy to switch between versions of React via CDN references and local builds x Catalog existing fixes and outstanding issues start building test cases Modify React flags via query strings or some other mechanism to quickly switch between the Fiber and and standard DOM renderer Eventually this could also be a great resource for how React handles DOM manipulation obscure DOM API concepts and reference notes for implementors of other DOM rendering libraries Test cases 7328 IE Password fields 8575 Backport input fix 4672 Change event does not fire in IE and Edge under certain circumstances 7027 OnChange randomly misses keys on IE if typing very quickly 8308 onClick firing for disabled buttons 4457 IE11 block change events if disabled 5762 Mouse enter and leave work consistently with disabled elements 708 Change event bubbling does not work with controlled components in IE,,"nhunzaker,nhunzaker,aweary,gaearon,bvaughn,jquense,aweary,aweary,nhunzaker,aweary,jquense,aweary,jquense,aweary,nhunzaker,nhunzaker,nhunzaker,aweary,gaearon,nhunzaker",2016-12-15 21:23:27,2017-07-12 15:01:09
PR,Run all fixtures through Prettier,We run the test suite through prettier so it makes sense to do the same with the fixtures,,"aweary,aweary,nhunzaker,aweary,gaearon",2017-07-12 16:03:40,2017-07-12 16:19:24
IS,how to import a amd module in react project,I have a project which use html css js and in the project there are some modules which defined by AMD like the image below img width 1367 alt 2017 07 13 12 54 34 src but now I need to rewrite the project with react but I am not sure how to use this module directly in react can I use it just like using require 'xxx' in the image below It is an important problem to me can some one help me image,,"gaearon,gaearon,gaearon",2017-07-12 16:59:37,2017-07-12 17:02:51
IS,how to use AMD module in react,I have a project which use html css js and in the project there are some modules which defined by AMD like the image below img width 1367 alt 2017 07 13 12 54 34 src but now I need to rewrite the project with react but I am not sure how to use this module directly in react can I use it just like using require 'xxx' in the image below It is an important problem to me can some one help me image,,aweary,2017-07-12 17:06:54,2017-07-12 17:15:08
PR,Update conferences md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-07-12 17:29:02,2017-07-12 17:31:46
PR,change the argument passed to CallbackQueue getPooled,fix to 10100,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-04 00:46:26,2017-07-12 17:49:13
IS,setState callback called with null instead of undefined,Do you want to request a feature or report a bug bug What is the current behavior In React v16 the callback function that is an optional parameter to the setState function is called and passed a value of null Previously in React v15 the function was called with a value of undefined This change breaks the default parameters feature of JavaScript I discovered this behavior while working on a React Native project hence the example using View Text If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The callback function will be called with undefined Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Broken behavior was observed in React 16 alpha 12 and React Native 0 45 1 I replicated the issue in React 15 4 1 and React Native 0 40 0 and it was working as expected,,"gaearon,aweary,gaearon",2017-07-03 21:17:44,2017-07-12 17:55:19
PR,Test ci fail 2,this should fail CI Do not merge,,,2017-07-12 20:21:27,2017-07-12 22:11:59
PR,Test ci fail 1,This should fail CI Do not merge,,,2017-07-12 20:20:57,2017-07-12 22:12:06
PR,Reword duplicate key warning,what is the change Removes the now inaccurate description of behavior around duplicate keys Adds link to 'key' docs page Changes tone to be more casual and friendly Alternative wording idea 'Encountered two children with the same key key Child keys must be unique using duplicate keys is not supported and will cause unexpected behavior in some versions of React See for more information on how to fix this ' why make this change Mainly this change was needed because in React 16 duplicate keys will not cause omission of items with duplicate keys All items will be rendered It could happen that in future versions of React we will have different behavior though test plan yarn test issue Wishlist item on,,"flarnie,sophiebits,sophiebits,flarnie",2017-07-11 22:38:34,2017-07-12 22:49:41
IS,React Children map Why do you want to add to key,image when i use the react css modules It for my use of some key components added This let me in the use of the key Have to first look at some key components have been added something extra,,gaearon,2017-07-13 03:12:03,2017-07-13 08:30:20
IS,Is there an npm like repository for free React component created and shared by the community non issue,Sorry just starting with React Is there an npm like repository for free React components created and shared by the community,,bjrmatos,2017-07-13 15:08:56,2017-07-13 15:31:29
PR,Remove conditional DEV wrapper from RN bundles,This causes an error with the older version of JSC packaged for Android Relates to facebook react native issues 14995,,"bvaughn,bvaughn",2017-07-13 15:56:51,2017-07-13 16:26:45
IS,String Refs Without An Owner Should Fail Gracefully,Occurs in Fiber with multiple instances of the React package which can not share current owner,,"sebmarkbage,flarnie,gaearon,flarnie,gaearon,flarnie,gaearon",2017-06-14 15:19:06,2017-07-13 17:41:33
PR,Improve error message thrown in Fiber with multiple copies of React,what is the change Added warning in the place where this error is thrown in Fiber to get parity with older versions of React Updated docs to mention new error message as well as old one I started to write a new docs page for the new error and realized the content was the same as the old one So then I just updated the existing error page why make this change We want to avoid confusion when this error is thrown from React v16 test plan yarn test src renderers tests multiple copies of react test js REACT JEST USE FIBER 1 yarn run test src renderers tests multiple copies of react test js manually inspected docs page manually tested in a CRA to trigger the error message screen shot 2017 07 12 at 12 15 22 pm screen shot 2017 07 12 at 11 52 07 am issue Fixes 9962 Related to 8854,,"flarnie,sophiebits,flarnie,sophiebits,gaearon,flarnie,flarnie,sophiebits,flarnie,flarnie,sophiebits,flarnie,flarnie,sophiebits,flarnie",2017-07-12 01:11:30,2017-07-13 17:41:33
IS,Server renderer should not include event code,Since they currently share the injection server renderer includes a lot of unnecessary client only code We should cut it out,,gaearon,2017-07-13 17:05:47,2017-07-13 18:32:28
PR,Remove dependency to event system on the server,Fixes,,"gaearon,nhunzaker,flarnie,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon",2017-07-13 17:29:20,2017-07-13 18:32:28
PR,Do not use Stack only helper in new SSR,Seems like it was unnecessary because Children toArray does essentially the same thing,,"gaearon,sophiebits",2017-07-13 18:18:44,2017-07-13 18:55:49
PR,Simplify environment injections,Not that it simplifies much But I just removed the function wrappers because they are no longer necessary With flat bundles there s no shared state so this is safe,,"gaearon,gaearon",2017-07-13 18:54:31,2017-07-13 19:44:53
IS,Regression onChange does not fire with defaultChecked and radio inputs,Do you want to request a feature or report a bug Bug What is the current behavior In React 15 6 1 this behaviour is changed In 15 5 4 it fires the change event reliably 15 6 1 15 5 4 You will need to have the console open to get the debugger statement In 15 6 1 the first change fires but all subsequent changes do not fire In 15 5 4 all changes fire Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 vs React 15 5 4 Chrome latest stable,,"gaearon,jquense,jquense,jquense,jquense,jquense",2017-06-16 12:00:38,2017-07-13 20:02:32
PR,Fix uncontrolled radios,Fixes 9988 this is against master but we should cherry pick the change back to 15 6 for a patch release I added a fixture instead of a test because writing a unit test that reproduced the issue was confusingly hard actually Most of the extra bits here are to handle both fiber and stack the content of the PR is really the one line in DOMComponent,,"jquense,jquense,jquense,gaearon,gaearon,jquense,jquense,gaearon,jquense,nhunzaker,jquense,gaearon,gaearon,gaearon,gaearon,gaearon,jquense,jquense,gaearon,gaearon,gaearon,jquense,jquense,gaearon,jquense,gaearon,gaearon,gaearon,jquense,jquense,nhunzaker,nhunzaker,jquense,nhunzaker,gaearon,nhunzaker,gaearon,gaearon",2017-07-12 15:55:51,2017-07-13 20:02:32
IS,Fiber infinite recursion in mounting lifecycle,here is an app There is intentionally a bug in this app the App component returns Demo setVariables v this setState variables and Demo calls setVariables in componentDidMount and componentWillReceiveProps it should not this is bad user code What this issue raises is a regression behaviour in React 16 compared to 15 in React 15 it renders but you directly get a Uncaught RangeError Maximum call stack size exceeded in React 16 nothing renders the app never loads and the browser is spinning forever I think React is stuck in an infinite recursion I presume this is because fiber is by nature async The fact things never ends makes it very hard to investigate and isolate the source of the problem in a large codebase should there be some sort of maximum call stack in Fiber Context When we migrated our app to latest React Native recently we had a weird freezing case the app was completely unresponsive no button works but you could still do native actions like scroll a ScrollView however even the RN devtool menu action was not working like the inspector probably because it involves JS and React was just stuck in this recursion loop In our case the issue was because calling relay setVariables in lifecycle but with a wrong logic for some reason our code used to work in the past but now creates this recursion loop,,"gaearon,gaearon,acdlite,bgirard,gaearon,acdlite,acdlite,gaearon,acdlite",2017-07-11 06:46:11,2017-07-13 22:56:03
PR,Limit the number of nested synchronous updates,In Stack an infinite update loop would result in a stack overflow This gives the same behavior to Fiber Conceptually I think this check belongs in findNextUnitOfWork since that is what we call right before starting a new stack I have put it in scheduleUpdate for now so I have access to the component that triggered the nested update But we could track that explicitly instead I have chosen 1000 as the limit rather arbitrarily Most legit use cases should really have a much smaller limit but a smaller limit could break existing code For now I'm only concerned with preventing an infinite loop We could add a warning that fires at the smaller limit Fixes,,"acdlite,acdlite,sebmarkbage,trueadm,acdlite,gaearon,acdlite,trueadm,acdlite",2017-07-13 21:53:41,2017-07-13 22:56:03
PR,Add missing space to key warning,Found this when running the warnings script,,acdlite,2017-07-13 23:12:57,2017-07-13 23:14:45
PR,Uhhhh remove the extra space I literally just added,0 spaces 2 spaces 1 space yay,,acdlite,2017-07-13 23:18:57,2017-07-13 23:19:40
IS,input type number decimal number support,Need suggestions probably Bug too I am using react bootstrap and redux form I tried step 0 1 or step 0 1 Does not work I tried React 15 5 4 15 4 0 Posted on here react bootstrap first Is there any bug here Any suggestion,,"gaearon,aweary,aweary,aweary",2017-05-02 13:53:55,2017-07-14 00:08:10
PR,Remove didCommit from scheduler,Do not actually need to track this now that we moved the infinite loop check to findNextUnitOfWork,,"acdlite,sebmarkbage,acdlite,acdlite",2017-07-13 23:57:46,2017-07-14 05:11:35
IS,CloneElement children ref dom dom but dom is null in componentDidMount,Do you want to request a feature or report a bug report a bug What is the current behavior CloneElement children ref dom dom but dom is null in componentDidMount However if I replace Test Children Test to Test div Test the ref dom gets the dom node correctly If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior The dom should be the component instance DOM node instance IMO Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Using React 15 6 1,,"syranide,gaearon",2017-07-14 07:09:05,2017-07-14 10:47:39
IS,Bug Radio button only fires the onChange event one time,Do you want to request a feature or report a bug Bug What is the current behavior Radio button only fires the onChange event once for each option If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo code What is the expected behavior Radio button should fire the onChange event whenever value is changed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Current latest version 15 6 1,,"aweary,aweary",2017-07-13 10:04:28,2017-07-14 17:55:14
PR,Refactor Debug Frames to Enable Renderers to Provide Custom Logic,This is two parts First I do some refactoring to decouple the current debug frame Then I provide a custom stack frame for the partial renderer I still have to deal with stack frames that are not host components which are tail call optimized away right now in a follow up that is the last test,,"sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,gaearon",2017-07-04 10:16:50,2017-07-14 22:36:25
PR,Delete PATENTS,Resolves 10191,,"gaearon,gaearon",2017-07-16 05:24:32,2017-07-16 10:43:06
PR,Delete PATENTS,,,"gaearon,gaearon",2017-07-16 11:37:57,2017-07-16 11:46:49
PR,Replaced unstable handleError with componentDidCatch,React introduced the experimental error boundaries feature in version 15 Components define an unstable handleError method to opt into this feature Version 16 finalizes support for error boundaries but with a new name componentDidCatch I ran a codemod to rename all identifiers in the React codebase I also searched and replaced strings occurrences eg test case names Relates to the make error boundaries official beta blocker in 8854,,bvaughn,2017-07-17 20:00:33,2017-07-17 21:38:38
IS,Is it time to upgrade LICENSE to MIT,Reference Apache Foundation bans use of Facebook BSD Patents licensed libraries like React js,,"gaearon,gaearon",2017-07-18 00:35:33,2017-07-18 00:38:04
IS,unmountComponentAtNode does not trigger componentWillUnmount on components mounted with unstable renderSubtreeIntoContainer,Do you want to request a feature or report a bug Not sure if it is intended behavior but if it is I would like this feature What is the current behavior componentWillUnmount does not get called on a portal element which was mounted by unstable renderSubtreeIntoContainer when unmountComponentAtNode is called If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Please check the example at What is the expected behavior In the example above I would expect componentWillUnmount to be called and the interval timeout to be cleared Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Google Chrome 59 0 3071 115 Official Build 64 bit cohort Stable Tried with React version 15 6 0,,gaearon,2017-07-18 10:23:30,2017-07-18 10:42:19
IS,Components rendering order,I have a composite component like below I wonder if it is ok to write it like that and hope JSX will render them in the correct order I embed thanks,,"gaearon,gaearon",2017-07-18 04:41:45,2017-07-18 14:15:01
IS,Uncontrolled radio fix is breaking master,I'm not sure why but seems to have caused issues in production with us We will need to either revert or find a way to fix forward Right now master is broken and if we sync again before fixing we will break things,,"gaearon,jquense,gaearon,gaearon,gaearon,jquense,gaearon,jquense,gaearon,gaearon",2017-07-16 17:32:05,2017-07-18 15:31:06
PR,Fix crash on master introduced during the radio bugfix,Fixes See individual commits for descriptions of how this got broken and why this fix works This is a minimal fix to unbreak master Follow up items not part of this PR that and I will look into Remove lazy tracker path from updateValueIfChanged It isn t useful and makes code more complicated It is easier if we can assume that tracker is always exists while component is mounted Simplify the wild polymorphism This method accepts a fiber a Stack instance and a DOM node Stack will be gone soon so we should look into either making it always accept a DOM node or maybe making it always accept a fiber Related reduce the abstraction in naming I think 10156 made things slightly more confusing by calling argument a subject and we lost track of what it means Let s be explicit and precise about what exactly it is and try to use Flow with less any s here,,"gaearon,jquense,gaearon,jquense,gaearon,jquense,aweary,gaearon,gaearon,gaearon,jquense,jquense,gaearon",2017-07-18 14:55:15,2017-07-18 15:31:06
PR,Fix uncontrolled radios on Master,Attempt at fixing 10156,,"jquense,jquense,gaearon,gaearon,aweary,aweary,aweary,jquense,jquense,gaearon,aweary,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,aweary,jquense,gaearon",2017-07-17 20:18:27,2017-07-18 20:00:18
PR,Fix scheduler control flow,I'm about to start larger error handling PR to fix some outstanding bugs see This is a smaller one that cleans up some messiness that I noticed when reviewing the error handling logic No observable changes just refactors the code a bit to make it easier to follow The first commit focuses on begin phase errors It uses performFailedUnitOfWork instead of separately calling beginFailedWork and completeUnitOfWork The second commit focuses on commit phase errors We have a special forked version of the work loop that does an additional check on each fiber to see if it is an error boundary with an unhandled error But this only relevant after the commit phase because begin phase errors are handled using a stack unwind So we should only run this loop right after committing,,"acdlite,gaearon,gaearon,acdlite,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite",2017-06-20 23:14:43,2017-07-18 23:31:49
PR,Upgrade jest to 20 1 0 delta 1,This version includes multi project support This support is a bit broken in 20 0 0 so I use a pre release This PR does not yet enable it though It is just a plain upgrade This required some minor upgrades to our uses of jasmine APIs and record tests,,"sebmarkbage,gaearon,gaearon,nhunzaker,sebmarkbage,thymikee,thymikee,gaearon",2017-07-18 21:46:24,2017-07-19 00:24:55
IS,Catch errors from render methods,Do you want to request a feature or report a bug Feature What is the current behavior If a component is render method throws an error it leaves React in an inconsistent state Subsequent renders attempt to update the inconsistent component and result in errors like Cannot read property 'getHostNode' of null Proposed behavior React could catch the error from the render method set an inconsistent state flag and re throw it Afterwards if React is about to update the previously rendered component but this flag is set it could discard or unmount the existing component and perform a fresh render as if the container were empty Which versions of React and which browser OS are affected by this issue I have encountered the inconsistent state problems in 15 5 and 15 6,,"mjomble,gaearon",2017-07-19 02:16:17,2017-07-19 09:28:39
IS,Automatic passing of HTML attributes className id etc as props into composed component,Do you want to request a feature or report a bug Feature What is the current behavior Consuming React component libraries can be frustrating if the creators do not specifically handle className id and other HTML attributes that can be passed as props to the outermost container of a given component With regard to this specific problem of className The best libraries have a consistent interface for applying custom className s to their components Mediocre libraries provide hard coded className s to their components but do not support custom className s The worst libraries provide neither hard coded className s nor support custom className s The categorizations above are certainly not meant as an indicator the usefulness or quality of the library as a whole There are plenty of libraries which I find to be extremely useful and well made but which lack this simple interface On the contrary there are plenty of libraries that I have passed on due to poor design in other areas but which support this in a nice way Example Below is a minimal example of the initial render of a popular infinite list view anonymized to avoid finger pointing JSX It makes total sense to disallow arbitrary props to be automatically applied to the resulting container However for HTML attributes it seems extremely counterproductive not to do this automatically If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template n a What is the expected behavior A na ve approach would be to automatically apply any HTML attribute props to the composed component is outer most container This is probably not ideal A better solution would be to do this automatic prop pass through by default but allow developers to override specific props as they see fit The benefits are twofold 1 Libraries that lack interfaces for props like className would be immediately improved without the developer s needing to do anything 2 It would still allow more prescient developers to curate the interface in a way of their choosing Conclusion I admittedly do not have a great solution in mind this is also my first time opening a React issue I hope this provokes some thoughtful discussion and feels like I am being constructive I am happy to provide additional examples of this problem and am curious if other people have similar different thoughts Thanks Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React All versions no,,"bjrmatos,gaearon,gaearon,gaearon",2017-07-19 04:09:25,2017-07-19 09:51:06
PR,Split markup generation from DOM property management,This forks DOMPropertyOperations into two different files DOMPropertyOperations is DOM only and DOMMarkupOperations is SSR only This way we don t have to bundle DOM only code paths into the SSR renderer I guess ES6 modules would also help here but I didn t want to wait I also rewrote markup related unit tests as integration tests In last few commits I also rewrote tests for CSS properties in public API and split markup generation server only warning about key value pairs shared and setting properties and validation client only,,"gaearon,gaearon,gaearon,gaearon,sebmarkbage,sebmarkbage,aickin,aickin,aickin,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-16 17:40:46,2017-07-19 13:06:54
IS,Enable to set fontFamily to Press Start 2,Do you want to request a feature or report a bug Bug What is the current behavior When setting fontFamily to Press Start 2 no fontFamily style property will be set If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I would like to see the fontFamily property set to Press Start 2 in chrome debugger Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Last React version Chrome for Mac I do not know if it worked before,,gaearon,2017-07-19 13:40:28,2017-07-19 13:54:37
PR,Move DEV only module requires into DEV blocks,This is related to 10176 Dangling require calls were created from the build due to the usage not being in a DEV block within the source code This PR aims to move the require calls so they no longer dangle in the production builds Also the need to have single quotes within modulesToStub blocks has been removed it was error prone,,"trueadm,gaearon,gaearon,gaearon,trueadm,gaearon,trueadm",2017-07-14 12:08:44,2017-07-19 15:28:56
PR,Run prettier to fix CI for 15 6 dev,This is an attempt at getting the 15 6 dev branch green on CI,,"aweary,aweary,gaearon,aweary",2017-07-19 15:37:15,2017-07-19 15:41:38
IS,Changing local copy of a state in a method automatically changes the state as well,I want to report a bug or at least that is what I think it is I assigned the value of a state say X to a local variable in a method Making any change in that variable and calling setState to change the value of any other state say Y changes the value of X as well Exactly the same change that I did in the local variable I am not using setState to change the value of X I am using it to change the value of Y Yet X changes as well in exactly the same way as I changed the local variable which was earlier initialised using X Here is the demo of the problem Clicking on the button changes the numbers which are rendered using the state test Clicking the button invokes a method where the value of X is stored in a variable arr whose first indexed is then spliced setState is them called passing an object changing the value of the state temp But the test is updated as well with the value of arr I am using react version 15 6 1 on chromium running on Ubuntu 16 04 LTS,,aweary,2017-07-19 15:43:13,2017-07-19 15:55:06
PR,Move input valueTracker to DOM nodes,This moves the storage of the input value tracker to the DOM node instead of the wrapperState This makes it easier to support both Stack and Fiber without out a lot of ugly type casting and logic branches related 10207,,"jquense,gaearon,gaearon,gaearon,jquense,jquense,gaearon,gaearon,gaearon,gaearon,aweary,jquense,gaearon,jquense,gaearon,gaearon,aweary,jquense,gaearon,jquense,gaearon,gaearon,gaearon",2017-07-18 16:40:29,2017-07-19 16:10:14
PR,Configure Jest with Stack and Fiber as separate projects,This runs all tests twice when jest is ran by default They all run in a single jest instance and share the workers reporting etc They can also run individually This also disables the use of scripts fiber record tests in CI but the script still works and only runs the fiber project atm and can be reenabled for any specific project This should fail one test in CI until 10187 lands,,"sebmarkbage,aaronabramov,aaronabramov,sebmarkbage,gaearon,sebmarkbage,aaronabramov,sebmarkbage,sebmarkbage,aaronabramov",2017-07-19 01:11:50,2017-07-19 17:35:46
PR,In SSR Store Elements of Composites on the Stack for Warnings,In DEV mode this keeps an additional sub stack within the stack of the server renderer This substack keeps track of all the elements that we resolved to get to to the next processing frame This lets us recreate the full composite component stack for warnings Normally the stack only contains host components We reset this every time we are going to resolve another sibling,,"sebmarkbage,sebmarkbage",2017-07-15 01:36:12,2017-07-19 17:36:57
PR,Fix lint,Oops,,sebmarkbage,2017-07-19 18:12:44,2017-07-19 18:12:48
IS,renderIntoDocument does not render into document,renderIntoDocument does not render into document whatsoever This creates a lot of issues when components listen to global events on document It would be great to revert the behavior of that function and add additional function to render into isolated DIV if needed,,gaearon,2017-07-18 11:27:26,2017-07-19 18:30:12
PR,Delete flattenChildren,It s not used anymore It was hanging off FB specific React build but we have since removed it and replaced that usage internally This file is dead code,,"gaearon,gaearon,gaearon",2017-07-19 23:08:48,2017-07-20 00:25:54
IS,Question Keep to single setState call,Is it guaranteed that calling fn1 will only trigger a single re render Is it a better practise to pass a to fn2 and keep it to a single setState a b call,,gaearon,2017-07-20 08:55:36,2017-07-20 09:10:31
PR,15 6 dev,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-07-20 12:16:00,2017-07-20 12:33:26
IS,After integrating with jquery plugin webui popover dom events are not firing due to that i'm unable to change the state of component,I'm trying to add this plugin with react component In click event of button I have written the following code to enable popover openPopover webuiPopover url ' popoverContent' trigger 'manual' closeable true openPopover webuiPopover ishow' popover is opening and content is showing but inside popover content i have React components there events are not firing due to this i'm unable to change the state of that particular component Can someone please give me some suggestion How can I do that Thanks,,gaearon,2017-07-20 11:52:24,2017-07-20 12:34:50
PR,Remove PooledClass from isomorphic build,This inlines traverseAllChildren logic into ReactChildren since it s now the only consumer Then I change forEach and map to use the same bookkeeping fields This lets me unroll the PooledClass abstraction into a single specific implementation and thus remove it from the isomorphic build See individual commits,,"gaearon,aweary,iamdustan,gaearon,iamdustan,gaearon,gaearon,gaearon",2017-07-20 00:31:47,2017-07-20 14:56:50
PR,Remove record tests step from contribution guides,,,sebmarkbage,2017-07-19 19:07:29,2017-07-20 21:16:35
PR,Reimplement React Children,aweary This is a fix for issuecomment 291663311,,"koba04,gaearon,koba04,gaearon,aweary,koba04,koba04,aweary,gaearon,koba04,gaearon,koba04",2017-04-05 11:37:11,2017-07-21 00:50:44
PR,React unstable AsyncComponent,Alternative to using the static class property unstable asyncUpdates Everything inside Async has async updates by default,,"acdlite,gaearon,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,sebmarkbage,koba04,koba04",2017-07-20 22:26:54,2017-07-21 01:00:54
IS,doubts about 'getFieldDecorator' in 'form',,,,2017-07-21 07:42:46,2017-07-21 07:51:47
IS,When I visit home page all of the styles in the project will load too,Like the code when I visit ' 8080' i e HomePage page1style css and page2style css will load but I still not visit page1 and page2 is it normal,,gaearon,2017-07-21 06:27:31,2017-07-21 11:19:26
IS,Is babel react optimize still value for React,I occasionally found out this plugin which says will do a few things to optimize React I want to get some answer or confirmation from React team that whether this optimization is still valuable For example transform react pure class to function for now I would definitely write PureComponent instead of function Could React team do a clarification about it Thanks a lot,,"gaearon,gaearon",2017-07-21 02:55:30,2017-07-21 11:44:26
PR,Create cagan,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-07-21 12:16:35,2017-07-21 12:17:37
IS,Implement new feature for flexible component attr definition,Do you want to request a feature or report a bug i want this feature this MyComponent id instead this MyComponent id id What is the current behavior MyComponent id id If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template MyComponent id instead this MyComponent id id What is the expected behavior MyComponent id Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React latest,,aweary,2017-07-21 14:29:40,2017-07-21 14:37:52
PR,Update flowconfig,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,jquense,2017-07-21 15:13:58,2017-07-21 15:16:11
PR,Add warning for rendering into container that was updated manually,Edit This is ready for review what is the change We want to warn when users render into a container which was manually emptied or updated outside of React This can lead to the cryptic error about not being able to remove a node or just lead to silent failures of render This warning should make things more clear Note that this covers the case where the contents of the root container are manually updated but does not cover the case where something was manually updated deeper in the tree why make this change To maintain parity and increase clarity before releasing v16 0 beta test plan yarn test issue last item under the '16 beta' checklist,,"flarnie,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,flarnie,flarnie,gaearon,gaearon,flarnie,gaearon,gaearon,sebmarkbage,flarnie,sebmarkbage,flarnie,sebmarkbage,flarnie,gaearon,flarnie,sebmarkbage,sebmarkbage,flarnie,gaearon,flarnie,flarnie,sophiebits,flarnie,sophiebits,sophiebits,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,sophiebits,flarnie,sebmarkbage,sophiebits,flarnie",2017-07-18 20:54:37,2017-07-21 15:48:47
PR,ReactDOM flushSync batch,Updates scheduled inside of activeUpdates are flushed by the end of the current tick In async mode this means updates are given sync priority In sync mode updates already have sync priority so the effect of activeUpdates is to batch the updates together and flush them at the end of the batch Unlike unstable batchedUpdates activeUpdates flushes at the end even if it is nested inside another batch,,"acdlite,sebmarkbage,acdlite",2017-07-19 23:59:16,2017-07-21 20:22:11
PR,Upgrade to Flow v0 50 0,No particular reason just hoping memory usage is maybe better,,acdlite,2017-07-21 20:31:37,2017-07-21 22:30:32
IS,Fiber Infinite loop caused by a rendering error,Do you want to request a feature or report a bug Bug What is the current behavior When a component returns something other than a valid React element or null it throws and does so infinitely This is render blocking and freezes the window If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This happened to me when creating a Provider type component that rendered its children directly More specifically when they were undefined Eg img width 1375 alt screen shot 2017 03 16 at 15 29 54 src Is there a CodePen Fiddle etc of next somewhere that I can use to demonstrate this What is the expected behavior It should throw but only once and not freeze the browser Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 alpha 4 Yes see 0 PS I know it is an alpha version,,"rthor,gaearon,gaearon,rthor,acdlite,rthor,acdlite,acdlite",2017-03-16 19:56:01,2017-07-21 22:34:42
PR,Support throwing null,In JavaScript you can throw values of any type not just errors That includes null We currently rely on null checks to determine if a user provided function has thrown This refactors our error handling code to keep track of an explicit boolean flag instead We will need to change the ReactErrorUtils shim before the next sync x Check browser support x Create a test fixture x Fix,,"acdlite,sebmarkbage,acdlite,gaearon,acdlite,gaearon,acdlite,sebmarkbage,acdlite,acdlite,gaearon,bvaughn,acdlite",2017-07-19 01:10:34,2017-07-21 22:34:42
IS,how setState to change obj k v,obj k v this state obj I want to change k use setState this setState what is the thx,,,2017-07-22 06:49:29,2017-07-22 10:29:25
PR,a an,Hello A an Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-07-22 11:33:11,2017-07-22 11:48:29
PR,dsf,sdfsdf Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-07-22 11:02:20,2017-07-22 11:49:48
PR,Changelog for 15 6 1,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gaearon,2017-07-22 11:39:17,2017-07-22 12:17:37
PR,Remove duplication in DOM Fiber Component per TODO,This is likely a better approach to the issue I was trying to help with in 9924 This PR removes the duplicated calls to trapBubbledEventsLocal across a tag case statement,,jfo84,2017-06-15 00:18:37,2017-07-22 21:00:26
PR,test,just test Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gzhappysky,2017-07-24 06:52:38,2017-07-24 10:30:51
IS,Safari instanceOf checks fail,I see a bug on Safari 10 where the instanceOf checks incorrectly fail I am rendering a Player component that internal renders in JSX a video tag This is result in Safari So the constructor is correct but the instanceof checks fail Expected behaviour is for the first two to return true Any tips to work around this safely It is breaking my component on a third party library that does a instanceof check on my video element,,gaearon,2017-07-24 11:20:46,2017-07-24 11:33:23
IS,how to change data obj and array use setState,obj like this i want change g but i have no idea '',,,2017-07-24 03:59:56,2017-07-24 12:46:26
PR,Do not add dangling commas to functions for packaging fixtures,,,"bvaughn,gaearon,bvaughn,bvaughn,bvaughn",2017-07-24 16:07:50,2017-07-24 16:09:41
PR,Fix uncontrolled radios,backport of 10156 not sure what the deal is with prettier but when I ran it it gave me a ton of edits,,"jquense,jquense,nhunzaker,nhunzaker,aweary,gaearon,gaearon,nhunzaker,jquense,gaearon,jquense,gaearon,gaearon",2017-07-14 14:12:38,2017-07-24 18:20:41
PR,Fix failing Prettier command,The initial problem was that I was relying on yarn prettier to update all files By default it only updates modified files though and since I had only modified the prettier script itself it was not picking up on a bunch of files Running node scripts prettier index js directly like CI does checks all files though and so we had a mismatch This PR updates the files that were skipped I also updated the script so that if mismatching files are found we actually print them instead of just saying the list above when there is none Example output screen shot 2017 07 24 at 1 31 14 pm,,"bvaughn,sophiebits,sophiebits,bvaughn,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,bvaughn",2017-07-24 20:05:53,2017-07-24 20:59:16
IS,Invalid unknown prop warnings for SSR,Run the fixtures ssr test harness In the terminal the following warning is logged SSR behavior should match client side behavior and not warn for a valid attribute,,"bvaughn,gzhappysky,gaearon,gzhappysky,gaearon",2017-07-24 16:26:59,2017-07-25 16:01:49
PR,Fix false unknown property warnings for events in SSR,This fixes Verified by running SSR fixture with the fix I no longer see the erroneous warnings I think we should get this in before the beta because otherwise SSR is somewhat unusable due to the false positives on every event s The fix itself is rather gross But it s the minimal one that works and I don t want to change too much before the beta We know it will work because in principle it just reverts the DEV build to what it was before 10173 s s I will start working on an alternative fix that forks injections instead of reusing them now But I think this is an easier safer thing to get in now s s I ll also need to understand why tests didn t catch this Probably because event plugins are in a shared module so the list is singleton for both ReactDOM and ReactDOMServer in tests And they share it even though actual bundles would not s I understand it now See followup comment,,"gaearon,sophiebits,sophiebits,gaearon,gaearon,bvaughn,sophiebits,bvaughn,gaearon,gaearon,gaearon,gaearon",2017-07-25 13:30:59,2017-07-25 16:01:49
PR,invokeGuardedCallback Handle nested errors across separate renderers,invokeGuardedCallback is a function we use in place of try catch statement It accepts a function and if the function throws it captures the error In production the implementation is a normal try catch In development we swap out the prod implementation for a special version designed to preserve Pause on all exceptions behavior of the browser DevTools invokeGuardedCallbackDev works by dispatching an event to a dummy DOM node and calling the provided function inside a handler for that event We also attach an error event handler to the window object If the function throws the global event handler is called and we can access the error The global event handler is added and removed right before and after the fake event is dispatched But if invokeGuardedCallbackDev is nested that is if it is invoked inside the body of another invokeGuardedCallbackDev multiple error event handlers will be attached simultaneously We only want the handler that corresponds to the deepest level to handle the error So we keep track of a depth counter and within the event handler we only handle the error if the current depth matches the depth at the time the function was invoked The problem that we discovered and that this PR fixes is that the depth counter is local to each renderer So if you nest separate copies of invokeGuardedCallback from separate renderers each renderer will have its own depth counter and multiple error handlers will fire for a single nested error To solve this I have made the depth counter a global property stored on window reactDevErrorDepth I would prefer not to use a global but it is necessary in this case because we are dealing with global event handlers If there were some way to introspect an error event to determine the event that triggered it we could avoid using a global counter But since this is only in DEV and we already use globals for this use case I think this is fine Updated based on is feedback pullrequestreview 51919909,,"acdlite,gaearon,sebmarkbage,gaearon,sebmarkbage,acdlite,gaearon,acdlite,sebmarkbage,sebmarkbage,acdlite,flarnie",2017-07-24 22:14:49,2017-07-25 16:44:44
IS,Getting reference to component instance in snapshot testing,My App is currently stacked in a Provider followed by Parent AppContainer Component followed by actual component M using Snapshot testing to load a component and call methods on it but this gives error as it not able to resolve 'CONTEXT' and i see that there is no way to pass context Any help,,gaearon,2017-07-24 05:23:20,2017-07-26 00:02:29
IS,Unable to fix PropTypes has been moved to a separate package,One of the modules I use react native spinkit started throwing this error after I updated to RN v 46 I went into the file causing the error node modules react native spinkit index js and made the changes described in Migrating from React PropTypes migrating from react proptypes I even tried automatically applying the changes with jscodeshift react proptypes to prop types Then I ran watchman watch del all rm rf node modules yarn cache clean yarn install yarn start reset cache However I am still getting this warning I want to help a project I use What am I doing wrong Code before Code after,,"bvaughn,bvaughn",2017-07-26 02:10:40,2017-07-26 05:05:06
IS,async await lifecycle functions need be executed in order,request a feature What is the current behavior What is the expected behavior async await lifecycle functions need be executed in order We need async componentWillMount then componentDidMount Now componentDidMount had be executed on async componentWillMount still pending v15 4 0 Chrome 59,,bvaughn,2017-07-26 02:53:53,2017-07-26 05:15:14
IS,Update docs with example for Babel 7 JSX allows elements as attribute values,was resolved via so as of Babel 7 div attr div will work Should an example of this be added in the React documentation If so where Would JSX In Depth be appropriate,,"bvaughn,gaearon",2017-07-26 01:45:25,2017-07-26 08:45:37
PR,Fix event name check to be more exact,Addresses discussion r129369527 Not urgent,,gaearon,2017-07-25 18:18:09,2017-07-26 10:56:39
PR,Dedupe unknown tag name warning and ignore time,1 Dedupes the warning by tag name it is noisy on each render 2 Ignores time specifically because people actively use it and Chrome intends to ship it after all other browsers 1 c12 2 topic blink dev e52E3t3ijHo,,"gaearon,sebmarkbage,milesj,gaearon,gaearon,milesj,gaearon,syranide",2017-07-25 19:07:34,2017-07-26 10:57:30
IS,time element is unrecognized v16 0 0 alpha 13,Do you want to request a feature or report a bug Bug What is the current behavior time tag is incorrectly reported as an invalid HTML element on Chrome Version 59 0 3071 115 search time screen shot 2017 07 20 at 8 22 27 am If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Similar to React 15 time tag should be a valid HTML element Which versions of React and which browser OS are affected by this issue react 16 0 0 alpha 13 react dom 16 0 0 alpha 13 Version 59 0 3071 115 Official Build 64 bit Did this work in previous versions of React React 15 did not report this error,,"syranide,gaearon,syranide,gaearon,syranide,gaearon,gaearon,bvaughn,gaearon",2017-07-20 00:22:07,2017-07-26 11:08:56
PR,Share common parts of Jest config,Summary This PR removes babel jest from package json not used directly anywhere and reuses shared parts of stack fiber config so it is less tedious to update both later,,"thymikee,gaearon,thymikee",2017-07-22 22:24:47,2017-07-26 11:22:02
PR,Delete react dom factories package,This package is already published at 1 0 0 Unlike the version in src the published version is already standalone and inlined It seems to me that we won t be changing this package further And even if we will we ll do it from 15 stable So I m deleting this,,"gaearon,gaearon,mjomble,gaearon,gaearon,nhunzaker",2017-07-26 11:32:40,2017-07-26 12:00:59
IS,ReactDOM render callback should return the top level element,I do not see the way to obtain the top level element with the new async ReactDOM render Previously ReactDOM render would return the top level component I think it is a bug that top level component is not returned in callback,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-24 16:48:39,2017-07-26 16:53:39
PR,Remove feature test from invokeGuardedCallbackDev,The critical semantics are resilient to browser flakiness so we do not need this feature test Also added comments explaining how invokeGuardedCallback dev works,,"acdlite,gaearon,gaearon,bvaughn,gaearon,gaearon,acdlite,acdlite,acdlite,acdlite,acdlite,gaearon,gaearon,gaearon,sebmarkbage,acdlite",2017-07-26 15:58:09,2017-07-26 17:01:31
PR,Add a disclaimer to internal invariants,So that people don t see just these messages if they run into bugs,,"gaearon,gaearon,gaearon",2017-07-26 17:59:14,2017-07-26 18:08:22
PR,Update pre release instructions for generating error codes,,,"bvaughn,bvaughn",2017-07-26 18:12:18,2017-07-26 18:18:33
PR,Regenerate error codes and update bundle size stats,Size change between first build and 2nd build with the updated error codes,,bvaughn,2017-07-26 18:17:59,2017-07-26 18:21:44
PR,Link warning to error boundary post,I have not made it point to the post yet will do now,,"gaearon,gaearon,gaearon",2017-07-26 18:46:48,2017-07-26 18:59:07
PR,Updated error codes after merging in missing code from 15 stable,,,"bvaughn,gaearon,bvaughn,gaearon",2017-07-26 19:01:29,2017-07-26 19:18:03
PR,Regenerate error codes and update bundle size stats 10287,We cherry picked onto 15 stable This does not include the update to the size tracking file since that does not exist on 15 stable,,"flarnie,flarnie,flarnie,flarnie",2017-07-26 18:41:12,2017-07-26 19:23:42
PR,Fix error utils test failure caused by updating error codes,,,"bvaughn,bvaughn",2017-07-26 19:32:59,2017-07-26 19:39:59
PR,Fix process override in ErrorUtils test,This fixes issue that causes confusing errors like Lifted this trick from here L23 L29 where we had same issue,,"gaearon,gaearon",2017-07-26 19:37:56,2017-07-26 19:40:10
PR,Update error codes,A result of,,"flarnie,bvaughn,gaearon,bvaughn",2017-07-26 19:37:11,2017-07-26 19:50:20
PR,Blog post Error Handling in React 16,screencapture localhost 4000 react blog 2017 07 24 error handling in react 16 html 1500924392813,,"gaearon,koba04,gaearon",2017-07-24 19:29:18,2017-07-26 20:15:20
PR,Wrap warning call in DEV block to prevent PROD error,There is a warning call that should ideally be wrapped in a DEV only block This PR wraps that warning call fixing a PROD bundle runtime error,,"trueadm,sophiebits,gaearon",2017-07-26 21:34:47,2017-07-26 21:59:44
IS,New Core Algorithm,I'm just going to start this as a thread to give everyone notice of work being put into the core reconciliation algorithm This will need to include features like Incremental updates in chunks Maybe even two different versions of the same tree at the same time Back and forth yielding and prerender to support layout This probably also includes a new type of context Error boundaries that catches updates Make this work with existing tooling such as dev tools perf tools server rendering various renderers If you are working on fixing issues with life cycles or the core reconciliation parts like child reconciliation then you might want to be aware that this is a moving target There might be requests for changes unrelated to the status quo but related to this future work It might require a lot of context and commitment to be able to contribute to these parts However if what you are fixing is DOM issues packaging builds diffing of props for styles react native etc Then it is probably unrelated to this work and you should feel free to send out PRs,,"sebmarkbage,jimfb,chicoxyzzy,jquense,jimfb,iamdustan,milesj,gaearon,gaearon,gaearon,gaearon",2016-03-02 20:03:23,2017-07-26 22:45:07
IS,Deprecation warnings use console warn instead of console error,Historically React has logged warnings to console error rather than console warn I believe this has been done for a variety of reasons 1 Certain types of warnings may indicate a serious problem even if they are not always fatal 1 In the past stack trace was not available with console warn calls Deprecation warnings are intended to provide users a heads up on features that will be changing breaking in the next major release Up until now we have also logged these warnings to console error This makes them more noticeable but comes at the cost of 1 Potentially over emphasizing the urgency of addressing them eg you should address them before upgrading to the next major you do not need to address the now 1 Potentially causing CI test failures for certain runners that treat unexpected console error calls as fatal After some discussion the React team has decided to replace console error calls with console warn for deprecation warnings only We intend to release this change in the upcoming 15 6 release,,"bvaughn,montogeek,glenjamin,gaearon,bvaughn,glenjamin,gaearon,glenjamin,flarnie,gaearon",2017-04-10 20:39:06,2017-07-26 22:46:08
IS,Explore encouraging users to not ship DEV mode to production,Do you want to request a feature or report a bug Feature What is the current behavior Developers meaning to do the right thing will often accidentally ship DEV mode to production rather than PROD mode This can have a significant impact on performance Although DEV PROD is a one line change it is something React could explore encouraging img src '' width '400px' img src '' width '400px' There is great nuance here and I know that there is balance to be struck between the overall DX value this brings vs UX Another challenge is that the change itself is trivial to make It is unclear whether the right solution here is better defaults or stronger advocacy Folks like have been acknowledging that this is a known issue so perhaps there is room for discussion to help improve this img src '' width '400px' He is also noted that a switch from no warnings to DEV may require some folks to fix whole codebases which is also suboptimal There may be an in between solution worth talking about here however What is the expected behavior React encourages users to ship PROD mode to production rather than DEV I would be open to a solution that is either provided at the library layer or somehow tackled during build bundling time by Webpack that tries to ameliorate this This thread had a number of suggestions ranging from localhost detection to alerts to injecting wouldev mode' messages to the DOM if used in a production environment Something like this img src '' width '500px' Alternatively was proposing that we tried to standardize on ENV configs being required to better facilitate detection of messaging like this It is unclear which of these would be the most realistic There are likely other ideas React core might have around how to tackle the problem Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React All recent versions This thread from prompted this issue I think he also makes a fair point regarding benchmarks but I care about how we can help folks ship the prod experience y'all have worked on optimizing to end customers in all it is glory,,"addyosmani,aweary,sebmarkbage,sebmarkbage,aickin,addyosmani,aweary,aweary,sebmarkbage,acdlite,aweary,gaearon,addyosmani,addyosmani,jlongster,jlongster,jlongster,aweary,aweary,sebmarkbage,aweary,gaearon,aweary,addyosmani,aweary,aweary,aweary,sebmarkbage,aweary,sebmarkbage,aickin,aweary,gaearon,keyanzhang,gaearon,gaearon,gaearon,sebmarkbage,gaearon,aickin,aickin,glenjamin,gaearon,glenjamin,glenjamin,addyosmani,addyosmani,addyosmani,gaearon,gaearon,gaearon,bvaughn,bvaughn,addyosmani,glenjamin,jquense,bvaughn,sebmarkbage,addyosmani,gaearon,gaearon,addyosmani,bvaughn,gaearon",2017-01-13 23:49:15,2017-07-26 22:59:01
IS,Proposal Remove React DOM dom component factories API and release as new module,The React DOM API not to be confused with ReactDOM does not make sense in the greater scheme of the React API being used in other rendering environments like React Native or GL or insert anything that is not the DOM The React API is meant to be universal in that sense We are never going to add React iOS However these factories do not actually have any implementation details that rely on actual DOM details they essentially just map like so React DOM div args React createElement wouldiv' args which is why they ended up in the universal React package and not in ReactDOM This would only impact people who do not currently use JSX and have held out using the function call syntax div now and has for over a year transforms to React createElement wouldiv' The conveniences of the function syntax are a big deal for many people especially coffeescript users and those who are strongly anti JSX so we do not want to break anybody but we would like to migrate them from the core React API So the proposal would be a new package which just exports the exact set of things that React DOM currently makes available It would require some small changes to your code and a new package dependency but is otherwise identical Here is what the change might look like,,"zpao,mxstbr,sophiebits,zpao,sebmarkbage,zpao,jquense,zpao,chicoxyzzy,syranide,zpao,chicoxyzzy,gaearon,chicoxyzzy,gaearon,chicoxyzzy,gaearon,chicoxyzzy,sophiebits,chicoxyzzy,gaearon,flarnie,gaearon",2016-03-02 19:54:37,2017-07-26 23:05:34
IS,Error stops components from rendering without error message or console feedback,This feels like a bug I had a faulty code trying to bind undefined function I forgot to pass it down from parent However there was no Cannot read propery bind of undefined error thrown and no console errors as well It took me a while to figure out what the problem was For the past 30 minutes I have tried reproducing the error with different data without any luck I even copied the minimal amount of source files into another project and the error was thrown I do not know what else to do If you want to investigate I setup this branch The described behavior can be observed in home root I cannot provide more information since I do not have any I really spent some time trying to replicate it but to no success Expected behavior would be throwing an error obviously I have no idea about previous versions of React because I only now encounter it I have not updated React in the meantime Version is 15 6 1 as shown in package json I am using latest Chrome and Windows 10,,"gaearon,aweary,gaearon,gaearon,aweary,gaearon",2017-07-06 20:03:34,2017-07-26 23:08:23
IS,React 16 server renderer breaks with style object in prod mode,There is a bug in the React 16 beta server renderer reported by in the React 16 beta thread issuecomment 318231160 where the renderer throws an exception when style is included and NODE ENV is production Given this file Weirdly dev mode does not throw an error,,"aickin,gaearon",2017-07-27 04:15:09,2017-07-27 09:19:06
PR,Fix ReactPartialRenderer in production,Fixes 10299 Seems like dangerousStyleValue and hyphenateStyleName are not dev only helpers In production the entire DEV branch gets removed and these 2 functions become undefined,,"keyanzhang,aickin,keyanzhang,gaearon,gaearon,gaearon,gaearon",2017-07-27 05:08:24,2017-07-27 09:19:06
IS,Uncaught TypeError Cannot read property 'func' of undefined,BUG webpack code var react require areact' var func react PropTypes func var object react PropTypes object var arrayOf react PropTypes arrayOf var oneOfType react PropTypes oneOfType var element react PropTypes element var shape react PropTypes shape var string react PropTypes string Uncaught TypeError Cannot read property 'func' of undefined Because react object is not contains PropTypes dependencies activ8 client framework 2 1 16 babel plugin es6 promise 1 0 0 babel plugin transform object assign 6 22 0 babel polyfill 6 23 0 babel preset es2015 6 6 0 babel runtime 6 23 0 bootstrap 3 3 6 chart js 2 3 0 cheerio 0 20 0 create react class 15 5 3 d3 4 6 0 d3 scale 1 0 4 enzyme 2 2 0 es6 promise polyfill 1 2 0 eventsource polyfill 0 9 6 hard source webpack plugin 0 4 9 i18next 4 1 1 i18next xhr backend 1 2 1 img loader 1 3 1 immutable 3 8 1 jquery 2 2 3 jszip 3 1 3 mixpanel browser 2 9 17 moment 2 18 1 ms signalr client 2 2 5 prop types 15 5 10 react 16 0 0 beta 1 react addons test utils 15 0 2 react cookie 1 0 3 react day picker 2 5 0 react dom 16 0 0 beta 1 react dropzone 3 13 3 react flex slick 0 5 0 react i18next 1 11 0 react mixpanel 0 0 8 react redux 5 0 5 react resize detector 0 4 1 react router 2 8 1 react router redux 4 0 4 react slick 0 14 11 react smooth 0 3 0 react sortable hoc 0 6 6 react stockcharts 0 6 1 react tooltip 3 3 0 react virtualized 9 7 5 recharts 1 0 0 alpha 2 redbox react 1 4 3 redux 3 7 1 redux devtools extension 1 0 0 redux thunk 2 0 1 sass loader 4 1 1 slick carousel 1 6 0 superagent 3 1 0 toastr 2 1 2 webpack dev middleware 1 6 1 devDependencies babel cli 6 8 0 babel core 6 8 0 babel loader 7 1 1 babel plugin react display name 2 0 0 babel plugin transform object assign 6 22 0 babel plugin transform runtime 6 23 0 babel preset es2015 6 6 0 babel preset react 6 5 0 babel preset react hmre 1 1 1 babel register 6 8 0 bundle loader 0 5 4 chart js 2 5 0 cheerio 0 20 0 clean webpack plugin 0 1 16 colors 1 1 2 compression 1 6 1 compression webpack plugin 0 4 0 copy webpack plugin 3 0 1 cross env 1 0 7 css loader 0 28 4 enzyme 2 9 1 es6 promise 4 1 0 es6 promise polyfill 1 2 0 eslint 2 9 0 eslint plugin import 1 6 1 eslint plugin react 5 0 1 eslint watch 2 1 11 eventsource polyfill 0 9 6 expect 1 19 0 expose loader 0 7 1 express 4 13 4 extract text webpack plugin 3 0 0 file loader 0 8 5 jsdom 8 5 0 json loader 0 5 4 mocha 2 4 5 nock 8 0 0 node sass 4 5 3 npm run all 1 8 0 onesky utils 1 1 0 open 0 0 5 react addons test utils 15 0 2 redux immutable state invariant 1 2 3 redux mock store 1 0 2 rimraf 2 5 2 sass loader 4 1 1 style loader 0 13 1 url loader 0 5 7 webpack 3 2 0 webpack clean obsolete chunks 0 2 0 webpack dev middleware 1 6 1 webpack hot middleware 2 10 0,,,2017-07-27 08:28:47,2017-07-27 09:22:04
PR,Replace children and grandchildren with descendants,children and grandchildren implies that the error boundary only goes two levels deep when in reality it catches errors in the entire subtree,,"Daniel15,gaearon,gaearon,gaearon,Daniel15",2017-07-27 02:00:52,2017-07-27 09:23:37
IS,react 16 alpha13 keep report error when Component not found,Do you want to request a feature or report a bug report a bug What is the current behavior when there is a component notfound react keep report error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template image What is the expected behavior just report error once Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 alpha13,,gaearon,2017-07-27 03:35:17,2017-07-27 09:26:53
IS,Exceptionally deep React stack traces,Looking at the CPU profile for a React app in Chrome I get 65 layers deep into React without ever reaching my own code img width 818 alt screen shot 2015 11 12 at 12 31 47 pm src With every layer I lose a little bit of performance These deep call stacks also make it difficult to debug which parts of my code need more work 1 Is this expected behavior While this is a debug build of React I do not see anything different in the production version The call stacks are just as deep only the names of the functions are mangled 2 Is it possible to inline some of these function calls for production React I can not say whether this is genuinely a performance issue but it certainly makes debugging performance issues unpleasant I'm on React 0 14 0,,"gaearon,STRML,gaearon,gaearon",2015-11-12 17:41:51,2017-07-27 10:45:15
IS,react build deploy to firebase error,Do you want to request a feature or report a bug report a bug What is the current behavior deploy build to firebase get error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template i will get the error Uncaught SyntaxError Unexpected token when i deploy the react build to firebase 1 create react app your project 2 npm i firebase 3 do firebase init 4 npm run build work and get the build static js main 12345 js 5 firebase deploy 6 first deploy is work 7 try to change some code in the App js 8 npm run build you will get the new main 77777 js 9 firebase deploy 10 open your browser chrome firefox ie then get the error Uncaught SyntaxError Unexpected token how can i fixed this issue What is the expected behavior get right main js when deploy to firebase Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React firebase 4 1 2 react 15 6 1 error for ie chrome firefox,,gaearon,2017-07-27 10:15:57,2017-07-27 10:59:44
PR,Add a link for the error boundaries codemod into the blog post,gaearon Fixes discussion r129792522,,"koba04,gaearon",2017-07-27 11:16:19,2017-07-27 13:57:34
PR,Add smoke tests for styles including SSR,Prompted by regression in,,"gaearon,gaearon",2017-07-27 13:55:34,2017-07-27 13:58:04
IS,React 16 unstable renderSubtreeIntoContainer does not always return an instance,Do you want to request a feature or report a bug A bug What is the current behavior I am using the react modal library and tested it under React 16 beta It throws an error when I try to close the modal The reason is it calls renderSubtreeIntoContainer here L156 and expects an instance back But sometimes it is null so when it is closing and it is trying to read it is state here L132 you get a null reference error If you use the API like Modal isOpen this state open is works but only because the component never tries to read from this portal If you use it like this state open Modal you get the error because it tries to read it in componentWillUnmount L132 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior renderSubtreeIntoContainer should always return an instance so this modal librarly works it will close Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 beta It works in all previous versions,,"jlongster,gaearon,gaearon",2017-07-27 15:18:52,2017-07-27 15:26:49
IS,Fiber Make TreeHook DEV only,We recently started pulling TreeHook in production bundle for the sake of the Fiber stacks in error boundaries but as observed this breaks the UMD bundle L27 We could remove the DEV gate there but it is still bad to pull the whole hook into the prod bundle when we only use a small part of it L379 L388 in Fiber I think we should separate what we need in dev and prod and not pull extra code into the prod bundle Linked 9096,,"gaearon,bvaughn",2017-03-01 23:28:32,2017-07-27 16:18:31
PR,Remove Error event listener eagerly instead of using depth count,A little simpler Test Plan dom fixture error handling Passes instructions,,sebmarkbage,2017-07-26 23:43:42,2017-07-27 16:45:07
IS,Server rendering warnings too vague,Do you want to request a feature or report a bug Feature What is the current behavior While server rendering React DOM and then hydrating with a different structure React rightly warns that there are inconsistencies But when I first saw these warnings I was not sure exactly what was going wrong Here are a few of the warnings I have been receiving Only on that last error did I catch on that this was a problem with server rendering and the inconsistencies between that and my client render intentional at the moment while testing some things in unpure render functions What is the expected behavior Being more explicit that this was a rendering inconsistency between server and client Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v16 beta 1,,gaearon,2017-07-27 11:53:59,2017-07-27 17:02:17
PR,Make server hydration warnings more obviously about server,Fixes,,"gaearon,gaearon,sebmarkbage",2017-07-27 16:55:03,2017-07-27 17:02:17
PR,Add date time test fixtures,This commit adds a new section for the DOM test fixtures specifically for date inputs Additionally it adds a test case to verify that correct transference of dates between the date and datetime locale input types This does not identify a bug but I think it is a particularly valuable test case Related issues Test plan Check out,,"nhunzaker,aweary,aweary,aweary,aweary,gaearon,nhunzaker,aweary,gaearon,aweary,nhunzaker,aweary,nhunzaker,aweary,nhunzaker,gaearon,nhunzaker",2017-07-12 11:47:30,2017-07-27 17:24:04
PR,Wraps remaining warning calls that should be removed from FB PROD bundle,This PR is intended to be in addition to stripping out warnings separate PR This PR aims to remove the call sites for the warnings in PROD too,,"trueadm,sebmarkbage,trueadm",2017-07-27 18:22:28,2017-07-27 18:24:35
IS,Finesse signature of componentDidCatch in React 16,Do you want to request a feature or report a bug Improvement to a new feature What is the current behaviour I believe the proposed name componentDidCatch is a little confusing What is the expected behavior In a nutshell this proposal is about changing the signature from Naming conventions are often half jokingly labelled as one of the most difficult things in computer science but I think we could easily tweak the signature of the componentDidCatch lifecycle method that is being introduced in React 16 I am heavily inspired by the principles covered in the famous Clean Code book by Robert C Martin and I particularly like the idea of solid naming conventions where you can basically guess what a function does or what sort of variable you are dealing with by literally reading their names Yes every software developer in the world will associate the term catch with the try catch construct but the first question that came to my mind when I came across componentDidCatch was something along the lines of catch what So I think we could avoid this confusion and make the new method a bit more intuitive if we 1 renamed it to either componentDidCatchError or componentDidCatchException and 2 renamed the second argument to something that would better indicate we are expecting a string e g message or errorMessage I just find the term info that you have used in your recent blog post a little vague as it is not immediately obvious whether it is meant to be a string or maybe an object And before I forget the actual functionality of this new method seems great and I can not wait for an opportunity to implement it in my projects Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16,,"gaearon,aweary,sebmarkbage",2017-07-27 19:27:57,2017-07-27 20:43:04
IS,Ensure the npm command weigh results in the expected result,Just creating this issue to track this thread Currently some tools do not properly DCE the npm bundle branching We will need to combine the dev and prod bundle into one file,,"sebmarkbage,gaearon,sebmarkbage,sebmarkbage,trueadm,gaearon",2017-06-15 20:59:14,2017-07-27 21:51:47
PR,Add Babel plugin note to Error boundaries post,Following recommendation I added a small note regarding that would help debugging new Error boundaries stack traces,,"montogeek,gaearon,gaearon,gaearon,montogeek,gaearon,montogeek",2017-07-27 17:24:19,2017-07-27 22:26:00
PR,Move line to within DEV block,A follow up from,,"trueadm,sebmarkbage",2017-07-27 18:42:01,2017-07-28 00:31:35
IS,Is using instead of bind this still experimental if so what does it means,In this documentation page using arrow function instead of this fu bind this is marked as experimental Is it still considered experimental if so why,,"jquense,gaearon",2017-07-28 01:21:46,2017-07-28 09:45:00
PR,Test that ReactDOM render and renderSubtreeIntoContainer always returns an instance,Failing in Fiber tests for,,"gaearon,sebmarkbage",2017-07-27 16:35:20,2017-07-28 16:45:43
IS,Uncaught TypeError this updater enqueueCallback is not a function when using setState callback,Do you want to request a feature or report a bug Bug on a beta version What is the current behavior image If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template In my Component I used a pretty simple piece of code firing doSomething causes this error What is the expected behavior I expect this doSomeMore function to be called after this setState from this doSomething Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Version of React 16 0 0 beta 2 I have tested several other versions and I can confirm that This bug also appears on 16 0 0 beta 1 This bug does NOT appear on 15 6 1,,"gaearon,aweary,gaearon,gaearon",2017-07-28 20:25:27,2017-07-29 00:19:56
IS,Implement additional async APIs in preparation for v16,x ReactDOM ReactNative activeUpdates Similar to what we currently call ReactDOM unstable syncUpdates except updates are batched and flushed at the end of the batch regardless of whether it is nested inside batchedUpdates 10225 x Opt in subtree to async mode x Static flag on class components unstable asyncUpdates x React unstable Async component type Items we are considering for minor 16 releases but have decided not to ship in 16 0 Commit phase version of willMount willUpdate fires even for any deep set state in the subtree and replaces the global prepareForCommit resetAfterCommit host configs Passive versions of didMount didUpdate,,"acdlite,gaearon,sebmarkbage,sebmarkbage,gaearon,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite",2017-07-17 23:36:28,2017-07-29 04:49:49
IS,dangerouslySetInnerHTML Bug,Hi guys I found bug When I copied and pasted image in custom textarea I got difference between this state text and innerHTML values it is not correct and I do not know how to fix it I reproduce it on Chrome Version 59 0 3071 86 Official Build 64 bit Ubuntu 16 04 LTS,,"gaearon,gaearon,gaearon",2017-07-28 11:48:45,2017-07-29 13:28:28
PR,Warn if rendering invalid element fixes 3726,This PR adds a warning whenever a user attempts to render an element unrecognized by the browser TODO Ensure the test suite passes npm test Add specific tests for validateDOMTag much like validateDOMNesting The tests for ReactDOMComponent include a lot of custom web components that will now show a warning because they have not been defined before they were used I'm not sure how to solve this issue yet I'm hesitant to change the existing specs and from an initial glance it looks like jsdom does not fully support the web component customElements property yet Any ideas on how to go around resolving this Here is a quick look at the warning screen shot 2016 11 23 at 08 30 05,,"edvinerikson,edvinerikson,sophiebits",2016-11-23 16:33:53,2017-07-29 20:27:41
IS,Custom field in event not cleaned up,Do you want to request a feature or report a bug Bug What is the current behavior The custom field in event does not clean up The data appear in other event fired If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Current behaviour Reload Click yellow area alert Hello Click green area alert Hello Reload Click green area alert undefined What is the expected behavior Expect clicking yellow area always alert Hello and clicking green area always alert undefined Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I got this problem in v15 6 1 not sure does it affect earlier version,,"gaearon,gaearon,gaearon,gaearon",2017-07-29 03:41:36,2017-07-30 16:23:10
IS,dynamic create child element the className did not update correct,the code like this first click change button change the second child is className and then click redux button now the FormItem has only one child and the className must be haha but the className is wuwu I think about that may be a bug for vdom render compute or how can I fix this problem,,gaearon,2017-07-30 15:54:07,2017-07-30 16:28:02
IS,Export Import Components and State of Components,Hello I am 16 yrs old and i am new to React Native I am trying to export a component to interact with another component what exactly is the sytanx for that according ES6 rules Also if I want to share the state of 1 component to another do I have to export that component as well Thanks,,bvaughn,2017-07-29 14:50:05,2017-07-30 23:20:03
PR,fix renderToString fails with array type children when react dom server render,fix for 10212 server renderer can support when returning array in render function,,"gzhappysky,gaearon,gaearon,gzhappysky,gzhappysky,gaearon,gzhappysky,gaearon,gaearon,gzhappysky,gzhappysky,gaearon,gzhappysky,gaearon,gzhappysky,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gzhappysky,gzhappysky,gaearon,gzhappysky,gaearon,gaearon,gaearon,gzhappysky,sebmarkbage,gzhappysky,gzhappysky,gaearon,gzhappysky,gzhappysky,gaearon,gaearon,gzhappysky,gaearon,gzhappysky,gzhappysky,gzhappysky,gaearon,gzhappysky",2017-07-19 17:55:37,2017-07-31 15:59:15
IS,react dom server renderToString fails with array type children,React 16 alpha allows returning array in render function but server renderer expects children to always be react elements Fiddle react 16 0 0 alpha 13,,"gaearon,gzhappysky,gaearon,gzhappysky,gaearon,gzhappysky,gaearon,gaearon,gaearon",2017-07-18 22:05:18,2017-07-31 15:59:33
IS,Prevent extension of synthetic event,Based on discussion in We don t support putting custom data into synthetic events Maybe we should Object preventExtensions on them to make it clearer,,"gaearon,jquense,gaearon,jquense,sebmarkbage,gaearon",2017-07-30 16:24:21,2017-07-31 16:14:00
PR,Fix SSR integration test swallowing lack of expected error,We have some tests that check that expected errors are thrown These tests use a helper called itThrowsWhenRendering Currently there is a bug in this helper When there is no error but an error is expected it tries to fail the test with expect false toBe 'The promise resolved and should not have ' However the catch block catches and swallows this exception The fix is to attach the error handler to the original Promise rather than to the one after our handler This fix exposes two missing expected errors in new SSR related to context The second commit fixes them by adding the respective invariants To future proof this I want to assert on specific error messages instead I will do so in a follow up PR,,gaearon,2017-07-31 15:54:22,2017-07-31 16:57:06
PR,Fix invariant parity for SSR,There is a few different things here that was a bit difficult to untangle The goals were Make sure common invariants give the same messages with client and server render Throw in the same cases Not throwing in SSR but throwing on the client makes warnings very confusing Turn new features on for the DOM integration fixture since we are only working on new SSR now Make sure we have tests for top level rendering strings numbers arrays I will add more inline comments for specific changes,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-31 19:55:13,2017-07-31 20:13:51
PR,Add tests that ShallowRenderer supports string and fragment,These tests have already been passed FWIW I think ShallowRenderer tests should be moved into src renderers testing tests 10184,,"koba04,gaearon,koba04",2017-07-21 04:57:20,2017-07-31 23:39:43
IS,Add context support in shallowCompare,Add context support in shallowCompare PR is coming,,"aweary,bvaughn",2016-05-01 18:14:40,2017-08-01 01:08:02
IS,Cannot read property 'purgeUnmountedComponents' of undefined,I'm getting this error when trying to render a component Cannot read property 'purgeUnmountedComponents' of undefined image What does it mean and how can I fix it,,"sophiebits,sophiebits,gaearon,gaearon",2016-11-29 17:41:51,2017-08-01 07:20:25
PR,Move ShallowRenderer tests,ShallowRenderer is an independent renderer for testing so this PR is to move tests for ShallowRenderer into a directory same as TestRenderer,,"koba04,gaearon,koba04,gaearon,koba04",2017-07-14 09:38:50,2017-08-01 07:27:29
PR,Remove trapBubbledEventsLocal,This PR moves calls to trapBubbledEventsLocal outside of an equivalent switch statement of html tags This is a duplicate of 9973 I think y'all were busy cleaning up 15 6 when I first PR'ed this,,"jfo84,gaearon,jfo84,jfo84,gaearon,gaearon,jfo84",2017-07-22 20:18:03,2017-08-01 07:37:27
PR,Test for specific SSR warning,We weren t testing for a specific message here before Making the test less brittle,,"gaearon,gaearon",2017-08-01 10:23:23,2017-08-01 13:38:17
PR,Context improvements,React maintains context using a stack structure ReactFiberStack Each time a context providing component is encountered during the begin work phase it is pushed onto the stack We push early to ensure stack size consistency predictability However at the time we initially push the context providing instance may not yet exist In this case we add a placeholder context object and a default value for whether we performed work at this level and assume that we will update both later Previously we initialized the did perform work at this level value to false However that approach can cause problems for context providing components making it possible for a component to block its own updates by failing this check in ReactFiberClassComponent L583 L589 This was initially reported by via Twitter I believe a more correct approach to initializing the did perform work at this level bit for a context providing component is for the component to default to the same value as its parent We can later update the value using the invalidateContextProvider helper to match what shouldComponentUpdate returned I have added some new test cases to the ReactIncremental test to cover the previous regression case These new tests may overlap somewhat with the existing ones but I thought it better to be slightly verbose in this case I'm open to feedback on this though PS While investigating this issue I also noticed a difference in behavior between stack and fiber DOM renderers I believe in this case that fiber is behaving correctly and the noop renderer is consistent with fiber is behavior so I did not bother adding additional stack specific tests,,"bvaughn,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,sebmarkbage,acdlite,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn,sebmarkbage,gaearon",2017-08-01 00:03:38,2017-08-01 15:38:55
PR,Make unexpected console warn calls fail tests,We recently started using lowPriorityWarning for deprecation messages However it uses console warn rather than console error Our test setup is more forgiving for console warn and doesn t report unintended console warn calls as failures As a result there s a risk of deprecation warning false positives getting accidentally ignored This change makes unexpected console warn fail the test just like console error does img width 909 alt screen shot 2017 08 01 at 16 25 21 src No tests needed change because we don t currently have stray console warn calls I verified adding one crashes a test now,,"gaearon,gaearon,gaearon,gaearon,sophiebits,sophiebits,gaearon",2017-08-01 15:25:05,2017-08-01 18:53:37
PR,Add ReactDOM hydrate as explicit SSR hydration API,First attempt at Removes data reactid from new SSR We now use presence of data reactroot as heuristic for hydration There is also an explicit ReactDOM hydrate API that never clears the existing content ReactDOM render will now print a deprecation message when it tries to reuse markup Downgrade deprecation message to lowPriorityWarning A warning if we tried to hydrate but there s no DOM to hydrate into This means ReactDOM render would still attempt to hydrate when there s an element root but might not work for new features like top level strings or fragments ReactDOM hydrate would always hydrate I have switched the integration test to use the new hydration API when available and this let me remove the special case for top level text nodes that I added in,,"gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon",2017-08-01 09:03:31,2017-08-01 20:17:25
PR,Use boolean assertion for documentMode check,Resolves 10030 Reverts a small change made in This should be safe as we still use this assertion for the change event bubbling check L77 cc this will require another 15 6 x release not sure if one was planned,,"aweary,aweary,gaearon,aweary,gaearon,gaearon,aweary,gaearon,aweary,nhunzaker,gaearon,aweary",2017-06-23 19:01:09,2017-08-01 20:19:14
IS,Settle on Heuristic API for Choosing Hydration,ReactDOM render container can be used on either purely client side content or on server side rendered content If it is client side we empty the container first and then render into it If it is server side we hydrate it We currently use data reactid to determine if we should hydrate or clear We could in theory hydrate to patch it up but it is not safe with the current hydration model If this is your initial DOM div id container div class spinner Loading div div and then call ReactDOM render div class myapp span App span div document getElementById 'container' intending to do a client side only render not hydration Then you end with div id container div class spinner span App span div div Because we do not patch up the attributes I see four possible solutions 1 Always patch up attributes if they differ This would be really slow to hydrate in the normal hydration mode and slow down initial render into a non SSR tree 2 Continue to use a heuristic by hydrating when some kind of extra meta data in the HTML is present Add it in the server renderer We can change it so that only one meta data is needed Not one per element It can be a comment or an attribute 3 Introduce an explicit API to hydrate ReactDOM hydrate container SSR hydration callsites have to be updated 4 Introduce Option 3 but keep Option 2 with a warning for one major version to make it a non breaking change Allows people to incrementally upgrade to ReactDOM hydrate at their leisure,,"sebmarkbage,gaearon,syranide,gaearon,gaearon",2017-07-15 02:34:08,2017-08-01 20:36:16
IS,data reactid alternative,I know 0 15 0 no longer uses keys in data reactids which is part of my issue however I would like to bring forward a different way to link the dom for the initial render which is to keep text nodes and regular nodes separate I have implemented something like this in my own simple virtual dom here L80 and here L37 I am not sure if react works this way at all but essentially it recursively mounts nodes from the top down and splits up text nodes using splitText to ensure that the server produced dom matches the virtual structure Just curious if something like this is feasible in react since it has allowed me to implement bootstrapping server side code while producing clean html output without checksums or ids,,"gaearon,gaearon,aweary,gaearon",2016-01-17 05:35:14,2017-08-01 20:40:10
IS,Server rendered HTML polluted with empty data reactid attributes,Do you want to request a feature or report a bug Bug Feature What is the current behavior Using new React v16 beta 1 for server rendering I'm using the regular react dom server package and the method renderToString The HTML DOM output which is created has a root element with an attribute data reactroot and all elements with the attribute data reactid Having this on every single HTML element ends up consuming a lot of bytes on large pages and it seems like it potentially might not be necessary with the new client re hydration Or could at least be reduced in size since it appears that they serve no real purpose besides being a binary marker at this point To quote from the beta release notes Server rendering does not use markup validation anymore and instead tries its best to attach to existing DOM warning about inconsistencies I see there is a new streaming server renderer under react dom node stream as well which I have not managed to take a look at yet But I expect these two methods of rendering to have the same output Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Node js v8 2 0 React v16 beta 1 EDIT Just to quickly illustrate what I'm talking about better server render reactid That is 16 extra characters in each HTML element rendered by React Just in this very small example app that is 16 53 848 characters,,"gaearon,gaearon",2017-07-27 11:25:10,2017-08-01 20:40:42
PR,Remove object assign polyfill,Since we already depend on Map and Set I figured we might as well ask users to polyfill Object assign if they need to In browsers it is still not supported everywhere e g IE 11 doesn t but Edge does There is a precedent Relay Modern Preact Inferno don t ship with it Many Redux apps use Object assign so users resort to polyfilling it anyway In Node there was an issue with bad Object assign implementation in some Node version that caused different attribute order But Fiber is resilient to that so it wouldn t be a problem anyway img width 1551 alt screen shot 2017 07 26 at 12 53 07 pm src Test plan packaging fixtures work For internal FB bundles we didn t use it in the first place because we had our own polyfill img width 1381 alt screen shot 2017 07 26 at 12 54 49 pm src,,"gaearon,jquense,jquense,gaearon,jquense,jquense,gaearon,gaearon,jquense,gaearon,aweary,gaearon,Daniel15,gaearon,sebmarkbage,gaearon",2017-07-26 11:53:30,2017-08-01 23:54:35
PR,Add an extra test for arrays and strings from composites,We tested only top level arrays strings but not composite return values Tests already pass Related it is time we start thinking about splitting up those tests so they can run in parallel I can look into it tomorrow,,gaearon,2017-08-01 23:53:17,2017-08-02 00:05:43
PR,Remove hydrate warning about empty container,It used to have false positives for cases where we legitimately do not render anything Per discussion r130716334,,"gaearon,nhunzaker,gaearon,gaearon,nhunzaker,sebmarkbage,nhunzaker,gaearon,nhunzaker,gaearon",2017-08-01 23:23:58,2017-08-02 00:05:56
PR,Grammar fixes for a code comment,,,"wincent,gaearon",2017-08-01 23:17:03,2017-08-02 00:20:54
IS,Some invariant messages are not extracted,Not sure why but I can see these messages in the beta bundles I would like to understand why,,"gaearon,gzhappysky",2017-07-30 16:52:48,2017-08-02 09:38:28
PR,Fix error codes not updating correctly,Fixes If I understand correctly calls to require in scripts context get cached into some kind of module map similarly like in jest haste map or maybe are hoisted to the top of module behind the scenes At least that is what I observe Because the cache is not invalidated after performing fs writeFileSync existingErrorMap was always the same despite inline require resulting in codes json file not being updated properly One way to fix this is through replacing require with fs readFileSync and that is what this PR is about,,"thymikee,thymikee,gaearon,thymikee",2017-08-02 09:07:47,2017-08-02 09:38:28
PR,Fix a typo in spec name,This was careless of me,,"koba04,koba04",2017-08-02 10:07:10,2017-08-02 10:09:09
IS,Error boundary text is not clear,Error text enhancement request What is the current behavior When an exception is thrown something like this is printed It is not clear what an error boundary is It would be great to link to a docs page that describes what this is and how to do it I googled react error boundary and ended up with no clear answers in the top few hits error boundary ie UTF 8 oe UTF 8,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-05-01 18:18:11,2017-08-02 10:09:45
PR,Remove event namespace check from ReactPartialRenderer,Working through I noticed that onchange was coming through as markup in the server side rendering tests This is because ReactPartialRenderer uses a registrationNameModules check to see if a prop is an event name I believe registrationNameModules is populated by event plugins which were removed in So this condition always resolves to true I have confirmed by running test coverage img width 632 alt screen shot 2017 08 01 at 7 09 57 pm src If we remove the attribute whitelist we need an answer here for event names on server side rendering I have added that to my list in 10229,,"nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker",2017-08-01 23:20:58,2017-08-02 10:30:44
IS,Delete rAF from ReactDOMFrameScheduling,We do not use rAF for scheduling anything anymore yet we still enable it in ReactDOMFrameScheduling It can probably be simplified a bit by not exposing it,,sebmarkbage,2017-08-01 01:58:04,2017-08-02 14:26:38
PR,Remove rAF export from ReactDOMFrameScheduling,Fiber does not schedule animation callbacks anymore though it does use the browser is requestAnimationFrame to polyfill requestIdleCallback This removes the rAF export from ReactDOMFrameScheduling since it is not being used TODO A basic async scheduling DOM fixture We used to use the triangle demo for this but that is currently broken until we add back the starvation optimizations Closes,,acdlite,2017-08-01 03:39:08,2017-08-02 14:26:38
PR,Shallow renderer passes context to componentWillReceiveProps,In a recent conversation between and myself pointed out that the new React 16 shallow renderer did not pass the 2nd param context to componentWillReceiveProps This was an oversight that has been corrected with this PR I also added a new test to ensure that the new shallow renderer passes the expected params and only those params to each lifecycle method,,"bvaughn,flarnie",2017-08-01 23:15:33,2017-08-02 15:18:47
PR,Remove an unnecessary DEV condition,getStackAddendum is used in outside of DEV condition This PR also includes some style fixes which was caused by copy and paste from other code,,"koba04,koba04",2017-08-02 10:15:14,2017-08-02 16:57:42
PR,Warn on missing Set Map polyfills,Adding an early check with a URL currently pointing to a gist We ll move this to docs as part of 16 release We could do a warning instead which would save some bytes s I opted for invariant for consistency with what we do for rAFs s Changed this to be a warning per feedback I check for specific methods we use There s some earlier versions of Firefox that added support gradually,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon",2017-08-02 15:46:14,2017-08-02 17:55:19
PR,Upsell React DevTools in 16,This is based on existing code L84 L108 that didn t make it into the DOM Fiber bundle before A few things are different I refactored ReactFiberDevToolsHook because conditional exports were confusing Instead we always export everything and injectInternals will not do anything if DevTools don t exist injectInternals now catches errors inside the hook injection Seems less fragile We now show a message if you use a version of DevTools incompatible with Fiber The upsell message now uses console info over console debug because Chrome started muting console debug by default This message is aimed at new users and they won t know to toggle the filters I also added bold formatting to it via c since both Chrome and Firefox support it FF supports it since version 31 Otherwise it is too easy to miss in Chrome I removed this check L98 because Firefox now also has issues with file URLs so we should show the same message to FF users Old version message verified by installing an old version img width 503 alt screen shot 2017 08 02 at 12 26 53 src Upsell messages img width 503 alt screen shot 2017 08 02 at 12 30 08 src img width 694 alt screen shot 2017 08 02 at 12 30 20 src Extension still works img width 364 alt screen shot 2017 08 02 at 12 42 31 src img width 374 alt screen shot 2017 08 02 at 12 43 47 src Also verified the message doesn t appear for production builds or in Node img width 817 alt screen shot 2017 08 02 at 12 46 23 src,,"gaearon,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon",2017-08-02 11:48:10,2017-08-02 17:56:24
IS,Use SRI in documentation links to UMD builds,It seems there may be a bit of confusion issuecomment 318928557 about loading React via SRI from unpkg CDN I would be happy to submit a PR with the appropriate integrity values in the script tags in docs but just wanted to see if y'all were interested in doing that first If not feel free to close,,sophiebits,2017-07-31 17:36:32,2017-08-02 18:17:26
IS,react dom factories has a peerdep of 15 5 4,Do you want to request a feature or report a bug bug What is the current behavior react dom factories has a peerdep of react 15 5 4 but it seems as though it should work with any react 15 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template n a What is the expected behavior react dom factories works with react 15 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 4 2,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-08-02 18:01:58,2017-08-02 18:19:25
IS,React DevTools Download should not appear in chrome extension,This is a bug report Expected Behavior React should not suggest me to download the DevTools extension in a chrome extension page because the extension has no permission to inject the devtool Actual Behavior Download the React DevTools and use an HTTP server instead of a file URL for a better development experience Reproducing 1 Create a Chrome extension with an option or popup page that uses React 2 Load the extension to Chrome and open up that page 3 Observe console Version Google Chrome 56 0 2924 3 React 15 4 0,,"glixlur,gaearon,glixlur,gaearon",2016-11-24 07:19:54,2017-08-02 19:04:50
PR,Do not suggest downloading React DevTools inside Chrome extension,Fixes issuecomment 319755594,,"gaearon,gaearon",2017-08-02 18:50:37,2017-08-02 19:04:50
PR,FB bundles wrap warning calls in DEV,Historically UMD and NODE production bundles go through a couple of transforms during the Rollup build process 1 DEV conditionals are replaced with process env NODE ENV production which later get converted to values like development production 1 Calls to the warning helper method get wrapped in DEV conditions to ensure they are dead code eliminated from the production bundle 1 Inline error messages are replaced with smaller error codes However we have not been applying these transforms to the FB production bundle which led to a couple of unexpected breaks after recent React syncs Specifically some calls to the warning helper were left in the code even though the imports for warning were removed Changes This PR addresses the FB bundle problem by doing 2 things 1 Split Transforms All three of the above steps were previously done by a single transform scripts error codes dev expression with codes js This PR splits them into separate transforms 1 scripts rollup plugins convert dev to process env js This was actually an unnecessary transform since we later remove environment conditionals via stripEnvVariables Since the DEV format results in slightly smaller faster subsequent code we are just using it now 1 scripts rollup plugins wrap warning with env check js 1 scripts error codes dev expression with codes js 2 Transform FB Bundle Transforms are now run on bundles as follows Target Convert DEV Wrap warning Errors to codes FB NODE UMD Impact on bundles The change from process env to DEV and the subsequent impact on stripEnvVariables resulted in some trivial bundle size savings Beyond that comparing the output of yarn build for master against this branch by diff ing the build directory contents shows only the following changes In build dist development js and packages react dom cjs development js Before Next steps I would like to log a warning when a warning call is wrapped in a DEV check since this may indicate other logical errors I'm not sure yet how to do this though It may also be worth removing the invariant wrapping logic from the dev expression with codes transform since it is not strictly related and placing it in its own smaller transform I would prefer to do this in a follow up though to keep things more manageable,,"bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn",2017-07-27 18:10:23,2017-08-02 21:14:26
PR,Wrap contents of if DEV condition in an IIFE,This avoids strict mode conflicts for certain browsers wrt functions being defined within an if block Also re added the if DEV condition for the ReactNative renderer since it was removed for this reason Relates to this comment issuecomment 319759692 on issue 10294 cc Bundle impact build dist No impact build facebook www dev js,,"bvaughn,gaearon,bvaughn",2017-08-02 20:45:29,2017-08-02 21:24:44
PR,Use single entry point for SSR via browser field,Haven t verified this works yet will test tomorrow But that s the basic idea,,"gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,gaearon",2017-08-02 21:30:21,2017-08-02 23:41:10
IS,Adding an image tag inside a react component throws error,While working on an app I was trying to use an image tag I thought it was something with my setup but I stripped everything down to zero as below index html It does not matter where I put the image inside a component surrounded by divs with siblings alone Nothing gets rid of this error,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,aweary",2017-08-02 22:16:13,2017-08-03 01:16:42
IS,How to make google chrome devtool play well with reactjs,Hi It is usually difficult to debug reactjs site I have know how react and redux work but there are many projects do not follow the official document they write a bunch code to customize That make a project difficult to understand such as The easiest way to know the whole working flow is follow debugging But Chrome devtool does not play well with reactjs For example 1 breakpoint did not hit enter image description here 1 1 console log 'anno reducer' state did print anno reducer State map Map but did not hit any breakpoint Here I want to know where the error come from and find out why not familiar that node package so need debug 2 Some lines can not not set breakpoint enter image description here 2 2 3 Wrong scope enter image description here 3 3 As you see action type is CHANGE LOCALE now but scope shows that action is undefined I googled this but nothing helpful I really want a working debug solution that would help much 1 2 3,,gaearon,2017-08-03 02:01:37,2017-08-03 09:37:39
IS,Dynamically created element is unable to load dangerouslySetInnerHTML,dangerouslySetInnerHTML is not getting loaded when the component re renders Sample declaration for dynamic Component Sample Usage DynamicComp dangerouslySetInnerHTML html ' span ',,gaearon,2017-08-03 09:08:23,2017-08-03 12:07:19
PR,Remove old IE polyfill code,This is a bit of an experiment in what can be pulled out here I m not yet convinced it s a good idea I need to fixup my branch at least Removes onClick logic for radio and checkboxes believe that was ie8 only removes a substantial chunk of of the input polypill ie9 partially supports onInput already and we only need to add in the selection change event to handle the cases it doesn t work on e g deleting text For everything else we don t distinguish between when to use change vs input such as for select inputs since we listen to both and dedupe I tested against the fixtures on IE9 with positive results,,"jquense,jquense,aweary,jquense,jquense,jquense,aweary,jquense,nhunzaker,nhunzaker,nhunzaker,jquense,jquense,nhunzaker,nhunzaker,jquense,nhunzaker,nhunzaker,jquense,aweary,nhunzaker,aweary,nhunzaker,aweary,jquense,jquense,aweary,aweary,aweary,aweary,jquense,gaearon,aweary,jquense,nhunzaker,jquense,nhunzaker,aweary,jquense,jquense,nhunzaker,nhunzaker,jquense,nhunzaker,jquense,gaearon,jquense,gaearon,jquense,nhunzaker,jquense,aweary,nhunzaker,gaearon,jquense,gaearon,jquense",2017-07-20 17:11:51,2017-08-03 12:45:41
IS,Docs Add note about checkboxes radios and preventDefault,Do you want to request a feature or report a bug Add a note to docs about preventDefault causing issues in change handlers for checkboxes radios What is the current behavior There is no such note about the issue in docs I had made a PR 3069 for this before it had been merged but it got lost removed in the new docs I was helping someone through this exact issue and they asked why is not this covered in the docs What is the expected behavior There should be an explanatory note in the docs,,"WickyNilliams,jquense,WickyNilliams,jquense",2017-08-02 14:39:58,2017-08-03 14:02:02
PR,Add documentation about script crossorigin for React CDN usage,Based on discussion in I verified it works We can already document it now and then have the default error message link to the doc img width 681 alt screen shot 2017 08 03 at 2 41 08 pm src,,gaearon,2017-08-03 13:42:57,2017-08-03 15:13:14
PR,Fix lint error in DOM fixtures,Noticed this when trying to test fixtures for 10353 screen shot 2017 08 03 at 9 27 55 am,,bvaughn,2017-08-03 16:29:50,2017-08-03 16:32:04
IS,Error null in the captured error warning due to cross origin issues,Three points from discussion in Due to environments like CodeSandbox show Error null in our React caught an error warning Let s consider skipping both as they re not very useful and look like a bug Error null looks like a separate error and draws attention away from the real error just above In any case we should probably not print The error was thrown at if we don t have a JS stack There is a related issue What do we pass to error boundary if we caught null It seems that most error boundaries will intuitively do something like if this state error or read error message which null will break There are other falsy values too like '' and undefined My proposal is we always wrap primitives into our own Error objects that we pass to the boundary,,"gaearon,sebmarkbage,acdlite,sebmarkbage,gaearon,sebmarkbage",2017-07-29 00:24:58,2017-08-03 17:25:54
PR,Cross origin error handling in DEV,Cross origin errors are not accessible by React in DEV mode because we catch errors using a global error handler in order to preserve the Pause on exceptions behavior of the DevTools When this happens we should use a custom error object that explains what happened For uncaught errors the actual error message is logged to the console by the browser so React should skip logging the custom error message to avoid confusion Includes a new DOM test case zvxjqrbvnh Closes,,"acdlite,gaearon,gaearon,acdlite,bvaughn,bvaughn,acdlite,acdlite,bvaughn,bvaughn,acdlite,bvaughn,acdlite,bvaughn,acdlite,bvaughn,gaearon,acdlite,acdlite,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,acdlite,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon,acdlite,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon,sebmarkbage,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,bvaughn",2017-08-02 14:25:30,2017-08-03 17:25:54
PR,Use parallelization on CI more,Seems like this should be faster,,"gaearon,gaearon,bvaughn",2017-08-02 23:40:36,2017-08-03 18:48:48
PR,Remove hidden functional shouldComponentUpdate API,It was added for internal testing and not meant to be part of 16 public API We can always re add if we think we need it,,"gaearon,sophiebits,gaearon,sebmarkbage,gaearon",2017-08-03 18:38:48,2017-08-03 19:24:10
PR,Do not call componentDidUpdate in shallow renderer,We did this for initial compatibility with Stack but this behavior seems undesirable because it is inconsistent with componentDidMount Past discussion in discussion r112013921 seems to uncover Enzyme depends on it Can we verify this is the case I ran Jest internally and did not see issues caused by this change Since Enzyme needs to adapt to other 16 changes we might as well make this one,,"gaearon,bvaughn",2017-08-03 20:31:18,2017-08-03 21:49:30
PR,Log captured errors sooner,This prevents the captured error from becoming separated from the component stack if other errors or console error calls are made between them eg a component errors during unmount Relates to discussion on 10353 as well as out of band not on GitHub discussion Before screen shot 2017 08 03 at 11 39 29 am After screen shot 2017 08 03 at 2 48 53 pm,,bvaughn,2017-08-03 21:48:08,2017-08-03 22:51:09
IS,Throw when host component has a function child,It surprised me that this doesn t throw neither in Stack nor in Fiber Isn t this always indicative of a mistake,,"gaearon,gaearon,gaearon",2017-08-02 19:51:33,2017-08-04 00:42:19
IS,,new dom,,,2017-08-04 06:01:10,2017-08-04 06:05:28
PR,Tiny optimize for instantiateReactComponent,In instantiateReactComponent js has the variable type assigned with element type but it is only used first conditional statements Change follow element type to type also,,"zombieJ,gaearon",2017-08-04 02:46:51,2017-08-04 10:36:15
PR,The Web Optimization Project has optimized your repository,Web Optimization Project Beta The Web Optimization Project is a project that will automatically optimizes files in git repositories by compressing them losslessly This project was created by Devedse in an effort to save the world smirk If you have any questions feel free to create an issue or join the gitter chat Join the chat at Optimization The Web Optimization Project optimized this repository All optimizations compressions are done losslessly and no quality data is lost This is also verified afterwards by the Wop so you can be sure that your images are exactly the same Commits Commit 1 Information Value Version 0 0 2 0 Support file extension PNG JPG JPEG GIF BMP Statistics Stats Value Total bytes saved in this commit 1 9MB Files optimized in this repository FileName Original Size Optimized Size Bytes Saved Successful external png 1 2KB 189B 1KB True external 2x png 1 1KB 134B 1017B True logo og png 10 5KB 10 5KB 18B True logo small png 10 5KB 4 3KB 6 2KB True logo small 2x png 28 4KB 12 5KB 15 9KB True logo small gray png 5 4KB 1 8KB 3 7KB True logo small gray 2x png 9 3KB 4 2KB 5KB True noise png 22 8KB 22 1KB 771B True oss logo png 4 3KB 3 9KB 406B True search png 1 3KB 244B 1 1KB True animal sounds jpg 51 7KB 48 1KB 3 6KB True chatapp png 27 2KB 21 6KB 5 6KB True cra better output png 214 2KB 146 4KB 67 8KB True cra dynamic import gif 1 7MB 1 7MB 0B True cra jest search gif 906 9KB 906 9KB 0B True cra pwa png 90 2KB 45 4KB 44 8KB True cra runtime error gif 1 7MB 1 7MB 0B True cra update exports gif 1 4MB 1 4MB 0B True devtools full gif 1 3MB 1 3MB 0B True devtools search gif 929 2KB 929 2KB 0B True devtools side pane gif 42 6KB 42 6KB 0B True devtools tree view png 134KB 71 2KB 62 9KB True dog tutorial png 59 2KB 40 5KB 18 7KB True error boundaries stack trace line numbers png 68 1KB 35 8KB 32 2KB True error boundaries stack trace png 66 7KB 34 9KB 31 8KB True first look png 36 3KB 27 6KB 8 8KB True flux chart png 68KB 41 6KB 26 4KB True flux diagram png 197 4KB 130 1KB 67 3KB True genesis skeleton png 167 9KB 142 6KB 25 4KB True gpu cursor move gif 789 6KB 789 6KB 0B True guess filter jpg 39 7KB 37 7KB 2KB True hacker news react native png 127 2KB 102 8KB 24 4KB True jsx compiler png 30KB 13 7KB 16 3KB True kendoui png 41 2KB 22KB 19 1KB True khan academy editor png 10 8KB 10 8KB 0B False landoflisp png 156 4KB 108 7KB 47 8KB True lights out png 11 9KB 3 3KB 8 6KB True makona editor png 34 6KB 23 5KB 11KB True markdown refactor png 7 2KB 5 3KB 1 8KB True modus create gif 992 3KB 992 3KB 0B True monkeys gif 532KB 532KB 0B True ngreact png 85 3KB 54 4KB 30 9KB True om backbone png 176KB 126 5KB 49 5KB True parse react jpg 55 6KB 47 9KB 7 7KB True polarr jpg 69 5KB 66KB 3 5KB True propeller logo png 3 1KB 1 3KB 1 8KB True property finder png 72 7KB 60 9KB 11 8KB True quiztime png 22KB 18 7KB 3 3KB True react 50k mock full jpg 133 8KB 126 8KB 7KB True react 50k mock jpg 118 4KB 83KB 35 4KB True react 50k tshirt jpg 675 6KB 633 4KB 42 3KB True react browserify gulp jpg 25KB 23 1KB 1 9KB True react dev tools jpg 80 9KB 69 7KB 11 2KB True react diff tree png 39 7KB 26 8KB 12 8KB True react draggable png 26 5KB 10 2KB 16 3KB True react hackathon jpg 51 3KB 48 8KB 2 6KB True react page png 24 1KB 19 9KB 4 2KB True react perf chrome timeline png 96 3KB 68 4KB 27 9KB True react php png 41 6KB 35 7KB 5 9KB True react svg fbp png 72KB 57 2KB 14 8KB True reactive bookmarklet png 58 7KB 40 8KB 17 8KB True reflux flux png 2 8KB 2KB 877B True relay visual architecture tour png 278 6KB 129KB 149 6KB True resistance calculator png 58 3KB 44 2KB 14 1KB True skills matter png 165 3KB 120 3KB 45KB True snake png 6 8KB 6 8KB 0B False steve reverse gif 5 4MB 5 4MB 0B True sweet jsx png 48KB 18 4KB 29 5KB True tcomb react native png 56 2KB 24 3KB 31 9KB True thinking in react components png 27 7KB 18 6KB 9 1KB True thinking in react mock png 24 4KB 17KB 7 3KB True todomvc png 51KB 21 8KB 29 2KB True turboreact png 5 8KB 3 4KB 2 4KB True tutsplus png 53KB 28 8KB 24 2KB True unite png 15 8KB 13 3KB 2 4KB True versioning 1 png 22 2KB 22 2KB 0B False versioning 2 png 23 1KB 23 1KB 0B False versioning 3 png 44 1KB 44 1KB 0B False versioning 4 png 47 9KB 47 9KB 0B False versioning 5 png 31 5KB 31 5KB 0B False versioning 6 png 44 8KB 44 8KB 0B False versioning poll png 100 7KB 48 2KB 52 5KB True weather png 13 9KB 6 8KB 7 1KB True wolfenstein react png 120 8KB 110 9KB 9 9KB True xoxo2013 png 245 6KB 168 3KB 77 3KB True xreact png 7 7KB 3 2KB 4 6KB True compiled successfully png 80 7KB 50KB 30 6KB True compiled with warnings png 186 1KB 135 1KB 51KB True created folder png 191 8KB 136KB 55 9KB True failed to compile png 189KB 136 5KB 52 5KB True npm run build png 171 9KB 122 1KB 49 8KB True relay architecture png 130 8KB 55 1KB 75 7KB True relay containers data flow png 69 4KB 27 3KB 42 1KB True relay containers png 38 1KB 13 9KB 24 3KB True sample newsfeed png 118 6KB 56 9KB 61 7KB True cdn cors header png 64 4KB 42 5KB 21 9KB True codewinds 004 png 5 6KB 2 3KB 3 4KB True devtools dev png 80 5KB 51 6KB 29KB True devtools prod png 44 6KB 27 1KB 17 5KB True granular dom updates gif 124 2KB 124 2KB 0B True implementation notes tree png 58 5KB 51KB 7 5KB True javascript jabber png 9 4KB 1 6KB 7 8KB True keyboard focus png 7 1KB 1 7KB 5 4KB True perf dom png 14 5KB 7 3KB 7 2KB True perf exclusive png 18 1KB 9 3KB 8 8KB True perf inclusive png 22 5KB 12 2KB 10 3KB True perf wasted png 27 9KB 16KB 11 9KB True react devtools state gif 567 3KB 567 3KB 0B True should component update png 44 3KB 23 9KB 20 4KB True thinking in react tagtree png 14 2KB 14 2KB 0B False devtools png 23 6KB 23 4KB 221B True tictac empty png 10 9KB 10 9KB 0B False tictac numbers png 16 4KB 16 4KB 0B False grayarrow gif 111B 111B 0B True logo png 274B 218B 56B True,,"gaearon,syranide,syranide,syranide",2017-08-03 22:25:20,2017-08-04 13:41:39
PR,Fix incorrect reference to undefined diffValueForAttribute,I noticed this when stripping away some DOMProperty stuff It looks like there is a reference to a DOMPropertyOperations diffValueForAttribute that is not defined L133 L137 This is as far as I can tell an impossible pathway to hit because of this line here L929 L932 So I have added a test to cover the code path,,"nhunzaker,gaearon,nhunzaker,gaearon,aweary,gaearon,sebmarkbage,nhunzaker,nhunzaker,aweary,gaearon,sebmarkbage,gaearon,nhunzaker,gaearon",2017-07-20 13:12:59,2017-08-04 13:47:29
PR,Support for class http equiv and accept charset,This commit updates the HTML property config and UnknownPropertyHook developer warnings such that is no longer required to specify className instead of class htmlFor instead of for and so on Both className and class htmlFor and for are supported I do not want this to be a breaking change When both are specified within props React provides the warning className and class were listed as properties on div Both write to the same attribute use one or the other This required updating some tests that were dependent using className vs class for developer warnings This feature is implemented separately from 7311 but there should be no functional conflict Related issues 5926 4331,,"nhunzaker,nhunzaker,nhunzaker,syranide,gaearon,syranide,nhunzaker,nhunzaker,gaearon,gaearon,syranide,syranide,nhunzaker,nhunzaker,aweary,gaearon,nhunzaker,gaearon,gaearon",2017-07-13 12:15:23,2017-08-04 13:49:44
IS,Fiber returning functions from render does not throw,When App returns Foo instead of Foo accidentally Fiber does not catch this,,"aweary,gaearon,aweary,aweary,gaearon,aweary,acdlite,acdlite,aweary,gaearon,gaearon,gaearon,gaearon",2017-05-01 22:26:33,2017-08-04 14:51:48
PR,Warn about unresolved function as a child,Fixes,,"gaearon,sebmarkbage,flarnie,gaearon,gaearon",2017-08-04 01:20:55,2017-08-04 14:51:48
IS,Array length cannot be read,Hello I am new in React and I'm trying to run a piece of code where I have the following function in which I use a for to iterrate an array But after I run it it gives me the error Uncaught TypeError Cannot read property 'length' of undefined Can someone help me understand what is wrong with this Thanks '' movimentiOnClick function idSelected var itemSel null let i 0 for i 0 i this movimenti length i var item movementi i if item id idSelected itemSel item break this context router push pathname ' listaeTabelle details ' state item itemSel,,aweary,2017-08-04 14:38:53,2017-08-04 16:18:25
PR,Implement event specific pooling for SyntheticEvent,WIP I think this is mostly done still looking at pooling in TopLevelCallbackBookKeeping This PR removes PooledClass from the synthetic event system in favor of a simpler event specific pooling system It maintains the same pooling API getPooled release to minimize churn in the event system Instead of PooledClass addPoolingTo it now uses a helper addEventPoolingTo defined in the SyntheticEvent module Removes pooling all together from FallbackCompositionState It was only being used in a single event plugin and the way it is structured makes it so there is only ever a single instance anyway This means we do not need any sort of pooling Instead the composition state is now tracked in a single object which can be initialized and reset,,"aweary,nhunzaker,gaearon,gaearon,aweary,jquense,aweary,aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,nhunzaker,gaearon,aweary,gaearon,gaearon,aweary,gaearon",2017-07-20 16:35:43,2017-08-04 17:24:48
PR,Move PooledClass to Stack folder,This just ensures we don t accidentally pull it into Fiber bundles again,,gaearon,2017-08-04 17:31:36,2017-08-04 18:10:07
PR,Compile spread to Object assign calls,Noticed Rollup was complaining about extends helper repeating But we don t need it Instead let s emit Object assign calls Diff of build folder FB and RN bundles now get plain Object assign UMD and CJS bundles keep using the polyfill,,"gaearon,nhunzaker",2017-08-04 18:07:29,2017-08-04 18:12:13
IS,HTML input tag maxLength BUG,I met a problem as follow I want to render the input tag value when react component mounted and I have set maxLength attribute for this Input but confusing me is that the value length over maxLength but display it without split you can see demo anyone can help me,,"jquense,aweary",2017-07-22 05:52:23,2017-08-04 18:24:36
PR,fiber debugger Fix the debugger to match changes to Fiber,formatPriority L253 was throwing Unknown priority when fiber progressedPriority is undefined which happens as soon as you run the app,,"pomber,gaearon,pomber,gaearon,pomber,gaearon",2017-08-03 22:58:36,2017-08-04 18:45:20
IS,Remove usage of PooledClass,In PooledClass js L18 we have some static poolers based on the number of arguments the comment specifies it is not made dynamic so we do not have to use arguments I have 2 questions with this 1 What is the issue with using arguments i noticed we are using it in other place reference L8444 if it is going to reduce duplicate code 2 Ca not we use the spread syntax for this like this,,"gaearon,aweary,nhunzaker,aweary,gaearon,aweary,gaearon,gaearon,aweary,gaearon,koba04,syranide,gaearon,koba04,aweary,aweary,gaearon,aweary,gaearon,gaearon",2017-04-04 02:41:20,2017-08-05 02:50:16
IS,Request Exports HTMLDOMPropertyConfig SVGDOMPropertyConfig and ARIADOMPropertyConfig in v16,This is a feature request In React v15 6 HTMLDOMPropertyConfig SVGDOMPropertyConfig and ARIADOMPropertyConfig are available by import them directly e g import ReactHTMLDOMPropertyConfig from areact dom lib HTMLDOMPropertyConfig' In v16 however they are no longer available I think they are not public parts of react dom but they are inevitable to implement a library to build React DOM from an HTML text See L1 L2 for how to use them,,gaearon,2017-08-05 10:02:55,2017-08-05 11:02:27
IS,Concern in rendering nested array,I find that no warning is given when render an array nested in another this case 3 const numbers 1 2 3 4 5 const listItems numbers map numbers li numbers li 'listItems' is wrapped in an array ReactDOM render ul listItems ul document getElementById 'container' After debugging in React I find function validateChildKeys which is used to validate children is keys file path react lib ReactElementValidator js Ensure that every element either is passed in a static location in an array with an explicit keys property defined or in an object literal with valid key property ReactNode node Statically passed child of any type parentType node is parent is type function validateChildKeys node parentType if typeof node 'object' return if Array isArray node for var i 0 i node length i var child node i if ReactElement isValidElement child validateExplicitKey child parentType else do some other validation function ReactElement isValidElement child is used to check if a child node should be checked ReactElement isValidElement function object return typeof object 'object' object null object typeof REACT ELEMENT TYPE When checking nesting array e g array array0 array1 array2 array0 array1 array2 are Array objects which have no property named typeof so function validateExplicitKey will never be called warning message will never be thrown Is it a bug Or does React acquiesce this case Giving a warning message is better maybe 1 keys 2 recursing on children 3,,maxdeviant,2017-05-11 08:04:49,2017-08-05 18:09:04
IS,my issue,Do you want to request a feature or report a bug bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-08-05 18:31:26,2017-08-05 18:31:51
IS,Non issue Need advise for adding authentication in a react app,In fact I would like to integrate Facebook authentication in my React app and save user credentials in the database along with additional data that will be used to authenticate with an API I have no idea about how to handle authentication and authorization in a React app I went through some few books but none of them touched that aspect Can you point me to a book a tutorial any link whatever you think can point me to the right direction Thanks in advance,,,2017-08-06 13:24:16,2017-08-06 16:23:33
IS,react native fbsdk setup,Bug report I am trying to do the setup for react native fbsdk but it fails I have followed the steps given in this link I get the following error I want the installation to go successfully Currently I am using 16 0 0 alpha 12 version of react I am trying this for the first time There is no way I found in react native fbsdk to raise an issue Hence raising here Please help me out of this,,gaearon,2017-08-07 12:10:56,2017-08-07 13:42:12
IS,Implement Setting Unknown Attributes,We are currently warning about unknown properties in the DOM For example if you render you re going to see a warning from React and foo won t actually turn up in the DOM People have wanted support for custom attributes since forever Now that we have actually been warning for a whole release I think it is a good time to flip this behavior and to set any unknown attributes on the DOM instead of skipping them So the goal is that you would actually see div foo bar in your DOM There is just one caveat we still have not updated all FB callsites to fix this warning Ideally we want to stay synced with open source version of React but I do not want React 16 to be delayed because of this nor do I want delaying this change until React 17 So I think we should bite the bullet introduce an internal feature flag that will differ for our FB builds and enable the new behavior in the open source version Some time during React 16 we ll finish updating our code and remove the conditional code path I don t think anybody on the team has time to work on this right now so I d love this to be a community contribution Requirements as I see them Introduce a new feature flag to ReactDOMFeatureFlags Something like shouldSetCustomAttributes Set it to true Keep the warning about unknown DOM props but only enable it if shouldSetCustomAttributes is false Make sure tests still cover this case you can override feature flag in tests see existing tests concerning feature flags for how to do it Add new behavior of falling back to setAttribute for any unknown properties rather than skipping them like we do now Add tests for it Those tests shouldn t need to touch the feature flag since it s the new default behavior Make sure this works both for SVG and HTML Make sure Fiber tests pass when you create a PR there are instructions on running them This might affect server rendering test suite previously added by You might need to change those tests to verify the new behavior It s fine to only verify the new behavior there with flag set to true since we don t use server rendering ourselves Good point from issuecomment 296170676 We should still warn for known attributes that are miscapitalized It s fine if that s a different warning message than the one behind the flag Send the PR Please let me know if you d like to take this It could turn out a little complicated there won t be a lot of guidance from us on this so we probably can t coach a completely new contributor for this task But if you sent a PR or two to React you should be able to do it Update already started a PR on this a while back and might be able to rebase it Let s discuss the plan more in more specifics below issuecomment 296179889,,"gaearon,gaearon,gaearon,syranide,gaearon,gaearon,gaearon,gaearon,nhunzaker,gaearon,gaearon,flarnie,gaearon,aickin,aickin,gaearon,gaearon,gaearon",2017-04-21 10:59:30,2017-08-07 17:55:42
PR,Rewrite DOMPropertyOperations test in terms of public API,This removes a dependency on Stack only ReactDOMComponentTree precacheNode so that we can remove it when Stack is gone For the most part the tests were easy to convert but I ll point out a few things I wasn t sure about,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,syranide,gaearon,syranide,syranide,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,syranide,gaearon,nhunzaker,gaearon,gaearon,gaearon,gaearon,nhunzaker,syranide,syranide,gaearon,gaearon,syranide,gaearon",2017-07-26 13:30:49,2017-08-07 19:12:13
PR,Remove data reactid and data react checksum from whitelist,We don t use them in new SSR,,gaearon,2017-08-07 19:16:41,2017-08-07 20:28:27
PR,Custom Attributes Scenario 1 Do not write badly cased attributes Keep Whitelist,Follow up work from 7311 This PR implements scenario 1 for custom attributes as described in 7311 comment 1 The attribute whitelist enforces casing for all known attributes 2 Badly cased entries in the attribute whitelist are not written to the DOM 3 Attributes not within the whitelist are assigned regardless of casing 4 The ARIA whitelist has been moved to a developer only enforcement but the logic is the same as master This approach is more strict than scenario 2 Badly cased attributes will not show up in the DOM However this enforcement means that we can not remove many entries in the attribute whitelist Build size react dom production min js 116 33 KB 37 01 KB gz img width 989 alt screen shot 2017 08 07 at 8 12 26 am src,,"nhunzaker,nhunzaker",2017-08-07 11:28:25,2017-08-07 22:57:05
PR,Add traversal for Fiber test renderer,Not clear the path to shipping this but this gives us a migration path internally that we need right now replaces,,"sophiebits,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn",2017-08-04 02:05:39,2017-08-07 23:47:23
PR,Allow custom attributes by default,This was closed in favor of This is a resubmission of pull request 6459 Just to recap The addition of the unsupported property warning 6800 reminded my old PR 6459 and I was curious about reopening it So here we are This pull request configures DOMPropertyOperations to allow all attributes to pass through It maintains the whitelist only for attributes that need special behavior such as boolean props and name translations like className While I was at it I also eliminated the duplicated list of reserved props between ReactDOMUnknownPropertyDevtool and ReactDOMComponent through a new isReservedProp method on DOMProperty Related Issues,,"nhunzaker,aickin,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,gaearon,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,sophiebits,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,sophiebits,flarnie,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,sophiebits,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon",2016-07-20 01:24:07,2017-08-08 01:37:57
PR,WIP Custom Attribute and Preferring Attribute Names over Properties Spike,Do not merge this PR This is a work in progress PR to investigate the outcome of aggressively removing entries in the attributes lists and moving over to preferring attribute names over properties My goals are What startup improvements do we achieve from avoiding numeration over many properties What edge cases might be exposed to library authors What is the improvement in authoring experience What is the easiest migration path and what would it look like to support both property and attribute names className and class x What code can we eliminate beyond the whitelists that is built around them x Prevent event names from showing up on server rendering I'm probably missing a few more but I thought it might be neat to track this progression on Github Performance improvements still TBD There are two factors I see startup time and attribute generation time This PR avoids enumerating over a big list of properties at startup but that process is pretty fast More time is actually spent enumerating over the event list in SimpleEventPlugin L125 L139 I'm seeing DOM property injection L59 take from 1 5 to 2 milliseconds Cutting 2ms is not huge but I will try to get some better numbers is the 1 5 2 ms property injection number accurate Without the custom attribute regexes and extra branches is attribute assignment faster Build size differences Even with manually listing out the properties that we need special behavior for there is still some savings ReactDOM his 6 gzipped Pretty healthy cut The server build drops by 30 in size which is not all that grand but fun to say at least Improvement to authoring TBD Edge cases TBD Migration path for libraries TBD,,"nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,jquense,nhunzaker,acdlite,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon",2017-07-20 01:12:20,2017-08-08 01:44:42
PR,Fiber debugger enhancements,I'm adding some stuff to the debugger Is it ok to PR them or should I keep them in my fork This PR includes Add effect tag to fiber description Add setting for changing the direction of the graph for me left right looks better than top bottom Add setting for disabling the auto tracking of the active fiber Here is a live demo,,"pomber,gaearon,gaearon",2017-08-05 19:38:36,2017-08-08 10:31:49
IS,16 0 0 alpha 12 ReactDOM removes server rendered content before rendering it again,Do you want to request a feature or report a bug Bug What is the current behavior In React 16 ReactDOM removes server rendered content before rendering it again tested on 16 0 0 alpha 12 For applications with a big component tree this is perceivable by the user If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem I have reproduced the bug here Tiny app 1 There is a box component which is rendered on the server with renderToString and sent to the client 2 The client loads bundle js which contains the same component I have a added debugger in componentWillMount for the box component to show this open your dev tools React 15 6 1 React 16 0 0 alpha 12 Code is here What is the expected behavior ReactDOM should perform reconciliation without removing content React 15 had this behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Browser Chrome Current version 16 0 0 alpha 12 Previous version 15 6 1,,gaearon,2017-08-08 13:38:12,2017-08-08 15:00:44
PR,Fix bugs related to unmounting error boundaries,Fixes two bugs 1 Do not warn about setState on unmounted when scheduling error recovery We should not schedule an update on unmounted error boundaries but we do not know if a boundary is unmounted until we traverse its parents Added an additional argument to scheduleUpdate so we know not to warn about setState on unmounted components 2 Should be able to unmount an error boundary before it is handled Fixes the case where an error boundary captures an error but its parent is unmounted before we can re render it componentDidCatch is never called and we do not remove the boundary from our set of unhandled error boundaries A non null capturedErrors does not imply that we have unhandled errors,,"acdlite,sophiebits,sophiebits,acdlite,acdlite",2017-08-07 23:27:39,2017-08-08 17:09:44
PR,Enable new fiber ReactTestRenderer API methods,Remove ReactTestRendererFeatureFlags New ReactTestRenderer APIs are always on We may tweak these APIs slightly prior to RC but they seem pretty stable,,bvaughn,2017-08-08 16:46:38,2017-08-08 17:18:00
IS,noshade attribute not working for hr element,Do you want to request a feature or report a bug bug What is the current behavior passing noshade or noShade to an hr element does not work attr noshade If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior the attribute should be added to the rendered DOM Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 x,,"syranide,aweary",2017-08-07 18:33:56,2017-08-08 18:19:58
IS,onChange event does not fire while trying to type value in input using Appium IOS,Do you want to request a feature or report a bug Bug What is the current behavior onChange event does not fire while trying to type value in input using Appium type value programmatically If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Also tried on Android work fine Only relates IOS What is the expected behavior onChange event should be fired while trying to type value in input using Appium Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React since 15 6 0 and up 15 5 4 works fine iPhone 6s IOS 10 3 2 Appium 1 6 5,,aweary,2017-08-02 08:33:32,2017-08-08 18:24:25
IS,ReactDOM render unstable renderIntoContainer does not return instance if called during an update,Do you want to request a feature or report a bug Bug What is the current behavior ReactDOM render and ReactDOM unstable renderSubtreeIntoContainer no longer return created React component instances If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior After the steps above this componentRef should be an instance just created it is now null with React 16 beta It is entirely possible that I should be doing something different now but if so it is not clear what that should be Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 beta Chrome OSX thanks,,"gaearon,jlongster,jlongster,gaearon,gaearon,jlongster,gaearon,jlongster,aweary,gaearon,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,sebmarkbage,jlongster,sebmarkbage,jlongster,aweary",2017-07-27 14:48:14,2017-08-08 18:25:19
IS,Unknown prop onForceTouchChange on div tag,Do you want to request a feature or report a bug BUG What is the current behavior Notice that in this document ontouchforcechange is a valid event on an div However when I do that I get a warning logged out to the console Unknown prop onTouchForceChange on div tag If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template div onTouchForceChange e console log e touch me on your iphone div What is the expected behavior No warning Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 6 1 on Chome on MacOS,,"aweary,aweary",2017-07-13 21:41:04,2017-08-08 18:26:56
IS,ChangeEventPlugin js IE detection is broken on Chrome Safari FF etc,Bug What is the current behavior On our website we include a number of scripts from 3rd parties Via segment etc and one of them seems to be modifying document documentMode inadvertently This in combination with the release of react dom 15 6 0 has broken our website completely because of some code in ChangeEventPlugin js The error activeElement detachEvent is not a function is written in the console every time you try and click into an input box Its specifically this line that is causing the issues L159 The 3rd party library is actually just setting document documentMode undefined but this in itself is enough to break the line wouldocumentMode' in document because even though documentMode is undefined it now exists as a key in document This then means on all browsers react dom believes its running in IE If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template To reproduce on any app that uses react dom 15 6 0 15 6 1 and includes input boxes add the following at the top of the head tag so it executes immediately An example can be found here What is the expected behavior In previous versions And the 16 0 branch of reactdom the code is just document documentMode which works fine and will allow you to load relevant 3rd party libraries without experiencing any issues We have reached out to the vendor to fix the issue on their side but I'm not sure how long this will take Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Does not work in React Dom 15 6 0 and 15 6 1 but works in 15 5 4 and 16 0 From looking at the history of the code it seems to have gone back and forth between the two different ways of checking documentMode but this is the commit where it changed back to the code that causes an error diff d7d43033e0c4300df2b535a9df27b8edR164,,"aweary,aweary",2017-06-23 07:44:47,2017-08-08 18:30:20
PR,Update Flow to 0 52,For opaque types,,"acdlite,acdlite",2017-08-09 00:54:26,2017-08-09 02:02:11
IS,Dynamic Names for Snapshot Files with jest,Hi I am using Snapshot testing for my application My application has a theme based on some parameter passed to the component The theme changes the look n feel of the app by adding some classes to the elements I want to generate snapshots for the components for both the themes But I do not want to duplicate the code or keep two separate test spec files for this Is there a way I can generate snapshot files based on what theme is passed with just one spec file Expected Behaviour If two theme values are dark and light One Component spec js file should generate Component dark spec js snap or Component light spec js snap based on the theme passed This way I can have separate separate snapshots based on theme with just one source spec file,,gaearon,2017-08-09 06:54:24,2017-08-09 07:36:30
IS,Can we change the React creatClass property of getDefaultProps from a callback to an Object just like the propTypes,I think the propTypes is an Object but the getDefaultProps is a callback is very uncomfortable Can we change it if not can i know why,,gaearon,2017-08-09 09:25:17,2017-08-09 11:59:54
IS,onMouseLeave strange behaver when has disabled child element,Bug report Here is the demo When div contains an disabled button React can trigger onMouseEnter correctly in div but onMouseLeave not trigger when mouse on the button and move down out of the div I tried 15 4 0 15 6 1 in Chrome has the issue Not sure whether it appear before that,,"zombieJ,zombieJ,jquense,aweary,jquense",2017-08-07 08:38:09,2017-08-09 13:12:19
IS,Click handler can get called twice in non prod mode,I think this is a bug that only happens in non prod mode I noticed this using the react dropzone library but I think I found a simple use case to reproduce the problem If you check out the fiddle you can see that click handler is called twice even though the element is only clicked once Here is an example showing it working and not working I believe it has something to do with the outer div is click listener and this chunk of code I tested this on Chrome Mac I have also seen this behavior on React 14 8,,"edvinerikson,Andarist,aweary,Andarist,aweary,Andarist,Andarist",2016-12-12 21:31:17,2017-08-09 14:21:08
PR,Add test for duplicate events with nested dispatch,Still have tests to write but they should be pretty straightforward after PR aproval Also had no idea where I should put once utility function so its place in the PR for now is just a temporary This PR is just a proposal of a fix the thing I have come with to tackle this problem I'm open to change the code appropriately if somebody comes up with the better idea how to solve this cc,,"Andarist,aweary,Andarist,gaearon,Andarist,gaearon,aweary,gaearon,Andarist,aweary,Andarist,Andarist,Andarist,aweary,gaearon,Andarist,gaearon,Andarist,Andarist,Andarist,aweary,Andarist,aweary,Andarist,Andarist,aweary,Andarist",2016-12-13 16:45:10,2017-08-09 14:30:09
IS,Broken date inputs test DOM fixture,1 Open Date Inputs test harness 3000 date inputs 1 Click the little x to clear the input RangeError Invalid time value src components fixtures date inputs switch date test case js 43 This fixture is broken for 15 6 1 and 16 beta 3,,"bvaughn,gaearon,bvaughn,aweary,bvaughn",2017-08-08 16:05:28,2017-08-09 15:52:27
PR,Set date input fixture to initial value when reset,Resolves 10408,,"aweary,nhunzaker",2017-08-08 17:05:07,2017-08-09 15:52:27
PR,Moved around NPM package dependencies,As stated in 10335 this PR adds package json and yarn lock files to the scripts bench directory and moves around dependencies as per issue,,trueadm,2017-08-09 17:36:16,2017-08-09 17:47:52
IS,Move benchmark dependencies out of main package json,We should not require nodegit or lighthouse for working on React Let is move them to a scripts bench package json or similar so that they don t take the time and space on regular installs,,"gaearon,gaearon,trueadm",2017-08-01 00:06:02,2017-08-09 17:48:04
PR,Make createFiber use a constructor object rather than an object literal object,In benchmarking it shows that with the recent changes to V8 Ignition TurboFan constructors are now faster than object literals plain old JavaScript objects when creating fibers,,"trueadm,acdlite,sebmarkbage,sebmarkbage,trueadm,trueadm,sophiebits,trueadm,trueadm,sophiebits,trueadm,sophiebits,trueadm,sophiebits",2017-04-07 21:43:41,2017-08-09 22:40:35
PR,Wrap one more warning in a DEV block,For RN,,"sophiebits,bvaughn,sophiebits",2017-08-10 01:18:40,2017-08-10 02:19:08
PR,Use Closure Compiler for UMD Node bundles instead of Uglify,This change introduces Google Closure Compiler JS version in the build pipeline instead of Uglify for the minifcation process for UMD Node bundles Locally I'm seeing positive bundle size wins screen shot 2017 07 20 at 17 15 51 We need to thoroughly test these new builds before this can be merged however,,"trueadm,gaearon,gaearon,trueadm,gaearon,trueadm,gaearon,trueadm,flarnie,sophiebits,gaearon,trueadm,sophiebits,trueadm,gaearon,trueadm",2017-07-20 16:19:07,2017-08-10 10:12:30
PR,Wrap warning calls in a DEV check for RN builds too,Building on the work done in 10361 This PR fixes an errant warning left in the React Native build by auto wrapping all calls to warning in an if DEV check I also wrapped several warning imports and a call or two in DEV checks in the source just by looking at which ones were removed from the prod bundle after adding this check I also removed a useless variable allTypesByEventName and loop from src renderers native ReactNativeBridgeEventPlugin Before and after diffs below build react native ReactNativeStack prod js,,bvaughn,2017-08-10 02:08:15,2017-08-10 15:41:52
PR,Rename renderToStream to renderToNodeStream,This PR is a fix for 10388 It renames renderToStream to renderToNodeStream and renderToStaticStream to renderToStaticNodeStream It is basically just a find and replace job Note that the fiber test results changed a lot but I'm pretty sure after running them that they were not up to date in master so I'm not worrying about that Also we should also merge the documentation pages reference react dom server md and reference react dom node stream md before release but I left that out of this PR as it is independent of this change,,aickin,2017-08-09 22:07:40,2017-08-10 19:23:01
IS,Consider renaming renderToStream to renderToNodeStream,With the checkin of 10362 the code to render to a stream now looks like This is great I am however a little concerned about taking the word node out of the mix because I'm thinking that we may eventually want to render to browser streams which are a really neat feature that can be used in concert with service worker side rendering I would propose renaming renderToStream to renderToNodeStream and renderToStaticStream to renderToStaticNodeStream This would give room for renderToBrowserStream in the future If I make a PR on this would it have a chance of being accepted cc,,"aickin,gaearon,bjrmatos,gaearon,bjrmatos,aickin,gaearon,sebmarkbage,aickin,aweary,sophiebits,aweary,aickin,aickin",2017-08-04 18:16:30,2017-08-10 19:23:42
IS,I Love react in the way how beautiful it is designed,,,nhunzaker,2017-08-11 10:36:23,2017-08-11 10:38:04
PR,Find callsites that would call toString if we pass attributes through,The downside of merging is that we don t know if we have internal callsites that would break because of toString once we start passing attributes through This is not a problem in open source where we ve had a warning for a long time I propose we add this warning now and let it live for a few days Then look at the top callsites and how many there are and if they are benign or if calling toString could cause issues,,"gaearon,gaearon,flarnie,gaearon,sophiebits,nhunzaker,sebmarkbage,nhunzaker,flarnie,flarnie,flarnie,nhunzaker,flarnie,flarnie,flarnie",2017-08-09 00:43:03,2017-08-11 18:07:42
IS,componentDidCatch does not work in React 16 is renderToString,I tried out a simple test case for the new componentDidCatch error handling code in React 16 SSR with the following code As far as I can tell this code should not throw but should rather output h1 Something went wrong h1 I'm afraid that maybe we did not add componentDidCatch to the new server renderer,,"aickin,sophiebits,sebmarkbage,aickin",2017-08-11 19:50:58,2017-08-11 19:59:04
PR,Update version on dom fixtures,And yarn lock file Avoids a dependency that my proxy wo not let me install,,"sebmarkbage,acdlite",2017-08-11 23:32:12,2017-08-12 00:01:38
PR,Fixes 10443,,,"acdlite,acdlite,acdlite,gaearon",2017-08-12 00:36:03,2017-08-12 01:08:00
IS,Error in 16 beta undefined is not a function evaluating 'owner getName ',This line is wrong in Fiber and crashes L79 It should be changed to use getComponentName owner,,"sophiebits,acdlite,sophiebits,acdlite",2017-08-11 20:18:45,2017-08-12 01:08:21
IS,select is onChange event fires with incorrect selectedIndex value,Do you want to request a feature or report a bug Report a bug What is the current behavior select element is onChange event is fired with incorrect selectedIndex and value like it has not actually changed This happens only if the element has been rendered under another React DOM root see the example in the link below If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem What is the expected behavior onChange callback handlers should receive events with those values that user has actually selected In the test case above for example when choosing Two I expect to have the following console output Change event selectedIndex 1 value 2 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The bug is observed with react and react dom packages version 16 0 0 beta 3 Latest stable version 15 6 1 works just fine,,"sophiebits,sebmarkbage,sebmarkbage",2017-08-09 07:12:14,2017-08-12 02:02:11
PR,Use the virtual target for change events to avoid restoring controlled state on the real target,Fixes 10420 The problem is that we try to restore the controlled value after the oninput event So we have restored it to its previous value by the time we fire onChange So the controlling component does not have a chance to update it This ensures that we restore controlled state on the wrapper instead of the real target which is a noop,,"sebmarkbage,nhunzaker,sebmarkbage,sebmarkbage,jquense,jquense,sebmarkbage,jquense,sebmarkbage,sebmarkbage,sebmarkbage,jquense,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage",2017-08-11 21:41:01,2017-08-12 02:02:11
PR,Add deprecation moved warnings to all 'React addons ' utilities,Last PR to land for 15 6RC I would love help improving wording of the warnings I will review this in the morning too what is the change Every utility accessible via 'React addons ' except 'Perf' will be wrapped such that accessing it will trigger an informative warning why make this change This should prompt folks to upgrade their code so that they can easily update to React v16 0 where these utilities will either be moved or deprecated test plan I wrote a test and ran existing tests issue,,"flarnie,nhunzaker,flarnie,flarnie,flarnie",2017-05-24 01:46:28,2017-08-12 20:55:19
IS,Show a better message if React is not loaded,Currently if React is not loaded ReactDOM shows this img width 664 alt screen shot 2017 08 08 at 3 36 52 pm src We should throw a nicer error message in the entry point I think,,"gaearon,aweary,gaearon,aweary,gaearon",2017-08-08 14:37:53,2017-08-13 18:16:14
PR,Add explicit invariant when ReactDOM is loaded without React,Resolves 10406,,"aweary,aweary,gaearon,gaearon,gaearon",2017-08-12 18:03:03,2017-08-13 18:16:14
PR,Warn when nesting 15 subtree inside 16,,,"sophiebits,gaearon,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,sebmarkbage,flarnie,gaearon,sebmarkbage,sophiebits,sebmarkbage,sophiebits,sebmarkbage,flarnie,sophiebits,flarnie",2017-08-10 23:23:42,2017-08-13 23:03:32
IS,Server side rendering Warning linearGradient is using uppercase HTML Always use lowercase HTML tags in React,Do you want to request a feature or report a bug Report a bug What is the current behavior Whenever I render SVG elements that are camel cased e g linearGradient on the server side I get the following warning What is the expected behavior Warnings should be consistent with the client side rendering if possible In this case I would expect no warning since using camel cased SVG element names is pretty standard For client side rendering there seems to be a check for the current namespace L344 L352 For server side rendering there seems to be currently no such check in place L537 L544 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Hitting this on 16 0 0 beta 5 Was not hitting it on 15 6 1 the version I was previously on Thanks in advance,,gaearon,2017-08-09 00:32:12,2017-08-13 23:17:46
PR,Do not warn about casing in SSR for non HTML NS,Fixes 10415,,"sophiebits,flarnie,flarnie,sophiebits",2017-08-13 17:59:50,2017-08-13 23:17:46
IS,Doc handling events binding event to class,Tutorial does not do binding yet this is written You have to be careful about the meaning of this in JSX callbacks In JavaScript class methods are not bound by default If you forget to bind this handleClick and pass it to onClick this will be undefined when the function is actually called Additionally the example has comments and code pertaining to having to bind,,,2017-08-13 23:59:18,2017-08-14 01:47:53
IS,dist react dom server min js bug,I think it is a bug when I use react dom server like this TypeError Cannot read property 'ReactCurrentOwner' of undefined occurs I find the reason is react dom dist react dom server min js requires react like 'module exports e require react ' it shoule be 'module exports e require react dist react min js ' I try it and works react version 15 6 1 react dom version 15 6 1,,"gaearon,gaearon",2017-08-14 07:29:09,2017-08-14 15:43:31
PR,Better messaging for componentDidCatch cross origin errors,The prior message was a bit wordy and did not cover all cases like the one we discovered while researching 10441 We can use the new URL to explain background info on the DEV mode technique we are using in addition to common fixes eg crossorigin attribute for CDN scripts and Webpack devtools settings Putting this information behind a link will allow us to more easily edit it in the future as common causes for this issue change Resolves 10441 Note I have not yet setup the fb me react crossorigin error shortcut or written the content that will live there It is been a long day and I'm taking off Technically we can merge this at any time to unblock the RC and just follow up with the link soon Or I will add it on Monday if we are not in a hurry,,"bvaughn,acdlite,bvaughn,bvaughn",2017-08-12 00:20:09,2017-08-14 18:05:30
PR,Added Advanced Guides page about cross origin Errros,Follow up for 10447 resolves 10441 Follow up items Cherry pick this commit into the 15 stable branch to update the current docs site Setup the fb me react crossorigin error redirect to facebook github io react docs cross origin errors html Preview in the new docs site screen shot 2017 08 14 at 11 23 13 am,,"bvaughn,gaearon,gaearon,bvaughn,bvaughn,sophiebits,sophiebits,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn",2017-08-14 18:25:13,2017-08-14 20:43:25
PR,Creating element with ref in constructor does not throw error in dev mode 9635,Currently just a failing test to show that this issue does exist Next step is to fix the issue See issue 9635,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-06-22 21:12:19,2017-08-15 09:21:50
IS,sName,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-08-15 15:28:09,2017-08-15 15:30:20
PR,Custom Attributes Scenario 2 Write badly cased attributes Remove most of whitelist,Follow up work from This PR implements scenario 2 for custom attributes as described in issuecomment 320539489 1 Badly cased attribute names still write to the DOM 2 Cases like classname htmlfor and arabicform do not alias They write as classname htmlfor and arabicform 3 All attribute whitelist entries that enforce a specific casing have been removed 4 The ARIA whitelist has been moved to a developer only enforcement but the logic is the same as master Build size react dom production min js 109 01kb 34 40kb gz img width 994 alt screen shot 2017 08 07 at 10 33 16 am src,,"nhunzaker,gaearon,aweary,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,aweary,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,jquense,gaearon,aweary,aweary,gaearon,nhunzaker,sophiebits,sebmarkbage,sebmarkbage,sophiebits,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,gaearon,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,aweary,nhunzaker,trueadm,nhunzaker,gaearon,trueadm,nhunzaker,nhunzaker,flarnie,nhunzaker,gaearon,sebmarkbage,gaearon,sebmarkbage,sophiebits,sophiebits,nhunzaker,gaearon",2017-08-04 17:20:48,2017-08-15 16:00:45
IS,Looking for clarification Deprecation warnings for react dom factories,Hello It looks to me that the use of react dom factories will be mandatory for 16 x versions for those that use React DOM is this information correct Also I'm wondering if we are going to have deprecation warnings for the use of React DOM on the 15 x x versions Thanks a lot,,jquense,2017-08-15 16:01:46,2017-08-15 16:04:27
PR,Cased data attributes should properly diff on server hydration,gaearon noticed this in my custom attribute PR issuecomment 320454976 Attribute names are reported back from the DOM as lower case If a cased data attribute is given the diffing process gets tripped up because a propKey of data myAttribute reports back as data myattribute This results in an error along the lines of The diffing process compares the component props to a list of attributes directly from the DOM element L929 L932 The DOM list always has lower case names The React property object uses whatever was given to the component So there is an inconsistency between the data myAttribute React prop and the data myattribute from the DOM This is not a problem for attributes in the whitelist When properties are injected into DOMProperties properties React adds an attributeName that is the lower case version of the React prop key name This attribute name is what gets removed from the list of diffed props Also it looks like cased data attributes are technically supported in React 15 6 1 The casing goes away when the attribute is put into the DOM,,"nhunzaker,nhunzaker,gaearon,syranide,gaearon,syranide,nhunzaker,nhunzaker,nhunzaker,nhunzaker",2017-08-05 20:22:51,2017-08-16 00:53:58
PR,Use only public API in CSSProperty test,As a part of 9955,,"gaearon,gaearon,gaearon",2017-08-10 14:53:56,2017-08-16 08:09:04
PR,Add ReactFoo 2017 to list of upcoming conferences,A conference on React and React Native in Bangalore Website,,"nhunzaker,gaearon,nhunzaker,gaearon",2017-08-16 10:23:22,2017-08-16 12:10:29
IS,react dom min js on unpkg CDN is returning 404,Do you want to request a feature or report a bug Bug What is the current behavior Requests to dist react dom min js are returning 404 Not Found after redirect to 6 1 dist react dom min js If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template curl L dist react dom min js Cannot find file dist react dom min js in package react dom 15 6 1 What is the expected behavior Minimized version of ReactDOM and 200 Success Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 15 6 1 Unpkg does not seem to have a status page Also the unminified version 15 6 1 dist react dom js returns a 503 with the message Timeout of 25 seconds exceeded this response occurs in less than a second though,,"gaearon,gaearon",2017-08-16 08:47:55,2017-08-16 13:58:06
IS,React website is code textareas are broken,Do you want to request a feature or report a bug Bug What is the current behavior The code textarea s on React is website seem to be broken Some inspection reveals that the unpkg com URL being used by the website 5 15 2 is 404ing If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template 1 Visit the React website What is the expected behavior The code inputs function as expected,,"gaearon,gaearon",2017-08-16 05:26:52,2017-08-16 13:58:52
PR,Custom attribute follow up,Follow up from 10385 Adds backticks around props in ReactDOMInvalidARIAHook This is consistent with ReactUnknownDOMPropertyHook Fixes test names in server integration tests to reflect the change in behavior of custom attributes,,"nhunzaker,gaearon",2017-08-16 12:42:54,2017-08-16 14:07:08
PR,Throw error to warn of mistaken loading of prod dev React bundles,what is the change Adds an error indicating a gotcha where users end up loading both the 'prod' and wouldev' bundles in production Credit to for coming up with a clever way to check for this I mainly just did the manual testing and fixed a couple of typos in his idea I would like to do a follow up PR to add a link and a page explaining this issue more and suggesting how to fix it Would folks support that why make this change We want to warn for an unfortunate gotcha for the following situation 1 Wanting to shrink their JS bundle an engineer runs it through 'uglifyjs' or some other minifier They assume this will also do dead code elimination but the 'prod' and wouldev' checks are not envified yet and dev only code does not get removed 2 Then they run it through browserify is 'envify' or some other tool to change all calls to 'process env NODE ENV' to production This makes their code ready to ship except the wouldev' only dead code is still in the bundle Their bundle is twice as large as it needs to be due to the dead code This was a problem with the old build system before but with our new build system output it is possible to detect and throw an informative error in this case test plan 1 run the build in react as usual yarn build 2 manually run 'uglifyjs mt' on 'build packages react index js' to simulate mistakenly minifying React before env variables are resolved which skips dead code elimination 3 run the fixtures build cd fixtures packaging node build all js serve 4 Visit just the production browserify fixture 5000 fixtures packaging browserify prod 5 You should see the error thrown indicating this problem has occurred img width 1679 alt screen shot 2017 08 11 at 4 07 44 pm src 6 Do the above steps with NO uglifyjs step and verify that no error is thrown When there is no minification applied we do not assume that this mix up has occurred img width 1679 alt screen shot 2017 08 11 at 4 10 56 pm src issue fixes 9589,,"flarnie,gaearon,gaearon,flarnie,gaearon,gaearon,flarnie,flarnie,gaearon,acdlite,flarnie,flarnie,flarnie,acdlite,acdlite,flarnie,flarnie,flarnie,gaearon,flarnie,gaearon,gaearon,flarnie,flarnie",2017-08-11 23:34:04,2017-08-16 18:44:31
PR,Replace object getter with Object defineProperty in TestRenderer,what is the change Replaces an Object Getter 1 with Object defineProperty 1 why make this change Our internal build system does not support object getters test plan We should do follow up work to ensure that this does not come up again we can not commit code which uses object getters issue No issue opened yet,,"flarnie,bvaughn,flarnie,bvaughn,sebmarkbage,bvaughn,sebmarkbage,flarnie,bvaughn,flarnie",2017-08-16 18:42:49,2017-08-17 14:23:17
IS,how to solve ReactDom is not defined react with webpack,Download the React DevTools and use an HTTP server instead of a file URL for a better development experience app js bd9c 6 Uncaught ReferenceError ReactDOM is not defined at eval app js bd9c 6 at Object anonymous main bundle js 645 at webpack require main bundle js 20 at main bundle js 63 at main bundle js 66 anonymous app js bd9c 6 anonymous main bundle js 645 webpack require main bundle js 20 anonymous main bundle js 63 anonymous main bundle js 66 react 15 6 1 react dom 15 6 1,,"jquense,jquense",2017-08-17 16:52:27,2017-08-17 17:24:13
PR,Add invariant check for composite components to event simulation test utils,Per conversation from 10167 I added a test for this invariant that was mentioned in the 16 umbrella after an issue was brought up Test event simulation should only be used with DOM nodes and DOM components,,"jfo84,gaearon,gaearon,gaearon,jfo84,gaearon,gaearon,gaearon,gaearon,jfo84,jfo84,gaearon",2017-08-08 20:42:26,2017-08-17 18:23:37
PR,Add an invariant to ReactTestUtilsEntry makeSimulator 10165,Simulate methods support only passing DOM instances or nodes Throw early if a composite component instance is passed Closes,,"gaearon,jfo84,gaearon",2017-07-13 09:23:12,2017-08-17 18:24:21
IS,TestUtils Simulate event compositeInstance should throw early,With the help of node debug I found this bug Using React React DOM v15 5 4 both here,,"aweary,gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-12 23:06:42,2017-08-17 18:24:46
IS,Window Object for Virtual Dom,Hi There I have a question Can I use Javascript window object in jsx file Is it DOM Manipulation Is it changing the virtual DOM and what is the best place to use Window object in ES6 jsx file,,jquense,2017-08-17 16:21:00,2017-08-17 18:52:17
PR,Reset instance vars before calling commit phase lifecycles,Fixes an issue where if a component throws its instance variables are not reset before componentWillUnmount is called See for an illustration To protect against issues like this we should always set this props and this state right before calling a lifecycle method as if they were explicit arguments,,"acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,sebmarkbage,acdlite",2017-08-17 20:20:23,2017-08-17 20:52:38
IS,Circular reference in bound method,Do you want to request a feature or report a bug Unclear but I lean towards bug What is the current behavior Certain bound functions create a circular reference which makes traversing objects problematic If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I'm not sure how to produce a small test case for this issue What is the expected behavior Unsure Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 alpha 12 React Native 0 46 4 Jest 20 0 4 This is happening in a test when I attempt to use jsonpath to query the results of renderer create ListItem toJSON As you can see from that link I have attempted to address the circular reference in the jsonpath library but the problem persists I have managed to track this down to a circular property defined in create react class which is apparently still used by some native components Here is that snippet of code That is because the component value contains the circular reference because all components themselves have a reference to this reactBoundContext value So this becomes a problem when traversing the object tree based on its keys as the reactBoundContext key is enumerated You can see my attempt at avoiding circular references here However unfortunately it still is not addressing my issue with this particular property Perhaps my fix is naive or otherwise missing a case that I have yet to reproduce in isolation Thank you so much for all your hard work and attention to this particularly gritty issue I must apologize if anything I have said does not make clear sense I am just beginning to get familiar with JS development,,"gaearon,gaearon",2017-08-17 13:10:36,2017-08-17 22:02:38
PR,Revert Remove old IE polyfill code,what is the change This reverts Which was part of why make this change When trying to sync the latest React with FB is codebase we had failing integration tests It looks like they are running with an old version of Chrome and there is something related to file upload that fails when these polyfills are missing For now we would like to revert this to unblock syncing but it is worth revisiting this change to try and add some polyfill for FB and remove it from React or to fix whatever the specific issue was with our file upload error test plan yarn test and also built and played with the dom and packaging fixtures screen shot 2017 08 17 at 4 00 52 pm screen shot 2017 08 17 at 3 39 09 pm screen shot 2017 08 17 at 3 41 05 pm screen shot 2017 08 17 at 3 41 29 pm screen shot 2017 08 17 at 3 55 49 pm,,"flarnie,jquense,flarnie,jquense,flarnie,jquense,sophiebits",2017-08-17 23:05:20,2017-08-17 23:19:42
IS,Object spreads with nested children gives unwanted key error,I believe the following case should not result with a key error So I would like to know if this is correct behaviour or a bug I have produced the following case Render a component which spreads attributes on it is top element with children The children are nested jsx children and at least one child has an object spread This situation produces the following key error Warning Each child in an array or iterator should have a unique key prop Check the render method of Component It was passed a child from some parent component See for more information Reproduction I have added the most basic code to reproduce the issue in a JSFiddle However I do not see the key error being displayed on JSFiddle 1 We have our component which renders it is children and spreads attributes on the top element 2 We render Component with nested children Of which at least one has an object spread Variations When the first nested child given to Component is a component and the Component receives an object spread the key warning is also being thrown When the object spread is removed from div inside Component the key warning is not thrown When the object spread is remove from the first nested child p given to Component the key warning is not thrown Expectation I would not expect key errors because there are no arrays of children being rendered Background Build with react 15 6 1 and react dom 15 6 1 I have started getting this problem since I started using airbnb react with styles with aphrodite for styling It generates objects with possibly both style and className properties which can be spread on to JSX elements However the issue persists when react with styles is not used The behaviour seems to come from react Is this correct behaviour,,"aweary,gaearon,gaearon",2017-08-17 13:24:51,2017-08-18 08:25:57
PR,Removed ReactNativeFeatureFlag shim from RN bundle,This shim file added complexity to FB is internal build configuration since it provided a the same module name as the real feature flag switch Because of this the shim was recently removed internally This PR removes it from GitHub as well so it wo not be re added with the next sync ReactNativeFeatureFlags is still configured to be an external although strictly speaking at this point we could remove that ability since we fork before even requiring the specific renderer implementation All this will go away soon anyway when we delete stack but it seemed worth doing now in case we did more syncs between now and then,,bvaughn,2017-08-16 18:21:08,2017-08-18 15:26:11
IS,Image loading failure,,,aweary,2017-08-18 02:44:44,2017-08-18 16:22:34
IS,Input element that type is'number' does not meet expectations,For Example In Chrome you cannot type a non number character in Safari And Firefox You can type non number character but in this moment value of Change is empty string How can solve this problem,,"aweary,aweary",2017-08-18 07:27:53,2017-08-18 16:24:12
IS,Consider re licensing to AL v2 0 as RocksDB has just done,Hi there The Apache Software Foundation Legal Affairs Committee has announced 1 that the so called 'Facebook BSD Patents License' is no longer allowed to be used as a direct dependency in Apache projects This has lead to a lot of upset and frustration in the Apache community especially from projects requiring similarly licensed code as direct dependencies the chief of these being RocksDB However we the Apache Software Foundation have just received word that RocksDB will be re licensing their code under the dual Apache License v2 0 and GPL 2 licenses 2 As a user of React JS in an ASF top level project Apache CouchDB please consider re licensing React JS under similar terms Otherwise many ASF projects such as our own will have to stop relying on and building with React A previous bug 9760 suggested I mention in this issue when asking licensing questions so I'm doing so Thank you kindly for your consideration 1 comment tabpanel comment 16088663 2 comment tabpanel comment 16088730,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,alexeyraspopov,bjrmatos,sophiebits,sophiebits,sebmarkbage,gaearon,gaearon",2017-07-15 22:03:58,2017-08-19 00:14:20
IS,Keep discussion about patent clause going,Biggest issue about patent clause was closed with a statement I will close this out for now but let is keep the broader discussion going Yet there is no link or suggestion where such discussion might take place This puts users of React in a position of weakness since there is no central place to articulate their issues problems with a clause I thus would like to ask to either always keep one issue about the topic open so that people can speak up or provide maintained link to the discussion thread on some other platform I understand that this is not a best place for such discussions but topic is very important for users and businesses they work on so not having single place to continue discussion can be only interpreted as unfortunately silencing tactic Edit As far as I understand you can actually close issue but still leave it open for adding comments Yet adding comments in issue about patent clause was turned off could you elaborate why this was necessary since you leave comments option on in all other closed issues and how this relates to let is keep the broader discussion going,,,2017-08-20 08:07:11,2017-08-20 09:00:51
IS,Patent Issue has been raised on the patent of React,Hey guys First of all thank you for such a great framework Just started learning react and it is mindblowing comparing to frameworks like maybe Angular But This is been raised yesterday raulk if youre a startup you should not use react reflecting on the bsd patents license b049d4a67dd2 BSD patents essentially means that the code is open for everyone to see and use but it s always copyrighted by Facebook And they grant you a patent license as long as you re nice to them by never suing Facebook for patent infringement The instant you sue Facebook your patent rights for React and any other Facebook open source technology you happen to use are automatically revoked As far I can understand For example I started a startup maybe the next facebook if that makes sense I used React for the coding part for frontend development My startup got popular and it became the next competitor to facebook Somehow got a problem with Facebook Inc which doesnt have anything to do with react or open source for that matter and I sue facebook due to some reasons which even dont have to do anything with the codes My License for React is REVOKED and I can not use React and I am in trouble and here is one more example this time from the post Why should avoid React if you re a startup If you re building a startup I m assuming you and your investors are hoping to land a million dollar worth exit at some point right You want to keep your door open to all acquirers especially the large ones Apple Microsoft Google Amazon etc These companies likely hold patent arsenals against Facebook and even if they didn t they don t want to surrender their rights to sue Facebook if the time came If your product is built on React acquiring you means losing these rights and this is something they are probably not prepared to do,,"gaearon,zpao,gaearon",2017-08-20 18:11:33,2017-08-20 18:40:12
IS,React Component is not rendering in IE 11 or below but rendering properly in Chrome and Mozilla,React Components is not rendering in IE 11 or below but rendering properly in Chrome and Mozilla When i am using IE 11 then showing error Access is denied on IE browser for browser min js in react js image,,"gaearon,gaearon",2017-08-21 06:44:00,2017-08-21 07:23:43
PR,Add renderer id to react devtools injection,Helps to resolve react devtools 700 reporting multiple react dom copies I added id argument to detect react dom without code guessing,,"chisler,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,chisler,chisler,gaearon,chisler,gaearon",2017-08-17 11:58:39,2017-08-21 10:10:45
IS,NPM Packages could able to use it in react native Project,I am new to react native project I have created a new react native project areact native init sample' after that I tried adding NPM package 'npm install save is reachable' after installation i tried to run react native project areact native run ios' I got error like Unable to resolve module 'os' I have followed those 3 steps mentioned on it but still I ma facing the same issue image React native version 0 47 1 cli 2 01 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-08-20 04:25:29,2017-08-21 11:01:22
IS,some issue between functional components and classical components,Problems between functional components and classical components detail code as follow jsbin console output part of Problem code you can also run this page in jsbin console output why classical component is not more feature than function component but this simple can not run and will report error please tell me where i am wrong whatever i am a newer,,aweary,2017-08-21 15:16:46,2017-08-21 15:37:21
IS,Packaging JS is so big,There are 2MB for webpack PackagedJavascript which original Javascript only contain 100KB I have no idea why do the Packaging JS is so big here is the package json and webpack config js I'm new for webpack Could you give a routine configuration,,"aweary,gaearon",2017-08-21 12:30:07,2017-08-21 15:39:05
IS,Element Variables does not work in Codepen,Do you want to request a feature or report a bug bug What is the current behavior the code does not work If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Displaying result Nothing showed up Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Browser Version 60 0 3112 101 Official Build 64 bit OS Ubuntu 16 04LTS React The Codepen uses as follows,,"gaearon,aweary",2017-08-18 02:46:20,2017-08-21 15:39:35
PR,Add missing single word attributes to property warning list,I never added the all lowercase words to the list of attribute casings to warn about caught this when you pass something like SiZe This is a known HTML attribute We need to warn users that they should specify this property as size Basically I just ran this over the 15 6 1 whitelist And pasted it over to the list,,"nhunzaker,gaearon,nhunzaker,gaearon,sophiebits,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,flarnie",2017-08-18 21:14:14,2017-08-21 16:27:09
PR,Revert Use the virtual target for change events to avoid restoring controlled state on the real target 10444,This reverts the meaningful src non test part of commit 3bc64327f01a2c9fd1529934ebf4a484c55d7e94 since we have reverted the commit it depended on in 18083a8a7305483e219592914ef52729907a4368 I do not fully understand the negative implications of leaving this unreverted but it sounds like consensus is that it is safer to revert I left the new fixture and verified it works correctly in Chrome 62 Mac as well as the jest tests passing,,"sophiebits,flarnie,sophiebits,flarnie,sophiebits,sophiebits",2017-08-21 22:36:13,2017-08-22 00:51:27
IS,Confuse on ReactDOMServer doc,If you load React from a script tag these top level APIs are available on the ReactDOMServer global What does this mean Why can we use script tag in node server,,gaearon,2017-08-22 02:53:44,2017-08-22 07:06:12
PR,RN fiber avoids the overhead of bridge calls if there is no update,This is an expensive no op for Android and causes an unnecessary view invalidation for certain components eg RCTTextInput on iOS This was a perf regression with RN fiber RN stack already handled this case L2454,,"bvaughn,bvaughn",2017-08-21 22:54:44,2017-08-22 20:31:47
IS,Rendering elements inside dynamic parent without child remounting,Is it possible to change element is parent so element will be just moved from current parent to new Using this code when ParentRenderer is children is changed the parent is not re rendered This is perfect But if we change parent actually it is being changed by new children because each children is componentWillMount is updating store and sets required parent will happen 1 old children unmounting new children mounting 2 old parent unmounting current children unmounting 3 new parent mounting current children mounting The simplest way to solve this and the only I see change children and parent in the same time But I would like to know is there any other options because changing children and parent in the same time is breaking my app and also there is lack of information in the internet about this or similar cases or my googling skills are broken,,gaearon,2017-08-23 09:51:03,2017-08-23 12:12:51
IS,Warn early if event listener is not a function,We used to throw if event listener is not a function in Stack img width 565 alt screen shot 2017 08 08 at 3 41 08 pm src Fiber silently ignores this I think we should throw This would let us add support for objects e g for passive listener configuration if we want to in a minor rather than a major,,"gaearon,aweary,gaearon,aweary,gaearon,gaearon,sebmarkbage,gaearon,flarnie,aweary",2017-08-08 14:43:25,2017-08-23 12:38:49
PR,Warn early for non functional event listeners,Resolves 10407,,"aweary,gaearon,gaearon,gaearon,aweary,aweary,gaearon,gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon,gaearon,aweary,sebmarkbage",2017-08-13 19:07:11,2017-08-23 12:38:49
PR,RN findNodeHandle no longer adds props directly to read only owner,Resolves 10518 Builds on top of 10511 to avoid causing merge conflicts for 10511 or 10517 img width 487 alt screen shot 2017 08 23 at 8 16 48 am src,,bvaughn,2017-08-23 15:19:10,2017-08-23 18:30:08
IS,Fiber Calling ReactNative findNodeHandle in render crashes in DEV,Found this while working on See issuecomment 324292856 for more details img width 511 alt screen shot 2017 08 23 at 1 20 31 pm src img width 432 alt screen shot 2017 08 23 at 1 20 56 pm src Now I know this has been fixed in but that s not the whole story Even if we fixed the Stack assuming getName call we still can not put arbitrary fields on a fiber img width 432 alt screen shot 2017 08 23 at 1 21 55 pm src For the reference this L37 L40 is how we work around the problem in ReactDOM,,"gaearon,bvaughn",2017-08-23 12:23:28,2017-08-23 18:30:35
PR,RN findNodeHandle no longer adds props directly to read only owner,Related to PR facebook react pull 10520,,bvaughn,2017-08-23 18:33:18,2017-08-23 18:33:40
IS,BUG Argument 1 of EventTarget dispatchEvent does not implement interface Event,I have applyed a event onMouseDown for a element but on Firefox 54 0 1 64 bit OSx I catch this error title I did a debug and see that it occurs at ReactErrorUtils invokeGuardedCallback function when execute the code fakeNode dispatchEvent evt React 15 6 1 ReactDOM 15 6 1 OS Details OS X Yousemite version 10 10 5 14F2009 Processor 2 8 GHz Intel Core i7 Memory 16 GB 1600 MHz DDR3 Graphics Intel Iris Pro 1536 MB,,,2017-08-23 20:46:12,2017-08-23 21:20:34
PR,Delete ReactNativeStack,For now I left fiber in the names of several modules because I wanted to reduce the amount of churn introduced with this PR This change has minimal impact on the fiber flat bundle see diff in comment below issuecomment 324175037 Commits are vaguely atomic Renames are isolated at least and I are tagged on a couple of tangentially related TODO items in the repo still but I think they are probably better done as smaller follow up items Synced to fbsource ran Flow Jest and did a quick smoke test with Ads Manager,,"bvaughn,gaearon,flarnie,bvaughn,gaearon,bvaughn,bvaughn,sebmarkbage",2017-08-22 22:40:37,2017-08-23 22:53:55
PR,Put warnForInvalidEventListener call behind nextProp check,Thanks for pointing this out commitcomment 23835350,,aweary,2017-08-24 04:13:21,2017-08-24 04:34:13
IS,with redux,Objects are not valid as a React child found object with keys counter If you meant to render a collection of children use an array instead or wrap the object using createFragment object from the React add ons Check the render method of Counter,,jquense,2017-08-24 17:08:43,2017-08-24 17:20:09
PR,Enable opt in to async mode,When the feature flag enableAsyncSubtreeAPI is true React unstable AsyncComponent creates an async subtree When it is false it behaves like a normal sync React component We use this flag at Facebook as a fail safe so if we ship an async bug we can set the flag to false and revert back to sync mode For open source we should enable the feature flag so people can start experimenting with async before it is stable,,acdlite,2017-08-24 17:23:17,2017-08-24 17:54:04
IS,React js with asp net core 2 0,Hello could anyone link a good template to start hacking with react asp net 2 0 I am interested in jsx no tsx Thanks,,jquense,2017-08-25 13:30:20,2017-08-25 13:44:31
IS,inforamtion about internet with react,Hi How can I know about user internet conection with React js With native javascipt I can do this but how can i use this in react,,jquense,2017-08-25 12:42:14,2017-08-25 13:48:48
IS,React expects a global document object and this breaks parallel dom testing,Do you want to request a feature or report a bug Feature What is the current behavior React expectes document to be a global variable If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Run enzyme jest tests in parallel using a parallel test runner such as ava js together with jsdom or other node javascript dom implementations or headless browsers What is the expected behavior React should allow to pass a dom instance as constructor for initial render initialization Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 6 1 Windows x64,,"jquense,cpojer",2017-08-24 01:02:51,2017-08-25 14:19:30
PR,Removing unecessary assignment,Nit removing unnecessary assignment,,mitermayer,2017-08-24 04:34:07,2017-08-25 14:58:50
PR,Adding the correct argument name to documentation tag,Minor nits on documentation tags to make sure the function param names are matching the documentation tag param name,,mitermayer,2017-08-24 06:01:47,2017-08-25 16:15:47
IS,Descriptive error on null PropType,Do you want to request a feature or report a bug Feature What is the current behavior If I specify an invalid proptype Common mistakes are misspelling and boolean instead of bool I get this error I'm not the only one bothered by this What is the expected behavior A useful error message could be Failed prop type ComponentName prop type ' propName ' ' invalidPropType ' Available types link,,"jquense,aweary",2017-08-25 10:02:57,2017-08-25 16:33:04
PR,Add table of attribute behavior,There are many special cases of attributes that React may recognize and treat in different ways For each of these cases we must consider common mis capitalizations and alternative formats for the attribute name For all possible value types we need to verify that any changes between React 15 and 16 are intentional and understood This is an unpolished MVP of a fixture to compare the behavior between React 15 and 16 for every possible value type for each attribute name This will be useful for verifying and understanding the changed made in,,"acdlite,gaearon,gaearon,acdlite,gaearon,acdlite",2017-08-24 21:47:27,2017-08-25 17:03:31
PR,Polishing up the attribute table,Grouping these together because they are too small for a PR on their own x Wrap strings in quotes all other values in type param x monospace font family x Delete vestigial CRA files x Move to fixtures x Basic hover tooltip with extra info screen shot 2017 08 25 at 11 27 03 am,,"acdlite,flarnie,acdlite,acdlite",2017-08-25 17:25:10,2017-08-25 18:37:21
PR,attribute behavior Use development builds of React and ReactDOM,Enables warning detection Start up is noticeably slower but after that the perf is about the same screen shot 2017 08 25 at 2 19 31 pm,,acdlite,2017-08-25 21:20:09,2017-08-25 22:44:38
PR,Remove UMD builds from fixture directory,We copy from build on startup so we can stop tracking these,,acdlite,2017-08-25 23:42:44,2017-08-26 00:17:32
PR,Use proper SVG tags for all SVG attributes,Use getSVGAttribute to read SVG attributes,,sebmarkbage,2017-08-25 22:35:38,2017-08-26 00:27:08
PR,attribute behavior Add alphabetical and rev alphabetical sorting,Continuing to improve the fixture for checking behavior of attributes on DOM components in React 15 and 16 Edit Just added the most important type of sorting which groups attributes that have the same behavior We now can sort three ways alphabetical reverse alphabetical grouped by behaviors,,"flarnie,gaearon",2017-08-25 22:51:59,2017-08-26 01:03:26
PR,Correction of Typo,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,jquense,2017-08-24 02:44:47,2017-08-26 16:13:11
IS,question using only nextState in shouldComponentUpdate,Consider the following shouldComponentUpdate nextProps nextState return this state value nextState value Here nextProps is wasted not used Is there a way to use shouldComponentUpdate so that only nextState comes as the only argument for shouldComponentUpdate,,jquense,2017-08-26 19:18:41,2017-08-26 21:57:04
PR,Fixing incorrect documentation tags,Minor nits fixing the documentation tags params based on the flow type annotation,,"mitermayer,flarnie,mitermayer,flarnie,gaearon,mitermayer",2017-08-24 06:10:36,2017-08-26 23:53:37
IS,What is the bad effect of react license for a company,Consider re licensing to AL v2 0 as RocksDB has just done has been locked so forgive me ask again here,,"gaearon,gaearon",2017-08-27 00:29:10,2017-08-27 00:57:38
IS,import external lib ERROR,How do I import a third party Javascript library into reactjs I have searched a lot of the internet and I do not think so I downloaded a free theme however the author makes custom settings in a js file and would like to include this file if some component effects do not work Thank you What is the current behavior What is the expected behavior,,jquense,2017-08-28 00:38:57,2017-08-28 01:19:07
IS,Is this bug,hi I use the react router dom npm yarn package In different routes i use some react component to show but then the route is changing my component is not re render Is it bug,,jquense,2017-08-28 12:24:56,2017-08-28 12:29:12
IS,TypeError Cannot read property ' currentElement' of null,Do you want to request a feature or report a bug bug version react 15 6 1 react dom 15 6 1 error,,gaearon,2017-08-28 03:17:03,2017-08-28 15:58:33
PR,Refactor ensureUpdateQueues to avoid returning a tuple,Refactor ensureUpdateQueues and insertUpdate addTopLevelUpdate Use queue alternateQueue instead of queue1 queue2,,"zombieJ,acdlite,zombieJ,zombieJ,acdlite,zombieJ,acdlite",2017-08-11 04:17:23,2017-08-28 18:04:28
PR,Updating param flow type definition,This is a follow up PR of Updating the flow param type since we have this check,,mitermayer,2017-08-28 17:23:17,2017-08-28 18:06:57
PR,attribute behavior Read SVG properties instead of attributes where applicable,Also canonicalize object results since these SVG properties are objects The canonicalized format is what we compare against This will cause unknown objects to show up as unchanged,,sebmarkbage,2017-08-26 03:28:53,2017-08-28 21:11:33
PR,Tweak attribute whitelist table,Move null and undefined to the end since they are almost always the same Make attribute names with changes appear bold,,gaearon,2017-08-28 21:08:35,2017-08-28 21:13:36
PR,Upgrade flow bin to 0 53 1,This keeps Flow versions in sync between GitHub and fbsource I noticed a Flow incompatibility between these 2 versions when syncing React Native this morning Commits are atomic to simplify the review process Resources Flow 53 release blog Flow React type definitions flow upgrade utility Flow React type reference,,"bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,flarnie,bvaughn",2017-08-22 20:50:03,2017-08-28 21:39:59
PR,Disable hasOwnProperty test in attribute table,It is crashing React 15 and causing other tests to report incorrect results Let is keep it off for now,,gaearon,2017-08-28 21:44:26,2017-08-28 21:46:39
PR,Better hashing for attribute table,This ensures we treat existence of errors warnings and default value as part of attribute hash,,gaearon,2017-08-28 22:36:29,2017-08-28 22:39:20
PR,Add ability to complete rows and store state in localStorage,,,acdlite,2017-08-28 23:06:31,2017-08-29 01:44:26
IS,Performance issue in react,I am currently using reactJS version 15 0 1 in my web application In one of the feature we need to keep pooling some information continuously after each 2 seconds So we receive the response which is List of some object 700 1000 items in list which we update and show in the react web application The Problem is after some time the application becomes unresponsive and takes too much time for any operation On profiling I found its render batch updates and dispatch event in react that takes the longest time Is there any recommended way to get away with the performance issue in react The feature needs to be refreshed every 2 seconds and list size is more than 1000 items each time The performance issue is observed in IE and Chrome browser,,jquense,2017-08-29 12:38:50,2017-08-29 14:05:02
IS,React performs n 1 insertBefore operations when I move only one item in list,List contains 10000 items I move one item from bottom to top and react performs 9999 insertBefore operations It sucks Take a look at infernojs example js output it will perform only one insertBefore operation for one move in all cases,,"bgnx,aweary",2017-08-29 12:04:30,2017-08-29 15:10:53
IS,Documentation Add reference to onInvalid form event,Do you want to request a feature or report a bug Bug What is the current behavior React has an onInvalid form event that is not documented at form events If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template form events What is the expected behavior onInvalid should be added to the list of form events Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This documentation error has been around since v15 when the event was added,,,2017-08-27 02:29:38,2017-08-29 15:11:45
PR,Documentation Add reference to onInvalid form event,This pull adds the onInvalid event to the list of Form Events on the SyntheticEvent docs page form events This event was added in v15 in the PR Closes 10553,,,2017-08-27 02:30:21,2017-08-29 15:11:45
IS,react test renderer does not mock React Native Animated,Do you want to request a feature or report a bug Bug What is the current behavior Animated is not mocked Using react native 0 47 jest 20 react 16 react test renderer 16 Implement any Animated component With the new Animated value and so on And make a snapshot test It will return details summary Log error summary details br What is the expected behavior Should mock properly Animated like the other react native components so it does not break,,aweary,2017-08-25 14:09:10,2017-08-29 15:17:41
IS,Buggy controlled number input on 15 5,Do you want to request a feature or report a bug Bug What is the current behavior The following code example works well with text input type but allows inputs like 012 or 0012 to be entered when using the number input type The console log line always runs and shows the right value and the App state is also correct when checked with React Developer Tools It is only that the controlled input is not being controlled somehow Present with latest create react app or in this jsfiddle Not present in this jsfiddle What is the expected behavior Input should reflect the state thus not allowing strings like 012 etc to be displayed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest create react app react 15 6 1 react dom 15 6 1 react scripts 1 0 11 Browser Chrome 60 0 3112 101 OS X 10 12 6 Present with latest create react app or in this jsfiddle Not present in this jsfiddle,,"gaearon,jquense,aweary,aweary",2017-08-25 10:50:35,2017-08-29 15:18:14
PR,Fixed lint error in ReactErrorUtils test,This has been nagging me for a few days screen shot 2017 08 29 at 9 09 08 am,,"bvaughn,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn,bvaughn",2017-08-30 00:26:59,2017-08-30 00:54:37
PR,Lint command fails if there are any warnings,You get a lint failure You get a lint failure Everybody gets a lint failure Follow up for 10570 screen shot 2017 08 29 at 6 05 23 pm screen shot 2017 08 29 at 6 05 34 pm,,"bvaughn,bvaughn,sophiebits,bvaughn",2017-08-30 01:06:52,2017-08-30 15:03:18
PR,Add sync www flag to build script,This is convenient for iterating on React ReactDOM and testing changes in www It is similar to the sync fbsource flag that I added a few weeks back for React Native,,bvaughn,2017-08-30 00:50:04,2017-08-30 16:38:15
IS,Avoiding findDOMNode,I have read a few comments on here about findDOMNode potentially being dropped or at least its usage strongly discouraged I'm curious as to what the alternative should be as all the ones I have seen are nowhere near as flexible Let is say I have a funky wrapper component that adds a context menu to a component Will work for anything that eventually renders a DOM element no matter how deep it is whether the components forward props or not I do not see any downsides apart from the 'impurity' of poking around in the DOM So I can see there are workarounds for not using findDOMNode but none as good as actually just using it,,jquense,2017-08-24 14:41:19,2017-08-30 18:40:24
IS,Reliable way to measure painted dom elements,I apologize as I know this is a frequent question but I am struggling to find the proper way to accomplish what I am trying to do I am creating a menu that has a simple animated underline that transition to the selected element in a list This requires knowing the width of each element and positioning the underline div below the selected element on click I am currently getting the width in componentDidMount by way of refs and findDOMNode This works but on initial load i get a slightly incorrect measurement When refreshing it is correct every time i open the page in a new tab I see the incorrect behavior Here is my componentDidMount code componentDidMount this tabWidths this tabs map t return ReactDOM findDOMNode this refs t ref clientWidth this setState distanceFromOrigin this tabWidths map e i a if i 0 return 0 return this tabWidths reduce sum value index array if index i return sum value return sum 0 this setState underlineStyle this styleGenerator 0 Am I doing something fundamentally wrong here or is there no good way to know when the dom is fully painted to do measurements for things like this So far the only way I am able to get this to work is by nesting this within a requestAnimationFrame nested within a settimeout of 0 This just seems wrong thanks for any help,,syranide,2017-08-22 23:46:25,2017-08-30 18:41:47
IS,Callback for lifecycle componentWillUnmount,React good the templating engine but making animation sometime very horrible I use GreenSock animation library for animation since react animation library like react motion not impressed me for solve design task I have not problem when I need animation after componentDidMount unlike animation before componentWillUnmount I have to apply the hack for last situation example wrapping my component to TransitionGroup react transition group it is extends react lifecycle componentWillLeave callback or another hack And in general what I want to ask It is possible to add callback for lifecycle componentWillUnmount Or how I can easily animate my components,,jquense,2017-08-11 08:26:00,2017-08-30 18:51:21
PR,Update issue template with PropTypes package,Adds prop types to the template,,jquense,2017-08-30 20:04:30,2017-08-30 20:35:30
IS,Wrong warning,Do you want to request a feature or report a bug bug What is the current behavior It shows a warning after following the React documentation Using arrayOf and ES2015 classes to validate items of an array shows a warning If the current behavior is a bug please provide the steps to reproduce Looking at this JSFiddle this warning is shown image What is the expected behavior No warning should be shown as this code follows the react documentation about PropTypes Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome Version 60 0 3112 101 Official Build 64 bit MacOS Sierra,,"jquense,jquense",2017-08-30 19:55:13,2017-08-30 20:36:48
IS,Apparent Slow 25 Bytes per Render Memory Leak with React React Dom,Do you want to request a feature or report a bug bug What is the current behavior In a long running React application finding a very slow memory leak looks to be about 25 bytes per render To eliminate virtually everything wrote the simplest possible examples at end of issue Test methodology was to note Also disabled all Chrome extensions before testing and ran the production build from create react app to eliminate any other possible source of leaks 1 pause execution early 2 force multiple garbage collections using Dev Performance 3 record starting JavaScript memory LIVE using Google Chrome Task Manager 4 Run execution for 10 000 iterations 5 pause and record as in 1 3 Memory at start 8 088K Memory at end 8 345K Difference 257K To eliminate the browser ran test with a simple loop also at end of issue Memory at start 6 792K Memory at end 6 813K Difference 21K note I really cannot account for why this maybe the console log If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template See code snippets at bottom wanted to eliminate all sources of leaks so did not use JSFIDDLE What is the expected behavior Expect the memory usage to be the same as the simple test loop really should not be any memory growth that is not cleaned up with garbage collection Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Browser Chrome Version 59 0 3071 115 Official Build 64 bit LINUX react 15 6 1 react dom 15 6 1 create react app react scripts 1 0 12 Not sure about previous versions of React SAMPLE REACT APPLICATION,,"gaearon,gaearon",2017-08-30 19:15:09,2017-08-30 22:53:59
PR,attribute behavior Track differences between DOM and server renderer,screen shot 2017 08 30 at 12 09 42 pm,,"acdlite,sebmarkbage,sebmarkbage",2017-08-30 19:10:38,2017-08-31 01:17:31
PR,Track nested updates per root,We track nested updates to simulate a stack overflow error and prevent infinite loops Every time we commit a tree we increment a counter This works if you only have one tree but if you update many separate trees it creates a false negative The fix is to reset the counter whenever we switch trees,,"acdlite,sophiebits,acdlite,acdlite",2017-08-30 17:59:21,2017-08-31 01:17:48
PR,Changes to attribute whitelist logic,This is a work in progress PR so that and I can coordinate x Block and warn about non boolean attributes getting true and false x Bug svg font face x height false svg passes through x NaN should always be stringified and should always warn x Functions should always be stringified and should always warn except for events x Symbols should always be ignored and should always warn x s Bug svg font face format string Symbol svg throws s x aria exactly and anything starting with on except events should always be blocked and warn x div onClick 0 should warn Also NaN false x It turns out we did support data before Should we allow it again x Make unknown event message better it currently advises to use strings which wo not work x Pass badly cased reserved attributes through Possible future work x Fix SVG font face taking custom element path Warn if numeric attributes get non numeric values Warn if Symbol is passed to special props like value dangerouslySetInnerHTML Warn if function is passed to special prop like suppressContentEditableWarning Do not pass function to special props like textarea value etc Should we blacklist selectedIndex It used to warn now it confusingly gets set Let is make off on and yes no attributes work as intended Same for crossorigin,,"nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,flarnie,gaearon,nhunzaker,sebmarkbage,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,aweary,nhunzaker,nhunzaker,nhunzaker,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,gaearon,aweary,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,aweary,flarnie,gaearon,gaearon,flarnie",2017-08-29 01:55:24,2017-08-31 01:28:56
PR,Remove HTMLPropertyConfig entries for non boolean values,When we originally removed attributes from the whitelist we assumed a few attributes were string booleans but they are not Autocomplete on off apple ref doc uid TP40008058 autocomplete Autocapitalize none sentence words apple ref doc uid TP40008058 autocapitalize Autocorrect on off apple ref doc uid TP40008058 autocorrect Autosave string apple ref doc uid TP40008058 autosave,,"nhunzaker,nhunzaker,nhunzaker",2017-08-24 11:30:50,2017-08-31 01:49:18
PR,Defer reading native view config from UIManager until view is used,Reading them from UIManager during registration forces a Prepack deopt Although a handful of React Native views define their configs in JavaScript eg RCTText ReactNativeART the majority require them to be loaded from UIManager eg RCTView For consistency simplicity all view registrations have been updated to use this new lazy config approach Downstream I have also updated requireNativeComponent While testing I noticed that this method fell back to returning an UnimplementedView component if a view config could not be found in UIManager Apparently this was a short term solution in place for Ads Manager at a time when Android did not support many of the RN view types After discussion with the React Native team I have added an invariant here instead This simplifies our Flow typing and avoids unnecessary runtime checks,,"bvaughn,sophiebits,bvaughn,sophiebits,sophiebits,bvaughn,sophiebits,bvaughn,bvaughn,bvaughn",2017-08-29 23:57:05,2017-08-31 20:42:27
PR,Embed ReactNative event types in JavaScript,Reading them from UIManager during injection start up forces a Prepack deopt,,"bvaughn,bvaughn,bvaughn,bvaughn,bvaughn",2017-08-29 17:05:21,2017-08-31 22:27:55
PR,attribute behavior Canonicalize values immediately after reading them,In case they are mutated,,acdlite,2017-08-31 22:16:14,2017-08-31 23:46:44
PR,Remove disableNewFiberFeatures flag,,,"gaearon,gaearon,sophiebits,gaearon,sophiebits",2017-08-31 23:36:07,2017-09-01 01:23:09
PR,Do not treat dashed SVG tags as custom elements,As suggested by It turned out there is a blacklist of those in custom elements spec and we do not think there will be more This saves us from the hassle of tracking the namespace,,gaearon,2017-09-01 01:07:04,2017-09-01 01:24:24
PR,attribute behavior Add snapshot test,Same data as the table but in the form of a snapshot test,,"acdlite,acdlite,acdlite",2017-08-26 00:43:20,2017-09-01 01:34:03
PR,Ensure attribute table server renders SVG inside SVG container,This fixes an issue with things like numOctaves where it emitted a false positive warning for camelCase SVG tags because it thought we are not inside SVG mode,,gaearon,2017-09-01 01:38:38,2017-09-01 01:41:51
PR,WIP My own tweaks to attribute table,Not for merge,,gaearon,2017-08-29 00:03:20,2017-09-01 17:27:52
PR,Adding Crowdin config file to master repo,This adds the base Crowdin config file for localization using the currently existing docs website layout It will be adjusted over time to include shared strings navigation footers etc as localization progresses,,"ericnakagawa,gaearon",2017-08-30 22:49:14,2017-09-01 18:33:18
PR,Remove dependency on fbjs lib EventListener and fbjs lib focusNode,It is pretty small but still unnecessary indirection now that we do not support IE8 See inline comments,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,aweary,sophiebits,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,sophiebits,gaearon,aweary,gaearon,gaearon,sophiebits",2017-09-01 18:12:55,2017-09-01 20:26:39
PR,Default to first non disabled option for select elements,This fixes a regression that found in where select elements were defaulting to the first option regardless of whether it was disabled or not This was not the behavior in 15 6 Copying my comment on this from Nate is PR This issue stems from which introduced an updateOptions call when a select element is mounted If updateOptions does not find a matching option it defaults to setting the first option as selected L110 L112 In previous versions updateOptions was not called on the initial mount so it defaulted to the standard behavior of the browser This brings us back in sync with the HTML spec which states If the select element is display size is 1 and no option elements in the select element is list of options have their selectedness set to true set the selectedness of the first option element in the list of options in tree order that is not disabled if any to true the select element I can just cherry pick the DOM fixtures from 10142 as part of this PR if you would like,,"aweary,jquense,aweary,nhunzaker,jquense,gaearon,sebmarkbage,nhunzaker,nhunzaker,gaearon,aweary,gaearon,gaearon,aweary",2017-08-14 18:06:48,2017-09-01 20:34:29
PR,Add test fixtures to cover disabled selected options,Related issues 2803 We do not have amazing test fixture coverage for selects so I have added two cases based on the discussion in 2803 1 A selected disabled option should be picked but not selectable 2 When there is no value match the default selected option should be the first non disabled option Pretty standard stuff A lot of this is just basic browser behavior but I believe these test cases already caught a bug in the current edge build of React Selects no longer skip over disabled options when selecting the default option Example of standard DOM behavior Also I have added a new field to link related issues in the test cases Take a look at the result here,,"nhunzaker,nhunzaker,aweary,aweary,gaearon,gaearon",2017-07-11 12:21:02,2017-09-01 20:35:04
PR,Fix warning deduplication in attribute table,This avoids the need to manually patch React locally because of deduplication hiding warnings It takes us further from but I think that We do not want to run headless Chrome as part of every test run anyway We can still add a Save button and a script that runs yarn start and presses it if we want to But at least the data generated by this is more accurate than the current version,,"gaearon,bvaughn,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon",2017-09-02 00:48:58,2017-09-02 01:37:46
IS,Uncaught Error Element type is invalid,login js import React from react import Link from react router export default class Login extends React Component render return div className container fluid br div className row div className col md 4 div div className col md 4 panel panel default h1 className text center Login h1 hr div className alert alert warning strong sucess strong div div className alert alert success strong success strong div form method post action login div className form group label for email Email address label input name email type email className validate form control required aria required true id email placeholder Email div div className form group label for password Password label input name password type password className validate form control required aria required true id password placeholder Password div div className form group Link to register Register Link div button type submit className btn btn primary text center Submit button form br div div div main js import React from react import ReactDOM from react dom import BrowserRouter as Router Route IndexRoute from react router dom import Login from Components Login js import Registration from Components Registration js ReactDOM render Router Route path component Login Route path register component Registration Route Router document getElementById 'app' Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 4 0 0,,jquense,2017-09-04 12:23:03,2017-09-04 12:57:13
IS,IE10 caret in standard controlled input immediately disappears,BUG can not type in standard controlled input on IE10 this works just fine on IE11 UPDATE Okay I now know where the problem lies It has something to do with cheton react sortable the input I am talking about here is inside an li in a SortableList When I deactivate this the input focus and caret works Controlled component with proper value and onChange The weird thing is that the input does not lose its focus can be seen because it is still white and the border is there CSS input focus is 'active' but the caret simply immediately disappears Even more weird is that the parent node has an onClick which basically just does this amountInput focus and this works The caret shows up I can type all is fine but directly clicking into the input the caret immediately disappears Please check the video Did anyone ever experience this I already tried removing all my Blur Keydown whatever handlers and all that from the input but nothing changed at all So I am basically now down to a simple controlled input with a value and a onChange handler Sidenote my onChange does not save into state but rather into a client Meteor minimongo database But again it works just fine on any other browser including IE11 I do not get it Most recent React Version IE10 in Win7 VM on MacOS,,"gaearon,jquense",2017-06-26 08:47:29,2017-09-04 13:01:52
IS,Proptypes validation,Do you want to request a feature or report a bug feature What is the current behavior Proptypes are checking type of the parameters whatever the component receiving from parent component If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Proptypes should also check the values not only type of data it is receiving in validation This feature can be useful for more specification to the values also if we want to restrict the component to get the particular values Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,jquense,2017-09-04 16:14:43,2017-09-04 17:06:22
IS,Update unknown props warning page,What is the current behavior If I write a JSX component without an upper case React gives me the unknown prop warning I finally remember that React is JSX uses the upper vs lower case convention to distinguish between local component classes and HTML tags But I think it could be useful to remind it in the unknown props warning page as a reason of this warning I spent some time debugging and not understanding this warning in this case And I might not be the only one What is the expected behavior Update unknown props warning page and add a reason this warning could be appearing 4 You are using a JSX component without an upper case React treats it as an HTML tag and probably does not recognize its props React is JSX uses the upper vs lower case convention to distinguish between local component classes and HTML tags Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I use React 15 2 1 Let me know if you think it could be useful or it is just me who has not been enough careful,,"gaearon,gaearon,gaearon,gaearon",2016-10-03 13:29:47,2017-09-04 20:13:13
IS,Support of the importScripts in Web Worker,Hello Could you explain why the importScripts is not supported in the Web Worker I have added importScripts ' buid ffmpeg all codecs js' How can I replace the importScripts Thank you,,"jquense,aweary",2017-09-04 17:11:42,2017-09-04 20:25:30
PR,0 4 stable,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-05 06:17:50,2017-09-05 08:12:06
IS,Facebook,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-09-05 06:15:13,2017-09-05 08:12:25
IS,Facebook,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-09-05 06:14:14,2017-09-05 08:12:35
PR,attribute behavior Snapshot test,Same data as the attribute table but in the form of a snapshot Uses puppeteer to run headless Chromium,,"acdlite,acdlite,acdlite,nhunzaker,nhunzaker,acdlite,nhunzaker,gaearon,acdlite,gaearon,acdlite,gaearon,acdlite,gaearon,gaearon",2017-09-01 01:20:53,2017-09-05 16:36:30
IS,Why HTMLDivElement does not has placeholder and type,I edit content by div with contentEditable But in react 15 6 1 placeholder can t support by tsx So what should I do,,acdlite,2017-09-05 07:05:01,2017-09-05 16:46:51
IS,ambiguous documentation for PureComponent and Component,Do you want to request a feature or report a bug Bug ambiguous documentation as well as feature documentation update request What is the current behavior Currently the documentation for PureComponent react purecomponent says React PureComponent is exactly like React Component but implements shouldComponentUpdate with a shallow prop and state comparison Then the Note states Furthermore React PureComponent is shouldComponentUpdate skips prop updates for the whole component subtree Make sure all the children components are also pure The question is In what circumstances does it skip the prop updates for the whole component subtree Does it also implicitly say that if I implement shouldComponentUpdate in a Component the behaviour will be different For example if it returns false the props propagation wo not be stopped A word on Why make sure all children componetns are also pure would be handy Then the documentation for Component is shouldComponentUpdate shouldcomponentupdate says The default behavior is to re render on every state change and props Returning false does not prevent child components from re rendering when their state changes But prevents prop propagation that effectively stops the re render cycle of all child components This sentence sounds like the two events may be related but are implemented in a way to not prevent the re render Rewording to something like If a component is state is changed or setState is called its re render cycle will be initiated regardless of some parrental is SCU returning false in some point in past Do I understand correctly Component can re render when it receives new props from parent component Component can also re render if its state gets changed Component can change its state when it receives new props or by calling setState from outside or by the component itself What is the expected behavior Expected is to find more explicit documentation Currently some sentences look like they only apply for PureComponent or Component or both Expected is to find an explicit mention that the behaviour of Component and PureComponent is exactly the same if their SCU happen to return false Other articles about react components found on the web then reformulate these official rules in a way that further extends the ambiguity Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 6 1 react purecomponent shouldcomponentupdate,,acdlite,2017-09-05 10:09:42,2017-09-05 17:02:03
IS,Bringing ReasonReact reducers to React js,It would be awesome if React js had reducers similar to what ReasonReact reducers are here recently introduced We re also decided to iterate on ReasonReact instead of core React partially because we re Reason users and partially because ReasonReact s nature of being new less used allow us to iterate exciting new APIs without legacy concerns Since I could not find any previous talk about this I'm assuming this has been discussed internally it would be great to chat about it in the open and iterate on core React state management details summary The ReasonReact reducers example summary details,,"mxstbr,alexeyraspopov,acdlite,acdlite",2017-09-02 09:27:53,2017-09-05 17:02:31
IS,Docs Better documentation of PureComponent,Do you want to request a feature or report a bug Doc update What is the current behavior Currently we have this little section on PureComponent at react purecomponent react purecomponent If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template It lacks some in depth information about using PureComponent I had to refer to blogposts to get a sense of the implications of using PureComponent s What is the expected behavior It would really be better to have reference documentation for PureComponent like It should have the following An example of PureComponent usage which specifically points out the functionality Is it possible for a PureComponent to override the shouldComponentUpdate A clearer explanation of how change in reference results in a re render A note on how inline functions for event handlers might re render pure components Nice to have info on The history of PureComponent wrt the problem with pure render mixin A note on how it prevents children depending on context info to re render Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React PureComponent is a part of React v15 I'm happy to work on a PR for this change if y'all think this issue is valid,,acdlite,2017-09-04 02:15:12,2017-09-05 17:20:36
PR,Fix typo in script function name,,,acdlite,2017-09-05 11:48:37,2017-09-05 17:28:35
PR,Fix minor typo in Firefox name in a11y docs,,,acdlite,2017-09-05 01:10:09,2017-09-05 17:28:55
PR,Changed value property in example code to defaultValue,When using the value property form input is fixed Had to change it to the defaultValue property to allow for mutation Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,acdlite,2017-09-03 17:05:03,2017-09-05 17:34:37
PR,Moar attribute tests,acdlite and after chatting with have written in code what we would expect or assume the updated unknown props behavior would be This is open to discussion this test demonstrates which behaviors we expect and what differs in the current implementation We should determine which failing tests should be changed and which ones indicate bugs and then update this PR,,"acdlite,nhunzaker,nhunzaker,nhunzaker,nhunzaker,flarnie,flarnie,flarnie,flarnie,nhunzaker,nhunzaker,acdlite,acdlite,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,gaearon,nhunzaker,flarnie,flarnie,aweary,sebmarkbage,aweary,gaearon,gaearon,gaearon,gaearon,flarnie,sebmarkbage,acdlite,sebmarkbage,acdlite,flarnie,acdlite,flarnie,flarnie,flarnie,gaearon,nhunzaker,acdlite,acdlite,acdlite,acdlite,nhunzaker,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,nhunzaker,flarnie,aweary,flarnie,flarnie,aweary,nhunzaker,flarnie,gaearon,flarnie,flarnie",2017-08-22 20:01:46,2017-09-05 18:25:24
PR,docs update fix tabs on 'installation' page,problem The old installation page relied on HTML with inline CSS and JS and the JS does not work with our new site infrastructure Specifically there were some tabs which switched the content and they are not working in the new docs site We are trying to make minimal changes to the markdown docs files because we want to minimize merge conflicts and also not interfere with an ongoing i18n project solution Made minimal changes to the installation docs file in wouldocs' removed the non functional inline JS changed a couple of 'h2' to 'h3' this made the styles look correct changed 'block' tags to isection' and added wrapper divs this made it render correctly Then we made a hacky custom component and moved the tab JS there mostly unchanged Ideally we do a follow up pass and completely move the styles and JS out of wouldocs docs installation md' and clean this up But for now it is similar to other work arounds in place for this docs rewrite,,"flarnie,bvaughn,bvaughn,bvaughn,flarnie,flarnie,bvaughn,bvaughn,flarnie,flarnie",2017-09-02 00:02:31,2017-09-05 20:12:35
IS,Add ES6 module build to NPM package,Followup from a tweet from Unpkg unpkg about ES6 module support For fun try using import as d3 from ' unpkg com d3 module inside a script type module and watch those modules load It would be neat if you could just import Component from '' in browsers like Safari and soon Chrome As far as I understand the problem we would just need to export an ES6 build target from Rollup I use just lightly Hopefully it is that simple it is probably more complicated In any case now we have an issue for it,,"nhunzaker,aweary,nhunzaker",2017-09-06 02:08:56,2017-09-06 12:14:53
PR,Add AgentConf 2018,We are having another edition of the AgentConf in 2018 which has again a strong focus on react and we will be skiing again Last year is PR for reference,,"nhunzaker,nhunzaker",2017-09-06 06:44:22,2017-09-06 12:56:36
IS,Remove cache invalidating code hack,Do you want to request a feature or report a bug Bug What is the current behavior In the output code after building there is a hack in the code which includes the time of compilation which causes the whole file to be modified which when code splitting is bad for caching Relevant output code see LAST BUILD If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Build project with react and react dom in development or production check diff between two supposedly identical builds What is the expected behavior The two builds outputs should be identical if no modifications have been made Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 6 1,,"nhunzaker,nhunzaker,gaearon",2017-09-06 08:13:26,2017-09-06 14:04:12
PR,Generate Markdown table from attribute fixture,This makes the Save button generate the table file I checked in the table that it produces,,"gaearon,gaearon,bvaughn",2017-09-02 02:45:03,2017-09-06 15:00:53
IS,What is the browser version requirements for react16,React is not list the supported browser version so i where could i find the browser version requirements for react16,,"jquense,jquense,jquense,aweary",2017-09-06 15:22:06,2017-09-06 15:30:24
PR,Update error codes and results json,Preparing to do an RC just updating these files,,"flarnie,bvaughn,flarnie,gaearon,sophiebits,gaearon",2017-09-06 16:49:50,2017-09-06 18:11:20
PR,Update error codes on 15 stable branch,It looks like the docs are still being build based on the 15 stable branch so until we do the 16 final release I'm updating the error codes here in order to mirror them over to the gh pages branch update the error codes These are the same changes we are landing on master in,,flarnie,2017-09-06 17:21:16,2017-09-06 18:13:53
PR,Update error codes on docs branch,what is the change This just updated the error codes on the docs For my future self recording the steps it took to get here On master run npm run build extract errors Create a commit with those changes and open a PR Cherry pick that commit onto 15 stable and open a PR Update the error codes on the gh pages branch by doing the following based on docs updating facebookgithubioreact Set up a sister directory to react with gh pages checked out and call it react gh pages In your react repo with 15 stable checked out and the error codes update cherry picked run cd docs bundle rake exec bundle exec rake fetch remotes bundle exec rake release cd react gh pages and check in those changes create a commit PR Manually test running the docs why make this change Even though this is just an RC and not a final major release we still want the docs to be as up to date as possible test plan Run the docs locally and make sure things work screen shot 2017 09 06 at 10 40 57 am issue,,"flarnie,sophiebits,gaearon,flarnie,flarnie,flarnie,sophiebits,sophiebits",2017-09-06 17:46:55,2017-09-06 18:14:17
PR,Component to be enclosed in a div,In Choosing the Type at Runtime the assigned capitalized variable needs to be wrapped in a div for it to be rendered Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-06 12:08:11,2017-09-06 19:34:49
PR,Update to latest allowed versions of fbjs and prop types,what is the change Updates to the latest allowed versions for two dependencies yarn upgrade 'fbjs 0 8 9' and yarn upgrade 'prop types 15 5 8' why make this change Prepping for the 16 0 RC we want to have a reproducible build that is as close as possible to what new users will get when installing React test plan yarn yarn build yarn test issue,,flarnie,2017-09-06 20:34:16,2017-09-06 21:29:23
PR,Pull in react art lib Circle Rectangle Wedge art,Two commits First is just a copy paste Depends on 10628 Test Plan Opened the fixture React logo shows up with its normal dot now rendered by a Circle,,"sophiebits,flarnie,flarnie,sophiebits",2017-09-06 21:50:31,2017-09-06 22:10:14
IS,Update react art to use new prop types package,Do you want to request a feature or report a bug Will stop react art from throwing warnings when used with recent React I have not tested this manually but it seems like it will throw because it is using the old style of getting PropTypes from React directly L28 Also the package is not listing prop types as a dependency and What is the current behavior It probably throws a warning or at least models out of date syntax which wo not work once we deprecate React PropTypes If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template TODO What is the expected behavior Uses prop types package as shown in the docs Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 beta RC,,"flarnie,gaearon,gaearon,sophiebits",2017-09-06 20:05:25,2017-09-06 22:30:58
PR,React native event type fixes,5a12260 Added invariant check for native dispatching an unsupported event type This prevents a case of a silent failure when native dispatches an event that JavaScript does not know how to handle 633235e Added iOS direct event type onSnapshotReady This is used for snapshot testing I missed it initially since I did not gather event types from test specific native views These issues were uncovered while running integration tests during a React Native fbsource sync Before this fix our snapshot tests failed due to timeouts After commit 5a12260 snapshot tests failed with Unhandled JS Exception Unsupported top level event type topSnapshotReady After 633235e snapshot tests pass,,"bvaughn,sophiebits",2017-09-06 21:25:28,2017-09-06 22:34:03
PR,Add missing dependencies in art fixture update yarn lock,what is the change See title why make this change We want the art fixture to be working so that we can test the latest version of react art test plan Built and inspected the fixture manually issue Prepping for 16 0RC release,,"flarnie,sophiebits",2017-09-06 21:34:57,2017-09-06 22:37:10
PR,16 0 0 rc 1,Updating the version numbers D Will wait to land until after lands,,"flarnie,flarnie,sophiebits",2017-09-06 22:12:40,2017-09-06 22:43:23
IS,Release checklist for 16 RC,Ensure all commits in master were tested at Facebook Check that they were a part of the latest internal sync For stable releases prefer that they ve been landed for a week or so Only skip this step if you really know what you re doing Verify that you have npm permissions x You re in npm owner ls react x You re in npm owner ls react art x You re in npm owner ls react dom x You re in npm owner ls react test renderer If not ping someone on the team Ensure your React is fresh x Ensure you re on master x Do a git pull x Is master green on CI Check the most recent commits x Check that your local git log output matches the commit list x Run yarn in the repo root Ensure runtime dependencies match what users would get x For fbjs x Look at the version range of fbjs in root package json x Ensure all packages package json depending on fbjs specify the same range x Run yarn upgrade fbjs THAT VERSION in the repo root Don t miss the caret x For object assign x Look at the version range of object assign in root package json x Ensure all packages package json depending on object assign specify the same range x Run yarn upgrade object assign THAT VERSION in the repo root Don t miss the caret x For prop types x Look at the version range of prop types in root package json x Ensure all packages package json depending on prop types specify the same range x Run yarn upgrade prop types THAT VERSION in the repo root Don t miss the caret x This might change the lockfile This should not change any package json x Commit the changes if any see x Edit react art is broken in the 16 branch but this should not block RC and will be fixed asap by and in 10629 Do the local sanity checks in the repo root x Run yarn test in the repo root x Run yarn lint in the repo root x Run yarn flow in the repo root STABLE RELEASE ONLY Update error codes x Run yarn build extract errors in the repo root x If scripts error codes codes json changes git commit am 'Update error codes' x Maybe If we still have a separate stable branch for docs when you re reading this we need to cherry pick that commit to that branch This makes sure the website decoder knows about the updated error codes But ideally we should just change docs to serve from master See and Update the version x Update export in src ReactVersion js x Update version in all packages package json x packages react art package json x packages react dom package json x packages react noop renderer package json x packages react test renderer package json x If you see any other packages update this list x Run yarn version check to verify your changes x git commit am version number Build it x Run yarn build in the repo root Run fast packaging smoke test x Open fixtures packaging babel standalone dev html in the browser for a smoke test x It should say Hello world Run slow packaging smoke test x Go to cd fixtures packaging and run node build all js x npm install g serve x Go to the repo root and run serve s x Open 5000 fixtures packaging and verify every iframe shows Hello World Release x Run git push x Run git push tags x Go to build packages x For every subfolder x For non stable versions Run npm publish tag next in the subfolder x For stable versions Run npm publish in the subfolder Bonus Try it out create react app myapp cd myapp npm start,,"flarnie,flarnie",2017-09-06 18:16:57,2017-09-06 23:36:29
PR,Remove const in uncompiled code,Test Plan All fixtures packaging iframes display correctly on Chrome 38 0 2125 0 from previously several were blank with Use of const in strict mode errors logged to the console,,sophiebits,2017-09-07 03:31:19,2017-09-07 03:32:15
PR,add React Day Berlin,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"operatino,operatino,operatino,operatino,operatino,nhunzaker,operatino",2017-08-18 14:37:29,2017-09-07 11:37:05
PR,Added unpkg fields to packages' package json,This will allow proper redirects for and urls,,"Andarist,gaearon,Andarist,gaearon,Andarist,Andarist,gaearon",2017-09-02 11:07:25,2017-09-07 14:56:32
IS,onChange event not getting triggered via selenium clear,Do you want to request a feature or report a bug Possible bug What is the current behavior according to selenium spec and based on issues reported the clear method triggers an DOM onChange event spec element clear issue However when using clear my input onChange handler is not being triggered in the browser I can see the input as empty What is the expected behavior expect onChange handler to trigger Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React using React 15 2 reproduced on both firefox chrome latest version as of this post,,"jquense,jquense,jquense",2016-10-18 12:13:03,2017-09-07 15:15:14
IS,setState,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-09-07 15:20:45,2017-09-07 15:21:09
PR,Add comment for renderToStringImpl parameter,Small addition Added a comment for the second parameter to renderToStringImpl,,"acdlite,gaearon",2017-09-07 09:57:19,2017-09-07 17:05:20
IS,eifjccgigekurdbfdijghgfbdhbhticgjvcfkjhfjcbj,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,,2017-09-07 18:04:14,2017-09-07 18:04:39
IS,Warnings should use console warn,Do you want to request a feature or report a bug Bug and Feature What is the current behavior Warnings are logged out as console error If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I am using React 16 RC and the behavior did come up with every warning React logged out so far What is the expected behavior Warnings should be logged out with console warn This way we can actually filter the output of the console and distinguish between real errors and warnings Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 RC Chrome,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-07 09:49:48,2017-09-07 18:18:29
IS,License headers are missing on built bundles,Our built files are missing license headers cjs has no headers 0 0 beta 5 cjs react development js 0 0 beta 5 cjs react dom development js umd has headers identifying the bundle name but not the license 0 0 beta 5 umd react development js 0 0 beta 5 umd react dom development js Both should have license headers similar to this We likely just need to change the code in getBanner in scripts rollup build js L78 You can test by running yarn build and looking in build packages cc,,"sophiebits,gaearon,gzhappysky,gaearon,sophiebits,gzhappysky",2017-08-15 06:24:18,2017-09-07 18:38:17
PR,Add license headers on build bundles,fix 10458,,"gzhappysky,gaearon,gzhappysky,Daniel15,gzhappysky,gaearon,gaearon,gzhappysky,gaearon,gzhappysky",2017-08-18 09:28:28,2017-09-07 18:38:17
IS,Remove performWithPriority from scheduler,We do not actually use this anywhere so let is remove it L1504 L1512,,acdlite,2017-09-07 17:27:18,2017-09-08 00:35:07
PR,Remove performWithPriority from scheduler,The functions removed are no longer used anywhere Closes,,clemmy,2017-09-07 18:01:20,2017-09-08 00:35:07
PR,deleted,,,,2017-09-08 07:05:43,2017-09-08 07:06:42
PR,Blog post DOM Attributes in React 16,screencapture localhost 4000 react blog 2017 09 08 dom attributes in react 16 html 1504898425506,,"gaearon,sophiebits",2017-09-08 19:21:11,2017-09-08 19:25:37
PR,Gatsby docs update Enable and fix flow,what is the change enable flow for www subdirectory ignore nested node modules with flow allow flow to find the hex2rgba definition in node modules and add a flow typed libdef file See Make types more consistent and check for corner cases in the 'theme' styles code why make this change We want delicious types 3 test plan yarn flow issue Checklist item from wiki here Misc Make sure yarn flow checks the website directory and has no errors,,"flarnie,sophiebits,flarnie,bvaughn",2017-09-08 16:44:22,2017-09-08 19:33:00
IS,Outstanding work for Custom Attributes PR,Final work for to land x Add attributes that need boolean values back to whitelist x Data and aria attributes accept booleans diff 320a1076e356380287a6e67f7c894dbfR229 x Warn on NaN diff a6af75f3f4825d7c09d112750e42d77cR110 x Test coverage for unknown booleans done but is it sufficient x ARIA Camel Casing diff 371ebd9b17f603a39b9c39f54058a31cR50 Verify there are not regressions in existing attribute support manual test page x Need to pass objects with toString through but warn otherwise warn for any HTML properties whitelisted or not issuecomment 320931891 x Missing warning for bad type on second use of attribute issuecomment 320929452 x Change warning for wrong casing of style to be more specific issuecomment 320959168,,nhunzaker,2017-08-08 01:28:44,2017-09-08 19:44:49
IS,RFC Plan for Attributes in React 16,Note the final plan has changed Refer to for details on what ends up in React 16 This is a more formal conclusion of the discussion in It is mostly not yet fully implemented by This is meant to address I wrote this doc but it s mostly based on discussion with I decided to write it in an attempt to formalize the behavior we want so that if there are bugs we can refer back to this Current Behavior React only lets you use approved camelCase properties that look organic in JavaScript Other Considerations ARIA and DATA attributes still pass through The validation of ARIA attributes has moved to be development only We allow but warn on any unexpected ARIA attributes or attributes that seem like ARIA attributes e g ariaSomething This is a minor deviation from pass everything through approach but seems sensible Handling of custom element attributes has not changed Handling of special attributes e g style has not changed Note how with this approach adding support for a new DOM attribute is still possible in a minor version as long as it s only different in casing People would get a warning about the new canonical name for it but at least the old name which they might have been using would still work Unlike the case where we completely disallow a second name for known attributes but allow custom attributes in general,,"gaearon,gaearon,gaearon,aweary,gaearon,aweary,sebmarkbage,gaearon,gaearon,gaearon,sebmarkbage,aweary,gaearon,sebmarkbage,gaearon,sebmarkbage,syranide,gaearon,syranide,gaearon,gaearon",2017-08-07 17:53:44,2017-09-08 19:46:04
PR,Added WarsawJS Workshop 10 React js for beginners,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,nhunzaker,2017-09-08 09:35:47,2017-09-08 20:01:49
PR,Test renderer traversal,If you do then since x points directly to the original a child there is no possible way we could return 'b' So rather than have a confusing inconsistency between the top level node and all the lower ones suggested outlawing changing type and key so that you always have the same instance I'm not actually sure I like this It might make more sense to distinguish between the top level instance and the children in the API since it also makes sense to call update and unmount at the top but nowhere else cc 7148,,"sophiebits,sophiebits,gaearon,cpojer,sophiebits,sebmarkbage,sophiebits,cpojer,aweary,sophiebits,aweary,jquense,aweary,sophiebits,aweary,sophiebits,aweary,sophiebits",2016-08-17 22:53:17,2017-09-08 22:24:28
PR,Reset effectTag to NoEffect instead of NoWork,Just a small typo fix There are currently no problems because NoEffect and NoWork are both 0 but that can change in the future,,"clemmy,gaearon",2017-09-08 22:52:44,2017-09-08 23:00:35
PR,textual change right becomes write Update state and lifecycle md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-08-26 07:37:11,2017-09-08 23:41:04
PR,Fix typo with style,,,sophiebits,2017-08-18 16:00:44,2017-09-08 23:42:00
PR,minor correction to context doc,This sentence confused me a little while reading about context It seems like the logic should be If you know Redux or MobX do not use context,,"sophiebits,sophiebits,sophiebits",2017-08-18 03:57:47,2017-09-08 23:44:16
PR,Fix typo error in docs docs introducing jsx md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-08-16 09:30:43,2017-09-08 23:44:55
IS,React Component Docs displayName,In we have the following statement displayName The displayName string is used in debugging messages JSX sets this value automatically see JSX in Depth I'm almost sure it is incorrect Neither React or JSX sets displayName automatically another error in the docs JSX in Depth does not even mention displayName Maybe we could change it to something like displayName The displayName string is used in debugging messages Usually you do not need to set it explicitly because it is inferred from the function or class name that creates the component You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a Higher Order Component see Wrap the Display Name for Easy Debugging convention wrap the display name for easy debugging for details Makes sense,,"hnordt,flarnie,hnordt,hnordt",2017-08-11 07:47:52,2017-09-08 23:45:25
PR,Improve displayName documentation,Closes 10438,,"hnordt,aweary,hnordt,aweary,hnordt,hnordt,sophiebits",2017-08-13 02:21:54,2017-09-08 23:45:25
PR,Update Sophie is infos on various files,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"sophiebits,sophiebits,sophiebits,sophiebits",2017-09-08 23:55:02,2017-09-09 00:10:48
IS,React does not correctly re render dynamically created Components added to an svg via state,Do you want to request a feature or report a bug I believe I am reporting a bug What is the current behavior When I have a dynamic tag named through a const the element attributes will be parsed correctly but the tag name wo not be resolved all the way down to it is react component and thus wo not be rendered If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Click in the SVG box A Circle tag appears in the svg DOM with its attributes looking like html with dashes instead of camelCase What is the expected behavior If you change ShapeTag to Circle things work as intended and another circle appears Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Bash on Ubuntu on Windows in Chrome,,aweary,2017-09-10 02:50:15,2017-09-10 04:41:21
IS,picture srcset error,Hi I have no idea how to fix this error triggered by the srcset picture attribute Failed parsing isrcset' attribute value since it has an unknown descriptor Dropped srcset candidate object Here is my component Help,,"gaearon,gaearon,gaearon",2017-09-08 20:29:40,2017-09-10 12:18:12
IS,What is the difference between yarn and npm,,,gaearon,2017-09-10 16:30:01,2017-09-10 16:32:40
PR,Add React Seoul 2017 to the conferences list,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-09-10 08:30:28,2017-09-10 19:41:04
PR,adds missing else clause,was called every time even if flow failed Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-10 07:45:00,2017-09-10 19:42:53
PR,docs the order of withRouter and connect is reset,per this link because If you are using withRouter to prevent updates from being blocked by shouldComponentUpdate it is important that withRouter wraps the component that implements shouldComponentUpdate Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-09 16:24:49,2017-09-10 19:56:23
PR,Documentation Update Declaring a Winner,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-08-18 12:54:32,2017-09-10 21:33:27
PR,Documentation Correction of a mistake on code snippet,The parameter children was wrapped with braces,,sophiebits,2017-08-09 07:50:44,2017-09-10 21:42:15
PR,Added subtitle Replacing switch with Logical Operators to docs conditional rendering,Shows how to write a simple switch statement by using Logical Operators instead Not sure if it should be added to official docs but I find it to be a much cleaner alternative to inlining a switch statement so though I would suggest it atleast,,sophiebits,2017-08-02 15:50:28,2017-09-10 21:45:07
PR,Fixing incorrect code in tutorial,In the tutorial when we move the state from class Board to class Game the handleClick function should also be moved,,,2017-07-27 09:39:25,2017-09-10 21:47:19
PR,More explicit class method for ref doc,After realizing this was the second time I have visited this exact page within a year and second guessing myself that the textInput ref is not actually the input element I would like to submit this PR to attempt to make this more explicit You are actually accessing the method on the child class and not the focus method on the dom input element Having the methods named the same focus caused some confusion,,hartzis,2017-07-20 01:07:08,2017-09-10 21:48:39
PR,Testing a CI fail on new PR,,,sophiebits,2017-07-12 22:13:15,2017-09-10 21:50:02
PR,Fix test names in ReactDOMComponent test,objectsd objects is is,,,2017-07-05 22:25:03,2017-09-10 21:52:10
IS,Where can I find information about React 16,gaearon I want to know about the beta,,,2017-09-10 21:47:20,2017-09-10 23:33:54
PR,Fix hint wording in tutorial md,The tutorial hints that a change can be made that allows you to go back in time then click in the board to create a new entry but the change is already present in the example code This fix removes the hint and re words the explanation of the change the example code is making Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-06-06 18:12:39,2017-09-11 00:28:32
PR,Update tutorial md,The final note about slicing the history during handleClick conflicted with the code changes immediately prior I have modified the message to explain what we actually achieved The changes are to the tutorial alone The checklist below does not truly apply Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-08-10 17:03:04,2017-09-11 00:28:53
PR,Remove react proptypes references,Following on from 9757 the purpose of this PR is to remove the few remaining React PropTypes references I have only found a few occurrences in the doc and the warnings messages in the tests so it is only of minor importance Commits related to the live editor and the warning page have been tested by running the documentation in local Commit related to the warning sentences in the tests is more problematic because it breaks the tests if the warning message in the prop types library is not updated as well If it is acceptable another option would be to only test the beginning of the warning message I am unsure but I also guess that the scripts error codes codes json file should be regenerated So maybe this last commit could be excluded from the PR because given these constraints it may not be worth it,,gaearon,2017-05-24 02:10:24,2017-09-11 00:37:23
PR,Typo,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,sophiebits,2017-09-10 22:10:06,2017-09-11 03:37:01
PR,fix typos,This PR is part of a campaign to fix a lot of typos on github You can see the progress on,,"nhunzaker,nhunzaker,nhunzaker,nhunzaker,alexeyraspopov,aweary",2017-05-19 21:44:58,2017-09-11 06:59:41
IS,Build index html should point to istatic ' and not to ' static ',Once you do a build with npm run build the index html gets CSS and JS files from the root This is because there is a forward slash in the src href script type text javascript src static js main 0bcc9445 js script link href static css main 65027555 css rel stylesheet Running the index html on local or remote server does not work if the App is not in the root folder and throws a 404 error on the required files The correct path should be relative script type text javascript src static js main 0bcc9445 js script link href static css main 65027555 css rel stylesheet link rel manifest href manifest json link rel shortcut icon href favicon ico This way if you have your project into a sub folder the App can grab the static folder content This is true as of React v15 6 1,,,2017-09-11 09:05:49,2017-09-11 09:38:05
IS,There are multiple modules with names that only differ in casing,version React 16 rc when install react 16 rc in cra image,,gaearon,2017-09-11 08:28:54,2017-09-11 09:49:18
IS,cannot set property 'nextEffect' of undefined,Do you want to request a feature or report a bug Bug What is the current behavior Loading a page produces an error cannot set property 'nextEffect' of undefined If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Unable to replicate the bug in isolation However it can be seen on a live page It is not clear without knowing React internals what uses the nextEffect I have tried using setState etc Please advise a plausible test case scenario and I will create a test What is the expected behavior No error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 rc 2 Chrome v25 Note it is important that Google Chrome v25 works because otherwise Fetch as Google does not work either i e pages are not being indexed e g See this discussion,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-09 10:29:40,2017-09-11 12:29:54
PR,Warn about objects with toString that get implicitly converted to strings,Complementary to 10385 This is not ideal but this encourages explicitness and leaves an escape hatch for cases like Glamor rules or URI i18n objects,,"gaearon,gaearon,gaearon",2017-08-08 16:39:37,2017-09-11 14:19:23
IS,React 16 0 0 alpha 7 does not bundle correctly in a project using rollup,Do you want to request a feature or report a bug Bug What is the current behavior When using rollup in a project that imports the latest React 16 0 0 alpha7 the bundle ends up containing both react development js and react production min js and the file size is unnecessarily large My guess This happening because the entry point of react was changed recently to,,"gaearon,gaearon,gaearon,gaearon",2017-04-07 13:06:18,2017-09-11 15:42:37
PR,beautiful thing,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gaearon,2017-09-11 15:49:09,2017-09-11 15:51:21
PR,Gatsby docs update minor fixes,Fixes a couple of minor things a copy correction on the home page removes guards uses of 'window' in the hacky JS for the 'installation' docs page See individual commit messages for more info context,,"flarnie,sophiebits,bvaughn,flarnie,sophiebits,bvaughn,sophiebits,flarnie,sophiebits,flarnie,bvaughn,flarnie,flarnie",2017-09-07 22:54:23,2017-09-11 16:20:27
PR,Move minification check to ReactDOM,Addresses s concern,,"gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon",2017-09-07 18:15:38,2017-09-11 17:47:57
PR,Remove toString based minification check,Per discussion in seems like it might cause issues with extra string cache fetches and could potentially harm future toString change proposals Let s just make sure DevTools surfaces this in a good way,,gaearon,2017-09-11 17:47:48,2017-09-11 18:22:42
PR,Share Object assign polyfill between UMD builds,This wins back 0 3k post min gzip which we lost due to adding license headers We can later share more utilities like this since currently it is suboptimal that some fbjs things are duplicated This only affects UMD builds How I verified it works Fixtures work but they were broken between changing the bundling logic and adding an export The combined size has decreased The diff makes sense most of it is renaming index to assign though since Rollup gives it a different name now It only affects UMD builds and doesn t affect any other builds This is not global shared state it is just manual deduplication,,gaearon,2017-09-11 16:12:50,2017-09-11 18:23:00
PR,fix broken link to React installation instructions,,,gaearon,2017-09-11 18:31:33,2017-09-11 18:37:50
PR,Make ReactDOM createPortal official,We might later want to move portal creation to React API that would be renderer agnostic and work across renderers but it is likely that it will be a superset of the current API So we might as well call the current API stable Especially because it is the only migration path for top level render returning null inside a batch in 16 See individual commits I added validation because otherwise you get a very confusing error when you pass something else Also helps us make it clear it is currently not supported by SSR Open question what happens if you do isClient ReactDOM createPortal Does it cause a mismatch on initial render I do not know Worth checking,,"gaearon,gaearon,gaearon",2017-09-11 19:07:32,2017-09-11 21:23:55
IS,meta Creation of react in NPM,Hi React team I am the creator of NPM is server Website The main goal of the library is to simplify Node js development think of it as a modern express with all the middleware included by default and ES7 full on There will be plugins soon and I want one of the first ones to be based on React I like the simplicity of create react app so I want to make a plugin with a similar functionality but without needing a CLI Something like this for getting started Then just running npm start without any other library should make React work with server I have a local proof of concept with sass that works great and I want to implement React now I am implementing a first proof of concept today during this event in Tokyo but I have few questions What do you think Do you think users might find it easy to use in a similarly to create react app I would like to invite any React dev who is interested You can do as much or as little as you want from just keeping tabs on it to actively helping me develop this plugin Is anyone interested,,"gaearon,gaearon",2017-09-12 09:11:49,2017-09-12 10:12:40
PR,Remove undocumented TestUtils methods,These methods are not documented Internally there is just one match of isCompositeComponentElement which is trivial to inline The other two methods are not used internally and have been broken in all 16 betas and RCs Enzyme technically imports them but doesn t use They don t want to remove them until we remove them So let s just remove before 16,,gaearon,2017-09-12 15:43:45,2017-09-12 15:50:42
PR,Stop exposing shallow renderer from TestUtils,We intended to remove this export in React 16 but forgot to do it in RC It clearly warns about being removed in 16 though so it is not too bad,,gaearon,2017-09-12 15:55:33,2017-09-12 18:29:29
PR,Fix context memory leak,This ensures we always pop the root context Fixes a memory leak when unmountComponentAtNode leaves reference to the tree via the context stack Verified by putting a breakpoint in unmountComponentAtNode and checking the context stack which is now null ed,,"gaearon,gaearon,gaearon",2017-09-12 15:31:07,2017-09-12 20:47:10
IS,Incorrect function reference in Adding a Ref to a DOM Element example,Do you want to request a feature or report a bug Bug What is the current behavior Documentation on appears to be incorrect In the first example the button uses the function reference this focus I submit the example should change from onClick this focus to onClick this focusTextInput If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A,,,2017-09-12 23:10:51,2017-09-13 01:42:27
IS,ReactDOM 15 6 1 vs 16 0 0 rc2 benchmark difference,Do you want to request a feature or report a bug Hey there So at my work we got into the discussion of what the fastest render cycle would be Namely if functional components that render functional components as children would be faster than a class based component that renders through private function members of the class We set out to prove it in a very simple and na ve way We used Benchmark js to run ReactDOM render against components that render the same output to different existing dom nodes What is the current behavior We tested it against React 15 6 1 and 16 0 0 rc2 and the results for both tests against all 3 cases were relatively close in terms of ops sec However between React 15 and 16 the amount of ops sec varied so heavily I wanted to know if the approach taken was the problem or if it shows a flaw in ReactDOM v16 I'm not suggesting there is anything wrong however the results varied so widely I thought I would share it here since maybe someone would have more accurate numbers or a better way of testing it that would actually highlight the perf Dev build ReactDOM 16 results Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 6 1 16 0 0 rc2 Chrome 60 node 7 8 0,,"aweary,gaearon,gaearon,gaearon,gaearon",2017-09-12 19:20:54,2017-09-13 02:32:49
IS,Input value on setState onChange is giving an odd bug The specified value f is not a valid number The value must match to the following regu,I have an onChange handler settingState in a react component but when it changes the state in the console it is giving me this error warning inputValueTracking js 75 The specified value ffffsaadf is not a valid number The value must match to the following regular expression d d d d eE d I have seen a few instances online where people have gotten similar error but the context for those errors appears to be different which makes debugging this difficult The error happens when adding input to the onChange function I would really appreciate any insight This is what the component looks like import React Component from areact' class AddMovie extends Component constructor props super props this state title '' release year '' handleOnChange event const name value event target this setState name value handleOnSubmit event event preventDefault render return form onSubmit this handleOnSubmit label htmlFor movie title Title label input type text name title value this state title onChange this handleOnChange placeholder Movie Title label htmlFor movie release year Title label input type number name release value this state title onChange this handleOnChange placeholder Movie Release Year button Add Movie button form export default AddMovie,,,2017-09-13 02:09:34,2017-09-13 02:59:49
PR,Gatsby docs update add title and meta tags initial version,Add initial version of meta og tags to header using react helmet what is the change Adds the same 'meta' tags from the old docs site to the new docs site Some details some tags were the same for all docs pages afaik so I hard coded those into a reusable component the 'og url' tag is not quite right yet but follow up diffs can fix it In the old docs each blog post had a description that was the first paragraph That seemed complex to do here we have access to an 'excerpt' param in GraphQL and can set the truncation length but can not specify that we want the first paragraph Another option for the excerpt is to grab the HTML get the first 'p' element content and sanitize it but that seemed more complex why make this change We want metadata the delicious cream center of each webpage test plan Manual testing This is not quite finished so I did not test super thoroughly issue Checklist item from Gatsby wiki Misc Make sure helmet title and metadata is working correctly,,"flarnie,flarnie,bvaughn,bvaughn,flarnie,flarnie,bvaughn,flarnie,flarnie,flarnie,flarnie,flarnie,bvaughn,flarnie,flarnie,bvaughn",2017-09-08 23:50:12,2017-09-13 06:15:09
PR,small fix,am i right with this its some duplicate information that can disinform you Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-07-01 16:31:16,2017-09-13 10:42:52
IS,react router4 x How to use javascript to control the router where to go,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,gaearon,2017-09-13 10:46:06,2017-09-13 11:45:16
IS,Click button type button will submit form,Do you want to request a feature or report a bug bug What is the current behavior Click edit will submit the form What is the expected behavior Click edit should not submit the form Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Mac OS 10 12 6 Chrome 61 0 3163 79 React 15 6 1 I tried 15 5 1 also has this issue,,"syranide,syranide,syranide",2017-09-13 05:54:59,2017-09-13 12:49:12
IS,Wrong SSR diff warning due to non lowercase attributes,Do you want to request a feature or report a bug Bug What is the current behavior I got this warning Warning Extra attributes from the server preserveAspectRatio viewBox during client side hydratation when my react tree contains mixed case attributes such as these svg ones What is the expected behavior No warnings because there are no difference between server and client attributes Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 rc 2 This worked on 15 This seems to happen because the attribute name is put to lowercase here L901 but not in the set here L915 As the set removal is done with the lowercased attribute L1011 it stays in the extraAttributeNames set and I got wrongly the previous warning,,"gaearon,gaearon,gaearon",2017-09-11 16:26:28,2017-09-13 15:31:40
PR,Fix false positive hydration warning for SVG attributes,Fixes The new test used to fail but now passes,,"gaearon,gaearon,sebmarkbage,sebmarkbage,nhunzaker,sebmarkbage,nhunzaker,sebmarkbage,nhunzaker,nhunzaker,nhunzaker,nhunzaker,sebmarkbage,gaearon,nhunzaker,sebmarkbage,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,gaearon",2017-09-11 19:18:00,2017-09-13 15:31:40
IS,ReactChildFiber coerceRef does not like undefined ref on a component,Do you want to request a feature or report a bug Bug What is the current behavior coerceRef in ReactChildFiber accepts ref null on a component but not typeof ref 'undefined' and so borks with Expected ref to be a function or a string If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Could be fixed by either coercing ref into being null if undefined or also testing for undefined What is the expected behavior Treat typeof ref 'undefined' as ref null Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 16 0 0rc2,,"sophiebits,sophiebits",2017-09-08 19:02:33,2017-09-13 16:36:36
IS,How does the fetch htttp parameter increment with the timer setInterval,I want to do a function with the timer to get the number of pages whenever the timer runs once the parameter page by 1 This is my code,,jquense,2017-09-13 16:43:55,2017-09-13 16:49:13
IS,Consider What Happens to XSS Surface Area With No Whitelist,Consider the case in 10506 but let is say we have fix it by special casing dangerouslySetInnerHTML to use a symbol Now consider this URL If onclick or any other event name current or future gets passed through as a plain old string then this is a XSS vulnerability The tricky part about this one is that it is plain old strings and it is a potentially infinite long list since it also includes future event names Now I think a safe strategy might be to hard blacklist meaning they do not get added to the DOM any attribute that starts with on Does that cover everything cc,,"sebmarkbage,nhunzaker,nhunzaker,sebmarkbage,syranide,sebmarkbage",2017-08-22 01:30:35,2017-09-13 17:12:02
IS,Warn for unknown non lowercase attributes,It seems problematic to allow arbitary non lowercase attribute on HTML nodes Because the server has no ability to keep them case sensitive HTML is not So they will end up different on the client We should probably warn if the attribute is not a known one and is not lowercase,,"gaearon,nhunzaker,sebmarkbage,nhunzaker",2017-09-01 01:53:10,2017-09-13 17:13:13
PR,Warn against custom non lowercase attributes,Fixes,,"gaearon,gaearon,gaearon,gaearon,gaearon,jquense,jquense,nhunzaker,gaearon,jquense,sebmarkbage,sebmarkbage,jquense,gaearon",2017-09-13 16:38:08,2017-09-13 17:13:14
IS,Ensure flat bundles do not duplicate code with weak minifiers,If the minifier does not eliminate constant expressions like Uglify does with the way our flat bundles currently work you would ship two bundles We should warn prominently in this case as you would effectively ship a double bundle to production,,"gaearon,flarnie,gaearon,gaearon,flarnie,trueadm,gaearon,trueadm,gaearon,flarnie,flarnie,gaearon",2017-05-02 22:34:08,2017-09-13 22:51:43
PR,Report bad dead code elimination to React DevTools,Fixes again We started with then reverted it in over concerns in This time we don t rely on toString inside ReactDOM itself Instead we report to React DevTools if they exist passing the function itself as an argument React DevTools can check for there and both produce the red React and potentially even do the setTimeout trick to report the error to analytics This doesn t have the same concerns as explained in because we re not doing it for every user but only for React developers who visit React powered websites which are also built with CommonJS So it s a smaller slice If we suddenly can t rely on toString anymore we can always cut that code from DevTools,,"gaearon,sebmarkbage,gaearon,sebmarkbage,gaearon,gaearon,sophiebits,gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon,gaearon",2017-09-13 21:48:00,2017-09-13 22:51:43
PR,Fix FB isomorphic build,yarn build worked but yarn build type FB failed I tracked it down to a mutation in the bundle config Since NODE builds ran just before FB the newly added object assign external was already there and yarn build worked even though it was still missing in FB configuration This deep freezes the config removes the mutation and explicitly adds object assign as an external for FB builds We ll need to set up an internal www node modules object assign shim that just points it at our Object assign polyfill or even Object assign itself since our polyfill is global I want to note that technically that object assign import ends up unused in the FB bundle It was a hack to remove UMD duplication But it doesn t harm to keep it IMO Better than forking the entry point again,,"gaearon,sophiebits,sophiebits,gaearon,gaearon,gaearon",2017-09-14 00:06:07,2017-09-14 00:24:32
IS,Can we use react with 2 css framework,I have project with bulma css It is done Now my team is going to re design it with bootstrap framework We will do it with this flow 1 For old screens we continue use Bulma 2 For new screens we will use bootstrap We will implement one by one for all screens Then all pages from 1 move to 2 We create new MainLayout for and import css for it but it still affect to whole pages My question is that can i do it with react,,"jquense,aweary",2017-09-14 04:01:17,2017-09-14 04:57:52
IS,question about setstate,hi I came up with some doubt using react eg Q1 instrument is an object and I want to change the nested key is value such as isSelected which method is better I prefer the second but I'm not sure if it works Q2 about nested object which method is better to change the key is value,,"gaearon,bgnx,monkindey",2017-09-14 09:58:25,2017-09-14 10:39:21
IS,React 16 RC 3,Copy pasting the checklist I m going through from Ensure all commits in master were tested at Facebook Check that they were a part of the latest internal sync For stable releases prefer that they ve been landed for a week or so Only skip this step if you really know what you re doing Verify that you have npm permissions x You re in npm owner ls react x You re in npm owner ls react art x You re in npm owner ls react dom x You re in npm owner ls react test renderer If not ping someone on the team Ensure your React is fresh x Ensure you re on master x Do a git pull x Is master green on CI Check the most recent commits x Check that your local git log output matches the commit list x Run yarn in the repo root Ensure runtime dependencies match what users would get x For fbjs x Look at the version range of fbjs in root package json x Ensure all packages package json depending on fbjs specify the same range x For object assign x Look at the version range of object assign in root package json x Ensure all packages package json depending on object assign specify the same range x For prop types x Look at the version range of prop types in root package json x Ensure all packages package json depending on prop types specify the same range x Run yarn upgrade object assign prop types fbjs x This might change the lockfile This should not change any package json x Commit the changes if any Do the local sanity checks in the repo root x Run yarn test in the repo root x Run yarn lint in the repo root x Run yarn flow in the repo root STABLE RELEASE ONLY Update error codes x Run yarn build extract errors in the repo root x If scripts error codes codes json changes git commit am 'Update error codes' x Maybe If we still have a separate stable branch for docs when you re reading this we need to cherry pick that commit to that branch This makes sure the website decoder knows about the updated error codes But ideally we should just change docs to serve from master STABLE RELEASE ONLY Write the changelog Open CHANGELOG md and add release notes in the same format as earlier Make sure the changes are easy to understand Friendly one liners are better than PR titles Make sure all contributors are credited just like before Verify that the markup isn t messed up by previewing it in the online editor Update the version x Update version in root package json x Update export in src ReactVersion js x Update version in all packages package json x packages react art package json x packages react dom package json x packages react noop renderer package json x packages react test renderer package json x If you see any other packages update this list x Run yarn version check to verify your changes x git commit am version number Build it x Run yarn build in the repo root Run fast packaging smoke test x Open fixtures packaging babel standalone dev html in the browser for a smoke test x It should say Hello world Run slow packaging smoke test x Go to cd fixtures packaging and run node build all js x npm install g serve x Go to the repo root and run serve s x Open 5000 fixtures packaging and verify every iframe shows Hello World Release x Run git push x Run git push tags x Go to build packages x For every subfolder x For non stable versions Run npm publish tag next in the subfolder For stable versions Run npm publish in the subfolder x Run npm info package dist tags to verify that things were published as you expect FIXME We should really automate this part because it s currently not atomic STABLE RELEASE ONLY Create GitHub Release Open New Release page on GitHub Choose the tag version you just pushed in the dropdown so that it says Existing tag Paste the new release notes from CHANGELOG md Attach all files in build dist js except react art to the release Press Publish release STABLE RELEASE ONLY Update the version reported on the website Open docs config yml Change react version in it to the newly published version git commit am Update the reported React version on the website Maybe If we still have a separate stable branch for docs when you re reading this we need to cherry pick that commit to that branch This makes sure the website knows about the updated config But ideally we should just change docs to serve from master STABLE RELEASE ONLY Update Bower Clone the Bower repo outside of main repo git clone Make sure it s on master and you did git pull Delete all JS files from the Bower repo and copy all build dist js from React repo into it In the Bower repo git commit am version number In the Bower repo git tag a v version number Don t miss the v In the Bower repo git push and git push tags STABLE RELEASE ONLY Try it out npm i g create react app create react app myapp cd myapp npm start STABLE RELEASE ONLY Reach out to DOM team Reach out to the DOM team nhunzaker in case they would like to go through DOM fixtures This doesn t block the release,,"gaearon,gaearon",2017-09-14 12:28:32,2017-09-14 13:11:35
PR,Adds a dummy function to assist react devtools to look for minification,Patch for react devtools 694 Refer comment issuecomment 300535376 cc,,"prometheansacrifice,gaearon,gaearon,prometheansacrifice,gaearon,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,prometheansacrifice,gaearon,prometheansacrifice,gaearon,prometheansacrifice",2017-05-11 07:33:19,2017-09-14 14:17:35
PR,Remove View propTypes RN deprecation workaround,Looks like we do not need it anymore Based on Revert this particular change any time after April 1 ReactNative tag I have not actually tested,,"gaearon,gaearon",2017-09-12 15:59:06,2017-09-14 18:46:25
PR,Fix bug with toTree on rendered array 10616,This PR addresses From the snippet mentioned in the issue the expected behavior is indeed to log the array of elements instead of only the first element In addition to that there were some inconsistencies with the output generated by the different component types For example HostComponent rendered will always be an array while FunctionalComponent rendered will be an object which by the way is what led to the issue In order to make the response more predictable Component rendered will always return an array or null Tests white check mark Linting white check mark Flow white check mark,,"clemmy,acdlite,clemmy,clemmy,acdlite,acdlite,clemmy,acdlite,lelandrichardson,acdlite,lelandrichardson,clemmy,gaearon,acdlite",2017-09-08 21:56:23,2017-09-14 21:15:44
PR,Small typo fixed,,,"anujaware,anujaware",2017-09-13 19:35:13,2017-09-14 21:39:18
PR,ReactNativeBridgeEventPlugin supports lazily registered event types,Previously React Native loaded event type info from UIManager during initialization to configure the event plugin This communication with UIManager caused Prepack deopts and was removed with 10567 in favor of hard coded event types Unfortunately this change had the unexpected result of blocking custom 3rd party view managers from defining their own event types After some consideration I believe the best path forward is to lazily read event types for each view manager This approach unlocks the ability to lazily initialize view managers on the native side as well This PR deletes the hard coded event list formerly ReactNativeEventTypes and adds a new method processEventTypes to ReactNativeBridgeEventPlugin to be called by requireNativeComponent each time a new view manager is initialized I have also updated event related tests to roughly mimic what happens in the native context,,"bvaughn,sophiebits,sophiebits,sophiebits,bvaughn,bvaughn,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,bvaughn",2017-09-12 15:23:40,2017-09-14 21:55:33
PR,Push host root context when bailing out on low priority,Prevents a push pop mismatch when bailing out on HostRoots This is currently unobservable because HostRoots never bail out on low priority but this does happen with prerendering I found this when rebasing 10624 on top of master Submitting the fix in its own PR in to make sure I do not forget about it in case my prerendering PR does not land as is,,"acdlite,gaearon,acdlite",2017-09-14 18:23:41,2017-09-14 22:23:56
IS,React 16 shallow renderer batched updates discussion,React 16 comes with a new completely rewritten shallow renderer The new renderer does not currently provide an unstable batchedUpdates method This issue is for discussion about whether it should implement that method cc and who recently discussed wrt its potential impact on Enzyme cc who initially added the integration with Enzyme and who also provided an example implementation,,"bvaughn,koba04,koba04,bvaughn,gaearon,sophiebits,gaearon,gaearon,koba04,koba04,koba04",2017-08-02 14:57:44,2017-09-15 12:38:02
IS,scrollTop changed on chrome while loading page,Do you want to request a feature or report a bug bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template tried to make a minimal example but could not tried to create a proxy to trap the change to scrollTop but could not figure out how to make a proxy for document or body tried to look through react source to find where scrollTop is changed but did not find anything that set it only saved it quickly click on buy or rent page scrolls down a little quickly click on preferences page jumps to top What is the expected behavior quickly click on buy or rent page scrolls down a little quickly click on preferences page scroll does not change Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 5 4 15 6 1 chrome 57 on linux chrome 60 on android not firefox 55 on linux did not test on previous versions of react,,aweary,2017-09-15 09:52:21,2017-09-15 15:31:07
IS,react test renderer renders attributes with value of undefined,Do you want to request a feature or report a bug Bug What is the current behavior react test renderer appears to render attributes in a way that is inconsistent with React in the browser When rendering with React attributes with a value that is not truthy are omitted from the render In react test renderer an attribute with a value of undefined still renders If the current behaviour is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template With a component like this When rendering Link newTab true In React a href target blank link a In react test renderer a href target blank link a When rendering Link In React a href link a In react test renderer a href target undefined link a What is the expected behavior I would expect react test renderer to have the same behaviour as React in the browser So in this case the undefined attribute would not be rendered at all Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Using version 15 6 1 of react test renderer and React Chrome on a MacBook Testing with Jest snapshots in version 19 0 2,,aweary,2017-08-30 13:59:20,2017-09-15 15:57:43
IS,Warn and remove when a known attribute of a DOM component receives a Symbol as a value,Do you want to request a feature or report a bug This is a possibly incorrect corner case which we should correct before finalizing the new behavior of unknown attributes See for more context on the changes to behavior with unknown attributes If this happens with unknown attributes we want to warn and then remove the attribute The behavior should be consistent between known and unknown attributes What is the current behavior We currently throw a generic error when a Symbol is passed to a known attribute which expects a string If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Example Also happens with spreading of objects in as props What is the expected behavior We should warn and remove the attribute since that is not a valid value Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Recent react 15 and 16 beta as well,,"flarnie,aweary,gaearon,flarnie",2017-08-22 22:44:33,2017-09-15 16:19:21
IS,Update React license FAQ update license itself,I have read the previous discussions regarding the React and other Facebook OSS license in particular 10191 and I agree with most of the clarificatory remarks esp by that Facebook does not intend to use this license offensively However after today is announcement by Automattic that WordPress com is Calypso and WordPress Core is Gutenberg will no longer be using React I believe that Facebook is efforts in clarifying the React license have clearly fallen short At the least the FAQs need to be extended and explained in much greater detail Ideally this recent announcement should cause Facebook to rework the license altogether Some have said that the issue tracker is not the place for this discussion I believe that this is untrue though I apologize for causing noise The growing apprehension to use React will undoubtedly have effects down the line regarding the React ecosystem Buy in from the WordPress core community would have been a huge benefit to React I think maybe I'm wrong about that Further this issue track is where this license issue will have the greatest exposure Perhaps as the Automattic post implies the problem is not the license itself but the perception of the license That problem is an issue for React and the issue will only get worse without being addressed more genuinely I know that the developers here can not do that but I hope that something can be done or that these concerns can be funneled through the proper channels,,"gaearon,gaearon",2017-09-15 17:54:41,2017-09-15 18:23:06
PR,Gatsby Docs Update Fix meta tags and ssr docs build,what is the change Use markdownRemark fields path instead of location path We updated the graphQL query to request this info for all pages and then use it Also we had to change the syntax in gatsby node js because for some unclear reason the fields came in as undefined when using that shortcut syntax why make this change location is undefined during the SSR phase and we want the SSR build to succeed test plan Manual testing Ran yarn build and it worked Ran yarn dev and manually inspected the head element contents img width 809 alt screen shot 2017 09 14 at 10 46 54 am src img width 636 alt screen shot 2017 09 14 at 10 47 20 am src img width 638 alt screen shot 2017 09 14 at 10 47 40 am src issue checklist on the docs site wiki Misc Meta Title tags,,"flarnie,bvaughn,flarnie,bvaughn,bvaughn",2017-09-14 01:00:48,2017-09-15 20:39:10
PR,Bumped Gatsby deps to fix PNG issue,Creating a PR to see if Netlify leaves a comment via reactjs bot,,bvaughn,2017-09-15 20:36:39,2017-09-15 20:50:42
IS,React synthetic mouseenter event fires before dom mouseleave event,Do you want to request a feature or report a bug Bug I think What is the current behavior If you have two elements next two each other and the mouse moves from element 1 to element 2 then if I have registered an event listeners as below again the mouse enter events fire after the mouse leave events for elements sharing the boundary However If I mix events and use synthetic react events for mouse enter and dom events for mouse leave I find that the mouse enter event handler is triggered before the mouse leave event handler for elements sharing the same boundary If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template CodePen What is the expected behavior Mouse enter should always fire after mouse leave even when we are using a mixture of synthetic and dom events Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 OS windows 7 Broken in both Chrome 60 0 3112 90 IE 11 09600 18738CO,,"aweary,aweary,monkindey",2017-08-16 15:50:55,2017-09-15 21:05:25
IS,unexpected re render between different node env,Hi Do you want to request a feature or report a bug I'm reporting a bug that gets me crazy What is the current behavior We found a very strange behavior between the development version and the production one We do not know why but with the production build when a redirect happens the entire tree under the switch component is re rendered from scratch NODE ENV development dev NODE ENV production prod We noticed that in the production env keys are generated every time the route changes I opened an issue on react router repos also We tried also to do not minify anything and the result it is the same Someone knows why this is happening and what may be causing it Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 5 4 react router dom 4 1 1 OS MacOS Sierra Version 10 12 4 Browser Google Chrome Version 60 0 3112 78 Official Build 64 bit,,"gaearon,aweary",2017-08-08 20:20:33,2017-09-15 21:31:57
IS,No cursor in input element when onfocus uses stopPropagation in Firefox 54,Do you want to request a feature or report a bug Bug What is the current behavior When the onFocus event handler of an input element calls stopPropagation the cursor of the input element as well as the selection is not shown in Firefox 54 0 1 64 Bit Steps to reproduce Create an input element and call stopPropation in the onFocus event handler JSFiddle What is the expected behavior Expected is that the cursor and the selection of text is visible in the input element as seen in Chrome 58 64 Bit and Edge 38 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I have seen this issue in React 15 5 4 and 15 6 1 in Firefox 54 0 1 64 Bit on Windows 10,,"gaearon,aweary",2017-07-20 09:26:15,2017-09-15 21:44:16
IS,Number input not firing onChange,I don t know if it is bug or feature but since you put into input with type number two minuses it will stop calling onChange callback but value inside input will change React 15 4 2 Browser Version 60 0 3112 90 Official Build 64 bit,,"jquense,jquense,aweary,aweary",2017-08-03 17:03:40,2017-09-15 21:59:51
PR,Fixes 9667 allow Edge and IE child windows to use Text Components,Fixes 9667 Appending a child insertBefore with a documentFragment apparently is not supported in IE Edge I have added code to simply skip this node and just let the tree walking algo add the nodes below,,gaearon,2017-09-15 19:55:26,2017-09-16 17:18:03
IS,Component returns undefined outside render function,Do you want to request a feature or report a bug Bug What is the current behavior React component imported from index js file which exports all components in one place returns undefined outside render function in container component Path to components folder is resolved by webpack config resolve modules option My file structure is What is the expected behavior Described in the code above Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 OS macOS 10 12 6 Browser Google Chrome 61 0 3163 79,,"gaearon,gaearon,gaearon,gaearon",2017-09-16 23:11:41,2017-09-17 00:02:49
IS,Multiple clicks needed for non anchor element onClick with padding in Safari,Do you want to request a feature or report a bug Bug What is the current behavior In mobile safari and some versions of desktop safari onClick on any non anchor element requires two click to trigger if the element contains multiple comment text nodes AND the clicks are on the second or later text nodes AND EITHER the element has padding AND the element is not set to or natively display inline OR the element has display flex thanks It can be worked around by either not having padding on the element OR ensuring that the element contains only one text node OR adding a single top level element inside the element with the onClick and then having multiple text nodes within that instead e g span onClick thing span multi ' ' nodes span span instead of span onClick thing multi ' ' nodes span If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template This can be seen on this fiddle First Yea is a span with one text node one click works Second Yea is the first text node of a span with padding one click works Nah is the second text node of a span with padding needs two clicks Third and fourth Yeah have the same markup span with multiple text nodes but no padding one click works Note that you will need to zoom in to make sure you are hitting the Nah on mobile to reproduce the behaviour as it is sensitive to the exact area hit Note that on desktop to ensure that you are clicking on the text you should be seeing the text cursor when over the Nah items if you are seeing the default cursor then you are on the span which will work What is the expected behavior All text nodes should trigger the click handler on the first click Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Current react Desktop Safari 10 1 1 12603 2 4 Mobile Safari on iOS 10 3 2 14F89 use agent 5 0 iPhone CPU iPhone OS 10 3 2 like Max OS X AppleWebKit 603 2 4 KHTML like Gecko Version 10 0 Mobile 14F89 Safari 602 1 Thanks to and h for this,,"nhunzaker,nhunzaker,aweary,nhunzaker",2017-07-06 03:15:59,2017-09-17 14:31:24
PR,Add 'Unreleased' section to changelog update 'contributing' docs,what is the change Add 'Unreleased' section to CHANGELOG Add step to 'contributing' about updating the CHANGELOG why make this change Whoever does the release of a new React version must manually read through the recent git history and write the CHANGELOG update If we incrementally add to the CHANGELOG under the 'Unreleased' header as we make PRs then to release a new version will just be updating 'Unreleased' to be the new version number and adding a blank section for 'Unreleased' See for more info about this idea test plan Visual verification of the change and also I built the website locally and inspected the change screen shot 2017 04 26 at 7 57 07 am issue,,"flarnie,gaearon,flarnie,flarnie,gaearon,flarnie,flarnie,flarnie,flarnie",2017-04-26 14:58:45,2017-09-18 06:08:39
IS,Rendering NaN as DOM attribute,This blog post states that NaN values are ignored for DOM attributes In my tests that is not the case and NaN are rendered img width 637 alt screen shot 2017 09 18 at 10 55 44 src I created a CodeSandbox using React 16 RC3 to demonstrate it here,,"gaearon,gaearon",2017-09-18 09:03:28,2017-09-18 11:56:15
IS,Number input goes into infinite loop when Chrome debugger on,Possibly related to On Mac Chrome 49 I have a pretty standard number input like so input type 'number' step '0 01' min '0' onChange someCallback value value When I click the arrow in the input field to change the number it works properly However when I open the Chrome inspector and throw a breakpoint somewhere in my rendering flow I get into an infinite loop where the value of the input field keeps incrementing It is possible this may be a chrome bug as well Stack trace showing how it is looping image,,"gaearon,jimfb,jimfb,jimfb,jimfb,nhunzaker,nhunzaker,sophiebits,nhunzaker",2016-04-13 13:59:04,2017-09-18 16:13:12
IS,Adding the letter 'e' to an input field with type number does not cause the onChange handler to fire,Do you want to request a feature or report a bug Report a bug What is the current behavior Adding the letter 'e' to an input field with type number does not cause the onChange handler to fire If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior fire the event with some value at least maybe Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React do not know,,aweary,2017-09-18 16:50:20,2017-09-18 19:13:58
IS,change bsd License patent into other licence please,baidu is already baned to using react this licence is brings extreamly negative effects on the long term development and hurted people who love react i am one of them i will post this issue everyday until it is change,,"gaearon,gaearon",2017-09-19 06:31:59,2017-09-19 10:01:25
IS,Give up react cause licensed,React is a great framework for h5 and native but i have to give react up cause bsd parent licensed if react keep using bsd parent licensed there will be more and more people give it up i'v choose a new framework for my project good bye,,gaearon,2017-09-19 05:35:45,2017-09-19 10:02:27
PR,Update LICENSE,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gaearon,2017-09-19 06:44:28,2017-09-19 10:05:08
IS,Building tools for humans what is against,according to this patent i against Facebook or any of its subsidiaries or corporate affiliates ii against any party if such Patent Assertion arises in whole or in part from any software technology product or service of Facebook or any of its subsidiaries or corporate affiliates or iii against any party relating to the Software Notwithstanding the foregoing if Facebook or any of its subsidiaries or corporate affiliates files a lawsuit alleging patent infringement against you in the first instance and you respond by filing a patent infringement counterclaim in that lawsuit against that party that is unrelated to the Software the license granted hereunder will not terminate under section i of this paragraph due to such counterclaim if this patent is aim to protect facebook itself avoid to legal risk i think this patent should be more clearly explain what is against is this means could not using react to make damage tools to facebook or just could not make competitive product such as im soft ai soft we post these issue because we love react and do not want to abandon react and really want to using react to building useful things for humans,,"gaearon,gaearon",2017-09-19 12:05:36,2017-09-19 12:11:28
IS,sorry i will continue to make noise for those people who really love react and been forced to abandon,until patent licence is change or be more clearly explain 'against' good morning see you tomorrow and thank you,,"gaearon,gaearon",2017-09-19 12:42:17,2017-09-19 12:49:59
PR,Gatsby Docs Update Initial version of new sidebar,what is the change Adds media queries and JS to make sidebar collapse expand from a sticky bottom bar on small screen sizes This is very much a WIP Tons of stuff is not finished or working as I would like Let is either use this as a discussion starter or continue work on top of it why make this change Moving closer to Joe is fantastic design test plan Manual testing short sidebar gif 9 14 issue Various items under the Sidebar Component on this checklist,,"flarnie,bvaughn,bvaughn,flarnie,flarnie,flarnie,bvaughn,bvaughn,joecritch,bvaughn",2017-09-14 06:41:16,2017-09-19 16:10:08
PR,Gatsby Docs Update Sidebar article layout updates,This supersedes 10707 what are the changes Adds media queries and JS to make sidebar collapse expand from a sticky bottom bar on small screen sizes tweaks to colour contrast checked using aXe and some html attributes centralised article layout for large desktops created a carousel like overflow for the marketing columns on mobile moved 'Edit this page' to the bottom as part of the new centralised layout offset note and code blocks out of the grid so there text lines up this was previously an issue with CodeMirror but i think we are good now why make these changes improved accessibility score improved readability on large desktop improved use of screen space on mobile test plan manual testing,,"joecritch,bvaughn,bvaughn,bvaughn,joecritch,bvaughn,joecritch,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,joecritch,joecritch,joecritch,joecritch,joecritch,bvaughn,bvaughn,joecritch,bvaughn,bvaughn,bvaughn",2017-09-18 13:20:48,2017-09-19 16:54:41
PR,Add React Amsterdam 2018 Conference,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,operatino,2017-09-18 11:38:38,2017-09-19 18:23:29
IS,TypeError SyntheticEvent call is not a function in development mode with Webkit browser,Do you want to request a feature or report a bug It is a bug What is the current behavior I am using Webpack to built React based app pgAdmin4 The app runs in two modes 1 Desktop aka runtime mode It opens in Webkit browser 2 Server mode It opens in any of the browsers such as Chrome Firefox etc I am getting the error when the app is built using webpack with development flag enabled It works fine in production mode If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Since the app is run on Webkit browser It is not possible to provide a test environment However If anyone wants he can build using the steps provided in README or this blog post What is the expected behavior The React base app should run without any error in dev mode Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 4 2 OS Mac OS X Yosemite 10 10 2 Browser annulen QtWebkit 58 Browser Qt version Qt5 8 0 Please let me know if you need more details,,"aweary,aweary",2017-08-31 12:42:38,2017-09-19 18:39:36
PR,Fixed position of mobile footer,Before screen shot 2017 09 19 at 2 30 38 pm After screen shot 2017 09 19 at 2 30 24 pm cc,,"bvaughn,bvaughn",2017-09-19 21:31:51,2017-09-19 21:58:52
PR,Replaced react motion with CSS transition for better perf,menu animation cc,,"bvaughn,bvaughn",2017-09-19 22:05:37,2017-09-19 22:12:03
PR,Header component search input fixed for mobile,Header mobile search bar Popup screen shot 2017 09 19 at 2 11 46 pm The mobile CSS is pretty hacky but then again so is the entire algolia css file I'm not too concerned about it though since one of our follow up items post launch is to replace it with a client side search The popup is also a bit blurry on mobile This has something to do with the fixed position but I'm not sure what else is causing it Since it impacts mobile only and we plan to replace this popup soon I do not consider it a blocker cc,,"bvaughn,bvaughn,bvaughn",2017-09-19 20:04:29,2017-09-19 22:12:54
IS,Text inputs are manipulated multiple times and unnecessarily in the DOM,Steps to reproduce I created a JS Bin to reproduce the problem js console output 1 Type Perf start into the console third pane from the left 2 Edit the contents of one of the text inputs in the rightmost pane 3 Type Perf stop and Perf printDOM into the console This should show that the value attribute of the edited text input was updated three times in the DOM and the unedited text input was also updated once I tested the same code with 0 13 1 According to React addons Perf only the modified input was updated in the DOM and it was only updated once,,"tbroadley,syranide,sophiebits,tbroadley,sophiebits,tbroadley,tbroadley,karczk,aweary",2015-10-26 23:41:58,2017-09-20 00:59:04
IS,The selected attribute for option tags are not rendered correctly,This will cause Selenium tests to fail when using getFirstSelectedOption to find the selected item with the Java API This seems to affect at least 0 12 and forward This example should set the selected attribute on the selected option tag,,"syranide,gaearon,gaearon,gaearon,gaearon,aweary",2015-10-23 08:37:51,2017-09-20 01:21:19
IS,Some assertions left in production mode,A few assertions are left in the production output using webpack p if that matters as they are not located inside an if env block Could squeeze a few bytes Examples,,"jimfb,aweary",2016-01-17 21:43:23,2017-09-20 01:26:05
IS,Deprecate isMounted,isMounted is already unavailable on ES6 classes and we already have a warning saying we might remove them but we do not actually have a github issue to deprecate them As per our discussions today we are basically agreed that we are going to start moving away from isMounted and deprecate it We still need to figure out some good stories around promises and related use cases This issue is to track progress toward that goal For background please read issuecomment 68738793 issuecomment 155577641,,"jimfb,jimfb,zpao,jimfb,lasekio,lasekio,jimfb,jimfb,STRML,aweary",2015-11-13 23:18:09,2017-09-20 01:40:50
IS,pureRender static property,The majority of components should have PureRenderMixin like behavior With es6 classes and function components there is no easy way to use mixins Because it is such a common use case I think it should be part of core react I think this will encourage more people to use pure render because it is a lot simpler to add This is a good compromise on the requests to make pure render the default behavior,,"brigand,jimfb,brigand,zpao,jimfb,sebmarkbage,syranide,aweary",2016-01-06 05:43:20,2017-09-20 01:42:05
IS,Missing onLoad and onError events on SVG image tag,SVG image is supposed as far as I know to support at least the same onload and onerror events img supports From looking at React code the events are handled on specific elements in ReactDOMComponents js in trapBubbledEventsLocal mountComponent unmountComponent It would be easy to create a pull request to add 'image' to these cases but it seems that there is a separation between js files that handle DOM and SVG in the codebase that this might collide with Am I correct and there is more to it than just adding more cases Or these functions are the right place to also handle SVG image,,"gaearon,Simek,aweary,gaearon",2015-12-08 11:38:40,2017-09-20 01:43:13
PR,15 6 1 source read,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-20 07:39:46,2017-09-20 07:42:21
IS,Feature request Create components with Component create,I propose the createReactClass function from the 'create react class' module be added as a create member to the Component constructor By using the Component create syntax the following confusion points are eliminated constructor props super props vs this props Developers wo not need to add constructor props super props inside their components They will only deal with this props constructor props this state vs this setState Developers wo not need to remember the special case when to assign to this state They will only use this setState Initialising the state will be done inside the getInitialState method constructor props this m this m bind this Developers wo not have to manually bind their methods function MyComponent props vs class MyComponent extends Component Developers wo not have to use 2 syntaxes for defining their components Stateless components will be transpiled as function declarations for better performance Moreover transitioning from a stateless component to a stateful one will be painless,,aweary,2017-09-20 14:39:39,2017-09-20 15:50:17
IS,TypeError Cannot read property 'createElement' of undefined,TypeError Cannot read property 'createElement' of undefined,,aweary,2017-09-20 03:16:56,2017-09-20 15:53:20
IS,ReactInputSelection TypeError,I got an automated error report from Sentry relating to ReactInputSelection and thought I would notify you in case this is of interest Unfortunately I do not know what the user was doing when this happened Mozilla 5 0 Windows NT 10 0 WOW64 rv 53 0 Gecko 20100101 Firefox 53 0 react dom 15 4 2 img width 1083 alt screen shot 2017 05 08 at 7 53 22 pm src,,aweary,2017-05-09 00:58:36,2017-09-20 16:01:37
IS,Really strage error when pressing F5,I work for a company and we are converting the previous server side website to react with rest services We have started making components we when we press F5 we get the following error in the console Exception thrown by hook while handling onSetChildren Invariant Violation Expected onMountComponent to fire for the child before its parent includes it in onSetChildren Also the browser jumps to a completly different url We use a container with 2 components in it Any solutions,,"gaearon,tsriram,gaearon,gaearon,aweary",2017-05-03 06:29:24,2017-09-20 16:03:14
IS,Possible for component to listen to events from non descendent elements,Do you want to request a feature or report a bug Feature What is the current behavior Components can only attach event listeners eg onClick to their descendent DOM elements Is there a way for a component to listen to events originating from elements that are not descedents The use case I have in mind is I have a bunch of components marked out with pink borders in the screenshot below that control their own state and I want their state to change if a click happens anywhere in the purple region I could solve this by moving the state up to the parent the component that renders the purple div but that seems to be a consequence of the fact that the event listening tree is tied to the render tree not that the components state actually interact at all image,,aweary,2017-05-03 09:24:06,2017-09-20 16:07:29
IS,hostContainerInfo always null in IE11 Edge,We have a react application that is working perfectly fine on all browsers except IE11 11 0 9 React Application wo not even load on IE11 because in react dom lib ReactDOMComponent js line 405 hostContainerInfo is always null While Chrome and firefox always gets proper value for hostContainerInfo Versions used react react dom 15 4 1 Tried downgrading react to 15 3 2 and upgrading it 15 4 1 but the problem still exists Any guidance on how to approach this problem would be very helpful Thanks,,"gaearon,aweary",2017-04-27 18:53:16,2017-09-20 16:08:09
IS,Avoid adding ' ' in inlined styles when unnecessary,Do you want to request a feature or report a bug Sounds like a feature but this is causing problem when server side generated HTML payload are pass through html minifier What is the current behavior As stated in the serialization function L172 all properties are ended with a If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template N A What is the expected behavior All properties should be ended with a except the last one Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A Referenced issue,,"syranide,syranide,aweary",2017-04-06 13:11:20,2017-09-20 16:10:54
IS,Finding whether an event is a true synthetic event for html element,Do you want to request a feature or report a bug Requesting a feature As far as my knowledge Sorry if I am wrong currently I can not able to find whether an event is a valid synthetic event for a html DOM element For example onChange is a valid event for input type text It would be helpful if we have an API to check whether given method is a valid synthetic event for the html element Use case Lets say I write a component which has input as child I would like to pass in synthetic event as props to the parent component In the child component I would loop to see if a prop is a valid synthetic element and attach as props to the child element If not do not attach to the HTML element In parent component Child onEnter onClick All synthetic events In child component I will render this input validSyntheticEventsCallback name name validSyntheticEventsCallback will include all the props that are valid synthetic events This will help in making parent components more generic to write Also all those logic can be included in the parent component itself What is the current behavior Currently we need to manually assign every event with the DOM Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React It is not related to browser OS version issue,,"syranide,aweary,syranide",2017-03-15 11:49:31,2017-09-20 16:13:00
IS,Offer an opinionated helper for HOC creation for authors,HOCs are great I think we can all agree What is not so great however is that React has no opinion on how people should implement HOCs and so both users and authors alike have no guideline when it comes to implementing a consistent api for using multiple HOCs especially when those HOCs get chained As such I think that there is an opportunity to make the lives of both developers who work with React as well as HOC maintainers who have to make sure their HOCs work in a variety of code bases easier by having React be slightly opinionated on how to write a HOC To describe the problem right now there is no established way to ask a HOC for the component class es that were put in nor an established way to access the real element that a HOC wraps As such each HOC has to either settle for too bad for my users or invent its own API for this and as many have gone the second route there are a fair few different ways that this access has been implemented over different HOCs To fix this I would like to suggest establishing a best practice guided by React by adding a React createHOC mechanism with corresponding import HOC from React class Thing extends HOC to the next version of React so that users and authors no longer need to guess APIs My suggestion would be for this React HOC class to define a constructor that takes an arbitrary number of Component classes a getClasses function that returns the list of Component class es that were passed in a getInstances function that returns the list of element s that the HOC actually builds and knows how to access by ref based on the Component class names As an example and the following code is public domain which I unfortunately need to be point out because I am unable to sign the CLA necessary to file PRs so I can not file a PR in conjunction to this issue As such the following code lacks as much implementation as possible so as to allow for PRs by others This lets React solve the problem of standardizing the barebones functionality that users and authors should be able to rely on to just work without interfering with how HOCs currently work or dictating how people should write their HOCs you can keep writing HOCs as plain Components that wrap one or more components but extending from HOC now offers you a zero effort option to impart some functionality for free that users will appreciate There is an interesting suggestion in issuecomment 291816217 that instead relies on rebinding props but this might not good enough as this would also expose refs used by the HOC for internal purposes and the user should not be able to fiddle with Anyway this is mostly an issue filed to get a ball rolling on not so much standardizing how HOCs should be made it feels like React should stay unopinionated on that but on having React offer a helping opinion on one way in which you can write a HOC with the promise that using that means you are now compatible with any other HOC that uses the same suggestion,,"aweary,Andarist,Andarist,aweary",2017-04-05 17:57:04,2017-09-20 16:20:45
PR,Add unpkg field to support unpkg com,It would be great to be able to use react directly through,,"gaearon,gaearon,gaearon,gaearon",2017-09-20 15:35:35,2017-09-20 16:23:05
IS,render a list of message to html with new line,hi I'm new to React and I came up with a problem when using it rendering an array of strings to html such as the array one two three img width 32 alt screen shot 2017 09 18 at 4 25 45 pm src I want to render it with a new line but it seems adding br or n do not work so I use the tag eg p to start a new line render return div one two three map item p item p div is there any method not using block tag hoping for advice thanks,,aweary,2017-09-18 08:28:03,2017-09-20 16:27:55
IS,ClassName and Class inconsistency,Standard elements and custom elements have a diverging API in the case of the class attribute and for they should be consistent to aid developer use I would suggest that the custom element naming is the better solution While class and for are keywords that is obviously mitigated by the fact they are used as object properties,,"nhunzaker,aweary,aweary,nhunzaker",2016-01-27 13:04:02,2017-09-20 16:37:24
IS,React Root Index with Math random causes Invariant Violations with React compiled as V8 Snapshot,Using V8 as a backend with snapshots enabled To optimize performance it is beneficial to create snapshots to improve server side rendering performance After creating snapshot with React js ReactServer js the resulting server side component rendering errors as follows Would it be possible to fix this such that server side heap snapshots can be generated without having to worry about issues with server Math random Could some sort of algorithm that does not rely on Math random be used to generate the nodes root indexes etc OS Ubuntu 14 04 x64 V8 5 0 104 React 0 14 7,,aweary,2016-03-05 02:30:03,2017-09-20 16:40:04
PR,Fixed location prop problem with Gatbsy,I noticed that our mobile nav did not have titles anymore b'c of the null location issue so I looked into that and fixed it albeit with a temporary hack until gatsbyjs gatsby issues 2180 is resolved cc,,bvaughn,2017-09-20 17:07:06,2017-09-20 17:13:11
IS,TypeError undefined is not an object evaluating is get call' from input onChange React 15 6 1 ReactDOM 15 6 0 on Safari 9 1 x,Do you want to request a feature or report a bug A bug What is the current behavior onChange onKeyUp onKeyDown causes TypeError undefined is not an object evaluating is get call' only in Safari If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Component should get event target value and then update the state which in turn re renders the h1 with new state values Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React It works for React 15 3 1 ReactDOM15 3 1,,"gaearon,gaearon,gaearon,jquense,aweary",2017-09-20 08:07:11,2017-09-20 21:26:47
IS,I think we should remove our girhub Star form this project bacause of reat license,I think we should remove our girhub start form this project bacause of reat license I think we should remove our girhub start form this project bacause of reat license I think we should remove our girhub start form this project bacause of reat license,,gaearon,2017-09-21 04:36:45,2017-09-21 04:55:19
PR,Update eslintignore,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-09-20 18:47:59,2017-09-21 08:55:26
PR,Gatsby Docs Update A few tweaks,what is included homepage code blocks now use the MetaTitle heading style removed sidebarFixedNarrowFooter tweak point the smaller breakpoint works fine for this width increased the min of sidebarFixed to match this sidebar still fixes pins itself to the right hand on large desktop monitors to give a centralised reading experience n b this is what i was trying to explain yesterday with the screenshot cssProps removed from Container as now redundant fixed the Footer layout regression now supports slightly different styles depending on with the layoutHasSidebar added dropdown arrows to sidebar to make it more obvious it is an accordion added external link icons to GitHub header link and any external sidebar footer links added the main nav is blue active underline on all breakpoints not just xlarge anymore except xsmall tidied up the header nav on certain breakpoints to ensure items are always visible less horizontal scroll bars etc edit cleaned up Error Decoder page to match recent layout changes Dropdown arrows on sidebar small docs update dropdown arrows External icons for footer links docs update footer link icons External icon for GitHub docs update github icon MetaTitle for homepage blocks docs update homepage code block meta titles,,"joecritch,joecritch,bvaughn",2017-09-21 13:22:27,2017-09-21 15:34:07
PR,Fixed blog html redirect,Corresponds to gatsbyjs gatsby pull 2185 In development Gatsby honors these redirects by just loading the toPath page In production the new gatsby plugin netlify plugin writes a redirects file that looks like this Based on these Netlify docs and this online validator I expect that to work,,bvaughn,2017-09-21 15:51:11,2017-09-21 17:58:34
PR,Removed location props hack now that it is been fixed in Gatbsy,Letting Netlify test this for me before merging,,bvaughn,2017-09-21 18:30:28,2017-09-21 21:54:13
PR,Gatsby Docs Update Extra styling for All Posts template,what is included styling for the All Posts page cc,,joecritch,2017-09-21 18:58:51,2017-09-22 15:05:02
IS,Toggle Menu from external button,I have 2 different components not related in any manner One has a button and second one has a menu I want to open close menu from other component when I click the button inside it Is there any way to add a class directly without setting redux state,,"aweary,bjrmatos",2017-09-21 13:23:48,2017-09-22 19:08:24
PR,Move click handler outside PureComponent render,If I understand correctly wo not this cause a re render every time since we are creating a new function inside the render method Moving it outside to prevent this,,aweary,2017-09-22 20:35:32,2017-09-22 21:04:54
PR,Update changelog for unreleased 16 0 changes,what is the change Copies most content from summarizing and adding links in a couple of cases Tried to group things in a logical way Adds a couple of items under Removed deprecations and New helpful warnings These sections are probably not complete but this is a good start why make this change So that we are ready to go when the 16 0 release is green lighted test plan Visual inspection issue,,"flarnie,gaearon,koba04,flarnie,flarnie,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,nhunzaker,nhunzaker,gaearon,gaearon,gaearon,gaearon,flarnie,flarnie,flarnie,flarnie,gaearon,flarnie,flarnie,flarnie",2017-09-18 06:03:20,2017-09-22 22:22:40
PR,Fixes 9667 Updated createTextInstance to create the text node on correct document,Second try this time update the Fiber reconciler to create the text node on the correct ownerDocument so that when it is being appendChild 'ed insertBefore 'ed it will succeed on IE Edge,,"syranide,syranide,syranide,syranide,gaearon,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,acdlite,sophiebits,sophiebits,gaearon,sophiebits",2017-09-16 17:43:17,2017-09-22 23:08:19
IS,Cant't mount text node components,Cant't mount text node components in a child window in IE11 and Edge It throws the following error SCRIPT87 Invalid argument Debugging the stack trace I have noticed that the fragment creation ownerDocument createDocumentFragment line 7923 react dom js is resulting in a malformed fragment Later when trying to append this malformed fragment to the DOM parentNode insertBefore tree node referenceNode line 1623 react dom js it fails and throws that error I tried to replace the fragment by a span element for this specific case IE11 and child window and it worked Could this be a solution,,gaearon,2017-05-11 19:46:50,2017-09-22 23:08:44
IS,Referencing key within React Children map is defined,This is not necessarily a bug or a feature more so asking for why it is implemented as it currently is When inside of a component this key is undefined however child key is defined and has a value within React Children map I realize these point to different instances just demonstrating the difference Example I expect child key to not be readable writeable within React Children map however it is both which seems counterintuitive to the idea that this key is undefined within the component,,jquense,2017-08-10 19:58:41,2017-09-23 01:02:11
IS,If react will under mit license next week,Some days age my boss asked me stop react cause react was under bsd patent grant license so our plan for develop is stopped and we have to choose a new framework and learn it Reat is the best framework for me I heard that fb is relicenseing react under mit license next week is it true Till now we want use react but we also need learn other framework if the news is true we can make a decision to back react,,gaearon,2017-09-23 07:26:34,2017-09-23 09:22:04
IS,thank you Relicensing React Jest Flow and Immutable js,thousands developer love react and it is really a great amazing framework so many company such as baidu alibaba tencent zhihu is using react building products for millons upon millons people thank your brilliant great work and thank your generous noble spirit,,gaearon,2017-09-23 07:28:15,2017-09-23 09:23:40
PR,Gatsby Docs Update Fixed iOS overscroll issues and redesigned mobile sidebar button to,Added some fixes from for the overflow scrolling Seems to work Subtle sidebar transition tweaks Redesigned mobile sidebar toggle Previously there was an issue where you would have to tap it twice as only Safari is toolbar would appear on the first tap screen shot 2017 09 20 at 18 38 49 This caused a bit of yak shaving on the redesign but I think it works just as well if not better,,"joecritch,bvaughn,bvaughn,bvaughn,flarnie,joecritch,joecritch,joecritch,flarnie,bvaughn,bvaughn,flarnie,joecritch",2017-09-20 17:48:37,2017-09-23 18:29:26
PR,Remove Stack part 2 Stack only DEV code,Builds on top of Relevant new commit This is not safe to land before 16 because it changes the code Removes now dead ReactComponentTreeHook and ReactHostOperationHook ReactDebugTool ReactInstrumentation ReactPerf and the calls to host operation hook in DOM utilities In Fiber we never have a debugID so removes the associated codepaths Also removes on methods on hooks since in Fiber we call validateProperties directly Adds empty shims for methods RN still depends on They are already no ops so now we just make this explicit and add a TODO to remove the dependency Isn t it nice to learn this before sync Yay flat bundles,,"gaearon,gaearon",2017-09-24 00:07:46,2017-09-24 00:27:47
PR,Delete Stack reconciler,Follow up to 10511,,"gaearon,gaearon,thymikee,gaearon,gaearon,cpojer,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-08-23 10:35:48,2017-09-24 01:16:21
IS,Learning React is a problem,Every time I decide that I want to learn React I google and find some tutorial from seemingly reputable sources Then I try a few things google more go to stack overflow and very quickly i realize that the syntax is different between different web sites the API keeps changing and I do not know if I'm looking at an old tutorial or a new one I have no way of determining if a stackoverflow question is going to apply because of the version of React that I'm using What I think is needed is some kind of master list that is based on an era of the API I'm not talking about semver which is too low level I'm talking about something like First when React came out this is how we did things and every one was happy Then came the Silver Age of React where we did things the following way We took this out and we put this in So if you see this thing that is old from the Golden age Then we hit the Bronze era and this is where we split everything into tiny pieces and now you have to be more specific blah blah blah That can serve as a cheat sheet for anyone new to make sense of what is going on It is kinda similar to how if I look at a piece of C I could say yeah this is circa 2005 or oh this looks very 2010ish thanks for listening,,"gaearon,nhunzaker,gaearon,aweary",2017-09-22 22:42:35,2017-09-25 00:26:37
IS,Is react native will under mit license this week,I heard that react is relicensing under mit But the reason we choose react is react native So Is react native will under mit license this week,,,2017-09-25 03:46:02,2017-09-25 04:35:13
PR,Add a changelog for elements having the same key,In v16 elements having the same key are rendered both Previously only the first element is rendered v15 v16 I think it seems to be a breaking change even though it was a target for a warning in v15 So I think this should be added into the changelog,,"koba04,gaearon,gaearon,koba04",2017-09-25 04:55:39,2017-09-25 09:57:14
IS,Webpack bundle with react and react dom output a large file,I have a question for everyone I did a test with react react dom and preact preact compat using the same js file to generate a bundle using different frameworks but the output of the react bundle with react dom is very large about 224kb while the preact is 30 7kb I find that a lot of difference I do not know if there is any light version of react dom or I need to do some optimization in the webpack because it is a very big difference Has anyone seen this and talked about it output using Preact preact Same project using React react thank you,,"gaearon,gaearon,gaearon,gaearon",2017-09-22 13:41:08,2017-09-25 15:19:22
PR,Misc formatting fixes,Fixed image include paths by replacing react img with img search figure figure replace figure a href 2 img src 1 a figure Also discovered that the remark parse does not support markdown within HTML so I fixed that as well This can be verified by running the following code through Markdown Remark on ASTExplorer Updated some plug in versions to pull in a fix with the Gatsby Sharp integration see gatsbyjs gatsby pull 2205 And fixed a few formatting issues eg an ndash character and some code blocks within blockquotes Commits are atomic,,"bvaughn,flarnie,flarnie,flarnie,flarnie,flarnie",2017-09-25 16:19:28,2017-09-25 16:42:56
PR,Maybe fix blog redirect behavior on prod,Relates to gatsbyjs gatsby issues 2226,,bvaughn,2017-09-25 16:43:56,2017-09-25 16:54:55
PR,Markdown fixes on DOM Attributes in React 16 post,Noticed a syntax issue on this post which causes a rendering issue within Gatsby This should fix it,,joecritch,2017-09-25 16:54:54,2017-09-25 16:57:43
PR,Gatsby Docs Update Horizontal overflow on mobile,issue mobile devices both iOS and Android would overflow horizontally on any docs pages where a code block or note was present what is included a fix for the above issue by reducing the negative margin on code blocks and notes removed code blocks border radius to improve the appearance tested on iOS 11 and Android 8 note a previous PR had a fix for this using overflowX hidden which caused an awful scrolling regression this is much cleaner anyway before this whilst the page has been horizontally scrolled to reveal the right hand side img width 622 alt before src after img width 556 alt after src cc,,joecritch,2017-09-23 19:05:42,2017-09-25 18:06:46
IS,installation md content update,Do you want to request a feature or report a bug BUG What is the current behavior Line 128 in installatin md file is saying npm start If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Line 128 in installation md file should say yarn start What is the expected behavior Line 128 in installation md file should say yarn start since the latest installation of create react app is now using yarn Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A,,"montogeek,aweary",2017-09-25 00:50:34,2017-09-25 18:16:32
PR,Select element update,I saw some others might be working on this issue but I'm submitting a PR to get some practice Do not mean to step on any toes The code loops through the options in a select element and displays a warning if there are duplicate option values There are more efficient array comparison algorithms but this works well It shows all duplicate values rather than exiting the evaluation loops on the first dupe it finds Appreciate any feedback,,"aweary,jimfb,jimfb,jimfb,aweary,aweary,jimfb,syranide,syranide,syranide,syranide,syranide,syranide,syranide,hkal,syranide,syranide,syranide,syranide,syranide,syranide,syranide,syranide,chicoxyzzy,montogeek,aweary,gaearon,montogeek,aweary",2016-06-16 17:30:41,2017-09-25 18:25:45
PR,Include tag name into the table snapshot,We used to include container tag name but not the tag name itself,,gaearon,2017-09-25 19:09:30,2017-09-25 20:03:44
PR,Fix allowTransparency in the attribute table,I m not sure if this was intentional but allowTransparency is not an SVG attribute It s an IE only iframe attribute So it s expected that Chrome wouldn t recognize it Not sure if that s useful though as now instead of testing the wrong thing we re not testing anything at all,,"gaearon,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker",2017-09-25 19:01:47,2017-09-25 20:10:55
PR,Gatsby Docs Update Overlay toggle button,Currently if you have iOS Safari in full height mode and you tap the overlay toggle button it does not actually do anything except turn off the full height mode This is because it is inside of Safari is 44px inert area So this is a simplified overlay toggle button just the icon that is raised 44px so it is out of the inert area The text has been removed because when 44px higher it is a bit of an intrusive button on longer titles Feels obvious enough without a label I think preview toggle btn cc,,"joecritch,bvaughn,bvaughn,KyleAMathews,bvaughn",2017-09-23 22:40:39,2017-09-25 20:15:00
PR,Gatsby docs refactor Make dev command more easily tested,what is the change If we want to test across different devices we need to set the host argument and tell Gatsby to listen on all ports why make this change To be able to visit my IP address 8000 on another device and test the docs test plan Manually tested,,"flarnie,bvaughn,joecritch,flarnie",2017-09-22 23:25:57,2017-09-25 20:21:31
PR,Update DOM warning wording and link,I think we should get it in before 16 It updates the link from the warning to point to the DOM blog post We can then change it to docs once they are in place The link that is in the code now points to the old behavior and we can not change it because we want 15 to still point to it It also updates the wording to make it correct The wording we have now is more about the old behavior prop being invalid rather than new one value itself being invalid s One final minor change is that I now use Invalid when I talk about values and Unknown when I talk about names Not saying it is the greatest scheme ever but IMO it is better than the arbitrary distinction we have now almost all say Unknown but one says Invalid for no specific reason s After discussion I changed it to consistently using Invalid when talking about misspellings and Unknown in other cases I thought about using Misspelled but that is not very fair to class Maybe we can add a separate message for class later and point people to an HTML JSX compiler This only changes strings,,"gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker,gaearon",2017-09-25 19:49:31,2017-09-25 23:28:28
PR,15 6 2 Release Prep,Commits x ChangeEventPlugin js IE detection is broken on Chrome Safari FF etc x No error when element with ref created in another elements constructor in dev environment 10025 x Treat columns property as a unitless number 10115 x move augmentClass definition above SyntheticEvent Proxy replacement 10011 x Use a closure to bind argument to callback in ReactErrorUtils 8363 x Fix uncontrolled radios 10156 x Add controlList to DOM property whitelist 9940 Documentation x Changelog x Documentation updates Misc x Update lockfile x Version bump,,"nhunzaker,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,gaearon,nhunzaker,nhunzaker,nhunzaker,gaearon,sophiebits",2017-08-10 16:46:03,2017-09-26 00:03:53
PR,Change license and remove references to PATENTS,Only remaining references,,"sophiebits,gaearon,sophiebits",2017-09-24 20:51:29,2017-09-26 01:18:27
PR,Add ReactTestRenderer documentations,I think react test renderer is a useful library for testing as well as ShallowRenderer so it would be nice if there is a documentation for that The library has very convenient APIs provided by so I start writing the documentation which is working on progress Does it make sense Thanks,,"koba04,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,koba04,koba04,acdlite,koba04,sophiebits",2017-09-13 09:58:08,2017-09-26 07:30:57
IS,Error from component causes error to be thrown twice,Do you want to request a feature or report a bug Bug What is the current behavior If a component throws not in render for example in a click handler the error is thrown twice instead of once Error boundaries stop the double reporting but only handle errors thrown in render not errors in handlers etc If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Just one error thrown Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 16 0 0 rc 2,,"gaearon,gaearon",2017-09-22 10:54:11,2017-09-26 07:32:52
IS,React 15 Cloudflare is HTML minification causes isomorphic React app to crash,I think this is not a bug it is a compatibility issue In React v15 x rendering null now uses comment nodes the server sided HTML rendered by react dom server is function renderToString contains some comment tags that represent null components instead of noscript tags like React v0 14 x which is really neat Unfortunately when the app is served by Cloudflare with HTML minification enabled it automatically removes all the comment tags including the ones generated by React This behavior causes the client app to crash and throws an error With x is a number usually the null component is react id The problem can be solved by disabling HTML minification on Cloudflare but the question is is it possible to earn the benefit from HTML minification while keep the app running well React ReactDOM version 15 6 1 Node version 6 10 0 6 10 3,,"gaearon,gaearon",2017-09-22 04:05:59,2017-09-26 09:33:04
IS,Can we write react component life cycle methods using arrow function syntax,Hello React community I'm getting myself familiar with React and I have a question that I would like to clarify about React component life cycle method Particularly I see that in all documents about React when implement React component life cycle methods for example with render method we use this syntax I hope to receive your reply soon I would like to appreciate in advance for detailed explanation about this issue Thank you,,gaearon,2017-09-25 04:49:22,2017-09-26 09:34:24
PR,Fix author in latest blog post,Fix this so that gets his name up there for real will want to cherry pick back to master but the blog post is not there either so I will let y'all handle that I took a best guess at URL you might want to link to but obviously pick one you want,,zpao,2017-09-26 04:35:34,2017-09-26 10:33:31
IS,React 15 6 2 Umbrella,This is an umbrella issue for fixes that need to be included in the next 15 6 patch release which should be 15 6 2 Commits x ChangeEventPlugin js IE detection is broken on Chrome Safari FF etc PR No error when element with ref created in another elements constructor in dev environment PR x Treat columns property as a unitless number 10115 x move augmentClass definition above SyntheticEvent Proxy replacement 10011 x Use a closure to bind argument to callback in ReactErrorUtils 8363 x Fix uncontrolled radios 10156 x Add controlList to DOM property whitelist 9940 Documentation Changelog Documentation Misc Update lockfile Version bump Bower,,"aweary,gaearon,nhunzaker,gaearon,nhunzaker,jquense,nhunzaker,gaearon,gaearon,nhunzaker,nhunzaker,nhunzaker,aweary",2017-06-26 02:08:32,2017-09-26 12:22:42
IS,On Safari input of type number will not invoke onChange callback when input is non numeric character,Do you want to request a feature or report a bug It is a bug What is the current behavior On Safari an input with type number will not invoke the onChange callback when input through keyboard is a non numeric character I e it is invoked for input of '1' not invoked for input 'a' If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Please see relevant jsfiddle What is the expected behavior The onChange callback should be invoked for any input which affects the contents of the input field Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is reproducible on Safari Version 10 1 1 12603 2 4 MacOS 10 12 5 16F73 React version is 15 6 1,,"nhunzaker,jquense,nhunzaker",2017-09-26 13:38:38,2017-09-26 14:12:12
PR,Add left margin to nested ol ul,Nested lists should have extra margin screen shot 2017 09 25 at 4 57 23 pm,,"acdlite,bvaughn",2017-09-25 23:58:01,2017-09-26 15:19:49
PR,Fix blog redirect and markdown redirects,Now that gatsbyjs gatsby pull 2227 has been released and I have found a work around for gatsbyjs gatsby issues 2225 see here issuecomment 332014115 this PR fixes redirects URLs I spot tested blog blog 2017 09 08 dom attributes in react 16 html docs videos html community videos html docs animation ja JP html docs animation html,,"bvaughn,bvaughn",2017-09-25 20:11:59,2017-09-26 15:33:27
PR,Doc updates for React 16 blog post,Shhhhh nothing to see here,,"acdlite,nhunzaker,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,koba04,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,clemmy,gaearon,gaearon,gaearon,gaearon,sophiebits,acdlite,sophiebits,sophiebits,sophiebits,sophiebits,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,acdlite,flarnie,gaearon,acdlite,acdlite,acdlite,gaearon",2017-09-25 23:33:56,2017-09-26 16:04:14
IS,React 16 RC,The third React 16 RC is now available for public testing Installation Instructions The RC has been published to NPM with the tag next Regular NPM installs will continue to use the 15 6 release To install the RC use Points of Interest This is a complete rewrite of React but we expect it to work with your existing code If you fixed all deprecation warnings introduced in 15 x the 16 beta should work for you Third party libraries that relied on deprecated or unsupported APIs may need updates to work correctly with this new release Now is a good time to file issues against libraries that have problems And tell us if we broke something We are particularly interested in hearing about performance differences you notice between 15 x and 16 x We do not expect any massive changes but would love to know about improvements or regressions Please report them here The server renderer has been completely rewritten and now offers a streaming mode ReactDOMServer renderToNodeStream rendertonodestream and ReactDOMServer renderToStaticNodeStream rendertostaticnodestream Server rendering does not use markup validation anymore and instead tries its best to attach to existing DOM warning about inconsistencies And there is no data reactid anymore This server renderer code is still very new so it is likely to have issues Please report them Hydrating a server rendered container now has an explicit API Use ReactDOM hydrate instead of ReactDOM render if you are reviving server rendered HTML Keep using ReactDOM render if you are just doing client side rendering React Native follows a different release cycle and will update to the beta in a future release It is already using an alpha release but not yet using Fiber Breaking Changes Error Handling Previously runtime errors used to put React into a broken state and produce cryptic errors React 16 fixes this by introducing a special kind of components called error boundaries Error boundaries can catch runtime errors in a component tree log them and display a fallback UI instead If there is an uncaught error in a component and there is no error boundary up in the tree the whole component tree will be unmounted This helps avoid very nasty bugs where the UI has been corrupted due to an error but it means that you need to add a few error boundaries to your app to handle the errors gracefully React 15 had a very limited undocumented support for error boundaries with a different method name It used to be called unstable handleError but has been renamed to componentDidCatch You can learn more about the new error handling behavior here Scheduling and Lifecycle ReactDOM render and ReactDOM unstable renderIntoContainer now return null if called from inside a lifecycle method To work around this you can either use the new portal API issuecomment 318433235 or refs issuecomment 318434635 setState Calling setState with null no longer triggers an update This allows you to decide in an updater function if you want to re render Calling setState directly in render always causes an update This was not previously the case Regardless you should not be calling setState from render setState callback second argument now fires immediately after componentDidMount componentDidUpdate instead of after all components have rendered When replacing A with B B componentWillMount now always happens before A componentWillUnmount Previously A componentWillUnmount could fire first in some cases Previously changing the ref to a component would always detach the ref before that component is render is called Now we change the ref later when applying the changes to the DOM It is not safe to re render into a container that was modified by something other than React This worked previously in some cases but was never supported We now emit a warning in this case Instead you should clean up your component trees using ReactDOM unmountComponentAtNode See this example issuecomment 318820987 componentDidUpdate lifecycle no longer receives prevContext param See 8631 Shallow renderer no longer calls componentDidUpdate because DOM refs are not available This also makes it consistent with componentDidMount which does not get called in previous versions either Shallow renderer does not implement unstable batchedUpdates anymore Packaging There is no react lib and react dom lib anymore Even in CommonJS environments React and ReactDOM are precompiled to single files flat bundles If you previously relied on undocumented React internals and they don t work anymore let us know about your specific case in this issue and we ll try to figure out a migration strategy for you There is no react with addons js build anymore All compatible addons are published separately on npm and have single file browser versions if you need them The deprecations introduced in 15 x have been removed from the core package React createClass is now available as create react class React PropTypes as prop types React DOM as react dom factories react addons test utils as react dom test utils and shallow renderer as react test renderer shallow See 15 5 0 and 15 6 0 blog posts for instructions on migrating code and automated codemods The names and paths to the single file browser builds have changed to emphasize the difference between development and production builds For example react dist react js react umd react development js react dist react min js react umd react production min js react dom dist react dom js react dom umd react dom development js react dom dist react dom min js react dom umd react dom production min js Known Issues s The server renderer crashes in production with inline styles fixed by s Fixed in 16 0 0 beta 2 s The server renderer does not yet support returning arrays and strings from components s Fixed in 16 0 0 beta 3 s The server renderer still renders data reactid somewhat unnecessarily s Fixed in 16 0 0 beta 3 s Shallow renderer doesn t pass context to componentWillReceiveProps to be fixed by s Fixed in 16 0 0 beta 3 s There is an issue with 'use strict' in older browsers issuecomment 319490960 s Fixed in 16 0 0 beta 3 s In some cases Error null is reported instead of the real error s Fixed in 16 0 0 beta 3 s There is a report that Google crawler can t render the page using 16 link s Fixed in 16 0 0 beta 3 Some popular third party libraries won t work yet e g Enzyme Please report more issues in this thread Updates Released 16 0 0 beta 1 on July 24 2017 Released 16 0 0 beta 2 on July 27 2017 Fix a crash in server rendering Released 16 0 0 beta 3 on August 3 2017 Fix strict mode function scope problem 10361 Better error log messaging and cross origin handling 10353 10373 Shallow renderer improvements 10372 10342 Edge case context bugfix 10334 Single point of entry for server rendering 10362 etc Released 16 0 0 beta 4 on August 8 2017 Warn about unresolved function as a child 10376 Remove data reactid and data react checksum from whitelist 10402 New test renderer API features disabled via feature flag for now 10377 And some other minor updates to slightly reduce bundle size Release 16 0 0 beta 5 on 2017 08 08 Fix bugs related to unmounting error boundaries 10403 Enable new fiber ReactTestRenderer API methods previously disabled behind a feature flag 10410 Released 16 0 0 rc 1 on September 6 2017 Fix error undefined is not a function evaluating 'owner getName ' fxfactorial in and in Improve error message when ReactDOM loads without React aweary in Warn when nesting 15 subtree inside 16 sophiebits in Do not warn about casing in SSR for non HTML NS sophiebits in Throw error to warn of mistaken loading of prod dev React bundles flarnie in Reset instance vars before calling commit phase lifecycles acdlite in Warn if event listener is not a function aweary in Fix bug where 1k react roots would cause error acdlite in Allow passing some unknown attributes through to DOM components nhunzaker in and others Fix bug where select elements defaulted to first option even when it was wouldisabled' aweary in and in Released 16 0 0 rc 2 on September 6 2017 Fix bug where React npm packages would throw an exception on startup in browsers not supporting const natively sophiebits in Released 16 0 0 rc 3 on September 14 2017 Report bad dead code elimination to React DevTools gaearon in Fix false positive warning when hydrating SVG after SSR gaearon in Add a warning about non lowercase custom attributes gaearon in Fix a memory leak gaearon in Remove deprecated entry point for the shallow renderer gaearon in Remove undocumented TestUtils methods gaearon in Add ReactDOM createPortal as an official API without the unstable prefix gaearon in Don t repeat Object assign polyfill twice gaearon in,,"bvaughn,aweary,bvaughn,gaearon,gaearon,gaearon,aweary,bvaughn,Daniel15,jlongster,sophiebits,jlongster,aickin,aickin,bvaughn,sophiebits,aickin,aickin,bvaughn,gaearon,gaearon,gaearon,jlongster,gaearon,gaearon,jlongster,gaearon,gaearon,jlongster,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,gaearon,bvaughn,gaearon,gaearon,gaearon,bvaughn,aweary,aweary,bvaughn,flarnie,gaearon,gaearon,gaearon,gaearon,Daniel15,gaearon,Daniel15,Daniel15,gaearon,gaearon,gaearon,koba04,gaearon,koba04,bvaughn,gaearon,gaearon,sebmarkbage,koba04,bvaughn,gaearon,gaearon,bvaughn,Andarist,gaearon,Andarist,gaearon,gaearon,gaearon,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,bvaughn,bvaughn,bvaughn,aickin,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,aweary,bvaughn,sophiebits,gaearon,bvaughn,bvaughn,flarnie,flarnie,sophiebits,gaearon,Andarist,bvaughn,aickin,gaearon,gaearon,koba04,sophiebits,koba04,sophiebits,bvaughn,gaearon,bvaughn,gaearon,KyleAMathews,bvaughn,gaearon,bvaughn,lelandrichardson,gaearon,bvaughn,gaearon",2017-07-26 20:05:32,2017-09-26 16:49:46
PR,Fix React links on the website,Oops,,gaearon,2017-09-26 17:11:30,2017-09-26 17:20:41
PR,Doc change for prevContext removal in CDU,Ref,,STRML,2017-09-26 17:06:40,2017-09-26 17:29:36
PR,Fix unpkg links by pointing to version 15,When you leave out the version number unpkg will serve from the latest version Since these files are now in the umd directory in version 16 it is best to use the version number in the unpkg URL,,"gaearon,gaearon",2017-09-26 16:36:07,2017-09-26 17:30:38
PR,Gatsby Docs Update Quick fix for 'prev' and 'next' urls,what is the change We need to add the path to the 'prev' and 'next' urls why make this change So that these urls work test plan Manual testing issue Checklist item in the gatsby wiki checklist,,"flarnie,bvaughn,bvaughn",2017-09-26 17:24:35,2017-09-26 18:10:16
PR,Merged master into gatsby,Pulled in markdown changes Updated headers to reference the new MIT license Fixed an author block,,"bvaughn,bvaughn",2017-09-26 15:44:16,2017-09-26 18:12:36
PR,Gatsby patch flarnie branch,Builds on top of 10839 and adds fix mentioned here issuecomment 332276703,,bvaughn,2017-09-26 18:09:39,2017-09-26 18:15:42
PR,Cleaned up Sidebar code a little,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,bvaughn,2017-09-26 17:52:48,2017-09-26 18:16:12
PR,Gatsby Docs Experiment to find issue with Netlify,In an attempt to reproduce a bug we were only seeing in Netlify builds I'm pushing a PR with a really old version of the gatsby branch Do not review merge this It is just an experiment,,flarnie,2017-09-25 22:52:51,2017-09-26 18:16:34
PR,React createPortal is not a function,Small update to portal documentation React createPortal is not a function,,gaearon,2017-09-26 18:39:14,2017-09-26 18:41:31
PR,Update Portals Documentation,When reading through the React 16 blog post I became interested in Portals Upon reviewing the documentation I found some awkward grammar and inconsistent incomplete code examples This PR is to update the documentation to be more young developer friendly and more inline with other examples in the documentation,,"gaearon,gaearon",2017-09-26 17:35:03,2017-09-26 18:45:49
PR,Update name of property initializer proposal,The proposal for property initializers is called Public Class Fields now part of the combined Class Fields proposal,,gaearon,2017-09-25 10:46:35,2017-09-26 18:48:24
PR,Gatsby Docs Update Tutorial Clicking an anchor tag should auto close mobile nav,what is the change Edit Also fixes the issue where the section listed on the tutorial page was not correct I can go into more detail if needed We create a prop to close the mobile nav and then pass it all the way down through to the links for the tutorial page why make this change So that the menu does not stay open after people click a link We considered listening to 'onhashchange' and ran into two problems React does not support listening to onhashchange on DOMComponents and I'm not sure that would work anyway When listening to window onhashchange it did not seem to fire Better to pass something down than to add another global event listener imo test plan Manual testing AND I ran yarn build bottom nav open close issue Checklist item on this wiki Sidebar Component Tutorial Clicking an anchor tag should auto close mobile nav,,"flarnie,flarnie,bvaughn,flarnie,flarnie,bvaughn,bvaughn,bvaughn",2017-09-20 22:53:34,2017-09-26 19:46:54
IS,React 16 release checklist,Ensure all commits in master were tested at Facebook Check that they were a part of the latest internal sync For stable releases prefer that they ve been landed for a week or so Only skip this step if you really know what you re doing Verify that you have npm permissions x You re in npm owner ls react x You re in npm owner ls react art x You re in npm owner ls react dom x You re in npm owner ls react test renderer If not ping someone on the team Ensure your React is fresh x Ensure you re on master x Do a git pull x Is master green on CI Check the most recent commits x Check that your local git log output matches the commit list x Run yarn in the repo root Ensure runtime dependencies match what users would get x For fbjs x Look at the version range of fbjs in root package json x Ensure all packages package json depending on fbjs specify the same range x For object assign x Look at the version range of object assign in root package json x Ensure all packages package json depending on object assign specify the same range x For prop types x Look at the version range of prop types in root package json x Ensure all packages package json depending on prop types specify the same range x Run yarn upgrade object assign prop types fbjs x This might change the lockfile This should not change any package json x Commit the changes if any Do the local sanity checks in the repo root x Run yarn test in the repo root x Run yarn lint in the repo root x Run yarn flow in the repo root STABLE RELEASE ONLY Update error codes x Run yarn build extract errors in the repo root x If scripts error codes codes json changes git commit am 'Update error codes' Maybe If we still have a separate stable branch for docs when you re reading this we need to cherry pick that commit to that branch This makes sure the website decoder knows about the updated error codes But ideally we should just change docs to serve from master STABLE RELEASE ONLY Write the changelog x Open CHANGELOG md and add release notes in the same format as earlier x Make sure the changes are easy to understand Friendly one liners are better than PR titles x Make sure all contributors are credited just like before x Verify that the markup isn t messed up by previewing it in the online editor Update the version x Update version in root package json x Update export in src ReactVersion js x Update version in all packages package json x packages react package json x packages react art package json x packages react dom package json x packages react noop renderer package json x packages react test renderer package json x If you see any other packages update this list x Run yarn version check to verify your changes x git commit am version number Build it x Run yarn build in the repo root Run fast packaging smoke test x Open fixtures packaging babel standalone dev html in the browser for a smoke test x It should say Hello world Run slow packaging smoke test x Go to cd fixtures packaging and run node build all js x npm install g serve x Go to the repo root and run serve s x Open 5000 fixtures packaging and verify every iframe shows Hello World Release x Run git push x Run git push tags x Go to build packages x For every subfolder For non stable versions Run npm publish tag next in the subfolder x For stable versions Run npm publish in the subfolder x Run npm info package dist tags to verify that things were published as you expect FIXME We should really automate this part because it s currently not atomic STABLE RELEASE ONLY Create GitHub Release x Open New Release page on GitHub x Choose the tag version you just pushed in the dropdown so that it says Existing tag x Paste the new release notes from CHANGELOG md x Attach all files in build dist js except react art to the release x Press Publish release STABLE RELEASE ONLY Update the version reported on the website x Open docs config yml x Change react version in it to the newly published version x git commit am Update the reported React version on the website Maybe If we still have a separate stable branch for docs when you re reading this we need to cherry pick that commit to that branch This makes sure the website knows about the updated config But ideally we should just change docs to serve from master STABLE RELEASE ONLY Update Bower x Clone the Bower repo outside of main repo git clone x Make sure it s on master and you did git pull x Delete all JS files from the Bower repo and copy all build dist js from React repo into it x In the Bower repo git commit am version number x In the Bower repo git tag a v version number Don t miss the v x In the Bower repo git push and git push tags STABLE RELEASE ONLY Try it out x npm i g create react app x create react app myapp x cd myapp x npm start STABLE RELEASE ONLY Reach out to DOM team x Reach out to the DOM team nhunzaker in case they would like to go through DOM fixtures This doesn t block the release,,"acdlite,acdlite",2017-09-26 15:23:27,2017-09-26 19:57:33
PR,Fix portal link,Forgot to update the url after I cherry picked docs from gatsby branch,,acdlite,2017-09-26 20:17:41,2017-09-26 20:26:39
PR,Update docs for React 16,A bunch of misc updates rolled into one Makes it more consistent and updates some parts that are outdated Uses fiddles that are not pinned to a specific version,,"gaearon,gaearon,gaearon,acdlite,acdlite,gaearon,acdlite,gaearon",2017-09-26 21:03:43,2017-09-26 21:12:41
PR,Gatsby Docs Update Tutorial Clicking an anchor tag should auto close mobile nav,Builds on top of PR 10764 and includes af4f45e Merged gatsby branch and resolved conflicts 4b2e9d7 Fixed via a hack the fact that the active link highlight on the Tutorial page does not update after clicked Original PR description below what is the change Edit Also fixes the issue where the section listed on the tutorial page was not correct I can go into more detail if needed We create a prop to close the mobile nav and then pass it all the way down through to the links for the tutorial page why make this change So that the menu does not stay open after people click a link We considered listening to 'onhashchange' and ran into two problems React does not support listening to onhashchange on DOMComponents and I'm not sure that would work anyway When listening to window onhashchange it did not seem to fire Better to pass something down than to add another global event listener imo test plan Manual testing AND I ran yarn build bottom nav open close issue Checklist item on this wiki Sidebar Component Tutorial Clicking an anchor tag should auto close mobile nav,,bvaughn,2017-09-26 19:46:47,2017-09-26 21:22:04
PR,Gatsby Docs Update Menu overlay scrolling fixes,issues when scrolling within the menu overlay the background would capture the touch event instead and you would be scrolling the main content rather than the overlay is scrollbar this would happy fairly randomly a similar issue would happen if you scrolled to the top or bottom of the overlay A k A overscroll here is a demonstration of what was happening ezgif 1 0be83948b1 what is included fixes for the both by using evt preventDefault on the main content within the docs and then taking care of the header and footer by hiding them The header actually animates away whereas the footer can never be seen so that is not applicable overscroll has been taken care of with a fix inspired by this more idiomatic to React though screencast preview of the fixes cc,,"joecritch,joecritch,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,flarnie,joecritch,flarnie,joecritch,joecritch,joecritch,joecritch,joecritch,bvaughn,bvaughn,flarnie,bvaughn,flarnie,bvaughn,flarnie,flarnie,joecritch,bvaughn,joecritch,bvaughn,joecritch,bvaughn,joecritch",2017-09-23 21:54:40,2017-09-26 21:33:26
PR,Gatsby docs update menu overlay padding bottom,Increase the padding a bit to allow for when the toolbar is visible on iOS,,joecritch,2017-09-26 21:32:06,2017-09-26 21:40:17
PR,Fixed off by one error for formatted dates,,,"bvaughn,bvaughn",2017-09-26 21:37:57,2017-09-26 22:10:05
IS,error decoder website not displaying any messages for error codes,Do you want to request a feature or report a bug bug What is the current behavior visiting does not show the error message If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React MacOS 10 13 Chrome 61,,"aweary,gaearon,aweary,aweary",2017-09-26 17:16:25,2017-09-26 22:59:06
PR,Remove trailing commas from example code,Since this will cause issues when used with Internet Explorer,,"gaearon,milesj,gaearon",2017-09-26 23:16:40,2017-09-27 00:09:21
IS,React 16 className with bem cn like libraries,Hello Really love new features and architecture of Fiber But because of this new behavior Non event attributes with function values React 16 Warns and ignores them I have got this issue I think it is OK to have same behavior with function and object This feature is needed in bem cn like library so I can write just fn instead of fn or fn toString,,"aweary,nhunzaker,gaearon,gaearon",2017-09-20 13:23:03,2017-09-27 00:17:25
PR,documentation website repaints on fixed nav,position fixed causes the main nav to get repainted on the CPU with every scroll event transform translateZ 0 hack to delegate this to the GPU Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,,2017-05-12 03:20:17,2017-09-27 00:35:17
IS,unpkg latest not working,The following links have ceased to work in the last day dist react js dist react dom js The top one returns Cannot find module dist react js in package react 16 0 0,,"gaearon,gaearon",2017-09-27 06:30:16,2017-09-27 09:08:37
IS,toString on classname,Did react used to call toString on non string objects it would receive A few packages are not working anymore and as far as I can tell this is likely the reason Specifically anything using bem cn or similar Might be something to add to docs as a breaking change Ca not figure out why else a few components are suddenly throwing errors and dont have any styles on them,,gaearon,2017-09-27 01:27:43,2017-09-27 09:19:22
PR,Update authors for v16,To update the AUTHORS file I ran the script and then removed duplicate names To decide which email to go with I first favoured ones existing in the file then picked the address with the most commits associated with it,,"gunn,gaearon",2017-09-27 04:17:46,2017-09-27 09:24:17
IS,Update AUTHORS for v16,Seems like we did not run the script,,"gaearon,gaearon",2017-09-26 23:39:05,2017-09-27 09:24:45
IS,How Can I use the returned string in the src tag of an img src areturnedString',Do you want to request a feature or report a bug feature I want to use the new feature on React v16 0 0 for returning a string then use that string in img src returnedString What is the current behavior Well if I render my component in a div MyComponent div I can see the string displayed on the screen see attached screenshot but my goal is to use that string in img src returnedString here is my code How Can I achieve that If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I want to use the returned string inside an img src myString Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v16 0 0 browser Chrome Version 61 0 3163 100 Official Build 64 bit Did this work in previous versions of React No because it is a new feature in React v16 0 0 screen shot 2017 09 26 at 7 24 51 pm,,gaearon,2017-09-27 02:35:31,2017-09-27 09:26:15
PR,Fix typo on docs for React 16,While reading the doc for React 16 I have found a typo that I fixed in this PR,,gaearon,2017-09-27 05:06:24,2017-09-27 09:48:20
PR,Add a note about deprecating react addons perf,react addons perf is no longer in React v16 This documentation is not linked from anywhere but we can get the page from Google search like the word react performance Should I keep the documentation and add a deprecated warning,,"koba04,gaearon,koba04,koba04,koba04",2017-09-19 06:28:07,2017-09-27 10:12:40
PR,typo,fix some typos,,gaearon,2017-09-27 03:31:06,2017-09-27 10:13:22
PR,Remove IE8 property expansion workaround,We don t support it anymore Just need to verify IE9 is not affected,,"gaearon,jquense,aweary,gaearon,aweary,nhunzaker,gaearon,nhunzaker,aweary,nhunzaker,gaearon,aweary",2017-09-24 16:22:34,2017-09-27 12:00:01
PR,Remove unnecessary event whitelist in production,Shaves off 150 bytes post gzip Seems like there s no need to run this validation in production,,"gaearon,gaearon",2017-09-24 15:48:47,2017-09-27 12:01:26
PR,Write Code in Your Editor Split step 5 into 2 steps,In the Tutorial to me it was not clear enough that I had to copy the file is content from here and add the three lines to the top,,,2017-09-26 15:15:19,2017-09-27 12:17:24
IS,Thinking in React Example does not filter correctly,Do you want to request a feature or report a bug Bug What is the current behavior If you type bas you do not get hits for Baseball and Basketball If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template url What is the expected behavior You get Basketball and Baseball when you type bas Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Version 16,,,2017-09-27 12:42:21,2017-09-27 12:50:24
PR,Make homepage examples more approachable,Makes Code Result split 70 30 rather than 50 50 to remove the line wrapping Switches the font from the default system monospace font to the one we used I find it a lot more legible The extremely thin lines are very hard to read for some people including me and hurt accessibility Adds back the easter egg that switches the gendered name on every refresh IMO it was cool Formats the examples closer to how mainstream JS community does it to reduce even the slightest knee jerk reactions and in some cases makes the lines shorter,,"gaearon,bvaughn,gaearon",2017-09-27 13:46:17,2017-09-27 13:58:21
PR,Merge changes from master into Gatsby branch,Also did a global search and replace to fix links,,acdlite,2017-09-26 23:26:13,2017-09-27 14:06:34
PR,Remove Stack part 1 safe unused files and tests,This is extracted from This is safe to merge because it only touches Tests Files that were not used anywhere these are now deleted If any of those files were still used the build would break I have verified yarn build produces identical build on master and in this branch for all files For convenience here is the git status before commit This is just a first step but the nice thing about it is it doesn t touch any Fiber code so it can be done at any time The next step is in,,gaearon,2017-09-23 23:31:55,2017-09-27 14:15:21
IS,Updates not queued properly when using unstable renderSubtreeIntoContainer,The cursor should not jump to the end of the text field when editing text It is unstable so it probably does not need to be fixed before the v15 milestone but we should get it fixed at some point cc,,"jimfb,jquense,jquense,sophiebits,jquense,sophiebits,gaearon,jquense,gaearon",2016-02-06 03:43:48,2017-09-27 14:51:03
IS,Docs Visual re align,Hi folks I'm having a shot at a visual re align for the React docs Goals Create a conservative re align that is not controversial but still opens up opportunity for future expansion and features heading towards more of a design system Avoid major architectural changes which are best handled as separate PR is in the future Inspiration GraphQL org Other gridded sites Process Just mockups at the minute before I receive the go ahead I would then work on the rest of the elements viewport sizes Then write the CSS from scratch thoughts Other notes Moved sidebar to right hand side to improve readability Collapsed non current docs nav categories Add an 'intro' paragraph the first para to each docs page 5px baseline grid 4 column grid Proxima Nova same as current site The footer layout would be tightened up it is just a screenshot of the current one atm Fire away with your comments react docs 3 react docs home 2 cc,,"joecritch,joecritch,gaearon,joecritch,bvaughn,joecritch,bvaughn,joecritch,joecritch,gaearon",2017-05-20 21:41:10,2017-09-27 15:26:17
IS,Warning for using development build in production,Hi we are seeing this error screenshot 20170919 161441 but the React Developer Tools is saying this reach notification We use NODE ENV production to build our js file using browserify and I also tried out envify but no luck The red warning does not disappear,,gaearon,2017-09-21 09:45:04,2017-09-27 15:33:34
PR,Gatsby site supports IE11,Added polyfills Removed TypeKit which I would been planning on doing anyway but it was preventing me from testing prod build in IE11,,"bvaughn,bvaughn,joecritch,bvaughn,bvaughn,nhunzaker",2017-09-27 15:10:47,2017-09-27 15:55:55
IS,Grammar mistake on portals docs,Do you want to request a feature or report a bug Bug What is the current behavior Current text 116 Open up the browser DevTools 117 to observe that the button 118 is not a child the div 119 with onClick handler Note is not a child the div with onClick handler is missing a word If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template L118 What is the expected behavior Open up the browser DevTools to observe that the button is not a direct child of the div with the onClick handler Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v16,,,2017-09-27 12:26:16,2017-09-27 16:04:11
PR,Minor update to portals docs child language,This commit changes the portals docs so that the language of the Parent no longer feels like it is missing a word with is not a child the div with onClick handler and replaces that with is not a direct child of the div with the onClick handler closes 10868,,gaearon,2017-09-27 12:51:40,2017-09-27 16:04:12
PR,Add link to React community on Hashnode,React community on Hashnode has more than 10K followers It would be nice if we can point developers to this place,,gaearon,2017-09-27 14:52:46,2017-09-27 16:06:47
PR,Continuation of Acknowledgements page from 10855,Builds on top of 10855 Converts Acknowledgements template to a page without a dependence on markdown data so we could remove the logic from the markdown template Flattens the arrays inside of acknowledgements yml so the column arrangement can be controlled via CSS rather than YML Added some basic styling formatting Preview available at cc,,"bvaughn,bvaughn",2017-09-27 14:29:38,2017-09-27 16:10:54
PR,Remove Stack part 2 safe dead branches in tests,Builds on 10794 New commit is dde565f Best diff view is without the whitespace This removes all useFiber checks in the tests assuming true Technically there are no more references to ReactDOMFeatureFlags useFiber but I didn t delete it just to make sure the build is 100 the same for extra safety This is safe to merge because it only touches the tests I verified the build folder content is identical to master just like 10794 The next step is in,,gaearon,2017-09-24 00:35:39,2017-09-27 16:14:28
PR,Update react react dom to 16 0 0 rather than RC,Dependency bump mostly intended to update React ReactDOM to 16 final Quickly smoke tested a fresh build rm rf cache yarn build locally and it seems okay,,"bvaughn,bvaughn,KyleAMathews,KyleAMathews,bvaughn,KyleAMathews,bvaughn",2017-09-27 16:43:23,2017-09-27 17:10:42
PR,Prettied up 404 page,You can test this change at cc Before img width 792 alt screen shot 2017 09 27 at 10 00 46 am src After img width 788 alt screen shot 2017 09 27 at 10 01 45 am src,,"bvaughn,joecritch,bvaughn",2017-09-27 17:04:08,2017-09-27 17:26:51
PR,Gatsby Docs Update Normalized font weights,I have normalized the font weights for A speed B consistency and C compatibility with the production TypeKit code We are now down to just 300 400 and 700 weights cc,,joecritch,2017-09-27 17:35:51,2017-09-27 17:42:55
PR,Gatsby Docs Update Error column fixes,Change colour of the Error title to be white instead of the clashing grey Changed width of the column to sit well next to the 70 Live JSX Editor column Changed the font size line height of the error column is text to look more readable cc screen shot 2017 09 27 at 18 17 45,,joecritch,2017-09-27 17:21:44,2017-09-27 18:00:36
PR,Gatsby Docs Update Syntax highlight changes,I have tweaked a few colours to closer match Oceanic Next I have converted all markdown docs files to use jsx code blocks instead of js to correctly highlight JSX tags cc screen shot 2017 09 27 at 16 20 33 screen shot 2017 09 27 at 16 20 41,,"joecritch,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,gaearon,bvaughn,bvaughn,gaearon,joecritch,gaearon",2017-09-27 15:18:54,2017-09-27 18:00:50
PR,move docs and examples licenses,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"sophiebits,sophiebits,gaearon,gaearon",2017-09-27 18:20:56,2017-09-27 18:23:41
PR,Gatsby Docs Update Reverted TypeKit ID,The gatsby branch is currently using my local testing TypeKit ID which would soon break if it went to production So I have reverted it with this PR We will want to make sure netlify com and reactjs org are added as domains though cc,,"joecritch,joecritch,bvaughn,joecritch,bvaughn,bvaughn",2017-09-27 16:42:34,2017-09-27 18:26:56
IS,React Component render Fragments docs typo in example JSX tag is closed prematurely,Do you want to request a feature or report a bug bug What is the current behavior fragments In the render Fragments example the li JSX tag is closed prematurely Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 documentation website on Chrome Android Previously array Fragments were not supported,,,2017-09-27 16:43:34,2017-09-27 18:28:04
PR,Fix fragments docs example JSX typo,Fixes,,,2017-09-27 17:04:23,2017-09-27 18:28:05
PR,Delete LICENSE examples,We don t have examples folder anymore or any other folder with examples I think we can delete this,,"gaearon,gaearon",2017-09-27 18:19:15,2017-09-27 18:29:12
PR,Gatsby Consistent capitalization for homepage call to action,Not feeling super strong about this but the difference was a bit jarring img width 402 alt screen shot 2017 09 27 at 7 36 06 pm src,,gaearon,2017-09-27 18:37:16,2017-09-27 18:45:20
IS,Detect when reconciliation has completed,Reading up on the Fiber architecture and Renderers in general I'm not quite sure how to tell when reconciliation has completed This is particularly important when rendering animation or targeting something other than the DOM Let is consider for example a ticker root node that pushes changes on its children by setting state every requestAnimationFrame If React has not finished reconciliation this can quickly cascade into a mountain of pending updates Therefore a reasonable strategy would be to skip frames not set state until reconciliation has definitively finished Naively I tried doing this on a practical level by simply waiting for componentDidUpdate on the root node and using that as a gate assuming that it will not be called until all the children finished their render cycles the children ultimately update canvas in componentWillReceiveProps and render null though I'm not sure if that is relevant I'm not sure if this is successful or not Is there a simple way to measure More practically and ideally even for a scenario where the children set there own state is there a way to tell whether the tree as a whole has finished all reconciliation or perhaps even from a particular node down,,"gaearon,gaearon",2017-09-27 15:30:28,2017-09-27 18:46:47
PR,Gatsby docs update WIP add Acknowledgements page,NOTE This is not done yet but pushing the progress I have what is the change Add custom template for 'acknowledgements' page why make this change We want this page to show up on the new docs site test plan Manual testing BUT it does not work yet because the markdown file has some logic that is not supported by the plugins we are using See screenshot screen shot 2017 09 26 at 4 44 05 pm issue checklist item on Gatsby checklist Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"flarnie,bvaughn,bvaughn,bvaughn,flarnie",2017-09-26 23:48:49,2017-09-27 19:19:43
PR,Gatsby Add a stopgap fix for Safari indentation issue,Works around The tab button still works confusingly there but it is a known issue cc,,"gaearon,gaearon",2017-09-27 19:22:35,2017-09-27 19:37:58
PR,Gatsby Docs Update Safari Mac footer fix,overflow auto from MarkdownPage js was causing the menu to be cropped off I guess safari handles the auto is overflow y different to other browsers Even though it had a comment from next to it about mobile fix this no longer seemed to apply as it is good in both iOS and Android without it cc,,joecritch,2017-09-27 19:03:42,2017-09-27 19:42:51
PR,Merged master and resolved conflicts,Merged master Stack seems to have been deleted Search and replaced a bunch of markdown links to remove react prefixes,,"bvaughn,gaearon,bvaughn",2017-09-27 19:00:58,2017-09-27 19:44:13
PR,Gatsby fix embedded videos,Added explicit widths as required by gatsby remark responsive iframe to all embedded videos,,"bvaughn,flarnie,bvaughn,flarnie,bvaughn",2017-09-27 21:05:53,2017-09-27 21:18:32
PR,Remove apostrophe,Remove an incorrect apostrophe from the printInclusive documentation and update the sentence,,"jquense,gaearon,gaearon",2017-09-25 01:08:27,2017-09-27 22:05:53
IS,React 16 breaks webpack hot middleware,My output after updating react to v16 Seems like webpack hot middleware relies on lib ReactMount internal I created the same issue in webpack hot middleware repo,,,2017-09-28 07:43:07,2017-09-28 08:54:17
PR,Gatsby Pull gatsby highlight code line to container edge,Hi folks Love the new site mentioned that you currently do not pull the background of highlighted lines of code gatsby highlight code line up to the containers edge This PR fixes that by taking the horizontal padding L187 L188 of gatsby highlight into account Before after image image,,gaearon,2017-09-28 05:20:06,2017-09-28 10:18:37
IS,schedule callbacks in renderer,From looking at an early implementation of custom Fiber renderer L437 it seems there is a callback that is not in the official renderers scheduleAnimationCallback Additionally there is a callback in the official renderers which is not in the tutorial example at scheduleDeferredCallback Lastly both of these are referenced in the guide at So this begs the question are custom renderers meant to implement these If so what are the best practices for doing so In a more general sense do custom renderers have any relationship with setting ProrityLevels or affecting the scheduler,,"gaearon,iamdustan,gaearon,iamdustan,gaearon,gaearon",2017-09-28 04:24:59,2017-09-28 10:41:32
PR,Gatsby Tightened line heights on paragraphs,Tightened line height on any markdown paragraphs to 1 7 as suggested by Mentioned in 10901,,"joecritch,gaearon,KyleAMathews,acdlite",2017-09-28 10:33:44,2017-09-28 10:47:00
PR,Gatsby Fix heading line heights,This fixes heading line height issues as reported in 10901 cc,,joecritch,2017-09-28 10:27:22,2017-09-28 10:47:16
PR,Gatsby Fix long lines of code,There was an issue where mobile widths were too large due to any long inline code This fixes it be adding wordBreak 'break word to break long lines of code cc,,"joecritch,gaearon",2017-09-28 10:22:57,2017-09-28 10:48:19
IS,Bla,Bla GitHub bug,,,2017-09-28 11:29:22,2017-09-28 11:32:27
PR,Remove allow transparency,allowtransparency is an Internet Explorer only attribute that controls the background transparency of an iFrame When set to true it respects the background color of the iFrame When set to false it sets the background color to that of the document This feature was removed in IE9 Browsers beyond this point just let you set the background of the document body to transparent making the attribute unnecessary Should some ambitious poor developer manage to get IE7 8 to work with React 16 x they can still use allowtransparency true since React now supports unrecognized attributes How I verified this change Check out the MSDN Example on allowTransparency IE8 looks like this img width 655 alt 30827527 6a6687c8 a208 11e7 9c3f e3f13f1699af src Every other browser img width 675 alt 30827538 6f3d6406 a208 11e7 973b 6883ac692272 src,,"nhunzaker,aweary,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,gaearon,nhunzaker,nhunzaker,gaearon,nhunzaker",2017-09-25 23:06:39,2017-09-28 11:54:00
PR,Add ReactEurope 2018 Conference,,,,2017-09-28 13:17:34,2017-09-28 13:19:58
IS,ReactOS please read and respond to the final request,This issue seems to have been closed without further input being noted and responded to I strongly suggest you read the final post and suggest a new location for discussion Be aware that the ReactOS project community is reaching out to you So please do not ignore,,gaearon,2017-09-28 07:57:58,2017-09-28 14:33:00
IS,website Footer links do not reset scroll to top,1 Open 1 Scroll to the bottom and click a link in the footer eg Resources Conferences 1 The new page will load but the scroll position will remain at the bottom so it is not obvious that a new page loaded,,"bvaughn,bvaughn,bvaughn,bvaughn",2017-09-27 20:23:00,2017-09-28 14:41:40
IS,Broken Links on new docs,Root acknowledgements html in the footer Inside docs hello world html Installation react docs installation html Inside docs installation html under Add React to an Existing App tab While React can be used react docs react without es6 html setting up a production build process react docs optimizing performance html use the production build Learn more about integrating React with existing code react docs integrating with other libraries html integrating with other view libraries all the links about creating a production build react docs optimizing performance html better error handling experience in react blog 2017 07 26 error handling in react 16 html Inside docs introducing jsx html in the next section react docs rendering elements html Inside docs rendering elements html in the next section react docs components and props html encapsulated into stateful components react docs state and lifecycle html Inside docs components and props html we will discuss in the next sections react docs state and lifecycle html In the next section react docs state and lifecycle html Inside docs state and lifecycle html from one of the previous sections react docs rendering elements html updating the rendered element We mentioned before react docs components and props html functional and class components Inside docs handling events html See the SyntheticEvent reference react docs events html create a stateful component called docs state and lifecycle html adding local state to a class embed any expressions in JSX react docs introducing jsx html embedding expressions in jsx extract a component react docs components and props html extracting components Inside docs lists and keys html react docs rendering elements html react docs introducing jsx html embedding expressions in jsx react docs rendering elements html rendering an element into the dom react docs components and props html react docs reconciliation html recursing on children react docs components and props html extracting components react docs introducing jsx html embedding expressions in jsx react docs components and props html extracting components Inside docs forms html react docs react component html setstate react docs state and lifecycle html state updates are merged react docs uncontrolled components html Inside docs lifting state up html react docs components and props html props are read only react docs state and lifecycle html the data flows down Inside docs thinking in react html Simply refer to the React docs react docs react docs interactivity and dynamic uis html Inside docs jsx in depth html react docs conditional rendering html react docs lists and keys html Inside docs typechecking with proptypes html react blog 2017 04 07 react v15 5 0 html migrating from react proptypes Inside docs refs and the dom html react docs components and props html react docs lifting state up html react docs react dom html finddomnode Inside docs uncontrolled components html react docs forms html react docs refs and the dom html Inside docs react without es6 html react blog 2016 07 13 mixins considered harmful html react docs top level api html react createclass react docs working with the browser html component lifecycle Inside docs context html react blog 2017 04 07 react v15 5 0 html migrating from react proptypes react docs react component html constructor react docs react component html componentwillreceiveprops react docs react component html shouldcomponentupdate react docs react component html componentwillupdate react docs react component html componentdidupdate react docs react component html the component lifecycle Inside docs higher order components html react blog 2016 07 13 mixins considered harmful html Inside docs integrating with other libraries html react docs refs and the dom html react docs react component html the component lifecycle react docs uncontrolled components html react docs react dom html render react docs handling events html react docs lifting state up html react docs react component html forceupdate react docs higher order components html Inside docs react api react docs react without es6 html react docs introducing jsx html react docs react without jsx html react docs react component html react docs react component html shouldcomponentupdate react docs react component html forceupdate react docs rendering elements html react docs components and props html react docs introducing jsx html react docs react without jsx html react docs components and props html react docs react without jsx html Inside docs react dom html finddomnode react docs components and props html functional and class components react docs more about refs html react docs more about refs html the ref callback attribute Inside docs react dom server html rendertostring react docs react dom html render Inside docs react dom node stream html react docs react dom html render Inside docs events html react docs handling events html Inside docs test utils html react docs shallow renderer html react docs events html supported events Inside docs shallow renderer html react docs react dom html render Inside docs test renderer html None of the soft links work incorrect capitalization Inside contributing how to contribute html react downloads html react contributing codebase overview html Inside contributing codebase overview html react contributing how to contribute html react contributing how to contribute html development workflow react docs top level api html react react docs reconciliation html react docs top level api html reactdom react docs reconciliation html react docs reconciliation html react docs advanced performance html avoiding reconciling the dom react contributing implementation notes html Inside contributing implementation notes html react contributing codebase overview html stack reconciler react contributing codebase overview html react blog 2015 12 18 react components elements and instances html react contributing codebase overview html stack renderers react contributing codebase overview html fiber reconciler react contributing codebase overview html dynamic injection react contributing codebase overview html fiber reconciler react contributing design principles html Inside contributing design principles html react docs thinking in react html react blog 2016 07 13 mixins considered harmful html react docs more about refs html react docs context html react warnings unknown prop html react blog 2016 02 19 new versioning scheme html react blog 2015 12 18 react components elements and instances html elements describe the tree react docs displaying data html jsx syntax react docs webcomponents html react blog 2016 07 11 introducing reacts error code system html Inside tutorial tutorial html react docs installation html creating a new application react community support html reactiflux chat react docs react api html createelement react tutorial tutorial html why immutability is important react docs optimizing performance html examples react docs hello world html react docs react component html Note that I did not go through the blog posts,,"clemmy,bvaughn,clemmy,bvaughn,clemmy,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn",2017-09-26 23:22:19,2017-09-28 14:57:55
PR,Prettier formats gatsby node file as well,I believe I excluded this file originally b'c of a trailing comma issue that caused trouble with earlier versions of Node If we pin to a newer version anyway for async await support then this is no longer necessary and it would be reasonable to format this file also,,bvaughn,2017-09-28 15:47:16,2017-09-28 15:54:04
PR,Rewrite test renderer docs,If the docs just restate method names they are not very helpful,,"gaearon,bvaughn,gaearon,koba04",2017-09-28 15:21:02,2017-09-28 16:46:06
IS,website overlapping headers on H1s,img width 560 alt screen shot 2017 09 27 at 4 20 44 pm src cc,,"KyleAMathews,KyleAMathews,gaearon,acdlite,joecritch,joecritch,KyleAMathews",2017-09-27 23:24:57,2017-09-28 16:49:18
PR,Typo,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gaearon,2017-09-28 16:25:54,2017-09-28 16:52:27
PR,Add test for warning for camelCased unknown props,what is the change When we render unknown props they get converted to lower case This may be unexpected for people or break what they are expecting to happen Let is warn in this case and ask them to explicitly pass the lower cased attribute name why make this change To avoid corner case buggy results for users test plan NOTE It does NOT pass right now This is a known issue Should we change and just expect a warning but allow the attribute value to be set yarn run test src renderers dom shared tests ReactDOMAttribute test js issue,,"flarnie,gaearon,nhunzaker,nhunzaker,nhunzaker,flarnie,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,nhunzaker,gaearon,gaearon",2017-09-05 23:20:34,2017-09-28 17:01:47
PR,Added gatsby plugin nprogress for slow loading pages eg Blog,Adds the gatsby plugin nprogress plugin which displays the npgoress ricostacruz com nprogress loading bar if a page takes longer than a second to load This might fix the nit you mentioned Let is see how it looks when Netlify adds a preview link Kyle also recommended this plug in a time or two Gatsby uses it on its own website,,"bvaughn,gaearon,KyleAMathews,bvaughn,KyleAMathews,gaearon,gaearon,gaearon,KyleAMathews,bvaughn,bvaughn,KyleAMathews,bvaughn",2017-09-28 15:39:48,2017-09-28 17:02:50
PR,Add new docs website,Adds a new docs website built with Gatsby JS to replace the old Jekyll site Source code for the new site lives in www although markdown and YML data still comes from the legacy docs folder Changes to either markdown or website source code can be previewed on Netlify The react js bot should automatically add comments to each PR with preview links This preview is generated by running the newly added yarn build docs command in the root package json The majority of the changes in this PR are contained within the new www directory However some minor modifications have been made to existing content in the docs directory Modified frontmatter author block to always be an array Small markdown formatting tweaks I do have one open question about this PR though In order to simplify the build script I added a nvmrc file to require Node v8 4 0 Is this acceptable If it is frowned on for any reason I can update the build script to remove the newer async await syntax Once this PR has been merged I will update Netlify and set master as the main branch for the website Then to make it live more live we can merge something like 10856 and push out one final update to gh pages,,"bvaughn,KyleAMathews,KyleAMathews,KyleAMathews,bvaughn,flarnie,gaearon,flarnie,flarnie,flarnie,KyleAMathews,KyleAMathews,bvaughn,bvaughn,bvaughn,bvaughn",2017-09-27 19:50:19,2017-09-28 17:18:05
PR,Fix for createHTMLDocument API specific to IE11,The createHTMLDocument API title parameter is not optional in IE while other browsers do not care IE11 will throw if an argument is not passed This only impacts react dom development not react dom production Fixes issue 10865 Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,gaearon,2017-09-28 16:56:45,2017-09-28 17:34:34
PR,Gatsby Paragraph line height margin follow up,After agreeing with the suggestions in 10912 this follows it up reducing paragraphs line height and margin cc,,"joecritch,KyleAMathews",2017-09-28 18:10:41,2017-09-28 18:41:13
PR,Always wrap UMD bundles in IIFEs,Fixes,,"gaearon,gaearon",2017-09-28 19:00:54,2017-09-28 19:03:05
PR,Gatsby markdown cleanup,Removed unnecessary script tags from index md Added gatsby plugin twitter rather than embedding script tags in markdown to auto load Twitter JS for embedded tweets whenever a blog post with an embedded tweet is loaded Screenshot of blog 2013 06 02 jsfiddle integration html img width 617 alt screen shot 2017 09 28 at 10 58 38 am src,,bvaughn,2017-09-28 17:56:00,2017-09-28 19:08:41
IS,Warning Stateless function components cannot be given refs Attempts to access this ref will fail null after updating to React 16,Do you want to request a feature or report a bug Bug What is the current behavior Page load throws console error Warning Stateless function components cannot be given refs Attempts to access this ref will fail null What is the expected behavior No console error Or at least some way to trace which is the stateless component that is causing the issue Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 0 0 rc 3 Chrome Version 60 0 3112 113 Official Build 64 bit macOS Sierra 10 12 6 This error only started to appear after upgrading from React 15 16,,"clemmy,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-26 14:12:57,2017-09-28 19:40:27
PR,Fix null instead of the component stack in a warning,Fixes Note the warning itself is still legit This just fixes it to print the component stack instead of null in some cases See individual commit messages for more info on what we did wrong and why this helps,,"gaearon,sebmarkbage,sebmarkbage,gaearon,gaearon",2017-09-28 14:16:13,2017-09-28 19:40:27
IS,Is it okay to use ReactDom hydrate always,This is regarding the the use of hydrate in Next js We use the same render code base to render the initial SSR'ed version and client side generated renders When a user clicked on a link So here is my question Is it okay to use ReactDom hydrate in all cases Here we assume it will fallback to ReactDom render if it cannot hydrate But I was not sure of this So I have a solution for this See Is it makes sense to do the above check in the PR,,gaearon,2017-09-28 19:05:45,2017-09-28 20:05:05
IS,BUG State not updating when calling setState on a state variable that is used in a hidden component display none,Do you want to request a feature or report a bug Bug What is the current behavior I call setState to update a state variable which is used as a prop in a component that renders a modal If the modal is hidden display none the state variable does not update if the modal is being displayed then the state variable will update Neither componentDidUpdate or componentWillUpdate get triggered If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is a snippet of my code some of the comments point out the issue The full code is part of a private repo I'm more than happy to share access if would assist in investigating the issue What is the expected behavior Regardless of whether the modal dialog is being displayed the state variable should update Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 Chrome 60 0 3112 113 Windows 10 Home,,gunn,2017-09-20 19:32:10,2017-09-28 20:30:55
PR,website a11y fixes,what is the change adds 'aria label' to search input increase contrast of 'installation' page tabs details why We needed an 'aria label' There was no label on this input and screen readers might not have been able to identify it is purpose The placeholder does not count as a label We needed more contrast Without sufficient contrast some users may not be able to read the text on the tabs Changed the dark blue used for the text background of the tabs on the 'installation' page to a slightly darker blue which we were already using for the 'focus' style of the tabs It looked a bit weird before imo when the 'focus' was darker Now the 'focus' style just lightens the border to the new signature blue We plan to refactor this page and remove the tabs soon so not too worried about making this fix perfect test plan Manual testing loaded the pages and things look and ran aXe a11y audit no more warnings about these two issues img width 1237 alt screen shot 2017 09 28 at 11 02 03 am src,,flarnie,2017-09-28 18:09:23,2017-09-28 20:57:35
IS,website Add twitter timeline support to docs,Do you want to request a feature or report a bug This is a bug in the docs introduced by our migration to gatsby What is the current behavior There is an empty link on the 'Community Where to get support' page facebook and twitter at the very bottom In the past a twitter timeline was rendered there What is the expected behavior You should see a twitter timeline see old version img width 1070 alt screenshot with old twitter timeline highlighted src It looks like a script was added in this PR and now that script is not being loaded I think that adding the gatsby twitter plugin would fix this and if not we probably just need to tweak the gatsby twitter plugin,,"flarnie,flarnie",2017-09-28 17:23:31,2017-09-28 21:29:24
PR,Redirect old Jekyll website to new Gatsby website,Proposed alternative to 10856 Add index html and 404 html pages with JavaScript redirect to reactjs org I have pushed this change to the gh pages branch in my fork of react and it seems to work okay eg PS Aww yeeeaaahhhhh 96 611,,"bvaughn,bvaughn,gaearon,bvaughn,bvaughn",2017-09-28 19:32:03,2017-09-28 21:55:16
PR,Add React Summit Nigeria to the list of conferences,Added to the list of conferences Second React Summit NG 2017 October 21 in Lagos Nigeria Website Twitter Facebook,,kingisaac95,2017-09-28 21:40:30,2017-09-28 22:05:00
IS,How to add React Summit Nigeria to the conferences list,The Facebook Developers Circle in Lagos Nigeria is organizing a React summit here in Nigeria and we would love to know how our event can be added to the list here ie here Any guideline to this regard would be appreciated,,"kingisaac95,gaearon,kingisaac95,kingisaac95,gaearon,kingisaac95,kingisaac95,kingisaac95,gaearon,kingisaac95",2017-09-28 18:58:07,2017-09-28 22:10:53
PR,remove note about license for examples,removing the old mention of license for examples since there is no examples in the repository and also because the license for them was deleted here,,bjrmatos,2017-09-28 22:19:48,2017-09-28 22:27:53
PR,Gatsby Increase the color contrast of the Meta Title when not ondark,Hi This PR necessarily solves the problem here I do not know if it is cool but now the contrast issue is gone This is my first time contributing React And I'm so thrilled even it is a so tiny improvement Thank you all,,joecritch,2017-09-28 21:59:48,2017-09-28 22:34:27
PR,Tweaks to Introducing JSX,Minor changes,,gaearon,2017-09-28 23:15:36,2017-09-28 23:32:26
PR,Gatsby README md instructions,Because the new React based docs are a great way for people to contribute I figured a more thorough README md could be useful What do you think cc,,"joecritch,KyleAMathews,gaearon,gaearon,KyleAMathews,gaearon,joecritch,joecritch,KyleAMathews,joecritch,joecritch,joecritch,KyleAMathews",2017-09-28 23:16:16,2017-09-28 23:47:07
IS,react router not work with React 16 0 0,image react v16 0 0 react router v1 0 2 It is baseRouters js image,,gaearon,2017-09-29 06:16:02,2017-09-29 07:21:11
PR,Do not include warning in production,Fixes a size regression I introduced in 10802,,gaearon,2017-09-28 23:45:42,2017-09-29 07:24:07
IS,IE10 react dom exist Error,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 0 0 react dom 16 0 0 react dom development js line 8440 In ie10 Set is undefined,,"gaearon,gaearon",2017-09-29 09:05:23,2017-09-29 09:07:56
PR,Use ES6 module instead of commonJS in a doc,As far as I know we are using ES6 modules throughout the docs For the sake of consistency,,gaearon,2017-09-29 04:09:47,2017-09-29 11:24:11
IS,React devtools update highlight screenshots between 15 and 16,React 15 6 2 15 React 16 0 0 16,,gaearon,2017-09-29 01:46:30,2017-09-29 11:30:08
IS,UMD Production builds define global variables,Do you want to request a feature or report a bug Bug What is the current behavior The UMD production build linked in the announcement 0 0 umd react production min js define global variables y and Nb react dom If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Use the build with an app that defined the function or variable y loaded before react What is the expected behavior React builds should not define any other global symbols other than React Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 16 0 0 It worked fine with some betas of 16 0 0,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-28 08:38:42,2017-09-29 11:48:33
PR,Do not let UMD create extraneous global variables,Fixes From the doc on assumeFunctionWrapper Enable additional optimizations based on the assumption that the output will be wrapped with a function wrapper This flag is used to indicate that global declarations will not actually be global but instead isolated to the compilation unit This enables additional optimizations They actually are global in UMD builds so this flag should not have been set,,gaearon,2017-09-28 19:22:01,2017-09-29 11:48:34
PR,Added unstable batchedUpdates as breaking change to v16 post,ReactDOM unstable batchedUpdates now only takes one argument see issue 10866 Added a note in breaking changes v16 post,,"watadarkstar,gaearon",2017-09-29 04:23:57,2017-09-29 12:08:20
IS,after upgraded v16 using units without px shows no warnings like v15,Do you want to request a feature or report a bug feature What is the current behavior wouldiv style width' in my component is not changing accord to input like in the version 15 now in the versions 16 has no effects if i do not add 'px' to the value I would like to have a warning like in version 15 I took time to realize that in react 16 needed add the unites when i change css on the fly by example with states and inputs message in react v15 Warning was passed a numeric string value for CSS property which will be treated as a unitless number in a future version of React No warnings in react v15 simply div dont' change to the new width code,,"gaearon,sophiebits",2017-09-29 00:53:30,2017-09-29 12:18:36
IS,ReactDOM 16 createPortal not the same behavior as renderSubtreeIntoContainer,Do you want to request a feature or report a bug I do not know if this is a bug or feature because with last function ReactDOM unstable renderSubtreeIntoContainer it works like if you reading html code but with the new feature ReactDOM createPortal it is not the same behavior Bud it may be that i not understand the new feature create portal minimal demo of the problem Demo with ReactDOM createPortal Demo with ReactDOM unstable renderSubtreeIntoContainer What is the expected behavior Portal render content in to the body but if i want close the Portal and i click on close button then i trigger the show action again Is this a problem in ShadowDOM Because in Rendered HTML the Container and Portal are separate and close portal is not child of container Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 ReactDOM 16 0 0 Chrome Version 61 0 3163 100,,gaearon,2017-09-29 12:44:27,2017-09-29 12:52:17
IS,React 16 0 0 fiber batched updates ignores 2nd and further arguments,Do you want to request a feature or report a bug Bug What is the current behavior Calling ReactDOM unstable batchedUpdates fn a b eventaully calls fn a ignoring the third argument If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template,,"gaearon,gaearon,watadarkstar",2017-09-27 10:13:13,2017-09-29 12:53:53
IS,The IE11 document implementation createHTMLDocument API requires the title argument to be specified,Do you want to request a feature or report a bug bug What is the current behavior React interactivity lost React crash If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Run with react dom development js in IE11 not sure exactly what the exact repo steps are the fix I have attempted for IE11 was to simply pass an empty string var normalizeHTML function parent html if testDocument testDocument document implementation createHTMLDocument fix for IE11 here var testElement parent namespaceURI HTML NAMESPACE testDocument createElement parent tagName testDocument createElementNS parent namespaceURI parent tagName testElement innerHTML html return testElement innerHTML Source L133 L146 MDN docs here What is the expected behavior Well that React does not crash in dev mode and that interactively continues to work Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 0 0 IE11,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-27 07:53:02,2017-09-29 12:54:11
PR,chore update hero example on website,Change class component to functional because it is stateless,,"gaearon,gaearon",2017-09-29 13:49:52,2017-09-29 13:59:56
PR,Redirect to our beautiful new site,,,"sophiebits,bvaughn,bvaughn,sophiebits,bvaughn,gaearon,bvaughn,bvaughn,bvaughn",2017-09-26 23:58:35,2017-09-29 15:03:47
IS,React Summit not showing up in conferences page,I have successfully added the Second React Summit NG to this page via this PR but the summit is not showing in the list here Please am I missing anything How do I get it to appear in the conferences page,,kingisaac95,2017-09-29 15:14:44,2017-09-29 15:16:42
PR,Redirect users from the old gh pages Jekyll website to reactjs org,Proposed alternative to 10856 continuation of 10936 Goals Redirect people visiting existing links to the new website These links are scattered throughout documentation other websites DevTools etc Redirect search engine crawlers from the old gh pages site to reactjs org without harming our ranking Preserve functionality of tools that depend on query params like the error decoder Preserve anchor tags if possible Testing Spot checking a few of the generated pages seems to work For example I tried the following URL patterns category type root url no html nested url non markdown query params Foo anchors lifting state up New Approach Add a CNAME pointer to redirect to custom domain Old Approach First I deleted the old Jekyll website Then I generated a list of all unique URLs used in the website by logging them in gatsby node js Then I ran those URLs through the following script,,"bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,gaearon,bvaughn,gaearon,bvaughn,gaearon,zpao,sophiebits,bvaughn,bvaughn",2017-09-28 22:06:50,2017-09-29 15:26:48
PR,Gatsby Updated og image location,cc,,joecritch,2017-09-28 22:08:03,2017-09-29 15:27:41
IS,github pages 404,seems 404,,"iamdustan,gaearon,gaearon",2017-09-29 15:35:17,2017-09-29 15:40:25
IS,website Increase contrast for aresult' headers on homepage,Do you want to request a feature or report a bug This is an accessibility issue on the home page of the new docsite What is the current behavior The word aresult' in the interactive code samples does not have enough contrast with it is background img width 1150 alt contrast issue on homepage src If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Running an axe accessibility audit will flag this issue What is the expected behavior There should be no low contrast issue But it should also look cool,,"flarnie,flarnie,flarnie",2017-09-28 18:20:20,2017-09-29 16:22:52
IS,React 16 bug Warning Can only update a mounted or mounting component,I'm trying to run this snippet In previous version component only was mounting twice that behavior is also a bit strange to me When it comes to only setState without any data fetching everything works fine,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-29 10:03:29,2017-09-29 17:05:50
PR,Fix note formatting,Minor fix,,gaearon,2017-09-29 16:47:06,2017-09-29 17:37:35
IS,wouldata reactroot' attribute missing in 16 0 0,Do you want to request a feature or report a bug Bug What is the current behavior With versions prior to 16 React added a wouldata reactroot' attribute to the generated div wrapping the render I rely on this attribute in order to select the div with css in my case to make it height 100 so it fills its container e g root data reactroot height 100 width 100 With version 16 this attribute no longer appears and I can not easily select the div with CSS I can hack it in Javascript but it was a lot cleaner with the wouldata reactroot' attribute Before version 16 reactroot pre16 After Version 16 reactroot gonewith16,,"iamdustan,aweary",2017-09-29 17:45:28,2017-09-29 18:50:54
IS,Reactjs generating pdf using phpwkhtmltopdf,Hi I am new to reactJs i created a component to generate a report and i am pulling it as node module to my php application there i created a smarty template tpl in that i am using the main version js main version css files in the build and passing the required data to the component by data attributes and i am able to view the report now the problem is i have to generate a pdf when we click print hyper link from the browser for this we are using wkhtmltopdf converter using which we are able to merge different pdfs and generating a single pdf here i am getting a blank page if i give some text that is working fine but not working for the react component content It is failing for this react component Please guide me in the right direction html head link href baseUrl node modules react component report build main xxx css rel stylesheet type text css head body div id root data title Hello data name World data reportcontent ' literal users 11 5 dates 2017 09 17 literal ' div script src baseUrl node modules react component report build main xxx js script body html,,aweary,2017-09-28 20:21:23,2017-09-29 19:01:57
PR,Fix og url on SSR,The new React website looks good Currently The new React website on SSR returns undefined index md as og url You can see the result with curl This PR is to fix undefined and md instead of html The reason why constants urlRoot is undefined is its name constants conflicts with a node core package that is not documented So I renamed the name Is there any better name In addition to that I changed the og url from xxx md to xxx html and omitted the HTML name if the name is index html Thanks,,"koba04,gaearon,koba04,bvaughn,koba04,bvaughn,bvaughn,bvaughn,gaearon,koba04,bvaughn,bvaughn,koba04,koba04",2017-09-28 03:45:21,2017-09-30 01:38:01
PR,Gatsby,Not sure this change is wanted or too excessive The biggest question I had is whether it was okay to update old changelog links I smoke tested a few of the link changes and everything seems to be working,,"bvaughn,bvaughn",2017-09-29 17:27:12,2017-09-30 01:43:23
PR,Fix anchor links in reference react documentation,Just make reading of docs more convenient and easier,,,2017-09-29 19:50:24,2017-09-30 01:44:46
PR,Fix build on windows,fix window build issue 1 issue on rollup rollup plugin alias 11 2 windows path separator break string in rollup plugin replace this closes 9350 and 9540,,,2017-09-30 01:39:20,2017-09-30 02:19:03
IS,Reduce function,Can we change L49 L66 To this,,,2017-09-30 03:25:54,2017-09-30 04:43:11
IS,Webpack v3 6 0 not building most of the react and react dom packages in version 16 0 0,Do you want to request a feature or report a bug I would call it a bug Webpack v3 6 0 not building most of the react and react dom packages when I am using version 16 0 0 Running command webpack tells me only 31 hidden modules But keeping everything else same works fine and the app is launching correctly when I am using version 15 6 2 for react and react dom And now running webpack tells me 187 hidden modules The machine is Ubuntu 16 04 Here is my package json,,gaearon,2017-09-30 13:18:30,2017-09-30 13:53:40
PR,Fix website font flicker,I tried moving the TypeKit tag from the bottom of the body to the head but this did not resolve the flicker According to the docs this is actually expected TBH this flicker existed on the legacy site as well so I'm not sure how high priority it is but it is annoying So I'm now leaning towards removing TypeKit entirely and just using sans serif font Joe is going to circle back to this tomorrow and try out some other fonts that do not require using TypeKit eg San Francisco I think we could merge this PR for now to remove the flicker and then merge his later to make things look better Netlify preview cc,,"bvaughn,bvaughn,bvaughn,KyleAMathews,KyleAMathews,bvaughn,bvaughn",2017-09-29 17:05:13,2017-09-30 14:47:55
PR,Gatsby Removed Typekit in favour of system fonts,This is an alternative for 10967 and has applied the same fixes to monospace in this PR I have removed Typekit completely and used system fonts I have checked it on a retina MacBook screen an old Windows machine iOS and Android devices I feel like generally the system fonts feel better than than Helvetica Arial on this site especially when it is the only font being used I have also changed font size of the body font from 18px to 17px to suit the new fonts I was going to change the site is overall font weight to 300 to give it a lighter feel but it was too jagged on Windows cc,,joecritch,2017-09-30 11:52:36,2017-09-30 14:48:04
PR,Gatsby Installation tabs design,I have updated the design of the Installation as they were untreated since the previous design The idea here was to simplify them to make them more obvious cc img width 1440 alt installation tabs src,,joecritch,2017-09-30 12:07:26,2017-09-30 14:53:09
IS,website highlighted lines in code snippets do not have enough contrast,Do you want to request a feature or report a bug This is an accessibility issue with the new documentation website It is a clear cut problem but the solution is pretty open ended and ill defined Might be difficult and could use some design creativity What is the current behavior We are using Prism js for the syntax highlighting styles of our code snippets We also sometimes want to highlight a certain line so we lighten the background of that line With the lighter background many of the font colors do not provide enough contrast If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template You can verify this by running the aXe a11y audit on this page What is the expected behavior We need a way to highlight a line without losing so much contrast BUT choosing a different hue without making it lighter looks bad in my opinion and I would rather not fiddle with the various font colors used in the syntax highlighting We should either collaborate with the Prism project to add a 'highlight' option with enough contrast or find another library system to use for syntax highlighting,,"flarnie,joecritch",2017-09-28 17:51:32,2017-09-30 14:54:21
PR,Gatsby Darkened line highlight to increase contrast,cc fixes 10925,,"joecritch,gaearon,joecritch,gaearon,joecritch,gaearon,joecritch,bvaughn,joecritch",2017-09-28 18:25:44,2017-09-30 14:54:21
PR,chore docs Remove extra style tag curly braces,Removed an extra quoted set of curly braces These would throw unexpected token,,,2017-09-29 19:37:51,2017-09-30 15:11:56
PR,fix examples todo do not submit empty values,This PR fixes a problem in the live example on the homepage which we can submit empty todo items img src width 250px,,,2017-09-29 22:43:01,2017-09-30 15:20:01
PR,tweak search style,before image after image,,"nihgwu,bvaughn,nihgwu,bvaughn,joecritch",2017-09-30 09:47:53,2017-09-30 15:26:53
PR,Fix findSectionForPath and isItemActive functions it turns out inclu,This should fix issue 10888,,"bvaughn,bvaughn",2017-09-29 20:28:11,2017-09-30 16:35:27
PR,Fix website side nav sometimes shows incorrect 'current' highlight 10888,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"NicBonetto,NicBonetto,gaearon,NicBonetto,NicBonetto,bvaughn,NicBonetto,bvaughn",2017-09-29 02:12:02,2017-09-30 21:46:05
PR,Fixed website Handling Events shows incorrect 'current' section and highlight,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"NicBonetto,NicBonetto",2017-09-30 22:00:58,2017-09-30 22:59:16
PR,Fix createPortal link in API docs,The anchor name is lower case,,gaearon,2017-10-01 00:22:53,2017-10-01 10:52:22
PR,Update Reference readme to remove React DOM,React DOM is now Undefined in React 16 so React DOM div or React DOM button are no longer possible,,,2017-09-30 23:20:18,2017-10-01 10:53:01
PR,website Fix Layout Footer in Contribuiting pages,Before screen shot 2017 10 01 at 14 16 38 After screen shot 2017 10 01 at 14 16 20,,"fpoumian,gaearon",2017-10-01 20:19:32,2017-10-01 21:34:22
PR,Improve docs for select multiple,This PR addresses issue 1700 Currently it only re adds the original note However I would like to discuss adding a new section maybe called Selecting Multiple Values with a full example similar to the current select flavor example This example would instead involve selecting multiple values by appending or removing values from the array in the value property of the select tag when the user clicks an option tag Would this be preferable to the single block quote style note from the old docs,,,2017-04-27 04:36:55,2017-10-01 23:18:09
IS,hoist non react methods,I know this has been discussed in various places in the past specifically requesting that add it to redux IIRC I know the reasoning behind not using something like this is somewhat sound and this is a topic that does not really have a perfect solution at this time but what other drawbacks can you guys think of to a package to hoist non react methods when utilizing HOC The way I was previously doing it does not work with React16 Fiber so I have recently had to rewrite it a bit and move the logic into componentDidMount and use a ref of the child rather than the component prototype but it appears to do the job well enough Want to make sure I am not forgetting something significant especially with how Fiber works Obviously using this heavily would not be a good idea but in this case it is a HOC which largely should be invisible in its implementation simply injecting a prop Changing how passing refs works simply did not seem to be an appropriate solution Where the implementation would look something like this Obviously it is not ideal just trying to consider the best way to implement a more transparent way of handling this So far the only real problem I can see with the implementation would be methods which are not present on the child at the time of mounting which I think is acceptable drawback I would think it would not be too hard to adjust for that situation as well though,,gaearon,2017-10-01 23:11:12,2017-10-01 23:21:45
IS,Document recommended eslint config,Not sure if this is intended or not but I did not see anything in the documentation about it When using react dom it requires import of react even if react itself is never required For example in our project we have a backbone shim view that we use merely to render the page component No react specific transform occurs on the page however this fails because React is not available I assume the problem here is the fact React createElement is needed for the conversion from JSX to JS While deduceable this is not very intuitive Also this causes linters to fail on the import of React without actually using it anywhere In both cases I imagine not desirable behavior Any recommendations I think at bare minimum this should be called out explicitly somewhere and apologies if it already is and I just missed it,,"zpao,gaearon,aweary",2015-12-01 19:04:05,2017-10-02 00:56:28
PR,Remove Stack part 3 Stack only DEV code,Removes now dead ReactComponentTreeHook and ReactHostOperationHook ReactDebugTool ReactInstrumentation ReactPerf and the calls to host operation hook in DOM utilities In Fiber we never have a debugID so removes the associated codepaths Also removes on methods on hooks since in Fiber we call validateProperties directly Adds empty shims for methods RN still depends on They are already no ops so now we just make this explicit and add a TODO to remove the dependency Isn t it nice to learn this before sync Yay flat bundles The next and last step is in,,gaearon,2017-09-24 00:46:04,2017-10-02 10:42:08
PR,Update web component docs to current standard,The documentation example for Web Components uses deprecated Custom Element and Shadow DOM APIs 0 This change updates the example to the v1 APIs which are the current standard 0 historysupport,,"trueadm,gaearon,trueadm",2017-10-02 02:01:55,2017-10-02 10:44:57
IS,Unable to find element with ID when re rendering server generated content that contains a style tag,Do you want to request a feature or report a bug This is a bug What is the current behavior We server render a page that has a style tag and the style tag is created using React createElement When that later gets re rendered without a style element we see an error in the console capture Note that this only happens when we server render that page If we turn off server rendering the error goes away The DOM looks like this capture The error also goes away if we do So it seems that the style element expects only one child If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I have not been able to create a small reproducable but I hope that I have narrowed it down enough to be clear If not then tell me and I will try to create a reproducable again Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 1 0,,"jimfb,aweary,syranide,syranide,jimfb,syranide,gaearon",2016-06-21 10:38:02,2017-10-02 11:53:25
IS,How can I create a PR for e g the create react class module,Lots of react modules have just listed as repository I would like to create PRs for create react class and for react dom factories Where can I do that Is the code in this repo somewhere where,,"gaearon,gaearon",2017-10-02 10:12:57,2017-10-02 12:27:04
PR,Disambiguate react and reactjs IRC channels,Addresses This is implementing a suggestion brought forward by Pierre Schweitzer who represents the ReactOS project,,gaearon,2017-10-02 12:32:16,2017-10-02 12:32:26
PR,Remove Stack part 4 remove Stack only branches and types,Last part extracted from The first two commits remove unnecessary injections The last one is somewhat extensive and removes dead files and all branching on typeof x tag 'number' It also removes precaching logic from the component tree Stack only validateDOMNesting takes one less argument because Fiber always passed null instead of childInstance For tests it fixes up ResponderEventPlugin test js since it depended on Stack internal names,,"gaearon,gaearon,trueadm",2017-09-24 01:15:11,2017-10-02 12:43:46
PR,Combine rendered Note section,,,gaearon,2017-10-02 12:43:10,2017-10-02 12:47:41
PR,Stop exposing DOMProperty for the www build,We do not need it anymore because we support custom attributes out of the box Proof L2196 L2201,,gaearon,2017-10-02 14:53:13,2017-10-02 14:55:49
IS,onChange firing on a td element when there is checkbox element inside it,I do not think this is the expected behavior so I will be reporting this as a bug I'm creating a data table component for one of my projects and in this component I decided to implement extensions to the table as different types of columns but when I was creating a 'CheckableTableColumn' to extend the regular column to support 'toggle' actions just putting a checkbox inside it I ran into this strange behavior where when I try to attach a onChange handler to the checkbox from an upper in the tree component the event was firing twice Looking into it I found out that the onChange event in the checkbox that React translates to a onclick event was bubbling up to the td component that contains the checkbox which for simplicity was just spreading the passed props to it I managed to reproduce this behavior in the following bin console output to reproduce it just click on one of the checkboxes on in the table I do not know why the td element is attaching the onChange handler but I think it should not do it should it I have had the same problem in the latest stable chrome firefox and opera The React version that I'm currently using is the latest one v15 1 0 Thank you all in advance,,"karczk,syranide,syranide,syranide",2016-06-30 19:32:52,2017-10-02 15:05:43
IS,Old fiddles are broken after the new domain website,no longer works and this causes all old fiddles like to break We should fix it,,"gaearon,gaearon,gaearon",2017-10-01 23:49:11,2017-10-02 15:48:59
PR,Add legacy JSFiddle files,I expect this will fix Unfortunately we can not just redirect the shortcut URL to a new location because plenty of fiddles already reference the GH pages URL directly,,gaearon,2017-10-02 15:33:49,2017-10-02 15:49:00
PR,Fixed website Handling Events shows wrong 'current' highlight,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,NicBonetto,2017-09-30 23:09:13,2017-10-02 15:56:41
IS,website Side nav sometimes shows an incorrect current highlight,Bug The active navbar item is incorrect sometimes Reproduction steps Navigate to Observe that Synthetic Event is highlighted Expected Behavior Quick Start Handling Events should be highlighted,,"clemmy,bvaughn,NicBonetto,gaearon,bvaughn,NicBonetto,bvaughn",2017-09-27 18:05:07,2017-10-02 15:57:31
PR,issue 10986 website Buttons in Live Code sections have bad styling,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,,2017-10-01 14:24:40,2017-10-02 16:34:27
PR,Clarify implementation of tick in Lifecycle docs,Hello I am enjoying going over the new React documentation as I am tutoring a beginner While reading over the State and Lifecycle documentation I came across an example where it is possible some confusion may occur Because of the proximity to the explanation of lifecycle events a beginner may see tick before they come across the list of lifecycle events and may be lead to believe that all components run a timer every second This documentation change clarifies how the method tick relates to the example given in the State and Lifecycle documentation Why this change is necessary is because it may be confusing for beginners who may mistake tick to be a lifecycle API hook To clarify the verbiage is changed so that it becomes more clear that the method is specific to the component and not the API,,,2017-10-01 05:27:15,2017-10-02 16:37:06
PR,Ensure all external links have consistent behavior,The new docs site looks great I did an audit of the links on the entire site and found some issues This PR attempts to address them The ExternalFooterLink component was not making use of the rel prop passed in Hence links created by ExternalFooterLink component could have target blank and subjected to the window opener security vulnerabililty I have made ExternalFooterLink use the rel prop Some links with target blank do not have the rel noopener attribute Reorder the sectionListCommunity links on the Community Resources page to match the footer Some of the links that have the external icon render the ExternalLinkSvg component do not open in new tabs I made the behavior consistent by adding target blank and rel noopener to them If this is intended let me know and I will revert Other minor stuff remarkable on the homepage of the A Component Using External Plugins section was left as markdown Changed it to strong as the line JSX is optional and not required to use in the React in the A Simple Component section is also rendered using strong Some questions suggestions I have Some of the links in the templates of the docs directory face the issues mentioned above but they are no longer in use Should they be fixed as well I think target blank and rel noopener should be part of an ExternalLink component so that all external links on the new docs site can use it without having those two props be repeated so many times like inside LayoutFooter Footer js I can do a site wide refactor for this if there is interest,,"yangshun,yangshun,yangshun,yangshun,yangshun,bvaughn,bvaughn,bvaughn,bvaughn,yangshun",2017-10-01 17:48:47,2017-10-02 16:52:40
PR,Add svg tabIndex to the attribute table,This adds it to prevent future regressions to We can see the behavior is wrong by comparing the SVG and non SVG versions img width 642 alt screen shot 2017 10 02 at 18 41 53 src,,gaearon,2017-10-02 17:44:20,2017-10-02 17:44:49
IS,svg tabIndex 2 does not work,See the original report in issuecomment 333242375 The problem is that SVG is case sensitive and so na vely setting tabIndex and relying on insensitivity wo not work with it The good news is it seems like tabindex is the only valid SVG attribute with this problem We just missed it because it applies both to HTML and SVG I think the fix is to add it back to the whitelist,,"gaearon,gaearon",2017-09-30 10:24:07,2017-10-02 17:52:26
PR,Fix tabIndex attribute for SVG,Fixes which is a regression in 16 Verified with a new integration test and by manually trying Why it broke we removed most of the DOM whitelist recently 10385 and tabIndex was one of the attributes that got nixed because its lowercase version tabindex just works However we forgot it s also a valid SVG attribute which is case sensitive We currently use a different logic branch for attributes that are not in the whitelist so it did not get properly lowercased in 16 0 0 Adding it back to the whitelist forces it to be lowercased which fixes it for SVG and does not change how it works for HTML The way whitelist works is pretty confusing now but I'm going to fix this later in Let is just patch this hole for now I do not expect there to be more regressions like this because it is the only camelCase HTML attribute we deleted in 10385 that also happens to apply to SVG,,"gaearon,gaearon,gaearon,sebmarkbage,nhunzaker",2017-10-02 17:31:06,2017-10-02 17:52:27
IS,Feature request Disable the unrecognized tag warning in React 16 but only for specific tags,Do you want to request a feature or report a bug Feature What is the current behavior In Firefox the dialog element is not implemented We use a polyfill to be able to support it Everything works well But React warns that the dialog element is unrecognized and this on each page load which is quite useless for this specific case I would like the possibility to disable the warning but only for some elements So the utility of this warning remains when the developer mistype the component name What is the expected behavior Once we specified which tag are accepted normal React will not warn on specified unrecognized tags Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 Firefox 57 In previous versions there was no warning Is this clear enough Do you need any other information Cheers,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-10-02 10:03:13,2017-10-02 17:59:37
PR,Whitelist dialog from unknown tag warning,Fixes,,gaearon,2017-10-02 17:59:09,2017-10-02 17:59:38
IS,Warning Documentation 404 Not Found,Do you want to request a feature or report a bug Bug What is the current behavior The documentation for warnings returns a 404 If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Redirect to correct documentation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The workaround is to look at the cached version from a google search or check for markdown here,,gaearon,2017-10-02 18:50:18,2017-10-02 19:12:33
PR,Fix 404 for warning URLs,Fixes Verified by visiting 8000 warnings refs must have owner html,,gaearon,2017-10-02 19:12:29,2017-10-02 19:12:33
IS,Leading zeros in controlled input with integer value,Do you want to request a feature or report a bug Bug What is the current behavior In the text input I can see leading zeros when I pass digit value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template For some reason I can not reproduce this bug on jsfiddle or codepen Moreover react works fine there Steps 1 Create controlled text input and add onChange listener which saves input value to state as an integer 2 Pass value from state to input 3 Write 0000001 to input Value in state is equal to 1 but value of input is 0000001 What is the expected behavior A value in the input is the same as in the state 1 Without leading zeros Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React CRA React 15 5 4 Chrome IE 11 Edge Firefox I understand that this is the very low amount of information so I will be happy to provide more Just need to know what else would be useful,,aweary,2017-10-02 07:57:14,2017-10-02 19:30:01
IS,Fiber cannot render to DocumentFragment ShadowRoot,Do you want to request a feature or report a bug bug What is the current behavior React 15 x was able to render within a DocumentFragment shadowRoot not possible with Fiber anymore DEMO related What is the expected behavior be able to render to shadow root like previous versions of React Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 Chrome,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-10-01 23:33:20,2017-10-02 19:50:15
PR,Fix rendering into shadow root,Fixes 1 Removes a unit test we always skip it is from the times we ran tests in browsers 2 Adds a fixture that actually verifies we can mount into shadow root 3 Fixes mounting into shadow root Before img width 645 alt screen shot 2017 10 02 at 19 53 57 src After img width 425 alt screen shot 2017 10 02 at 19 54 36 src,,"gaearon,aweary,aweary,gaearon,gaearon",2017-10-02 18:59:19,2017-10-02 19:50:15
PR,Issue 10957 Replace hyperlink tag with button tag in tic tac toe tutorial,torial Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"bvaughn,bvaughn",2017-10-01 08:25:19,2017-10-02 20:48:04
PR,Update JSFiddle templates for React 16,These were broken after 16 was tagged as latest on npm This fixes that problem and also adds two template options one for React 16 and one for React 15 I figure we should provide both for now since there is still a lot of 15 x users,,aweary,2017-10-02 19:45:30,2017-10-02 21:11:30
PR,Docs add link to DOM Level 3 spec for possible values of key prop,As someone unfamiliar with React is Synthetic Event system it took me a lot of time to find the list of possible values for the key prop in keyboard events I was expecting a numeric value since I vaguely remembered the keyCode prop but that is apparently deprecated now After several minutes of searching I found a link in the React v0 11 release blog post improved keyboard event normalization so I thought this definitely should be in the docs smile Let me know if you would like the language changed or anything like that I have completed the CLA as well slightly smiling face,,gaearon,2017-10-02 20:15:35,2017-10-02 22:13:24
PR,Update react summit Nigeria title,Being that we plan on holding another React Summit next year the organizing body have decided to change the title to React Summit 2017 so that only the year would be changed for the next summit,,"kingisaac95,gaearon,kingisaac95,kingisaac95",2017-10-02 20:52:26,2017-10-02 22:15:08
IS,Active Tab is not included in current route or permalinks on new docs site,Do you want to request a feature or report a bug bug on new docs site What is the current behavior on the new docs site active tab is not included in current route or permalinks so when attempting to send someone here using a cdn they are instead dropped here because the correct tab is not active If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template go here click add react to existing app tab grab any permalink from within this section ex enabling es6 and jsx open that permalink from within an incognito window What is the expected behavior should be taken to the correct linked section within the docs Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React this is not an issue with react itself just the new docs site,,"gaearon,bvaughn,bvaughn",2017-10-02 20:22:40,2017-10-02 22:45:49
PR,Refactored Installation page to no longer use tabs,Resolves 11043 The installation page previously used a one off tab mechanism to visual limit the content shown on the screen Unfortunately this mechanism did not work correctly in production on the new website causing some links to show the incorrect content Ultimately this PR resolves the issue by removing all of the embedded HTML CSS in the installation md file in favor of standard markdown syntax I believe this is the best short term solution and that we can revisit the UI UX of this page in the future to improve it cc screen shot 2017 10 02 at 3 17 48 pm The anchor tags should now work correctly eg using a cdn For posterity I also considered the following alternative approaches Breaking the sub sections into their own pages Pros Keeps the document uncluttered by limiting the presented info in a manner similar to the tabs Cons Not obvious what the next prev links should be on the Installation page or any of the sub pages Could not redirect from any existing external links to eg docs installation html using a cdn screen shot 2017 10 02 at 3 08 12 pm Keeping content in a single page but with side nav headers screen shot 2017 10 02 at 3 15 14 pm Pros Nice high level overview of the sections similar to tab mechanism Cons Complicated the sidenav logic for Docs by mixing in behavior currently only used in the Tutorial section eg anchor syncing as you click or scroll around Hopefully we will get this sort of behavior for free by way of a higher level proposal like 10980,,"bvaughn,gaearon,bvaughn,gaearon,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn,sophiebits,bvaughn",2017-10-02 22:24:51,2017-10-02 22:45:49
PR,Remove bundle collapser browserify recommendation,See 11049 This PR relegates the browserify bundle collapser recommendation browserify to a note I use it all the time without any problems so it seems like a thing that is almost always nice but since the failure in the referenced issue is pretty clear it seems like perhaps it should be used carefully and with proper warnings,,gaearon,2017-10-02 22:30:34,2017-10-02 23:17:49
IS,react test renderer shallow throws if NODE ENV production,Do you want to request a feature or report a bug Feels like a bug open to correction context What is the current behavior react test renderer shallow throws if NODE ENV production more details under which versions of React below If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 does NODE ENV production jest count jk NODE ENV production jest with specs comparing snapshots of shallow rendered components utilizing libraries that change behavior when NODE ENV production ex recompose L7 L9 What is the expected behavior Able to shallow render components as they would will be when built and deployed to production Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React v15 x react test renderer shallow runs happily the check and error throw appears to be new in v16 x L3 L5 Related 7231 comment issuecomment 236370277 had a response of There should be no difference between dev and prod versions of React which is great news in terms of react but disallowing prod version of shallow render does not cover the prod code path of other libraries dependencies,,"gaearon,aweary",2017-10-02 23:14:40,2017-10-02 23:21:15
PR,website Add RSS Feed using gatsby plugin feed,This should add a RSS Feed to reactjs org feed xml as requested in 10978,,"fpoumian,bvaughn,bvaughn,bvaughn,fpoumian,fpoumian,fpoumian,fpoumian,bvaughn,bvaughn,bvaughn,fpoumian",2017-10-01 05:32:38,2017-10-02 23:23:36
PR,Website Add titles and labels to iframes and images on Community pages,what is the change add titles to all iframes add alt tags to images add aria label to some links which only have images as contents why make this change Based on warnings thrown by aXe a11y audit of those pages test plan Manual testing issue None,,"flarnie,bvaughn,flarnie,flarnie",2017-10-02 20:05:14,2017-10-02 23:41:06
PR,Only run custom element fixture in browsers that support it,Fixes an issue introduced in,,aweary,2017-10-02 22:45:59,2017-10-02 23:50:47
PR,Removed PooledClass and tests,This does not appear to be in use anywhere React Native uses PooledClass but it is already using a forked copy,,bvaughn,2017-10-02 22:57:30,2017-10-02 23:54:40
IS,componentDidCatch not receiving props,Do you want to request a feature or report a bug feature What is the current behavior when componentDidCatch triggered from ErrorBoundary component additional props are not passed in When the component goes to render the only props available are children Is this deliberate If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 Pass in props like this What is the expected behavior expect other props style and cat in this case to still be passed in Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 0 0 beta 5 react native 0 49 0 rc 6 no this is a new feature,,,2017-10-03 01:20:19,2017-10-03 02:07:48
IS,website Buttons in Live Code sections have bad styling,On the new site the button in the todo example looks strange non standard Generally this happens when border styling is overridden and no nice styling is applied to the button This appears to be the case here Removing border color inherit fixes the styling,,"Daniel15,Daniel15",2017-09-30 10:17:13,2017-10-03 10:40:04
PR,Fixing how to contribute beginner friendly issues GitHub link,Fixing broken beginner friendly issues link is 253Aissue label 253A 22Difficulty 253A beginner 22 to GitHub from How to Contribute site to a working link open is issue label 22Difficulty beginner 22 Regards Matej,,gaearon,2017-10-03 11:39:20,2017-10-03 12:38:29
IS,Bug ReactDom hydrate detects but doesn t fix diff,I have an intentional difference in the client vs server rendering an Image component that displays a different src depending on the screen pixel density What is the current behavior When I render this on a retina screen I get this warning Warning Prop src did not match Server image png Client image 2x png But the browser shows the server rendered content and not the correct client one What is the expected behavior That the client mutates the dom and changes the src attribute of the img Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 16 0 0 Chrome 61 0 3163 100 In previous versions of react this was not a good approach because render would then re render the whole DOM instead of just the diff,,"gaearon,gaearon,gaearon",2017-10-03 12:23:44,2017-10-03 12:44:43
PR,Add test for mounting into a document fragment,Follow up to,,"aweary,gaearon,aweary",2017-10-02 21:37:26,2017-10-03 13:55:32
PR,Update conferences,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"bernard-lin,bernard-lin",2017-09-22 17:17:50,2017-10-03 14:45:31
IS,Resolution failure with bundle collapser and non unique file contents,Do you want to request a feature or report a bug Report a bug What is the expected behavior Expected behavior is that browserify index js and the recommended optimization browserify browserify index js p bundle collapser plugin resolve requires correctly and produce functionally equivalent output What is the current behavior Observed behavior is that bundle collapser causes a browserified bundle to resolve files incorrectly when components with different paths have identical contents Steps to reproduce For a full reproduction see bundle collapser uniqueness failure react a index js and b index js should render different values coming from a value js and b value js respectively but since the component content is identical b index js erroneously resolves to the wrong component and displays a is value For a simpler reproduction not specific to react see bundle collapser uniqueness failure Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is a browserify bundle collapser issue so that the react version is irrelevant The real issue here is that it is an officially recommended optimization browserify that may result in an invalid bundle,,"gaearon,gaearon",2017-10-02 22:12:58,2017-10-03 14:50:44
IS,Detecting 'outside' events using the same logic as with portals,I was surprised pleasantly so to read that events bubble through portals and up the component tree rather than the DOM tree Obviously this means I can detect clicks that occur within my component or child components without having to worry about whether they happen to be portal hosted However another fairly common thing you may want to do is detect whether an event occurred outside of a component or child components There are plenty of libraries out there that do this but they all AFAIK use the DOM tree so do not have this same behaviour I was curious whether or not there is anything new but unadvertised in React 16 that can help with this part of the puzzle,,"jquense,gaearon",2017-09-29 14:14:28,2017-10-03 14:56:18
IS,SVG path tag unrecognized with React 16,I have an element in which I have code similar to this svg width 100 height 100 viewBox 0 0 80 80 path ref currentLevel this currentLevel currentLevel className styles svgBorderCurrent d M40 10C57 351 10 71 23 649 71 40 5S57 351 71 40 5 71 S10 57 351 10 40 5S23 649 10 40 5 10z svg The svg and it is paths are rendered but I get an error in the console The tag path is unrecognized in this browser If you meant to render a React component start its name with an uppercase letter What is the right way to render this svg I never got a message like this in React 15 x,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-09-29 05:48:17,2017-10-03 14:57:56
IS,After our mobile web upgrade to React 16 0 x our automation input box sendkeys got failure on iOS simulator,Protractor 3 0 0 selenium webdriver 3 5 0 Test device Saucelabs iPhone simulator iOS 10 0 Mobile web build by React 10 6 x Our mobile web has input box which build React controlled input after we upgrade the React from 10 5 x to 10 6 x Our automation test got failure when we submit the input box value to our backend We used the saucelabs to execute our automatino testing On the saucelabs recording video we can see the input has value be presented We used webdriver sendkeys function to insert value to the input box element Then click the submit button We check our backend log the input box value is empty I try to manual the simulator on saucelabs use the soft keyboard to type the value and click submit it works I also try use the Android emulator to run the same test it works too It seems the sendkeys function did not trigger the React properly event so the React component think the input value did not be changed I saw the React changelog and noticed the upgrade include some input improvment Does anyone face the same issue and know hope to fix or some workaround Thanks Charles,,"gaearon,gaearon",2017-09-28 18:24:19,2017-10-03 14:58:44
IS,Decide on the desired behavior when a boolean value is passed to an unknown prop,Moving the discussion from comments in to this issue,,"flarnie,sophiebits,flarnie,flarnie,sophiebits,aweary,nhunzaker,sophiebits,aweary,nhunzaker,nhunzaker,aweary,aweary,flarnie,aweary,sophiebits,aweary,sophiebits,nhunzaker,aweary,sophiebits,nhunzaker,nhunzaker,aweary,aweary,nhunzaker,sophiebits,nhunzaker,sophiebits,syranide,nhunzaker,syranide,sebmarkbage,aweary,jquense,aweary",2017-08-23 17:47:51,2017-10-03 15:23:36
IS,PropTypes createClass warnings echo when using import as React,Do you want to request a feature or report a bug This is a bug What is the current behavior This simple script What is the expected behavior I expect these deprecation warnings not to throw The import as React syntax is now recommended in FlowType and this is causing issues for end users in several libraries I author See e g this issue Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is in React 15 6 1,,"STRML,gaearon,STRML,aweary,gaearon,gaearon",2017-08-31 20:04:01,2017-10-03 15:24:14
IS,Tests toTree on a rendered array,I do not know if this is a bug or if i am doing it wrong When i have a component that the render returns an array in Fiber the rendered returns only the first element What is the current behavior Log is only the first element What is the expected behavior I think this should be an array of elements Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16,,,2017-09-06 08:21:34,2017-10-03 15:29:58
PR,Changing a for button in tutorial,Changing a to a button as discussed in this issue I forked the existing CodePen is and adapted the code to include button If it is not the usual practice and you prefer using existing we need to adapt those Regards Matej,,bvaughn,2017-10-03 11:13:26,2017-10-03 15:47:37
PR,replace achor tag with button array map,While running the tutorial app locally the anchor tag s returns a warning during compile So my edit is to use a button instead I tested this and still produce same results Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"bvaughn,bvaughn",2017-10-01 09:47:00,2017-10-03 15:47:53
PR,Replace hyperlink tag with button tag in tic tac toe tutorial and update related references in the tutorial document,ate related references in the tutorial document Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"gaearon,gaearon,gaearon,gaearon,bvaughn,bvaughn",2017-10-02 20:46:09,2017-10-03 15:48:07
IS,website Tutorial warning at 'Showing the moves',I am running the code locally using npm start All was going well until I hit this section npm v 3 10 10 node v v6 11 3 Here is what I see Compiled with warnings src index js Line 84 Links must not point to Use a more descriptive href or use a button instead jsx a11y href no hash Search for the keywords to learn more about each warning To ignore add eslint disable next line to the line before I grabbed the current code from this link and I get the same warning as in the code I typed in manually The text talks about this warning Warning Each child in an array or iterator should have a unique key prop Check the render method of Game Which I am not seeing,,"Haroenv,Haroenv,bvaughn,bvaughn,bvaughn,bvaughn",2017-09-29 07:50:50,2017-10-03 15:49:05
PR,Fix all GitHub issues and PRs links query params,Following up on 11063 it seems like the markdown engine that Gatsby uses encodes the query params in the markdown links This causes the query params of GitHub issues and PRs links to be double encoded such that is 3Apr label 3Asemver patch becomes is 253Apr label 253Asemver patch and hence the links do not work Leaving the links in the raw format of open is pr label semver patch gets around this issue Searched the whole code base for similar occurences and fixed all of them in this PR Tested on latest versions of Chrome Firefox and Safari,,"yangshun,gaearon",2017-10-03 15:49:19,2017-10-03 15:58:27
PR,Fix the typo in the docs,Docs fixed the typo a li instead of an li,,,2017-10-02 22:58:20,2017-10-03 16:49:38
PR,Fix custom element fixtures in IE,IE was breaking when it evaluated the new Function call because it contains syntax that it does not support,,aweary,2017-10-03 16:54:09,2017-10-03 17:24:00
IS,website docsearch improvements,What is the current behavior the docsearch on the new page changed its design but two features are different than in the previous version the cursor no longer has a separate colour visible when you use the arrow keys to select a result there no longer is an Algolia logo mention What is the expected behavior A slightly different background colour for the cursor A mention of search by Algolia or our logo as which is required because it is a free plan Happy to open a PR for both of those issues with whatever colour solution we choose cc and,,"Haroenv,bvaughn",2017-09-29 16:36:29,2017-10-03 17:39:15
PR,style docsearch add cursor logo,fixes 10965 Not completely convinced about the cursor colour but I could not really find a better one cc Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"Haroenv,joecritch,Haroenv,bvaughn,bvaughn,Haroenv,Haroenv,bvaughn,Haroenv",2017-10-02 16:06:10,2017-10-03 17:39:15
IS,Tests failing when using createPortal with React 16,Bug I have these two files index js The app was started with create react app and when I run the test I get this FAIL src components SomethingCool index test js Console console error node modules react dom cjs react dom development js 8305 The above error occurred in the SomethingCool component in SomethingCool at index test js 7 Consider adding an error boundary to your tree to customize error handling behavior You can learn more about error boundaries at renders without crashing An error was thrown inside one of your components but React does not know what it was This is likely due to browser flakiness React does its best to preserve the Pause on exceptions behavior of the DevTools which requires some DEV mode only tricks It is possible that these do not work in your browser Try triggering the error in production mode or switching to a modern browser If you suspect that this is actually an issue with React please file an issue at Object invokeGuardedCallbackDev node modules react dom cjs react dom development js 1343 19 at invokeGuardedCallback node modules react dom cjs react dom development js 1195 27 at performWork node modules react dom cjs react dom development js 12800 7 at scheduleUpdateImpl node modules react dom cjs react dom development js 13185 19 at scheduleUpdate node modules react dom cjs react dom development js 13124 12 at scheduleTopLevelUpdate node modules react dom cjs react dom development js 13395 5 at Object updateContainer node modules react dom cjs react dom development js 13425 7 at node modules react dom cjs react dom development js 17105 19 at Object unbatchedUpdates node modules react dom cjs react dom development js 13256 14 at renderSubtreeIntoContainer node modules react dom cjs react dom development js 17104 17 at Object render node modules react dom cjs react dom development js 17129 12 at Object anonymous it only src components Notification index test js 7 22 at Promise resolve then el node modules p map index js 46 16 at process tickCallback internal process next tick js 109 7 When I change the component to just render the empty div without createPortal it works fine Info create react app 1 3 0 react scripts 1 0 14 react 16 0 0 react dom 16 0 0 macOS Sierra 10 12 6 Note that I also used this suggested workaround on 9102 for requestAnimationFrame issuecomment 283873039 with the tests Please let me know if there is more info needed that will help figure out what is going on Thanks,,"gaearon,gaearon",2017-10-03 16:25:30,2017-10-03 17:51:07
PR,website Add RSS Feed to website,This should add a RSS Feed to reactjs org feed xml as requested in 10978 Re submitted because I messed up previous PR at 11003,,"fpoumian,bvaughn,fpoumian,bvaughn,fpoumian,fpoumian,bvaughn,KyleAMathews,bvaughn",2017-10-03 00:00:26,2017-10-03 18:06:31
IS,RSS feed 404,is a 404 Did we intentionally drop this I assume not Reported on Twitter,,"acdlite,KyleAMathews,fpoumian,bvaughn,bvaughn",2017-09-29 21:16:04,2017-10-03 18:06:52
IS,React org enable tab out of Live JSX Editor,The current React org default behavior is that keyboard users will get to the code sections of the live editor and get stuck Can someone configure ignoreTabKey which makes the editor ignore tab key presses so that keyboard users can tab past the editor without getting stuck Chrome on Windows atm and cannot edit it to submit a fix Sorry about that,,bvaughn,2017-09-29 20:26:43,2017-10-03 18:15:01
PR,Live code editor ignores tab key for improved a11y,Resolves 10976 Note that the use of ignoreTabKey currently triggers a DOM warning due to react live but I will follow up with an upstream fix see FormidableLabs react live pull 40,,"bvaughn,bvaughn",2017-09-30 15:42:43,2017-10-03 18:15:01
PR,Fix a dead link to algorithm paper,The link to the algorithm describing how to efficiently transform one tree into another tree was broken A working link to the paper was added,,bvaughn,2017-09-26 07:22:15,2017-10-03 18:16:52
PR,Update import instruction for TypeScript rollup,Using import React from areact' without the wildcard import will cause TypeScript to attempt to use React default and other ES2015 module aware bundler to look for the default export,,"glixlur,bvaughn",2017-09-24 05:29:20,2017-10-03 18:23:39
PR,Update html jsx lib js,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,bvaughn,2017-09-24 08:44:10,2017-10-03 18:24:55
PR,Update handling events md,handleClick this setState prevState isToggleOn prevState isToggleOn instead of handleClick this setState prevState isToggleOn prevState isToggleOn this handleClick this handleClick bind this Now we do not need above line of code in constructor,,bvaughn,2017-09-23 06:33:17,2017-10-03 18:26:48
IS,Component does not respect defaultProps when rendered through React Element,Do you want to request a feature or report a bug A bug What is the current behavior A component does not respect the defaultProps if it was rendered through a React Element JS Object If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 What is the expected behavior defaultProps should be applied In the provided example there should be two identical buttons Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested under Chrome with versions 15 6 1 and 16 Both did not work,,"gaearon,gaearon",2017-10-03 18:54:54,2017-10-03 19:02:26
IS,Are componentWillMount calls order deterministic with ReactDom hydrate and ReactDOMServer renderToString,This is a question related to server side rendering support of Material UI We have a use case where we generate class names based on the React tree traversal order One of our users djeeg have noticed that the same React tree can potentially be traversed in different order between the server side and the client side when using ReactDom hydrate Hence my question Are componentWillMount calls order deterministic with ReactDom hydrate and ReactDOMServer renderToString,,"gaearon,gaearon",2017-10-03 18:26:28,2017-10-03 20:46:15
IS,dangerouslySetInnerHTML generates different markup on client and server 0 13 3,With following code Both environments run code from same webpack bundle,,"zpao,gaearon",2015-10-20 12:02:04,2017-10-03 22:27:45
IS,Provide unminified production distribution,It would be nice if there was an unminified react production js in the release distributions For example this is useful for web application frameworks that do their own minification during runtime,,"iamdustan,gaearon,zpao,gaearon",2015-10-22 08:57:34,2017-10-03 22:29:43
PR,Fix active item for permalinks,This should fix 11043,,"bvaughn,bvaughn,bvaughn,bvaughn",2017-10-02 21:53:17,2017-10-03 22:32:47
IS,Optimizing the reconciliation of unchanged DOM nodes,Hi I'm not sure if this is a bug or feature but I will make this issue anyway It seems that React tries to optimize the reconciliation by early stopping the reconciliation of react element if its reference has not changed L70 L84 However because only ReactCompositeComponentMixin has the context property the check fails with normal DOM nodes div ul In practice this means that the sub tree will be diffed although the element has not changed at all resulting poor performance with huge sub trees I tried to change the check a little bit What do you think Does this optimization make any sense or does it have any unwanted effects I'm unaware of If I have understood right react elements are immutable L112 L113 so the strict equality check should be enough but how about ReactDOMNode internalInstance And yes I know that this could be solved by using custom component class and componentShouldUpdate but that is not I'm searching for,,"sophiebits,yiminghe,jimfb,gaearon,gaearon",2015-10-22 21:56:48,2017-10-03 22:38:10
IS,Calling unmountComponentAtNode recursively causes weird behavior,If you call unmountComponentAtNode recursively it tries to unmount the same component multiple times This means that componentWillUnmount can be called more than once weird which often causes inconsistent state and an exception and if componentWillUnmount does not fail this will cause a stack overflow This test case fails,,"sophiebits,gaearon,sophiebits",2015-10-23 23:46:17,2017-10-03 22:41:22
IS,Prevent a function to be called from within render,You have a warning in React if you call setState from within a render method with the check ReactCurrentOwner current null I would like to add this check to other methods of my project because they also trigger rerender or are too expensive The issue I have is that ReactCurrentOwner is not exposed by React so how can I achieve that The current solution I have in mind is to check from the stack trace but that is a lot more expensive than your check so I would prefer if there was something equivalent to your code but from outside React,,"jimfb,gaearon",2015-10-28 15:32:12,2017-10-03 22:42:43
IS,save flag someplace if checksum was invalid,we have tests that insure that prerendering client rendering Right now its a real cludge we override console warn and watch to see if any checksum warnings are output Instead how about adding data checksum invalid to the outer element,,gaearon,2016-01-26 22:53:55,2017-10-03 22:45:27
IS,Pipe console logs to specified logger,It would be great if we could pipe the console error warnings to a specified logger so they are treated as all the other logging in an application,,gaearon,2016-03-10 16:39:58,2017-10-03 22:45:36
IS,Umbrella New Devtools API,As per conversation with it would be cool if React emitted events that allowed any attached devtools to listen for relevant events occurring in the core The emitted events could be just descriptive enough that devtools could track whatever internal state it wants For instance a devtool could track perf by seeing how long various operations are taking marked by start and end of the operation Or a devtool could emit useful warnings all our core warnings could be rolled into a devtools module package and by tracking state internally we could avoid routing the only useful for warnings data throughout the core Anyway the following are relevant User wants to emit custom warnings when potentially slow operations are executed during render Users want to clear warnings for unit testing and or hot reloading Users want to track monitor calls to shouldComponentUpdate and get statistics on the results Gather other per component statistics like number of setState calls and renders Users want to fail unit tests when specific warnings fire like an invalid checksum warning User wants to render errors using a pluggable logging framework,,"jimfb,gaearon,slorber,gaearon",2015-10-28 19:01:45,2017-10-03 22:46:48
PR,Fork React Native render into an RT renderer,This is an experimental new protocol for some experiments we want to play with To make that easier I'm just going to fork the React Native renderer This experiment wo not use the event system so I by pass it and just invoke functions on the props object for now I also fork the UIManager into a new RTManager,,"sebmarkbage,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,bvaughn,gaearon,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,bvaughn,sebmarkbage,bvaughn",2017-10-03 19:38:17,2017-10-03 22:48:24
IS,Select input box combobox gets inconsistent internal state in Firefox,Using 0 14 on latest Firefox Given the following When I select Banana The state is updated selected is removed from Apple and added to Banana The visual option in the select box remains Apple,,"jimfb,jimfb,jimfb,jimfb,jimfb,jimfb,jimfb,zpao,gaearon",2015-10-29 02:19:09,2017-10-03 22:49:33
IS,async value updates on inputs reset cursor position,Hello again this strikes me as a bug it is certainly annoying and difficult to workaround If you control an input and set the value asynchronously say with a setTimeout as in the example the cursor position is reset to the end of the input in the below jsFiddle try typing in the middle of the input text the cursor should reset to the end of the line Addendum I see that native inputs exhibit the same behavior is you say use jquery and setinterval To me tho that is still not the behavior you would want since in a controlled input scenario you know when the value is actually changing,,"jquense,syranide,jquense,syranide,gaearon",2015-11-04 12:34:22,2017-10-03 22:51:56
IS,Use cssText instead of setting css properties individually,Based on the discussion in issuecomment 153803552 Currently we diff css properties and imperatively set individual properties for each value that differs from the previous render We have long claimed that performance was the reason but the benchmarks do not seem to support this claim For instance consider Ben is perf test from Realistically there are cases where one technique is faster than the other and vice versa It is probably a wash But using cssText has several advantages over our current approach Most notably it solves correctness issues related to the various css shorthand properties as noted in It also cleanly solves vendor prefixing and a variety of other edge cases Plus as an added bonus it means that the React core is doing less work and is therefore simpler cleaner moreMaintainable,,"jimfb,sophiebits,gaearon",2015-11-05 02:04:12,2017-10-03 22:56:11
IS,recursion on dispatchEvent,I am using dispatchEvent to trigger a React event handler Doing this causes a recursion I created a repository with the code I have some checkboxes that have event handlers attached to it Clicking select all should trigger this but as mentioned causes the recursion Here is the javascript,,"hejld,zpao,gaearon",2015-11-16 14:04:03,2017-10-03 23:06:09
IS,React TestUtils Simulate does not fire in portals,When trying to simulate an event on an element in a portal the event never fires with Simulate but it does with the browser is dispatchEvent,,"TheSavior,sophiebits,gaearon",2015-12-02 21:04:39,2017-10-03 23:06:34
IS,Simulate click does not propagate event,Using react bootstrap is Button and Input components I have a component that renders something like this,,gaearon,2015-12-05 03:02:06,2017-10-03 23:08:44
IS,Include TestUtils with production version of react,At Mozilla our testing infrastructure for Firefox forces us to use a production build of Firefox that represents an exact build of Nightly that a user would use The problem with this and that it uses a production version of React which does not have TestUtils included and we need that to run our JS tests Is there any reason other than JS code size that it is only included in the dev version If we just forcefully include TestUtils with our production version of React will that work I'm fine with doing a custom build for that Right now we had to switch to only use the dev version but I want to fix this ASAP,,"jlongster,zpao,jlongster,gaearon",2015-12-11 21:20:53,2017-10-03 23:12:27
IS,Improve documentation for using React with Webpack,5672 made it clear that we could do better 5658 improved the situation slightly but we still do not discuss how to actually use these things together Quickest short term fix would be to explicitly describe how you would use DefinePlugin to do what envify is doing is nice and concise Longer term I would like to have some more flushed out docs around using React from start to finish with both browserify and webpack and maybe more if needed But let is start simple,,"zpao,vitorbal,vitorbal,zpao,kevinold,gaearon",2015-12-16 20:25:06,2017-10-03 23:13:44
IS,componentWillReceiveProps happening immediately after loading only on mobile browsers,I am seeing an issue when I load a component that componentWillReceiveProps is being called almost immediately after This is only happening on mobile browsers On desktop I am not seeing this issue Anyone else experiencing this,,jimfb,2016-01-07 15:08:27,2017-10-03 23:16:25
IS,TestUtils Simulate does not propagate click events on labels as change events on their associated inputs,When using Simulate click on a label the click event does not trigger a change event on the associated input The same action from the browser does trigger a change event,,zpao,2016-01-07 22:39:22,2017-10-03 23:16:39
IS,input Ctrl Z broken on a synchronous setState,The example below is a simple page with just one input element Typing in the input goes just fine However Ctrl Z undo is broken in Chrome and IE in Chrome it does not remove the first typed letter In IE it actually only adds stuff This example works just fine even with the setTimeout present The above are simplified examples not my actual use case a flux like store framework that sends updates a synchronously in an animation frame React addons batchedUpdates to be able to condense change events and improve performance,,"jimfb,syranide,gaearon",2016-01-08 11:07:43,2017-10-03 23:17:33
IS,ReactCSSTransitionGroup and Inline styles,Is it possible to use React inline styles with ReactCSSTransitionGroup If so how I have tried and this does not seem to work React v 0 14 6,,"zpao,gaearon",2016-01-21 11:40:59,2017-10-03 23:20:43
IS,Provide a way to register a last chance exception handler,React should provide a way for us to register a last chance exception handler for errors thrown in React event handlers We have last chance exception handlers registered for our other event handling frameworks and this has proved extremely useful for making us aware of unexpected error conditions,,"jimfb,jimfb,jimfb,jimfb,gaearon",2016-01-29 19:35:28,2017-10-03 23:21:45
IS,Controlled Inputs can update out of order causing cursor jump,Here is a subtle change introduced when the DOMInput component was switched into the current lighter weight wrappers In order to ensure that things like 1698 do not happen The inputs defer an update until all updates have been flushed when controlled This gives the incoming props a chance to make it to the component before it inadvertently resets the value to the now last props value Essentially the old value is set on the DOM node before the new value has a chance to be pushed to the input props which causes the cursor to jump to the end This was originally seen and addressed in L30 L35 However the recent changes removed the forceUpdate and call ReactDOMInput updateWrapper directly The difference is the forceUpdate enqueues itself in the update queue whereas updateWrapper does not Which leads to cases where the input actually updates before its parents have finished updating Related issue to 5386 however in this cause nothing is actually async This is relevant because user land implementations of uncontrolled components create situations where a parent component to the input is also deferring an update with asap I have tried a bit to put together a PR to address this but I do not know that there is an easy fix as long as the DOMComponent is not itself using something like forceUpdate Test case demonstrating the bug Expected inputNode value to not be set at all after it was manually set to 'bar' Actual inputNode value is set from 'bar' to 'foo' and then from 'foo' to 'bar',,"jquense,jimfb,jquense,sophiebits,jquense,jquense,jimfb,gaearon",2016-02-01 04:13:04,2017-10-03 23:22:25
IS,React DOM tree root should always have a node reference,I have built a task execution pipeline utilizing React v14 and I have begun testing it against React v15 and have noticed that all of a sudden I'm getting an invariant error React DOM tree root should always have a node reference When I comment the line that is causing this error L171 everything works as it did with v14 and all of my unit tests pass I assume this check is important to the new internal updates that have been made since v14 I was able to make it work with a hacky bit of code that adds properties to the instance flags and nativeNode you can see this here L8 L9 I believe the issue is that with v14 I was able to use the server rendering code but in v15 I can no longer call forceUpdate or setState without errors occurring Is there a way of bypassing the above error using the client renderer or a way of calling setState forceUpdate with the server renderer,,"jimfb,jimfb,jimfb,jimfb,jimfb,jimfb,jimfb,jimfb,aweary,jimfb,sophiebits,sophiebits,sophiebits,slorber,gaearon,gaearon",2016-03-10 00:54:47,2017-10-03 23:27:38
IS,Ca not update 'checked' attribute,Consider this input I am using React 0 14 7,,"zpao,aweary,zpao,aweary,zpao,syranide,syranide,sophiebits,syranide,sophiebits,syranide,jimfb,syranide,syranide,syranide,syranide,gaearon",2016-03-23 13:36:57,2017-10-03 23:31:28
IS,Firefox issue Expected flush transaction is stored dirty components length to match dirty components array length,I was able to come up with a repro for this bug that does not rely on weird interactions between JS and Flash though it only happens in Firefox A summary of the repro is that if you have a React component that is updating itself via a setInterval loop and an INPUT that is focused and you zoom in out to trigger a resize handler which re renders the React component the error is triggered Note that this only happens in Firefox and if the INPUT is focused This does not seem to happen in Chrome The same workaround suggested in 4958 also applies i e wrapping the resize handler body in a setTimeout,,"sophiebits,gaearon,Andarist,Andarist,gaearon",2016-03-23 18:49:27,2017-10-03 23:32:45
IS,Debugging structure Automatic cleanup for unstable renderSubtreeIntoContainer,We are implementing unstable renderSubtreeIntoContainer to use custom components So Some things discussed during the initial PR would be pretty fantastic Specifically these things 1 Debugging structure E g tooltips should not show up in the top level of React DevTools but rather in their respective subtrees 2 Automatic clean up if the parent tree is unmounted 3 Event bubbling issuecomment 92533429 Are these on the back log I did not see any issues about them And it looks like all unstable renderSubtreeIntoContainer is doing at the moment is passing in the proper context,,"jimfb,gaearon",2016-04-07 16:27:50,2017-10-03 23:38:52
IS,Throws warning with key and refs when passing props,facebook react pull 5744 It seems with the newest update v15 when passing props into a child component with the spread operator the console throws the warnings associated with this pull request seems to only throw issue when the component is not a class but only stateless component hence passing just props and not this props image I am not accessing refs or keys in the child component,,"jimfb,gaearon",2016-04-08 02:15:53,2017-10-03 23:40:31
IS,React 15 0 1 Updates causing issues with DOM,Hey So I'm a fairly new developer who had a working app until version v0 14 8 and just updated to v15 0 1 today The update did remove a few errors warnings I was struggling with so a great relief there but brought up this issue Specifically the app itself renders fine with all the pages looking fine all components text etc in the right places but is just frozen completely non functional not allowing me to click on anything etc The error message I see are as follows from Chrome and Firefox capture capture2 I back tracked it to where I could and found this being the part where the node is coming off as null capture3 So I have absolutely no clue what is going on and there seems to be no hint as to what exactly is causing this issue I will try ripping the app apart and do a thorough debugging but would not expect much from it due to my unfamiliarity with development yet I really really appreciate the help in advance and hope that this problem can contribute somewhat to improving the React ecosystem,,"gaearon,jimfb,jimfb,jimfb,zpao,gaearon,jimfb,gaearon,gaearon,gaearon,gaearon,gaearon",2016-04-10 07:45:53,2017-10-03 23:46:11
IS,Disable warning about minified copy of the development build,Hello Since upgrading to v15 I get this all over the place in my unit tests Warning It looks like you are using a minified copy of the development build of React When deploying React apps to production make sure to use the production build which skips development warnings and is faster See for more details This warning makes sense in prod but in my case my toolchain is a little different I use React with Scala and build a special test deps js containing all external JS required by unit tests Minimising it means it loads faster and so I end up with a valid case for a minimisation of the React dev Is there a way to remove this warning It appears a heap of times as my tests are concurrent,,"zpao,zpao,gaearon,gaearon,gaearon,trueadm,aweary,aweary,gaearon",2016-04-11 08:33:42,2017-10-03 23:48:49
IS,Controlled number input does not handle e and properly,A controlled number input without a corresponding setState function still allows e and to be entered and numbers can be inputted afterwards I could be incorrect but I do not believe this is the desired behavior Here is a JSFiddle demonstrating the issue,,"jimfb,zpao,jimfb,zpao,syranide,jimfb,gaearon,nhunzaker,nhunzaker,aweary,aweary,jquense,nhunzaker",2016-04-20 19:53:34,2017-10-03 23:51:30
IS,react dom problems with CSP,Do you want to request a feature or report a bug bug What is the current behavior Refused to apply inline style because it violates the following Content Security Policy directive style src iself' Either the 'unsafe inline' keyword a hash isha256 ' or a nonce 'nonce ' is required to enable inline execution What is the expected behavior no error with CSP I am try use react select 1 0 0 rc 10 in my app and the CSP is enabled but the result is the mentioned Apparently the problem is by react dom in this line csp,,gaearon,2017-10-03 23:40:05,2017-10-03 23:54:23
IS,Proposal Replace NODE ENV with REACT ENV for DEV replacement,This has come up a couple times lately as being an issue 6479 6581 6511 I think perhaps because we added the minification warning and people are ending up seeing they are not getting prod code when they expected it But there is also the argument that you want React to be production and still use NODE ENV for other purposes There would be a few things to figure out to make sure envify works and deciding what we do for other projects which currently also use the NODE ENV pattern eg Relay fbjs third party code etc This might not be a good idea at all though and definitely is not happening immediately but wanted to start the discussion,,"zpao,zpao,gaearon,gaearon,gaearon",2016-04-22 19:20:50,2017-10-03 23:57:41
IS,Change how ReactPerf printWasted and ReactPerf printOperations work,6046 is a rewrite of ReactPerf that aims to provide the existing features of ReactPerf in a more testable and future proof way However there are a few things that are out of scope of 6046 but are important to fix later after it is shipped Today printOperations prints informations about the DOM native events that supposedly happened Later this information is used by printWasted in the following way if a component was rendered but no DOM events on its children were emitted during a batch the render is considered wasted There are a few problems with this As discussed in we overemphasize the overhead of DOM operations which are actually often negligible With incremental reconciliation 6170 the assumption that DOM operations happen in the same batch as rendering might become incorrect We might want to get rid of relying on batches at all discussion r61482538 I don t know what would be a good solution considering these constraints People widely consider printWasted the most useful ReactPerf method because it helps finding shouldComponentUpdate sweet spots If we remove its reliance on DOM we should offer an equivalent e g deeply comparing React elements that is just as useful but more friendly to incremental reconciliation,,"gaearon,gaearon",2016-04-27 18:03:05,2017-10-04 00:01:30
IS,svg sprite ie10 freeze,If svg sprite is using within the component changing of sprite is freezing IE10 JSX example Link to JSFiddle,,"operatino,zpao,operatino,gaearon",2016-05-09 14:03:52,2017-10-04 00:09:09
IS,Move more shared utilities out of React,I'm slowly working on making sure no code at FB depends on modules internal to React Mostly that involves changing code to use public APIs but there are also several things that are in React which are more general purpose and should be moved out to fbjs The example I'm hitting right now is isEventSupported used by normalizeWheel used by ReactWheelHandler used by a couple modules in Fixed Data Table I know adler32 is also used elsewhere as are some of the transition event detection and there are surely others Mostly this is a reminder to myself to do this and a notice of sorts to others that random files will disappear from the repo and will live in fbjs instead isEventSupported adler32,,"zpao,syranide,gaearon",2016-05-17 04:45:21,2017-10-04 00:10:39
IS,Support Server Rendering of amp Attribute,Are there other attributes like this that necessitates server rendering Most features have corresponding DOM properties that we prefer There is some case with app cache that I know about as well that only has server side meaning If this is a more generic problem we might need a way to solve this server side We do not want global plugins The client side solution is just refs and manual manipulation so we generally do not need to fix it It is uncommon enough and does not create ecosystem fragmentation isolation by global plugins I learned something from MooTools,,"sebmarkbage,dantman,syranide,gaearon,syranide,gaearon,syranide,syranide,gaearon",2016-05-18 22:17:01,2017-10-04 00:14:30
IS,Figure out a strategy for ReactPerf after separating the renderers,As discussed in issuecomment 220494530 we need to figure out a strategy for ReactPerf ReactDebugTool and friends after 6795 ships,,"gaearon,gaearon",2016-05-20 01:49:42,2017-10-04 00:15:21
IS,Add both child and parent name to key missing warning stack,More information in 6799,,keyanzhang,2016-05-20 21:29:36,2017-10-04 00:17:29
IS,RFC ReactInstrumentation debugTool onSetHostNode debugID node,We will need a way to get host nodes in React DevTools with the new API We currently get them by reaching into ReactDOMComponentTree directly but I propose to transition to using devtool API 5306 for this so that other renderers can provide their own host nodes when they become available I propose that the renderer code would emit something like when it is deassociated For DOM renderer it would happen here L44 L56 Then we would add getHostNode to ReactComponentTreeDevtool that would handle onSetHostNode event Does this sound reasonable Longer term it would make something like this possible in userland,,"gaearon,jimfb,gaearon",2016-05-22 12:12:47,2017-10-04 00:19:40
IS,Children toArray does not return a flat array of all children,So I would be quite surprised if this is an actual bug since it would probably have been reported long ago but in that case I think the documentation can be made more clear because I cannot interpret the documentation of Children toArray in any other way than that it is supposed to return all children including nested ones as a flat array Do you want to request a feature or report a bug bug or unclear documentation What is the current behavior Children toArray this props children does not return a flat array or rather returns a flat array but only including direct children not nested ones If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior for Children toArray this props children to return a flat array of all children including nested ones Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React react 15 0 2 documentation react children toarray Return the children opaque data structure as a flat array with keys assigned to each child release notes from when the API was made public Added React Children toArray which takes a nested children object and returns a flat array emphasis added with keys assigned to each child This helper makes it easier to manipulate collections of children in your render methods especially if you want to reorder or slice this props children before passing it down In addition React Children map now returns plain arrays too,,"syranide,gaearon",2016-05-26 12:19:43,2017-10-04 00:20:31
IS,Cursor jump to end when value contains '0A ',Reporing a Bug Current behavior cursor jump to the end when value contains '0A ' and re rendering component without changing the value js output Click on text will reproduce this problem Expected behavior rerender should preserve the cursor position Reproduced on React 13 to React 15 1 0 Chrome and Safari are affected latest version of Firefox is fine,,"syranide,gaearon",2016-05-26 23:29:49,2017-10-04 00:22:04
IS,Return null from mocked functional components,We do this for classes but not for functional components see L1042 L1045 This leads to a lot of issues and confusion for people using Jest I realize this is maybe not the greatest implementation ever but since we support it for one but not the other we should align the implementation and add this until we find a better way to deal with this This should be easy to add somewhere around here L210,,"cpojer,jimfb,sophiebits,jimfb,cpojer,jimfb,cpojer,jimfb,cpojer,jimfb,gaearon",2016-06-01 03:14:39,2017-10-04 00:24:15
IS,stopPropagation affects the same level DOM node handlers,When doing stopPropagation from React I would expect that the corresponding DOM element events are still fired since they are at the same level Just raising the issue I'm not sure if it is worth changing the current behaviour check console after focusing then bluring the two 'hello ce',,gaearon,2016-06-04 09:15:39,2017-10-04 00:28:54
IS,TypeError Cannot read property areplaceChild' of null,From maintainers if you have this problem please see the explanation in issuecomment 281405036 Do you want to request a feature or report a bug Bug What is the current behavior Error thrown when using react dnd See this report If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I provided sample code in the linked ticket but I can create a repo with a minimal demo if necessary What is the expected behavior Error not created Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 0 1 Meteor 1 3 2 4 React DND 2 1 4,,"jimfb,gaearon,brigand,syranide,brigand,gaearon,gaearon,gaearon",2016-06-08 14:51:32,2017-10-04 00:30:33
IS,Improve error messages for invalid states,I think we should create a test suite that throws errors in different lifecycle methods and make sure we have relatively sensible invariants as early as possible preferably with component names 6990 is an example of this but we ll keep regressing until we actually test for something like this explicitly cc react core,,"gaearon,gaearon",2016-06-14 16:28:53,2017-10-04 00:32:34
IS,Checked attribute not in DOM,Do you want to request a feature or report a bug AFAIK this is a bug What is the current behavior When setting checked on a checkbox the checkbox indeed is checked but the attribute is not actually in the DOM This means that checkbox will be targeted by checked but not checked In my case it is a blocker regarding Selenium powered tests as we use XPath to target elements and checked therefore does not work either If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Check this out Quick copypasta from my browser console I ran those right after loading the fiddle The behaviour is the same with defaultChecked What is the expected behavior The checked attribute actually is in the DOM whenever relevant Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tried this out with React 15 the fiddle uses 15 0 1 my app uses 15 1 0 with both Firefox 47 0 and Chromium 50 on Ubuntu 16 04 I previously stumbled upon 3005 but did not find the answer there as my issue does not seem to be preventDefault related Thanks a lot,,"zpao,jimfb,zpao,jimfb,syranide,syranide,jimfb,syranide,gaearon",2016-06-16 08:06:08,2017-10-04 00:38:36
IS,document documentElement null causes TypeError during loading of react,bug Behavior To reproduce Load react before the HTML document has loaded In my case I load react into a Chromium web view CEF 3 2743 1432 g66425de macosx64 just after the window object is ready There is a natural race condition here where the HTML document might or might not have been parsed yet meaning that document documentElement null in some cases When document documentElement is null the test 'textContent' in document documentElement in src renderers dom client utils setTextContent js L41 causes an exception to be thrown What is the expected behavior That react gets loaded without errors independently of the HTML document load state I expect to control when the HTML document is accessed i e not implicitly by React during module loading Possible fix The code in setTextContent js L41 should check document documentElement before attempting to perform in on the object Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React macOS 10 11 5 15F34 Chromium Embedded Framework 3 2743 1432 g66425de macosx64 also confirmed with,,"aweary,aweary,zpao,gaearon",2016-06-18 23:28:05,2017-10-04 00:40:58
IS,Uncaught Invariant Violation React DOM tree root should always have a node reference,Rendering the following react router v2 4 1 component on the server using renderToString v15 rc 1 causes this error message to be logged in the Chrome v51 console,,gaearon,2016-06-22 22:43:58,2017-10-04 00:44:49
IS,Context validation limitations,The problem is best expressed in terms of an example I have a function that acts as an plugs into my implementation of an isomorphic style loader The function is simply set on the very high level AppContext that contains the application services and components and the whole shebang which is passed through root component as a context So a component inside essentially just needs to get that style applier function from the context and run them And naturally abstracting it into a higher order component would make the most sense to initiate the styles and dispose of them paired with the lifecycle Note A similar live implementation running my site is here However since its just my site I'm duplicating the class to workaround the below mentioned problem However I DO NOT want to couple this component into my app is context So essentially I want something like this The problem How do I create a styleApplier that pull the service from the context I simply cannot pass the decoupled style applier function into this component unless I have it stored else where Why I have no access to the context outside of the component Well that can be solved by providing a closure that accesses the context and pull the services Or so I thought But since this does not have contextTypes React will refuse to acknowledge the existence of context So there is really no way to make this work without another un necessary abstraction another higher order component that pulls the styleapplier out of the context and then provides it to this component that can then be called Higher order components may be gold But if you fill an entire ship with gold it will sink Its great that the React community is insisting on the HOC pattern But it seems a little dogmatic for that to be the only way to do certain things Because its seems totally wasteful to do this for components that are tiny and exists in hundreds HOCs may only have small processor time requirement but does consume memory with each component More diffing for react more things to keep around more lifecycle method executions and so on Note that I'm only using the above as an example My concern is more of the pattern involved I encounter this on many scenarios and seem to have to jump through hoops to access these if I do not want to use more higher order components with no other good way to solve this Things that could potentially solve this Most reasonable one IMO Make context validation optional Do not shove it down the component is throat Provide a way to access context from the outside without using higher order components Well I think this kinda breaks many encapsulations but just leaving it out there since it would theoretically solve the issue,,gaearon,2016-06-24 14:09:57,2017-10-04 00:45:10
IS,Proposals for the ReactTestRenderer API,Do you want to request a feature or report a bug New feature What is the current behavior ReactTestRenderer returns an instance but this primarily seems to support two things getting a representation of the rendered output and calling methods on the instance via instance getInstance componentMethod What is the expected behavior This is good for testing regular UI components but testing infra level components HOCs often requires testing lifecycle hooks I have found that I need the ability to re render the component with new props test componentWillReceiveProps shouldComponentUpdate etc and unmount the component altogether test componentWillUnmount Changing props can be accomplished via a helper I'm using the following to work around this issue Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This is a new API only on master to my knowledge,,"josephsavona,sophiebits,sophiebits,josephsavona,sebmarkbage,zpao,cpojer,sophiebits,cpojer,sophiebits,cpojer,sophiebits,cpojer,sophiebits,cpojer,sophiebits,cpojer,gaearon",2016-06-29 19:06:00,2017-10-04 00:50:15
IS,Add afterBatchUpdate callback or similar,Do you want to request a feature or report a bug This is a feature request We have discovered that it would be quite useful for us to be able to have React call some user defined function after every batch of updates In our case we would like to ask our datastore to remove unneeded data after every round of updates say after a user clicks a button and after the resulting UI changes are done The existing lifecycle methods do not seem to provide us a way to achieve this behavior Currently we are releasing data from the datastore when we unmount components which is suboptimal as the new component we mount in its place might ask for very similar data If we could have React execute a callback after each round of updates when all the UI changes quiesce we could avoid these unnecessary unload reloads,,"gaearon,syranide,gaearon",2016-07-06 21:52:04,2017-10-04 00:51:24
IS,Is there a way to let users know which invalid type was returned,This is the error message in question Not very helpful Is it technically possible to show what was returned,,"syranide,gaearon,zpao,gaearon,gaearon",2016-07-07 18:21:01,2017-10-04 00:53:46
IS,Add Dependency CI checks,Dependency CI is a new service out there It checks the status of the projects dependencies post commit It is able to read the dependencies from package json and checks the dependencies for various metrics e g for being deprecated unmaintained or check the license What is the current behavior Currently when adding or updating dependencies you have to check them manually What is the expected behavior Enabling this could just give some additional metrics on the dependencies of the project It is free fast and does not need any integration than signing up with GitHub giving it access to the repo and enabling the switch Other large open source repositories like pm2 or Mozilla is Servo have already enabled it,,gaearon,2016-07-13 06:35:28,2017-10-04 00:58:15
IS,Microsoft Edge Has textInput event fires twice during ctrl a selection keypress and crashes Draft JS,This issue was discovered while building an editor in Draft JS see original issue filed here Edge provides a TextEvent but it is still not useful Disabling canUseTextInputEvent in React for Edge fixes the Draft JS issue To reproduce the bug in Draft JS Go to type a hit enter type ctrl a to select everything type j You will get a javascript error The editor actually the ReactDomComponent is then in a confused state The DOM component that the react component points to is prematurely removed,,jdalton,2016-07-13 13:28:10,2017-10-04 00:58:33
IS,Chrome debugger causes some event listeners to be skipped,Browser Chrome 51 Mac I have a React component that includes both an onKeyDown and onChange function The component renders among other things an input with these functions as props Unexpected behavior Without breakpoints from Chrome debugger both functions run correctly However when there is a breakpoint introduced into the onKeyDown method the onChange function is entirely skipped I am not sure if this is an intended consequence of how synthetic events are reused but it seems unexpected to me Steps to reproduce 1 JSfiddle 2 Open dev tools note that onChange never runs 3 Comment out debugger note that now onChange runs,,gaearon,2016-07-13 14:57:09,2017-10-04 01:01:01
IS,Highlight element that failed checksum,At the moment when the server rendered markup does not match the client rendered markup a big red error is shown but it can be difficult impossible to locate the element where this occurred Would something that logged the offending element to the console be considered as a pull request react diff log checksum failed element,,gaearon,2016-07-19 01:08:47,2017-10-04 01:10:48
IS,Electron webView tag throws unknown property warnings,Electron adds a new HTML tag webview Since this tag is registered via internal to Blink methods it does not follow the standard Web Component rules i e name must have a Is there a good place to add this tag is properties to the list of valid properties I can do this PR if maintainers would be willing to approve it we can gate this to Electron so that this wo not affect web apps Without this PR it is impossible to use the blinkFeatures attribute in React,,gaearon,2016-07-26 19:08:58,2017-10-04 01:12:04
IS,printWasted does not show all wasted renders,Do you want to request a feature or report a bug Possibly a Bug What is the current behavior When using react addons perf and printWasted I do not see as many entries as I think I should In the example case I see no entries If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Root App should show in printWasted as it does re render when you click but the output is just a cached element so it was a wasted render As you can see this code will walk up the tree from the Bottom component which was not a wasted render and mark the App as not a wasted render even though it was L206 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 0 Mac OSX Unsure,,"gaearon,gaearon",2016-08-12 16:33:01,2017-10-04 01:12:38
IS,Hanging process references in 15 3 0 pulling in shim when bundling,This occurs a bunch of times in 15 3 0 This leaves some process references after the usual process env NODE ENV replacement is done when creating a production build resulting in a process shim being pulled in and increasing your bundle size unless you manually configure it off e g node process false in Webpack config Should this be mentioned in the release notes,,"zpao,gaearon,gaearon",2016-08-09 01:00:35,2017-10-04 01:12:55
IS,Tutorial Doc has incorrectly formatted Babel URL,This is a bug in the documentation that links users to a Babel link that has incorrectly formatted code When clicking on See full expanded version from overview the link goes to this incorrect link babili false evaluate false lineWrap false presets react targets browsers builtIns false debug false experimental false loose false spec false playground true code 3Cdiv 20className 253D 22shopping list 22 3E 0A 20 20 3Ch1 3EShopping 20List 20for 20 7Bprops name 7D 3C 252Fh1 3E 0A 20 20 3Cul 3E 0A 20 20 20 20 3Cli 3EInstagram 3C 252Fli 3E 0A 20 20 20 20 3Cli 3EWhatsApp 3C 252Fli 3E 0A 20 20 20 20 3Cli 3EOculus 3C 252Fli 3E 0A 20 20 3C 252Ful 3E 0A 3C 252Fdiv 3E which prints out 2F instead of in the code This is because the current url has 252F which evaluates to 2F in percent encoding Instead this should be this link babili false evaluate false lineWrap false presets react targets browsers builtIns false debug false experimental false loose false spec false playground true code 3Cdiv 20className 3D 22shopping list 22 3E 0A 20 20 3Ch1 3EShopping 20List 20for 20 7Bprops name 7D 3C 2Fh1 3E 0A 20 20 3Cul 3E 0A 20 20 20 20 3Cli 3EInstagram 3C 2Fli 3E 0A 20 20 20 20 3Cli 3EWhatsApp 3C 2Fli 3E 0A 20 20 20 20 3Cli 3EOculus 3C 2Fli 3E 0A 20 20 3C 2Ful 3E 0A 3C 2Fdiv 3E which replaces each of the 252F with 2F,,,2017-10-04 01:37:57,2017-10-04 01:42:36
PR,Rewrite ReactDOMSelection to use fewer ranges,We heard from Chrome engineers that creating too many Range objects slows down Chrome because it needs to keep track of all of them for the case that anchor focus nodes get removed from the document We can just implement this calculation without ranges anyway,,"sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sebmarkbage,sophiebits,sebmarkbage,sebmarkbage,sophiebits,sophiebits,sophiebits,gaearon,sophiebits,sophiebits,sebmarkbage,sophiebits,gaearon",2017-06-17 00:37:20,2017-10-04 01:48:31
IS,Checkbox attribute unnecessarily removed from DOM on every render,Do you want to request a feature or report a bug Bug What is the current behavior Rendering a list of controlled checkboxes causes the reconciler to unnecessarily update add or remove the checked attribute on every render regardless of whether the value has changed I have a table with 300 500 rows that needs to add a highlighted class to the rows based on some user interaction on another part of the screen I would expect that the table renderer would get called on every interaction but I was seeing 40ms render times in the Perf tool I dug into it and it looks like every render the reconciler removes the checked attribute see JSFiddle The checked attribute on the row datum never changes is always false Extracting the rows into their own component and using componentShouldUpdate fixes the slowness but this seems like a bug If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here are two JSFiddles demonstrating the issue Minimal repro Full repro What is the expected behavior The reconciler should not be touching the DOM for attributes that have not changed Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Mac OSX 10 11 Chrome 51 Safari 9 1 Firefox 44 React Version 15 0 1,,"akre54,akre54,akre54,akre54,gaearon,akre54,gaearon,gaearon,akre54",2016-07-15 21:29:21,2017-10-04 05:59:13
IS,correct way to return custom components for renderer,So I have the renderer basically working woooo But the way I'm creating the components does not seem to be the way it is done in the current examples What I have is basically just export const MyComponent props React createElement 'name' props and then in the renderer is createInstance it returns non react objects Is that correct Seems to work with basic tree updates so far e g going from parent child attr foo parent to parent child attr bar parent to parent somethingElse attr baz parent But I just wanted to make sure this is right,,gaearon,2017-09-29 01:53:15,2017-10-04 08:15:50
IS,e target value reflects select value not option value in Chrome on Windows 10,Just a note it works perfectly fine on earlier versions of Windows and Mac OS X code Whenever the onChange is triggered the e target value is 1 I'm assuming this is because that is the value select starts with And any changes do not correctly change the value,,"conorhastings,gaearon,gaearon",2015-12-10 19:57:59,2017-10-04 11:43:12
IS,request optional strict validation for valid attributes in React Native renderer,Do you want to request a feature or report a bug feature request What is the current behavior Consider this code from ReactNativeAttributePayload diffProperties If I pass invalid properties on the node they are simply skipped over What is the expected behavior I would like a warning that I'm using some illegal property that is not understood It would make it much easier to determine why the property I'm trying to set is not taking effect e g because I misspelled the property name or because that property actually does not exist on the type I'm trying to set it on So I think I'm looking for an assert here a check that only runs if DEV is true It would probably have to be configurable to support existing code that sets invalid properties on nodes you can turn it on for strict attribute validation but it is off by default I'm happy to put up a PR to add this but I do not see configuration for the React Native renderer code Where could I add a property e g enableStrictAttributeValidation Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 2 0,,gaearon,2016-07-20 01:16:00,2017-10-04 11:56:12
IS,React and Polymer child not properly rendered in content content of web component,Do you want to request a feature or report a bug I am looking to report a bug clarify if the following is a problem I upgraded to React v15 and found that web components that rely on content content to embed html elements are not working when used in a React Component Example Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This worked in React v0 14 but does not work as expected in React v15 The same polymer version is used for both versions of React,,"zpao,jimfb,jimfb,jimfb,jimfb",2016-07-20 15:31:57,2017-10-04 11:56:44
IS,IE 10 Member not found,I catch Member not found exception on react 15 2 1 and ie10 It is on input onChange in SyntheticEvent on event cancelBubble true line,,"nhunzaker,nhunzaker",2016-07-20 20:37:04,2017-10-04 11:57:06
IS,Cannot use TestUtils Simulate on a component created with TestUtils renderIntoDocument,We have just upgraded from react 0 14 7 to 15 2 1 and some of our existing tests have begun failing due to this issue Apparent cause components created with TestUtils renderIntoDocument do not have a tagName and therefore TestUtils Simulate does not recognise them as components and leaves the node null jsfiddle repro,,gaearon,2016-07-22 02:48:40,2017-10-04 12:06:36
IS,Handle externally injected elements in replaceDelimitedText,L104 Mostly preemptive because we have talked about it before Right now if you render react text foobar react text and an external tool bolds foo like react text b foo b bar react text then the entire string will be bolded when updated by React react text b foobar b react text Because only the first element is kept and textContent is called on it So I would say it makes more sense to throw all elements away in that case and start from scratch Should we perhaps check the node type and also throw it away if it is not a text node,,"syranide,gaearon",2016-07-27 20:06:06,2017-10-04 12:10:27
IS,A way to return raw HTML from an unmounted component,I have asked the same question here but it seems that the only way is to use ReactDOMServer renderToStaticMarkup component which must be a mounted component first and I would just like to feed raw HTML to a plugin like the above linked question I also like to avoid jQuery with this and just have a way to mount a component in the shadow and then have the raw HTML not sure how it is called when you console log a html element in chrome it outputs the html as a sort of native html object The only other way I can imagine is using a ref to an element but that still has to be mounted,,,2016-07-29 11:07:43,2017-10-04 12:10:58
IS,IE 11 bug with svg use,Hi we reccently updated our project to React v15 2 1 and had some issue is with svg is in IE11 So we use svg sprites and get icon is like this svg use xlinkHref svgIconLink someSvg' use svg And we use svg4evrybody for cross browser support After updaiting React started to throug exception is on IE 11 invariant violation couldnt find element with ID X X being reactid of use As I understand exception fires because of svg4evrybody plugin wich replacing use with inner polyfill after page loads And react can not find use because there is no use and through exeption So the only workaround I came up with const use ' use xlink href svgIconLink isomeIcon' use ' svg dangerouslySetInnerHTML html use svg So React dose not include use in our virtual DOM and can not complaint about it Is there any better way to do what Because in my case I have to rewrite a whole lot of svg icons,,syranide,2016-07-29 11:47:09,2017-10-04 12:11:19
IS,Ca not set caret in setState callback in IE 10 v 15 3 0,I have controlled input on v14 all works fine on v15 in IE 10 when i press backspace setSelectionRange not works v14 sample js output v15 sample js output,,"syranide,syranide",2016-08-04 10:06:20,2017-10-04 12:14:02
IS,Not updating style attribute for radial gradient in Chrome and Safari,Do you want to request a feature or report a bug What is the current behavior style attribute with radial gradient does not get updated when changing extent keyword see It does update for any other value though If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo 1 Open in Chrome or Safari 2 Click on the closest side button CSS string changes but gradient remain the same 3 Click on the Update Position button It will update style attribute of the DOM node for position and extent keyword Changing the value directly via Developer Tools does update it so it must be the React related bug See how it update the gradient when I change the position of it 2016 08 04 at 15 25 What is the expected behavior Try same steps in Firefox to see a proper behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Reproducible in 15 1 0 and 15 3 0,,"okonet,zpao,okonet,gaearon",2016-08-04 13:23:56,2017-10-04 12:14:23
IS,Bug didPutListener tries to findDOMNode on unmounted component,I believe this is a bug and potentially related to but the specific details are different enough that I wanted to file a separate issue Feel free to close if it is the same root cause I have a repro here ClickMe is a component that runs causeError on click causeError first renders components of type A and B let is call them A0 and B0 B0 has a componentDidMount function that calls setState comes into play later causeError then updates A0 with a new prop A componentDidUpdate unmounts B0 and mounts a new B B1 After causeError is all done React is runtime performs some ops presumably due to B0 is setState that leads to Warning React can not find the root component node for data reactid value 2 If you are seeing this message it probably means that you have loaded two copies of React on the page At this time only a single copy of React can be loaded at a time Uncaught TypeError Cannot read property 'firstChild' of undefined Peeking at the stacktrace it looks like didPutListener is trying to findDOMNode on an already unmounted component Some weird details Leaving off onClick removes this error Not calling setState in B componentDidMount also removes this error So it is a bit different from 3298 because it is not erroring if we only unmount B during a click it is erroring if we have onClick and setState This is on React 0 14 I tested it briefly on React 15 and got Invariant Violation React DOM tree root should always have a node reference which presumably is a better formed version of the same error,,"joshma,gaearon,gaearon,gaearon,joshma,aweary,nhunzaker,nhunzaker",2016-08-08 07:29:28,2017-10-04 12:14:55
IS,dangerouslySetInnerHTML not working in SVG elements on Edge browser,This appears to be a bug in React with the Microsoft Edge browser This was previously a bug in older Internet Explorer browsers as well but appears to have been fixed by 6982 unfortunately the fix did not resolve the issue in Edge I modified the codepen from the original issue to use React 15 3 0 which includes the above referenced pull request and demonstrates the bug in Edge Here is the output of that Codepen in IE 11 this is the expected behavior as innerHTML is not available in Internet Explorer yet React 15 3 is still able to function image And here is the output of the same Codepen in Edge 38 image The problem seems to be that Edge has innerHTML so it does not use the IE workaround code yet Edge does not appear to be refreshing the DOM after updating at least I can see the SVG contents added to the DOM using Inspect Element but they are not visible in the browser,,"aweary,aweary,zpao,zpao,aweary,gaearon",2016-08-15 18:26:24,2017-10-04 12:16:53
IS,Optimization only for env production,In our development process we do have a staging env where we rely on the NODE ENV being on staging Since staging should be as close as possible to production we would like to have the React optimization enabled Is there a way to explicitly ask for the optimization without setting the NODE ENV to production,,"aweary,gaearon",2016-08-17 13:40:24,2017-10-04 12:20:10
IS,Feature request ReactDom Server rendering with chunked encoding,Feature request What is the current behavior Currently ReactDom renderToString must synchronously render a complete component This means that react servers which connect to other data sources must wait for those to respond before beginning to send an HTTP response What is the desired behavior Support server side use of encoding chunked by Exposing a streaming render API e g ReactDom renderToStream Providing a way for react components to 'block' rendering server side What would this improve This would enable much lower latency in cases where a server is connecting to multiple backing services to service a request because content early in the document can be delivered to the browser before all backends have responded,,gaearon,2016-08-18 06:14:38,2017-10-04 12:23:58
IS,Should defaultValue trigger onChange event,In my opinion defaultValue is just programmatically init of input value and its not change of input Now when i init input with defaultValue it triggers onChange event What is wrong because there was no change yet input defaultValue hey babe onChange console log 'occured' BUT When i think about it like the defaultValue is just pushing value into input attribute we have to keep consistency with native events onchange is triggering always if value changes,,,2016-08-22 09:29:38,2017-10-04 12:24:37
IS,React does not override eventPhase property when fires synthetic event on a component event hander,Demo js console output eventPhase always equal 3,,gaearon,2016-08-24 17:10:22,2017-10-04 12:26:18
IS,Native Map detection in ReactComponentTreeHook fails with core js,Do you want to request a feature or report a bug Bug What is the current behavior Using polyfilled ES6 Map on browsers without native Map support If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar isNative returns true on IE9 What is the expected behavior Using objects instead of Map While isNative method has been implemented in 7491 it can not detect core js polyfills Look at discussion in comments here diff 001d0647fb00f8336795faccdec19a31R11199 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 1,,"gaearon,gaearon,aweary,gaearon",2016-08-28 12:35:58,2017-10-04 12:27:18
IS,Error boundaries causes multiple errors to be thrown in development mode,Do you want to request a feature or report a bug A bug maybe What is the current behavior Error caught in React lifecycle methods thrown twice in development mode If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 If you look in the console you will see that one of the errors is caught but the other one is still thrown as Uncaught Error This could possibly be confusing to some people when they will see two identical errors in the console What is the expected behavior Should an error be thrown only once Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 16 I stumbled on this while fixing one of the tests that checked that component should throw in some conditions This test started failing in React 16 because of the second Uncaught Error thrown by React I'm not really sure that this is a bug just wanted to clarify whether it was made intentionally or not Seems like this trick L68 causes this behavior If this is a bug I'm happy to help to fix it if someone would suggest where to start with this,,"gaearon,gaearon,gaearon",2017-10-04 12:33:34,2017-10-04 12:37:44
PR,website Updated text in tutorial md,I have change We have provided the styles so you only need to worry about the Javascript To say We have provided the styles so you only need to worry about the CSS The provided styles for the tutorial are found in a CSS stylesheet and not a JavaScript file Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,joecritch,2017-10-03 21:26:55,2017-10-04 12:40:11
IS,Component is mounted twice when re render triggered in componentWillUnmount,React 15 1 0 Given The problem seems to be that I'm calling render from within componentWillUnmount I suspect this is common i e dispatching Redux actions on unmount which trigger a synchronous render,,"aweary,gaearon,gaearon",2016-09-01 18:15:51,2017-10-04 12:47:15
IS,IE Edge required select boxes with value set on initial render failing validation on submit,Do you want to request a feature or report a bug bug What is the current behavior In IE Edge when rendering a required select box with an initial value set when trying to submit the form the input will fail validation saying You must choose an item from the list If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template 1 Visit in IE Edge 2 Try to submit form What is the expected behavior The form should be valid and submit correctly Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Browser IE Edge v38 as of testing React versions 15 to master 7b247f3609ad25d79ae267b4b5c919a35da45cb4 Works in React 0 14 8 Notes I believe this might be a browser bug but the issue does not occur in React 0 14 perhaps using different apis Related links,,"jimfb,jdalton,jdalton,gaearon,gaearon",2016-09-03 19:59:30,2017-10-04 12:48:47
IS,Since 15 2 0 TestUtils for Radios and Checkboxes Unexpected Behavior for null checked attributes,Do you want to request a feature or report a bug bug What is the current behavior When using ReactDOM render checkboxes with jsx attribute checked null will have a checked value from their DOM element of false When using TestUtils and TestUtils Simulate the same configuration above for checked null will result in checkboxElm checked to be true If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem demo here js console output What is the expected behavior expected behavior is that TestUtils would mimic actual DOM fragment i e jsx property checked null results in someCheckboxElm checked to be false Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React This worked in 15 1 0 but stopped working in 15 2 0,,"nhunzaker,gaearon",2016-09-05 17:42:02,2017-10-04 13:12:23
IS,Incorrect shallow rendering incase of children with the same key,Do you want to request a feature or report a bug Bug What is the current behavior Let is say we have a component that recieve an array and renders them in a list If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem See above What is the expected behavior Shallow Renderer should behave like in the browser in this case it should return 1 children instead of 2 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 0 0,,"aweary,gaearon",2016-09-06 08:11:05,2017-10-04 13:16:32
IS,Log a warning when in development mode,Do you want to request a feature or report a bug feature Ref this tweet from Dan It is currently too easy to use React in development mode while in production and there is little warning from the library that this is happening Further it takes a fair bit of googling to know what to do it is tucked away under 'advanced performance' in the docs and does not include directions for webpack browserify As a start I recommend that react always log a message to console when it is in development mode Something like running in development mode use production mode flags to speed up your code This stands out and I hope will prevent some if not most of these misses,,"syranide,gaearon,syranide,aweary,gaearon,gaearon",2016-09-13 12:21:54,2017-10-04 13:18:51
IS,Receiving user entered input,Do you want to request a feature or report a bug Feature What is the current behavior When serving controlled inputs serverside from ReactDOM the user might have entered data already before the clientside React has executed In this case the data the user has entered gets overwritten by the initial value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem What is the expected behavior What mechanisms are available or should be available to capture this input One natural solution I can imagine is some way to capture the user is entered text in getInitialState or componentWillMount We could hack this together by manually plucking the content from the DOM but I'm interested to know if there is a more React y solution if possible The default of discarding the user is input is unlikely to be what is desired for both the developer and the user Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I have not observed this working in previous versions of React I see this in Chrome on Mac OS X with React 15,,gaearon,2016-09-15 19:56:27,2017-10-04 13:33:02
IS,Feature request Allow stateless components to render a plain String,On occasion it would be cleaner to have a stateless functional component render a plain String or perhaps any type that satisfies React PropTypes node without needing to wrap it in an element I can imagine this lending itself well to leaf components I'm less sure that it would be possible to solve for plain nodes at the root though Sorry if this has been discussed before I could not find any existing issues that looked related,,gaearon,2016-09-17 01:31:31,2017-10-04 13:33:38
IS,forceUpdate on defaultValue,So this is throwing me off I was reading through a way 3357 to update defaultValue and I saw one idea of using forceUpdate I wanted to use key but the input I'm working does not change key Here is what my input looks like When I run my program and type in the input box I get Uncaught TypeError Cannot read property 'forceUpdate' of undefined But the thing is I can update defaultValue and rerender it or atleast I think I am rerendering it But the typed values are actually being applied and I can rerender them with a toggle UPDATE So I later debugged the problem further and I just made onChange this forceUpdate So why is it still being called in my other function btw if there is a better solution I would appreciate it,,gaearon,2016-09-18 09:47:21,2017-10-04 13:34:12
IS,onChange events can not stopPropagation under IE9 IE10,Do you want to request a feature or report a bug bug What is the current behavior onChange events can not stopPropagation under IE9 IE10 It will throw a error and then trigger change events If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via What is the expected behavior span should not trigger onChange events when type in input under IE9 IE10 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 0 IE9 IE10,,"syranide,syranide",2016-09-22 11:46:15,2017-10-04 13:37:23
IS,SVG switch tag,This is a feature request Are there plans and does it make sense to add the SVG switch tag See for an example usage My use case is the following I have this script that thanks to ReactDOM renders svg server side but in image context foreignobject is not rendered so a switch tag could be useful,,"jimfb,gaearon",2016-09-22 13:00:15,2017-10-04 13:38:34
IS,Unexpected interleaving of subtree parent lifecycle methods,Repro In the example a click handler in the subtree queues an update for both the the subtree and parent components with the following ordering of lifecycle methods,,"gaearon,gaearon",2016-09-28 22:57:44,2017-10-04 13:40:08
IS,Input does not fire focus event when it focused programmatically on element,So if I assign onFocus callback to input and then call method focus on actual element react wo not fire onFocus event and related callback wo not be called It is a problem of react not DOM method focus because with addEventListener 'focus' fn it fire such an event Version is 15 3 2 UPDATE I called this refs input focus from componentWillReceiveProps which do not support firing such an events by design I think,,"karczk,gaearon",2016-09-29 22:02:57,2017-10-04 13:41:15
IS,adler32 function returns incorrect checksum on Opera Presto browser,I have discovered what seems like a platform bug in the Opera Browser Presto Engine which is causing server side rendered components to always be re rendered because the client is checksum does not match the server rendered checksum More than 3 addition assignment expressions in a single statement results in an incorrect checksum when the adler32 function is called Here is a test case that can be used to reproduce the bug output Here is a download link for Opera 12 16 for Mac you could install and run the above test and see it fail While it is a very old browser and a fix for it extremely unlikely it is still used on many embedded devices TiVo being one where I'm finding it However React can work around the bug by splitting this line in the adler32 function into multiple statements L31,,"syranide,syranide,syranide,syranide,gaearon",2016-11-10 21:56:15,2017-10-04 13:44:01
IS,Difficult to track down the source of a boolean prop warning,Do you want to request a feature or report a bug More of a DX issue I think Certainly a frustration in my upgrade I would not have submitted but told me thrice to do so What is the current behavior My build works but is strewn with warnings that I would like to fix Warnings like Is that just a new fact of life for library developers or can I catch those in my test somehow All this can be replicated with the current master branch of redux form,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-10-04 13:15:11,2017-10-04 13:46:41
IS,Error with preload attribute on video with IE11 and Windows 7,Do you want to request a feature or report a bug Bug What is the current behavior We get an error when using the preload auto on a video element in react If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Here is a screenshot of the error What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 1 IE 11 Windows 7,,"syranide,gaearon,gaearon",2016-09-30 14:13:53,2017-10-04 13:49:03
IS,Windows development issues,Having issues developing on windows 7 on a fresh install master Running npm test causes all 118 test suites to fail with the error image Changing testRegex in the package json from tests to just tests seems to fix those issues because the last character is an escape character it is invalid regex There is another regex error though image Not sure where that regex comes from though There is also a 3rd error image which just looks like a unix git bash crossover issue Possibly another escape character issue Does anyone run on windows and had similar issues,,gaearon,2016-10-03 14:02:09,2017-10-04 13:49:55
IS,DOM contents not ready after first update in incognito private window,Bug Current behavior I am attempting to load data from an API display and then scroll to a URL fragment deep in the document Window only partially scrolls This may have more to do with browser behavior but I can not figure out how to reliably wait for content to be painted before scrolling it into view on the first attempt Here is an example showing the issue 1 open a new incognito Chrome or private Firefox window 2 paste or type sorry FF this URL output data will be loaded from iTunes and saved to state render is triggered componentDidUpdate is triggered window requestAnimationFrame is used to let DOM painting occur DOM node deep in document is queried and attempted to scroll into view correct node has a red background I have never seen this work with a fresh incognito private window Here is an issue where using requestAnimationFrame is suggested Here is a SO answer with discussion about this What is the expected behavior DOM node scrolled into view Versions of React 15 1 Browsers OS Mac OS X 10 11 6 Did not work with previous versions of React,,"syranide,gaearon",2016-10-05 21:52:23,2017-10-04 13:50:59
IS,shallowCompare in stateless components,Do you want to request a feature or report a bug Report a bug confusion point What is the current behavior Implementing shallowCompare inside shouldComponentUpdate will always return true if you do not pass nextState param What is the expected behavior I would expect the shallowCompare method to handle cases where nextState is not passed in OR for the documentation to be more clear stating that you MUST pass nextState Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am using React 15 2 0 This is not specific to any browser or OS,,"karczk,gaearon",2016-10-06 18:52:31,2017-10-04 13:51:33
IS,Making the view difference in the reuse markup error configurable,Do you want to request a feature or report a bug I'm requesting a feature What is the current behavior Currently the way the reuse markup error is displayed the difference is hardcoded to 20 characters of code on each side This should be a configurable property The code can be found here L677 20 characters is sometimes a bit hard to debug especially with css in js libraries where your div is usually also contain an obfuscated class name Being able to make this a larger number could help with debugging where it went wrong,,gaearon,2016-10-11 12:20:14,2017-10-04 13:53:47
IS,Allow HTML attributes to be dangerously set without encoding,Do you want to request a feature or report a bug feature What is the current behavior A React element like div data foo ' bar' renders as div data foo ' amp bar' div What is the expected behavior The above behavior is expected in the majority of cases it is strongly recommended on w3 org C 12 However in some scenarios an automated parser that does not play nicely with encoded special characters etc a user may want to render arbitrary strings into attributes without the automatic encoding In the same way that dangerouslySetInnerHTML is provided for entire elements we could have a dangerouslySetAttributes Currently a workaround I'm using is to dangerouslySetInnerHTML on the container element of the node Being able to set the attribute specifically would be a bit safer Thoughts I'm on the fence as to whether this is a good idea since it opens up another avenue of inserting invalid HTML Nevertheless I'm interested in hearing if it can be justified on the same grounds as dangerouslySetInnerHTML,,syranide,2016-10-12 16:41:44,2017-10-04 13:55:19
IS,Event listeners stop working if container moved to new document,Do you want to request a feature or report a bug Report a bug What is the current behavior In React v15 0 0 if a container is moved to a different document and then the component tree is re rendered event listeners stop working In React 0 14 8 it was possible to move a container from one document to another via document adoptNode and have the state of rendered components preserved and event listeners continued to work Steps to reproduce Using test html from 1 Click the counter button a few times 2 Click the 'Move to iframe' button 3 Click the counter a few more times Note that the counter no longer responds to clicks What is the expected behavior Clicking the counter continues to increment it after it is moved to the iframe This works in React v0 14 8 but not React v15 0 0 Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Issue bisects to which changed the logic that adds event listeners to use the cached Document value in instance nativeContainerInfo ownerDocument instead of container ownerDocument This hack resolves the issue Notes The original use case was preserving the state of components in an app that runs in a Chrome popup window when the pop closes which unloads the window The workaround involves moving the DOM node to the background page when the popup is closed and back again when it is next opened,,gaearon,2016-10-15 21:24:19,2017-10-04 13:58:13
IS,how remove debug info from react min js file when publish project,how remove debug info from react min js file when publish project reactjsjadsds,,"gaearon,gaearon,rickbeerendonk,rickbeerendonk,keyanzhang,rickbeerendonk,rickbeerendonk,keyanzhang,rickbeerendonk,keyanzhang,rickbeerendonk,gaearon",2016-10-17 12:57:04,2017-10-04 14:06:58
IS,npm run lint fails on Windows,npm run lint fails on Windows at least Windows 7 Error Running eslint task 17 46 07 Using gulpfile C Projetos Git react gulpfile js 17 46 07 Starting 'eslint' C Projetos Git react node modules bin eslint cmd 1 function exports require module filename dirname EXIST dp0 node exe SyntaxError Unexpected token ILLEGAL at Object exports runInThisContext vm js 53 16 at Module compile module js 513 28 at Object Module extensions js module js 550 10 at Module load module js 458 32 at tryModuleLoad module js 417 12 at Function Module load module js 409 3 at Module runMain module js 575 10 at run node js 348 7 at startup node js 140 9 at node js 463 3 17 46 08 Lint failed Fatal error Something went wrong running gulp Screenshot image I found this related error in mocha but I could not fix it anyway What might it be,,"jddxf,gaearon,jddxf,gaearon",2016-10-19 21:47:44,2017-10-04 14:11:17
IS,feature idea rename context types to implicit props types and merge them,Currently Feel free to point out flaws and edge cases but whatever they are context probably share the same issue The idea is just more intuitive to introduce the concept P S Also I would proposal creating constant context values to share fixed values which never trigger Child update after mount,,gaearon,2016-10-22 00:14:16,2017-10-04 14:13:09
IS,SetState does not handle well nested SetState calls,This could be a bug or a nice to have feature SetState does not handle well nested SetState calls The successive calls are put in the pendingStateQueue but not resolved because the queue reference is cleared too soon My suggestion would be to change function processPendingState like this,,"gaearon,milesj,gaearon,gaearon",2016-10-28 19:34:16,2017-10-04 14:16:19
IS,path attribute is removed in animateMotion tag,Do you want to request a feature or report a bug bug What is the current behavior React remove path in animateMotion tag and outputs a warning ''Warning Unknown prop path on animateMotion tag Remove this prop from the element If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior I want to use path in animateMotion tag without using dangerouslySetInnerHTML Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 2 google chrome 56 0 2902 0 dev Windows 10 version 1607,,gaearon,2016-10-30 15:47:35,2017-10-04 14:17:28
IS,Fiber Error handling,Filing this as a todo list for myself x 8210 After more scheduling tests are in place add tests for uncaught errors in different roots x 8193 Remove recursion 8227 Choose and implement some sensible behavior for fataled roots eg visiblity hidden 8212 Look at batchedUpdates discussion r86080646 issuecomment 257046617,,"gaearon,sebmarkbage",2016-11-02 13:03:04,2017-10-04 14:18:22
IS,React cloneElement that gives precedence to the Child Component props,Do you want to request a feature or report a bug Feature I would like a version of React cloneElement that gives precedence to the props already on the component being cloned that were PASSED in but ignoring the ones that were provided by default Order of precedence 1 Props provided to the Child component 2 Props provided to the parent used to override the child component ones 3 Default props on the Child component i e prop was not provided to parent or child Here is an example use case The behavior I would like to achieve here is for Button1 to be red and button 2 3 to be blue The idea is that you can provide a single prop to the parent as the sort of default but that individual components can override that default if they choose I tried manually merging the props but because the default value have already been supplied there is not really a reliable way to do this Thank you,,gaearon,2016-11-04 20:52:24,2017-10-04 14:23:25
IS,Immutable HTML elements and react,Hi everyone This is my first report here please bear with me if I do not make much sense I am facing an issue with interoperability with web components I have to work with a proprietary library where the dom nodes of the custom web component element are frozen i e not extensible and I get this error in console ReactDOMComponentTree js Uncaught TypeError Ca not add property reactInternalInstance xxxx object is not extensible Upon inspecting further this seems to be thrown from the following snippet Do let me know if there is something obvious that I'm missing,,"aweary,brigand,brigand,gaearon",2016-11-14 15:52:56,2017-10-04 14:25:30
IS,Expose renderSubtreeIntoContainer to React Native,We never built this for React Native but there are use cases for layers in React Native too Basically we need to port L434 L543 to ReactNativeMount,,"sebmarkbage,sophiebits,gaearon,sebmarkbage,gaearon,sophiebits,sebmarkbage",2016-11-14 17:32:08,2017-10-04 14:26:21
IS,Firefox e stopPropagation is invalid,I want to report a bug my code as follow When I drag drop a docx file to textarea Firefox browser trigger the default behavior default Who can help me,,gaearon,2016-11-16 07:15:49,2017-10-04 14:27:20
IS,ReactTestUtils Simulate no longer works as expected in v15 4 0,Firstly congrats on the release With the v15 4 0 update a couple of our projects tests are failing given the changes to ReactTestUtils Simulate as discussed here issuecomment 244516991 The work around was to use ReactTestUtils SimulateNative however it is still not entirely clear what the difference between Simulate and SimulateNative are When and why should one be used over the other It feels like these docs should be updated to reflect this change simulate Finally is there a reason that SimulateNative does not appear in the docs I'm concerned that others are going to be caught out by this change also,,"gaearon,gaearon,gaearon,aweary,nhunzaker",2016-11-16 17:27:27,2017-10-04 14:27:50
IS,onClick firing for disabled buttons in v15 4 0,With the latest 15 4 0 ReactJS release onClick is now firing for disabled button elements which have child HTML elements In the previous ReactJS version the onClick handler would not be called Note that onClick is not called if I remove the span from the button,,"gaearon,nhunzaker,nhunzaker,aweary,aweary,nhunzaker,nhunzaker,nhunzaker,monkindey,monkindey,gaearon,sophiebits",2016-11-16 18:15:38,2017-10-04 14:32:41
IS,Delete all examples except fiber basic jsx,Many people to understand something new are reading docs articles but good practice is to explore examples in parallel Current examples' issues Depends on Babel 5 8 script type text babel deprecated setInterval render 50 to wait dom Outdated libraries like webcomponentsjs 0 7 Generally you must 'parse' in mind the whole html file to understand how small Component works For me possible solution could be rewriting examples as separate modules with own package json README etc with simple npm start npm build scripts If it can be useful I could make a PR in a few days,,"gaearon,lacker,gaearon,gaearon",2016-11-17 00:48:53,2017-10-04 14:33:17
IS,componentWillReceiveProps called twice between renders,Do you want to request a feature or report a bug Bug What is the current behavior componentWillReceiveProps is being called twice in a row without a render or a call to shouldComponentUpdate between them More importantly this props has the same value in both calls but the object passed as nextProps is different Specifically I have code like this I noticed that my redux action and the xhr request was being performed twice In both calls this props organization id was undefined But also in both calls nextProps organization id was defined In the second call I was also being passed the results of the first xhr call which was stored in my redux store and passed down into this component via react redux connect I also confirmed that shouldComponentUpdate componentWillUpdate and render were all only called after the second time through Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 Google Chrome 60 0 3112 90 Windows 10,,gaearon,2017-08-17 20:47:32,2017-10-04 14:34:03
IS,Error message stack trace for Invariant Violation Element type is invalid is still useless most of the time possible solution enclosed,Using React v15 3 2 and ReactServer renderToString but I'm reasonably sure the behaviour is the same with ReactDOM and I have not seen anything in the release notes of 15 4 regarding improved error messages from render The problem is of course that the source of the stack trace is simply the originating render or renderToString call In certain occasions the error messages includes the name of a component class whose render method to check but even that is not terribly useful for larger components I understand there are limitations to how much debug information can tag along element creation code during normal operation but might it not be practical to simply re render and re check using more heavy weight tracing a faulty call to createElement after the error already happened Here is a proof of concept which works great and has been very helpful It is just a quick kludged together element tree renderer that tracks the 'path' to each individual node in the tree and is thus able to report it if the type is incorrect Together with the stack trace this allows for exact identification of the faulty node For example the path Main render Provider render IntlProvider render 1 div 0 div ReactCSSTransitionGroup render ReactTransitionGroup render 0 span ReactCSSTransitionGroupChild render 0 div 0 div Connect Connect ExampleForm render Connect ExampleForm render ExampleForm render 3 form ExampleSubForm render 3 div Though verbose it can be followed without ambiguity starting where the stack trace ends In the render method of Main In the render method of Provider In the render method of IntlProvider In the second 1 child a div In the first 0 child a div In the render method of ReactCSSTransitionGroup In the render method of ReactTransitionGroup In the first 0 child a span In the render method of ReactCSSTransitionGroupChild In the first 0 child a div In the first 0 child a div and so on you get the idea,,"gaearon,gaearon",2016-11-18 00:42:03,2017-10-04 14:34:07
IS,Issue 5929 still happening on IE 10 React cloneElement handles undefined props differently to React createElement,I know this issue has been addressed previously but it still seems to be happening on IE 10 browsers When I use cloneElement all the defaultProps values come up as 'undefined' if not explicitly sent in as a prop,,gaearon,2016-11-18 15:30:12,2017-10-04 14:35:14
IS,React unable to fully removing select in mobile browsers,Do you want to request a feature or report a bug bug What is the current behavior Please refer to this fiddle The goal is that when the select does an onChange event the select is removed However an unexpected thing occurs in mobile tested in latest iOS on latest mobile chrome and safari When you select a value the select is replaced by a standard button that does nothing But once you tap on the button the browser brings up the select menu again even though there is no select element there If you look into the DOM there is no select element What is the expected behavior When the select is removed via onChange and the button shows up tapping the button should do nothing Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 3 0 Browsers latest mobile chrome safari OS latest iOS,,gaearon,2016-11-19 22:20:24,2017-10-04 14:42:49
IS,className named 'active' invaild when rerender,my favorites image,,gaearon,2016-11-22 09:46:32,2017-10-04 14:43:18
IS,ErrorBoundary Behavior,This breaks the app on windows 10 and Mac High Sierra Chrome I tried the new ErrorBoundary functionality of ReactJS 16 I am trying to use it to catch undefined variables which rendering of certain components This was causing my whole app to behave strangely I am trying to encapsulate side effects of undefined variables so that components break down gracefully I have the ErrorBoundary component defined here like this import React Component from react class ErrorBoundary extends Component constructor props super props this state hasError false componentDidCatch error info Display fallback UI this setState hasError true You can also log the error to an error reporting service render if this state hasError return div div else return div this props children div export default ErrorBoundary I have the ErrorBoundary imported correctly It is sitting in my container component is render function and wrapping a child component like this ErrorBoundary MyComponent data data showData this state showData toggle this toggle ErrorBoundary In order to test the broken app functionality I put in an undefined variable into the render function ErrorBoundary brokenVar ErrorBoundary And when the component with the ErrorBoundary and included undefined variable gets rendered this happens in the browser The rest of my app stops working correctly Uncaught ReferenceError brokenVar is not defined at WrappedComponent render main bundle ae5f4b25250d970680ca js sourcemap 52285 at WrappedComponent render main bundle ae5f4b25250d970680ca js sourcemap 44248 at main bundle ae5f4b25250d970680ca js sourcemap 32355 at measureLifeCyclePerf main bundle ae5f4b25250d970680ca js sourcemap 31635 at ReactCompositeComponentWrapper renderValidatedComponentWithoutOwnerOrContext main bundle ae5f4b25250d970680ca js sourcemap 32354 at ReactCompositeComponentWrapper renderValidatedComponent main bundle ae5f4b25250d970680ca js sourcemap 32381 at ReactCompositeComponentWrapper updateRenderedComponent main bundle ae5f4b25250d970680ca js sourcemap 32305 at ReactCompositeComponentWrapper performComponentUpdate main bundle ae5f4b25250d970680ca js sourcemap 32283 at ReactCompositeComponentWrapper updateComponent main bundle ae5f4b25250d970680ca js sourcemap 32204 at ReactCompositeComponentWrapper receiveComponent main bundle ae5f4b25250d970680ca js sourcemap 32106 Do I have a syntax error or is this not how ErrorBoundaries are supposed to behave,,"gaearon,gaearon",2017-10-04 14:47:14,2017-10-04 14:49:53
IS,Consider exposing ReactElement factory function,Currently React exposes React createElement type config children 1 to the outside world and internally calls the ReactElement type key ref self source owner props 2 function to create the actual Element instance React createElement performs a copy of config to create props and extract key and ref In the ClojureScript world many libraries wrap React to provide a more cljs idiomatic interface using CLJS persistent maps for props The hiccup syntax is very popular and convenient While this is far from ideal since we first allocate the CLJS data structures in addition to just ReactElement s it is particular inconvenient that we convert the props data once and React does again It would safe a lot of overhead if you could just call ReactElement directly saving a whole lot of work React createElementRaw type key ref props would be nice as the others would be null anyways or maybe under a more obscure name to discourage use It is fine if this is marked experimental and not otherwise officially supported Happy to create a matching PR if you folks agree to expose this somewhere 1 L183 L265 2 L117,,"gaearon,gaearon",2016-11-27 17:19:49,2017-10-04 14:59:11
IS,Expose root ref by default to allow automatic forwarding of setNativeProps,In React Native TouchableHighlight requires its children to forward isetNativeProps' This is implemented in built in components but must be manually implemented for all custom components This causes big incompatibilities with a library like Native Base not to mention any custom components that the developer creates which is apparently a preferred pattern for theming For our projects we create a common directory inside the main js directory This folder houses commonly reused components throughout the app For example we can declare common Text and Header components It could be remedied by making available a default ref root which points to the root node This would allow generic forwarding to be written into a base class which other components could inherit from This would essentially forward the props down the chain until we hit a concrete built in component Any arguments against making a root ref available by default,,gaearon,2016-11-28 23:36:07,2017-10-04 15:00:20
IS,Full screen and onMouseOut listener,When a container is moved to a full screen mode onMouseOut listener is not triggered for a children components until you will move a mouse Example Demo How to use an example Demo is for Chrome Open a console Click on a FS button try to do not move a cursor When in a full screen move now a cursor As an expected behavior I assume mouse listener should be triggered as mouse leaves a component,,gaearon,2016-11-29 20:31:05,2017-10-04 15:09:44
IS,react performance issues,I found shouldDidUpdate is performance worse than refs control update CODE A shoudDidUpdate control udpate My Computer macbook pro 2 8Ghz i7 memory 16GB Browser chrom 56 A 260 300 ms B 30 ms Browser IE 11 A 1000 1100ms B 500 630ms Is there a better way to deal with such a scenario,,"syranide,gaearon",2016-12-01 08:07:00,2017-10-04 15:19:45
IS,Even Though I am using the webpack uglifyjs plugin for minification ReactDevTools is telling me that I have unminified code that is not production quality,Do you want to request a feature or report a bug Bug What is the current behavior ReactDevTools is showing the red icon for my deployed application even though I am using the webpack uglifyjs plugin and the webpack DefinePlugin with process env NODE ENV' JSON stringify 'production' If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 What is the expected behavior That react DevTools would show me a black icon indicating production quality code Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I am using the latest version of Google Chrome Version 61 0 3163 100 Official Build 64 bit and this app is running with react 15 6 1 and react dom 15 6 1,,"gaearon,gaearon,gaearon",2017-10-04 15:00:54,2017-10-04 15:24:30
IS,Without an onChange handler and renderToStaticMarkup,I am using ReactDOMServer renderToStaticMarkup Layout and I get this message is not that wrong Could not find any issue about it,,"aweary,gaearon",2016-12-02 13:41:32,2017-10-04 15:27:09
IS,Using a ref to set the htmlfor prop of an input is label,I do not know if this is currently possible but I believe it would be useful to be able to use refs rather than ids when setting the htmlfor prop of a label Something along the lines of Is this something that is previously been considered or that is currently possible,,aweary,2016-12-02 13:45:46,2017-10-04 15:27:35
IS,Best way to add raw attribute values to elements,I'm using a direct snippet from my personal website that I can safely assume has it uses widely Somewhere in the render function The above wo not work The problem here is the href with the mailTo React re encodes all of this In order to avoid this the well known way is to use dangerouslySetInnerHtml However it makes no sense to use it here since it is a part of a much larger element And you cannot just set attributes this way you have to set the whole element And this phenomenon is encountered quite often in many scenarios Personally I think the whole dangerouslySetInnerHtml is over engineered Real use cases scenarios for protecting vital stuff programmers generally use well known api to encode anyway this is really pointless in real life practical scenarios the only thing it gives you is headaches This often just makes you jump through hoops to perform very simple stuff Would greatly appreciate any suggestion of how to handle the above mentioned scenarios Thanks PS The entire address block above is cleanly abstracted into one component which can be found here,,"syranide,syranide,syranide,deanbrophy",2016-12-04 07:34:03,2017-10-04 15:27:59
IS,Perf reporting wrong wasted time on connected component,On each redux state change Perf reporting wasted time on connected component Even if props are not changed Example from project img width 683 alt example src Using react 15 4 1 react dom 15 4 1 react redux 4 4 6 redux 3 6 0 reselect 2 5 4 immutable 3 8 1 react addons perf 15 4 1 This is a note for you to check later Thanks,,gaearon,2016-12-07 11:41:05,2017-10-04 15:32:07
IS,onChange event is not triggering in Mozilla and IE for type file React js Redux,I am pretty new guy to react js I am little bit confused why input type file action is not working in Mozilla and IE it is working fine in Chrome I do not why it is not working Is this a bug,,"aweary,gaearon",2016-12-07 14:16:24,2017-10-04 15:33:19
IS,DX feature more specific error when render returns Component instead of Element,Version 15 4 1 When the render function returns a React Component instead of a React Element the error message might be quite cryptic like invariant js 38 Uncaught Error Element type is invalid expected a string for built in components or a class function for composite components but got undefined I think React could try to detect that the render function is returning a component instead of an element and print something convenient like its displayName Why is this useful Because for example I'm using a lib where there was an API breaking change where a prop has been changed from component to element and it was hard to find the cause of the problem even by looking at invarient stack variables in debugger see Quite related but it seems that if React tries to put a component in the JSX like span Component span but also with React createElement this is simply swallowed I think a warning would be useful too see,,"slorber,gaearon",2016-12-07 17:14:13,2017-10-04 15:37:31
IS,Feature Suggestion Publish react also as ES2015 code,Do you want to request a feature or report a bug feature What is the current behavior React is published to NPM only as ES5 code What is the expected behavior Publish react also in es2015 with es2015 entry point in the package json Motivation Performance leverage the targeted client native ES features Its part of the angular 4 package format heading h jt2mvxhyrshv,,"gaearon,gaearon,gaearon,gaearon,gaearon",2017-07-12 22:38:53,2017-10-04 15:53:43
IS,Top level callback has different semantics from setState callbacks,When you call setState with a callback the state update is enqueued separately from the callback L68 L70 If the setState is called outside of batchedUpdates or in Fiber parlance with Synchronous priority that leads to two separate flushes because enqueueSetState triggers a synchronous render that is flushed before enqueueCallback is ever called We have replicated this behavior in Fiber as well However the top level callback that is passed to ReactDOM render does not have the same semantics Both the state update and callback are flushed at the end of the next render even outside of batchedUpdates See this unit test L180 for an example The initial callback is called just after the initial mount whereas if the callback had setState callback semantics it would be flushed after the updates that are scheduled inside of componentDidMount We should fix this inconsistency so that all callbacks have the same semantics In my opinion it makes most sense if a callback is flushed right after the update top level render it corresponds to and we should change setState callbacks to behave that way One way to implement this would be to unify enqueueSetState and enqueueCallback so that enqueueSetState et al accept a callback Or we could change the top level callback to behave the way setState callbacks do Either way it would require a breaking change to React The question is whether we want to make a change now and possibly release it in a 16 0 version of Stack or if we should make Fiber match the current inconsistent behavior and fix it later react core,,"acdlite,gaearon",2016-12-15 01:23:43,2017-10-04 16:01:46
IS,onTouchEnd leads to focus on inputs that are rendered after the touch,Do you want to request a feature or report a bug Bug What is the current behavior An onTouchEnd event that leads to the rendering of an input element at the location of the original touched element will focus the input element which means that the touch is reused for the new input element If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template You can check out the following fiddle to reproduce it 1 Open the mobile device mode in chrome or open the fiddle from a touch device 2 Zoom in so that a touch on Click here will fully land theoretically in the input element behind it Double click somewhere 3 Touch Click here The input element is now focused You can also see this gif in case the repro steps are unclear What is the expected behavior The input element should not be focused because it does not exist when it is touched yet Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 1 it does also not work on 15 3 Chrome Android Chrome Web View maybe more browsers,,gaearon,2016-12-15 13:48:50,2017-10-04 16:02:35
IS,15 4 breaks default param behavior on componentDidMount in production build,Do you want to request a feature or report a bug bug What is the current behavior only when NODE ENV production null is being passed as first argument to componentDidMount this becomes an issue when a default param is specified for componentDidMount from the backtrace from the componentDidMount call it seems like the difference between 15 3 and 15 4 is the extra arg argument in this line L73 Repro clone the project then cd into it then refresh localhost 9966 the console should log null What is the expected behavior they should either both log this should be logged or they should both log null development build and production build should not differ in this regard Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 4 Everything was OK in 15 3,,"gaearon,gaearon,aweary,gaearon",2016-12-14 21:46:00,2017-10-04 16:03:22
IS,Isomorphic app throws incorrect error when using legacy refs and unstable handleError React DOM tree root should always have a node reference,I am building an application that renders a React component on the server and then sends the markup to the client where the client side React rendering takes over I'm wrapping my root component in react hot loader is AppContainer component The AppContainer component uses the new unstable handleError method to catch errors that occur on the initial mount Let is say I put some code in my components render method that is guarenteed to throw an error on the client but not on the server maybe something like Clearly the solution is to not use legacy refs but is this a bug Or have string refs been deprecated,,"gaearon,gaearon,gaearon",2016-12-22 19:02:54,2017-10-04 16:07:19
IS,FeatureRequest Custom PureComponent compareLevel,I want a feature The now situation is just class MyComponent extends PureComponent then PureComponent will do the shallow compare on props and state just one level for us But I found it is common that In our redux store we have a long array A then we do a filter in the mapStateToProps and get an array B We may push remove object to from A that may maynot change B Since B is always rebuilt PureComponent will always rerender I hope PureComponent to do the shallow compare more then one level So I came up this idea Hope you consider it,,gaearon,2016-12-27 04:06:31,2017-10-04 16:08:51
IS,A group of radio button requires all to have defaultChecked attribute to work properly in Firefox,,,"gaearon,aweary,gaearon,aweary",2016-09-30 12:47:27,2017-10-04 16:09:09
IS,Infinite loop when error is thrown in render method,There is an infinite loop when there are components with error on render and with onMount callback which calls update of parent component Here is code When I run this code I have unexpected infinite loop I expect code to stop on thrown error Suddenly if I change render method of Main component to it works as expected Here is code with correct behaviour I get this bug with React ReactDOM 15 4 1 it looks like version 0 14 7 works correct in both cases,,gaearon,2016-12-29 08:48:22,2017-10-04 16:10:11
IS,WebComponents now requires class syntax,Do you want to request a feature or report a bug Bug What is the current behavior Modern browsers no longer permit Object create HTMLElement prototype as a means of creating Web Components See It is not possible to use custom elements without ES6 classes issuecomment 253993830 WebComponent demo L39 uses this now removed means of creating WebComponents If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Running the linked webcomponent demo will throw an Uncaught TypeError What is the expected behavior The demo executes renders Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm not sure when this change went into force in browsers Chrome m55 that I'm on is broken m54 was broken,,gaearon,2016-12-30 06:51:15,2017-10-04 16:10:26
PR,Fixes example in Web Components docs,In the example it was missing extends HTMLElement as the super class for the class component Example of this working,,"trueadm,gaearon",2017-10-02 19:20:49,2017-10-04 16:12:37
IS,shouldComponentUpdate render not called after this setState,This is a bug Current behavior Calling this setState multiple times only re renders the component once the value of nextState inside shouldComponentUpdate which is also called once only is equal to value passed to setState on the first call Expected behavior shouldComponentUpdate is called each time this setState is called the component re renders if it returns true Background I'm building a library that wraps components does some state management stuff the code is similar to react redux While working on the context feature I created a BMI calculator to help debug issues The VDOM for that example looks like this vdom Changing the input value should cause the BMICalculatorUsingContext Input to both re render but the Input does not After some investigation I discovered this setState is called several times inside Mirror Input with the expected values however shouldComponentUpdate is not called as expected console log To workaround this issue I checked for failures inside the setState callback re called setState if required Obviously this is not ideal Go to 3000 change the input value While trying to re create this issue in a simpler example I speculated calling this setState inside the parent immediately before calling this setState inside the child caused the problem Though this idea was incorrect as the child correctly re rendered render was called every time this setState was called You can see this attempt here Using React 15 Windows 7 Chrome 55,,"aweary,aweary,gaearon",2017-01-03 04:24:48,2017-10-04 16:13:35
IS,Native event stopPropagation outside of React root cuts out React events,We need to host a standalone React component DraftJS editor inside a HTML5 application which will run on other JS framework or even plain JS or jQuery The code of the application is beyond our control we are just a vendor of a component which adds some content part of which is this React based editor Anyway the most important part is that we need to add the component with the following code to an existing DIV I tried to change containerInfo ownerDocument to containerInfo node to register the React event chain to the root of the React container and tried it for several basic events onClick onMouseDown Up and it seems working for us as expected React events are not influenced by stopping propagation at the native events outside of React component root so the two differently implemented parts of the application can coexist in peace I am not sure why ownerDocument was chosen over node in the implementation and if changing it to node could break something important Please advise if the proposed solution seems viable in that case consider a change to that or for what reasons you would not recommend it,,"aweary,gaearon",2017-01-05 08:34:37,2017-10-04 16:15:19
IS,Warnings can be as clean as validateDOMNesting,We can see the validateExplicitKey warnings like this 1 It hard to see the path of components We can see the validateDOMNesting warnings like this 2 Warnings can be as clean as validateDOMNesting Thanks,,gaearon,2017-01-06 06:46:06,2017-10-04 16:17:26
IS,Cannot read property 'func' of undefined when updated react to 16 0 0,I updated react version to 16 0 0 and now i get an error in bundle js created by webpack in line var func react PropTypes func I use prop types as separately lib My webpack config,,"jquense,jquense",2017-10-04 16:11:37,2017-10-04 16:17:29
IS,When children is Array the error message of validateChildKeys not consistent,validateChildKeys results were inconsistent When childrenLength equals 1 the result is different And try this for the result output output sorry My English is on the way I use the google translate Thanks,,gaearon,2017-01-07 18:04:36,2017-10-04 16:18:28
IS,Expose key for helper libraries,Do you want to request a feature or report a bug Feature What is the current behavior You can not access this props key this key What is the expected behavior We have a use case where we hydrate dehydrate certain components for an HMR plugin we have developed internally But when HMR'ing a file we often need to access things within loops and rehydrate the right data Right now we have to add a secondary key to everything but this is only for our development tool If we had access to keys this would be trivial to implement It is also impossible to implement with a babel compiler trick because we need to detect these components loops at runtime and we can not just add a secondKey prop everywhere because we would have a mess in our props It seems like it is rather end user hostile to not at least give a backdoor into accessing keys so my proposal for all the weird edge case uses like our own here would be to expose Which would take a component instance and return the key for it There could be appropriate warnings around it in documentation and elsewhere,,"gaearon,gaearon,gaearon,gaearon,AoDev,gaearon,sophiebits,gaearon",2017-01-10 22:41:26,2017-10-04 16:23:45
IS,IE11 triggers onChange event of file input when element value is assigned,Do you want to request a feature or report a bug bug possibly related to 7295 What is the current behavior Here is a component for a file upload button class UploadButton extends React Component render const onUploadFile this props input type file name file ref c this file c onChange onUploadFile this file files 0 this file value null When a user selects a file to upload onUploadFile is called In this case I want to call onUploadFile if a user selects the same file two times in a row so we set this file value to null after the first selection so that the onChange handler is called the second time the user selects the file So far so good The bug is that in IE11 setting this file value to null causes the onChange handler to be called This is not the case in IE10 Chrome or Firefox You can validate this by seeing that onUploadFile is called twice when selecting a file in IE11 but not in the other browsers If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Actually in this fiddle the onUploadFile callback is called three times in IE11 What is the expected behavior The same behavior in IE10 and IE11 and Chrome and Firefox Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 4 2 react latest in the fiddle,,gaearon,2017-01-14 19:35:42,2017-10-04 16:25:05
IS,ReactDOM render fails if react dom was loaded before a DOM was available,Do you want to request a feature or report a bug Report a bug What is the current behavior ReactDOM render fails if there was no global document when it was first loaded If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I'm not providing a jsfiddle example because the use case happens with Node js and JSDom Here is how to reproduce Define a component that has a state and have it is render function render null for one of the cases This happens pretty frequently using HOCs such as 3rd party translation tools etc This would fail with the following error Invariant Violation dangerouslyReplaceNodeWithMarkup Cannot render markup in a worker thread Make sure 'window' and wouldocument' are available globally before requiring React when unit testing or use ReactDOMServer renderToString for server rendering If you require react dom after a dom was defined globally the test will pass Also returning anything other than null any React element will make the test pass It looks like react dom is using L14 to get if a DOM is available when it was first loaded and does not look again when ReactDOM render is called If any of this makes sense I will be happy to give a PR to fix it if you can throw me in the right direction What is the expected behavior ReactDOM render should render correctly even if a global document was added after it was loaded as it works for such a component that does not return null for a certain state Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested with latest React and Node js 7 0 0 Thanks,,gaearon,2017-01-17 12:25:38,2017-10-04 16:26:14
IS,No error when element with ref created in another elements constructor in dev environment,When creating an Element with a ref from inside of a constructor an error is thrown in production mode but not in dev mode Here is a minimal sample An error Only a ReactOwner can have refs should happen in dev and production modes This is happening in React 15 4,,"gaearon,gaearon,aweary,aweary",2017-05-09 16:29:28,2017-10-04 16:26:31
IS,Perf freezes browser,Banging our heads diagnosing a really bad performance Firefox specific Chrome works fine on a React 15 3 1 Redux 3 5 2 web app updating many objects at the same time Using node webpack Typescript react addons perf 15 3 1 type definitions from DefinitelyTyped import Perf from areact addons perf' outputs Module ' react addons perf ' has no exported member 'Perf' import as Perf from areact addons perf' lets us use Perf start on console but once that command is entered browser freezes Any clue of what could be wrong Help really appreciated,,"aweary,gaearon",2017-01-19 17:18:16,2017-10-04 16:26:44
IS,DOM element rendered with same props is not detected as wasted,I found this issue when trying to demo React Perf in Chrome which basically utilizing react addons perf When input DOM element is rendered with same checked true or checked checked prop it is not detected as wasted Code below cannot not be detected as wasted even onClick is new function for every render I have created minimal TODO like project to reproduce this issue Repro Steps 1 Click Start on Perf Tab 2 Check one item in web page 3 Click Stop on Perf Tab Expected Result It should detect wasted render Actual Result No wasted is detected This can be reproduced In React v15 4 2,,gaearon,2017-01-23 02:52:30,2017-10-04 16:27:34
IS,onLoad not working on svg tags,It seems that the onLoad attribute does not work on svg tags as it does on img tags Could you add support for onLoad on svg,,aweary,2017-05-04 21:00:03,2017-10-04 16:27:43
IS,Scoping of render under TypeScript and maybe ES6,Do you want to request a feature or report a bug Bug What is the current behavior This code throws Warning setState Can only update a mounted or mounting component This usually means you called setState on an unmounted component This is a no op If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template I'm using this repo to test this in the Login tsx component What is the expected behavior I have managed to chase this down to scope being lost because render is a function I suspect if it was possible to do render this would not be an issue but that syntax is blocked by the TSD for react I'm not sure if this is a react bug or a TSD one Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm running 15 4 2 Chrome on MacOS but i can reproduce in FF and Edge on Win 10 as well I have not used older versions but i suspect it was there,,"aweary,aweary,aweary,gaearon",2017-01-23 18:55:03,2017-10-04 16:28:26
IS,Add support for ControlList API is controlList attribute,In version 58 Chrome shipped support for the HTMLMediaElement ControlList API and by extension the controlList attribute on elements like video and audio Here is how the attribute looks in practice controlslist React 15 5 4 does not support this attribute and strips it out with a Warning Unknown prop controlsList on video tag Remove this prop from the element warning in the console Could you add support for this new attribute This is not a pressing issue as it is possible to set the attribute via javascript i e by setting it in a ref or in a component lifecycle event but it would be nice to have it recognized as the valid attribute it is,,"nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,nhunzaker,aweary",2017-05-03 14:20:06,2017-10-04 16:30:08
IS,Provide better error for Error Objects are not valid as a React child found object with keys,Do you want to request a feature or report a bug Bug What is the current behavior Currently if we by mistake pass a JS object to JSX instead of a string then we get the following error Error Objects are not valid as a React child found object with keys If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Show a better error that helps solve the issue like in this SO solution Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"gaearon,aweary",2017-04-28 07:05:20,2017-10-04 16:33:20
IS,React 16 Umbrella and 15 5,This list might change just putting it out there as the first draft Posting these together since they are related and we do not plan more 15 x releases after 15 5 anyway To put these changes in context we have a few goals Click to show details For the past several months we have been working on a rewrite of React codenamed Fiber Initially it won t affect public API but it brings several new features like and Fiber gives us a solid foundation to improve React core in numerous ways We ll be talking more about it soon and we intend to ship it with React 16 by default To reduce the bundle size we need to remove the APIs that we do not recommend such as createClass and React DOM helpers We intend to warn once about their usage so that you can start removing dependencies on them They will still be available as separate packages but we will exclude them from the default build of React 16 We would like to have more control over the bundles so that we can better optimize them This is why we are considering switching to flat bundles and thus removing access to React internals in react lib and react dom lib in React 16 This will also mean faster compile times by default for users of Webpack and other bundlers and faster server side rendering performance details Here s a speculative list of changes we think of doing in these releases Past Releases I ve moved these to the end of this post 16 Final x flarnie x Check if is a real regression nhunzaker x Check Google issue s still exists after RC2 s turns out to be polyfill io bug x Figure out what we want to do regarding and x Ensure Enzyme is not blocked on anything from our side for 16 compat flarnie x Remove unstable prefix from unstable createPortal and alias it x Ensure we show a sensible warning for this case x Preparing for the Final Release React team in general x Write blog post adapted from 10294 acdlite x Add attribute info to big changes section x Consolidate remove Updates section at the end x Server hydration make hydration changes more prominent in breaking changes section maybe write a full blog post later x Release an update to DevTools with x Website bvaughn and x Docs x Document ability to return strings and arrays from render x Document createPortal x Merge server streaming doc into regular dom server doc and fix imports to match new unified entry point x Test renderer x Right after release x Update CDN URLs on website and official fiddle to reference new paths umd rather than sebmt x Update doc snippets such as all codepens on the website to use 16 TODO Add any bugs discovered while testing RC 16 Wishlist x Fix hot reloading in RN probably needs unstable forceUpdateDeep and then change to use it x Show a better message for missing React x Make sure we offer a way of canceling setState updater form gaearon will follow up x Remove Stack and compat code x Add support to Enzyme for Fiber airbnb enzyme 1007 Past Releases details 15 5 Click to show details x ReactDOM fixes if want to release any x We should probably ship a fix for x New warning callback refs on stateless functional components x New API deprecations x React createClass will be moved to a separate package and we provide a codemod explanation of the new es2015 class transform with property initializers if you want to update to ES classes React createFactory will be moved to a separate package or removed it is a one liner L271 L272 s React DOM factories will be moved to a separate package s We forgot to do it Moving to 15 6 s React createMixin will be removed s We forgot to do it Moving to 15 6 x React propTypes will be moved to a separate package x Deprecate React addons x Decide how to handle all of this with the UMD addons build x Fix this bug details 15 6 See 16 Alpha Click to show details x Remove deprecations added in 15 x Stop appending px to strings x Remove LinkedStateMixin valueLink and checkedLink x Remove React spread and React createMixin x Move React createClass to a separate package x Move PropTypes to a separate package x Move React DOM factories to a separate package x Decide what to do with the addons build x If we keep any addons they need to work regardless of whether React is aliased to a flat bundle or not which is not the case now x Strip PropTypes checkers in production build x Re add warning about calling PropTypes directly X More ReactDOM fixes if want to release any x Make a decision on the input fix by for now accepted but follow up work will change this link to issue on related follow up work details 16 Beta Click to show details x Actually enable fragments flarnie verified this x Make error boundaries official bvaughn x Choose lifecycle naming x Codemod stuff x Decide whether to runtime warn for the old name decided let is not do it x Fix the issue with invokeGuardedCallback tracking in is working on this x This came up internally Set a hard limit for recursion acdlite x Duplicate React string refs results in very confusing error ref is not a function We should provide a good invariant for that and is this Draft issue also about this x Is there a test for this flarnie x Warn throw when doing an update on a container that was manually emptied outside of React in stack this mounted a brand new tree in fiber it tries to apply an update and usually fails flarnie in x Is there a test for this flarnie x Additional APIs we need in order to start experimenting with async acdlite x React unstable AsyncComponent x ReactDOM flushSync batch x sanity test use in a CRA app and check fixtures x Messaging x Update isfiberreadyyet com x Compose a Tweet details 16 RC Click to show details x m l Pass DOM props through latest is gaearon x Regression we should warn if object is passed to an event listener prop 10407 aweary fixed in but needs s review s updated and merged x Make sure input variables props state point to the correct values for each lifecycle Example where this is not the case for componentWillMount acdlite fixed in 10481 x select is onChange event fires with incorrect selectedIndex value x How do we ensure weak minifiers do not ship the bundle twice flarnie fixed in x Bug SSR has false positive warnings for SVG tags 10415 spicyj fixed in x Bug Unexpected cross domain error passed to componentDidCatch 10441 bvaughn fixed in x Warn when nesting a 15 tree inside 16 spicyj fixed in x undefined is not a function evaluating 'owner getName ' x Regressions reported in beta x The server renderer crashes in production with inline styles fixed by x The server renderer does not yet support returning arrays and strings from components fixed by 10221 x The server renderer still renders data reactid somewhat unnecessarily gaearon x Potentially fixed by gaearon x In some cases Error null is reported instead of the real error decision update the error message acdlite x Shallow renderer does not implement unstable batchedUpdates decision team seems to be leaning away from doing this discussion in 10355 x s m shouldComponentUpdate with functional components decision delete it for now add it in a minor sebmarkbage x There is a report that Google crawler can t render the page using 16 link flarnie x s Check if is a real regression s No it is been fixed looks like x s m Ensure type validation did not regress when we enabled new features gaearon x s Decide if we want to break value attribute syncing behavior s decided to postpone until 17 x s m Decide if we want to stop calling componentDidUpdate from shallow renderer x Decide what do we do about polyfills x Map Set need to throw early x Object assign keep or assume it is there decision keep it bundled for now x rAF decision keep it required Maybe use the same approach standard as Relay javascript environment requirements x Big missing pieces x Add server rendering and reviving x Add shallow renderer x We seem to be decoupling shallow renderer from ReactDOM However in 15 findDOMNode works inside of shallow renderer because it contains ReactDOM injections Is this going to be a breaking change gaearon decision let is not support this x Decide on whether to include warning whitelisting blacklisting bvaughn decision not in 16 0 x Maybe Switch to flat bundles no more react dom lib internals are truly private x Decide plan forward for popular projects depending on internals react native web react tap event plugin might not block final x EventPluginHub is dangerously exported from flat bundle for tap event plugin x react native web probably needs more internals coordinate with done in x s Support class and for gaearon s decision not gonna do this now x Feature parity for renderers x Shallow renderer supports strings and arrays x Server renderer supports strings and arrays x s Server renderer supports error boundaries s does not make sense conceptually right now x Decide on whether to put react current owner in its own package to reduce issues caused by npm duplication not now x Decide on DOMServer entry points react dom server and react dom node stream seem inconsistent with each other Why is only one of them server gaearon These were configured separately for Prepack One target includes both the pure JS APIs and the Node APIs and the other only includes the pure JS APIs We could combine them into a single react dom server entry point and add a new renderToString method on it x Decide Do we care about catching errors in events in the initial release no x Error messages flarnie Dan I moved this back to blockers because I do not think we can release with unclear messages Error boundaries are a huge change in open source and we must have documentation and a link before we start unmounting roots x You can add an error boundary message should link to docs x duplicate key warning for children with same keys is out of date claims child will be ignored but now we will only render second one easy to add to 16 final or sooner sebmarkbage x Verify that the bundles produced are valid in strict mode issuecomment 319490960 bvaughn x Testing the Beta React team in general x Share the beta and proposed release date with library authors several weeks in advance x Triage any issues reported with beta details details,,"gaearon,aweary,nhunzaker,sophiebits,gaearon,jquense,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,aweary,aweary,gaearon,gaearon,aweary,aweary,gaearon,koba04,gaearon,koba04,acdlite,koba04,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn,gaearon,gaearon,jquense,gaearon,acdlite,gaearon,acdlite,acdlite,gaearon,gaearon,acdlite,bvaughn,gaearon,gaearon,gaearon,bvaughn,bvaughn,flarnie,flarnie,gaearon,gaearon",2017-01-24 00:46:38,2017-10-04 16:35:55
IS,ReactTestUtils event dispatched before workInProgress stateNode is set,With the following using the latest alpha 10 and jsdom 9 12 0 The issue is that completeWork calls finalizeInitialChildren L275 L279 before it sets the stateNode L285 on the workInProgress finalizeInitialChildren eventually calls setValueForProperty for the image tag which sets the src property and causes jsdom to trigger an event The top level event listener then grabs that instance L178 which has no stateNode which eventually triggers the error ReactTestUtils is likely to be used frequently with jsdom so I think it is important to support Is this something that can be addressed in Fiber,,"aweary,gaearon,aweary,aweary",2017-04-23 19:04:24,2017-10-04 16:37:24
IS,Unexpected exception on using React Perf tools,I found this exception when trying to use react perf tools with components that internally uses ReactDOMServer renderToStaticMarkup Minimal reproducible case A different but mostly related exception is happens when react perf is used in the url You may be asking yourself why I need to use reactserverdom together with reactdom I need it to render a svg into a blob and then use that is blob uri as background url style attribute I have also other use cases when I need to render to string instead to directly to the dom so I think that is reasonable usage,,"gaearon,aweary,prometheansacrifice,gaearon",2017-01-31 15:44:33,2017-10-04 16:38:27
IS,pasteOnCapture triggers when the DOM event is in the bubbling phase,Do you want to request a feature or report a bug BUG What is the current behavior When setting up an onPaste handler react provides two choices onPaste or onPasteCapture In both cases the DOM event currentTarget is the document which is reasonable given how react is delegate behavior works but the eventPhase is 3 aka bubbling in BOTH cases If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar console output What is the expected behavior Expected is that onPasteCapture fires when the DOM event is in the capture phase This is needed to be able to manipulate the paste handler properly when playing focus games on Edge Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Latest version of React affects at least Chrome and Edge but I suspect it is browser OS independent,,"aweary,gaearon",2017-02-01 04:32:07,2017-10-04 16:39:04
IS,404 Link in Web Components docs,At the bottom of the Web components docs page there is a link to a 404,,"gaearon,aweary",2017-04-06 19:43:09,2017-10-04 16:40:35
IS,Bring back the JSX Gotchas doc,The following document was very useful html entities However it seems to have disappeared entirely in 7878 and v15 4 0 with no replacement I can not find anywhere in the current documentation that explains how and why React escapes HTML passed in by default I was trying to explain this to someone today and right now it seems like this is something you just have to know The other section about custom HTML attributes seems useful too,,gaearon,2017-02-14 07:34:02,2017-10-04 16:41:06
IS,The Perf Doc printOperations image not update,If I misunderstood please let me know and to apologize if I no clear to describe Do you want to request a feature or report a bug Maybe Bug What is the current behavior When I look into the Perf Doc printoperations and I saw the field print By printOperations function different with the Doc Image The Image is image and the printOperations print is image Owner Node Operation Payload Flush index Owner Component ID DOM Component ID If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template NO just the Doc What is the expected behavior would be awesome if change the image to sync the printOperation print and explain the new fields of it Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React NO just the Doc Thanks,,"monkindey,gaearon,monkindey,gaearon,monkindey,gaearon",2017-02-15 09:49:53,2017-10-04 16:41:34
IS,Unexpected behavior with wrapped input and onChange handlers,Do you want to request a feature or report a bug Bug What is the current behavior This is a code snippet to make one input follow a React expression until the user changes the field manually This is accomplished by wrapping input with a Reach component Input Ideally any property for input will work for Input including onChange handlers Specifically it is intended to let an Input follow the value of a regular input element When the input element wrapped by the Input component is changed a React synthetic event is as expected and desired created and sent to the handlers However When the followed input element is changed the Input component onChange is triggered with AFAIK a regular non synthetic event object If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template events are written to the console open it up and take a look What is the expected behavior The Input component is onChange handler receives a React synthetic event Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 3 0 15 4 2 Chrome 55 0 2883 95 64 bit on MacOS,,"monkindey,jddxf,gaearon",2017-02-17 21:39:33,2017-10-04 16:44:43
IS,Question How to determine parent child relationship in React Host Composite components,Do you want to request a feature or report a bug Feature What is the current behavior There does not seem anyway to be able to access React is tree If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Some way to be able to see how elements are nested with their parent child relationship Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React 15 I'm not sure if this is the right place to inquire about this sort of functionality feature if not I would appreciate it if you can point me in the right direction but I have a need to be able to know how child nodes are associated with their parents and to be able to reference them For example Obviously this is not an optimal approach as the user would have to define the entire tree structure with id s and in addition if the order in which these components mount into the DOM is not linear so it would be hard to reconstruct the tree and be able to perform logic on their relationship to one another Any ideas on how to go about this Thank you for your time and assistance,,"gaearon,aweary,gaearon",2017-04-30 16:49:21,2017-10-04 16:50:09
IS,Infinite loop when dispatching event in event listener,Do you want to request a feature or report a bug Bug What is the current behavior Normally when an event is dispatched there is a place where a fakeNode is created then the event is attached to that node the event is dispatched then it is removed Because these all happen synchronously it goes into the event listener before the eventlistener is removed from fakenode So when the second event is dispatched within the event listener you get stuck in an infinite loop because each time dispatch is called both event listeners get called then the first one dispatches the second event so it goes on and on Specifically when bubbles true Though was not fully able to understand why If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template click on Hello world look at the console What is the expected behavior Should not infinite loop Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Not sure about previous versions The version I use is 15 4 1 and it does repro in the JSfiddle so 15 5 3 has the problem as well,,"jddxf,aweary",2017-04-11 02:15:51,2017-10-04 16:50:59
IS,Filtering out valid mathml properties,Do you want to request a feature or report a bug Bug What is the current behavior React is filtering out some attributes that are valid in mathml elements If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Open On firefox for full mathml support You will see the attributes are all filtered out although they are valid as mathml What is the expected behavior The html is rendered with mathvariant notation and linebreak Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Firefox is supposed to support mathml Websites running MathJax will also be affected,,"nhunzaker,aweary",2017-04-03 14:56:19,2017-10-04 16:52:53
IS,feature request Deferred async shouldComponentUpdate,Do you want to request a feature or report a bug What is the current behavior If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,aweary,2017-07-17 17:04:28,2017-10-04 16:58:34
IS,Mouseleave events fire unexpectedly when mousing into descendant node with a different React root,Do you want to request a feature or report a bug Bug What is the current behavior When mousing into a descendant DOM node that has a different React root the mouseLeave event on the parent React DOM component is fired unexpectedly If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Demo 1 Open the console to see the logs printed 2 Mouse from the Parent into the Normal Child and then back out and note that mouseLeave does not fire 2 Mouse from the Parent into the Portal Child rendered by embedding a new React root and note that mouseLeave does fire Mouse back out and note that it fires again Sometimes it fires multiple times for the enter exit step What is the expected behavior mouseLeave should not fire when entering exiting the Portal Child since it is a descendant node of Parent Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Tested with the following and the issue is reproducible in all cases React 15 4 1 and 15 5 3 Latest Chrome Firefox Safari,,aweary,2017-06-08 22:50:56,2017-10-04 17:24:23
IS,Do not trigger the change event for the same radio value,Do you want to request a feature or report a bug bug What is the current behavior Selecting of the same value for the input type radio twice in a row results in triggering of change event twice for the same value If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Open and click twice on any option As the result you will see in console that change event is triggered each time even if the changed value is equal to the previous one For comparison you may check the native html implementation What is the expected behavior The change event should not trigger again for the same value Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React macOS Sierra 10 12 5 Safari 10 1 1,,"gaearon,aweary,gaearon,aweary",2017-06-08 09:13:10,2017-10-04 17:31:39
IS,is it possible to remove ref key children from Props,Currently React createElement ctor props children extracting ref key from props props key props ref because of this compiled to js lanuages scala js bukclescript reasonml can not use their native classes as props currently they wrapping inside js literal With Inline elements type Baz props key 'baz' ref null they can use native classes as props but it fails when component have children ref From my point of view props should be Component Props and ref key children should be placed in different location,,"sebmarkbage,gaearon",2017-02-23 06:28:04,2017-10-04 18:12:48
IS,Fiber DOM reviving through DOM walking seems blocked by the ReactFiberReconciler API,After a discussion with about how the Fiber client renderer should revive a server rendered DOM I started to dip my toe into seeing how hard it would be to implement in ReactDOMFiber My first thought for implementation was to use createInstance to crawl the existing DOM element by element comparing the existing DOM elements to the createInstance arguments That would look something like this some parts having been simplified This all seems fairly straightforward to me with one big problem I can not figure out any good way to figure out what currentDOMElement is Unfortunately createInstance does not take in an argument identifying its parent instance as far as I can tell there is no way to determine where in the tree you are during a call to createInstance I looked into using hostContext which is currently used in ReactDOMFiber to pass down the type of ancestors in the tree I'm fairly certain that hostContext is not good enough to get access to the current DOM node though because the method that generates the host context for a particular node getChildHostContext does not receive the parent instance only the parent is host context and type There is one truly silly way to solve this with the current API which is to defer creation of DOM instances to appendChild when you know where in the tree the instance is supposed to be In this solution createInstance would return the element metadata type props as an Instance instead of a real DOM element and you would make the decision whether to use existing markup or make a new DOM element in appendChild when you have all the information you need about where you are in the tree This strikes me as a pretty bad solution though since the whole point of the two calls at least as I understand it is to do createInstance calls over multiple frames and all the appendChild calls synchronously in one frame This idea would put all the work into the appendChild frame which would kind of defeat the point of Fiber So my knowledge of the Fiber codebase is minimal at best and I could be totally wrong about all this but I think that createInstance is signature may need to change to support DOM revival on the client If createInstance took in the parent instance and closest preceding sibling instance as arguments this problem would be solved but I'm sure there are other solutions too Thoughts,,"aickin,acdlite,acdlite,acdlite,aickin",2017-02-27 18:37:24,2017-10-04 18:13:39
IS,Fiber Investigation what internals have direct dependencies on Stack modules,After some research the following modules in the React codebase have some form of direct dependency on a React Stack module Ideally we want to move away form using internal module requires and use public API requires where possible ReactTestUtils src test ReactShallowRenderer js There is a PR already open that should resolve this 8982 says Renderers src renderers tests ReactUpdates test js Only one test makes use of ReactUpdates directly Move the require to be inline within the test itself says this one just tests internals and does not test anything observable originally was added as a part of a very minor perf improvement can be deleted Renderers ReactDOM src renderers dom shared tests ReactMount test js A test in this suite uses ReactMount instancesByReactRootID says this test was added because the old devtools relied on this and it was important to not break them but Dan rewrote the integration so the Fiber devtools do not need this and this test is fine to delete src renderers dom shared tests ReactDOMComponent test js Two tests createOpenTagMarkup and createContentMarkup require Stack modules says these tests should be rewritten in terms of public APIs src renderers dom shared tests ReactServerRendering test js Re visit once we have SSR working says src renderers dom shared tests ReactDOMIDOperations test js Only has a single innerHTML whitespace test says let is rewrite this one in terms of public APIs though it can probably move into ReactDOMComponent test let is ensure that both initial render and updates work properly since those historically used different codepaths and might also diverge in the future Renderers ReactDOM SSR src renderers dom ReactDOMServer js Re visit once we have SSR working says Renderers ReactART src renderers art ReactARTStack js A couple of Stack modules are required by ART says No need to worry about these we will delete these when we delete stack says Renderers Native src renderers native ReactNativeReconcileTransaction js src renderers native ReactNativeMount js src renderers native ReactNativeStackInjection js src renderers native ReactNativeBaseComponent js src renderers native ReactNativeStack js says No need to worry about these we will delete these when we delete stack says Scripts scripts bench extract component js Should we refactor to use the public API instead says We do not really have a public API for reflecting on inspecting React trees which is what this script almost a bookmarklet does so we will need to rewrite this on top of Fiber if we want to use it again but this is not super important so for now this is okay to leave using Stack modules and it will only work with Stack until someone wants to use it and upgrades it to Fiber,,"trueadm,sophiebits",2017-02-27 14:36:58,2017-10-04 18:13:57
IS,Programmatically trigger onChange for IE,I am trying to test my script by programatically triggering onChange on my class But it doesnt seem to work on IE8 Kindly advice how to proceed I created this jsfiddle to show that The top part shows a typical reactjs code wherein values typed in an input field automatically appears in a separate DOM element The bottom part is the code wherein I try to programatically set the value on the reactjs is input field and trigger a change event If the jsfiddle above is execute in a Chrome Firefox or Safari the code works If it is executed on an IE8 for example it fails Kindly advice how to programmatically an onChange event Thanks Franz,,"aweary,gaearon",2017-03-05 09:53:07,2017-10-04 18:16:10
IS,Possible issue with the warning when the element does not have an explicit key assigned to it,Do you want to request a feature or report a bug bug What is the current behavior I think there might be an issue with the warning if the element does not have an explicit key assigned to it L72 I have the following component There is no warning But why If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Demo What is the expected behavior If I understand well how the way keys work keys I would expect to get the same warning with the nested array of data just like the one with the flat array of data since in both cases there are no key attributes set Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Spot on React 15 4 2 Tested on Chrome 57 0 2987 98 Firefox 52 0 and Safari 10 0 3 on macOS Sierra,,"syranide,gaearon",2017-03-13 20:02:22,2017-10-04 18:26:21
PR,Correct logo URL,Correct URL for logo The old URL shows Page Not Found,,"gaearon,bvaughn",2017-10-04 17:11:54,2017-10-04 18:33:39
PR,Fix blog issues that resulted from migration,The new markdown rendering engine does not parse non plaintext stuff that is within blockquotes well very prevalent in the community roundup posts This PR fixes those issues along with other stuff I also realized the blog images are not rendering properly and an issue has already been filed at Changing the img src to alt src syntax works for fixing most of those image issues I'm not sure whether we should wait for this issue to be fixed in Gatsby or we can just change the syntax to the working version first Let me know if the latter is preferred and I can submit a PR for that,,"yangshun,yangshun,yangshun,yangshun,yangshun,yangshun,yangshun,yangshun,yangshun,gaearon,bvaughn",2017-10-04 16:44:58,2017-10-04 18:35:30
IS,Build Error not found the fbjs lib warning,npm run build react build 16 0 0 alpha 6 build D github react npm run version check node scripts rollup build js react build 16 0 0 alpha 6 version check D github react node scripts tasks version check js STARTING react development js umd dev Error Could not load D github react node modules fbjs lib warning imported by D github react src isomorphic modern class ReactNoopUpdateQueue js ENOENT no such file or directory open 'D github react node modules fbjs lib warning' at D github react node modules rollup dist rollup js 9461 10 But I can found the package in the node modules win10 64,,"gaearon,aweary,gaearon",2017-04-06 06:34:30,2017-10-04 18:42:41
IS,Feature granular forceUpdate,When forceUpdate is called on a long list at the very least the whole list must be traversed For example with the following list arr 1 2 3 4 5 6 and if we where to push 7 arr push 7 the reconciler will go through elements 1 6 and then add a 7 at the end of that list The suggestion to add support for the following forceUpdate signature,,"gaearon,gaearon,aweary,gaearon,bvaughn,gaearon,gaearon",2017-03-19 18:00:55,2017-10-04 18:53:07
IS,Feature request Improved suggestion for invalid element type,This is a feature request Current behavior If ReactDOM render is called using a component name that is declared later in the same file the resulting error suggests that the component was not exported from the file it was defined in Element type is invalid expected a string for built in components or a class function for composite components but got undefined You likely forgot to export your component from the file it is defined in Example code where the suggestion is inappropriate What is the expected behavior The suggestion does not help in this instance It would be helpful if the error message also suggested that ReactDOM render may have been called too early For example Element type is invalid expected a string for built in components or a class function for composite components but got undefined You likely forgot to export your component from the file it is defined in or you tried to render the component before it was declared in the current file I am an experienced ES6 developer but new to React I just finished the tic tac toe tutorial and was attempting to apply what I had learned to one of my web sites when I made the above mistake Since this mistake is plausible to be made by someone just getting started especially if they are taking the tutorial code as their starting point and are new to ES6 it would be useful to suggest the alternate possible fix It might help other beginners out there If this is OK I will send a PR ASAP Thank you for your consideration This is on the latest version of React and should affect all environments Thank you,,"aweary,gaearon",2017-03-21 19:50:54,2017-10-04 18:57:44
IS,RFC Throw in CommonJS entry points if NODE ENV is not development test or production,Whether it is the best way to do it or not the fact is we rely on process env NODE ENV checks to tell if we are in a production environment or not This catches people by surprise because the default build of React is the development one and so they often ship slow and large development bundles to production This gives an advantage to libraries that ship without a development mode at all We could do this too However I think that this would be a net loss for the ecosystem Having a way to differentiate between debug and release builds is possible on every native platform and we should find a way to preserve this distinction on the web The UX vs DX compromise is a false and unnecessary choice in this case Since React CommonJS entry points rely on the distinction I propose that we do not allow any empty or custom NODE ENV values If NODE ENV is nether development test or production we throw a hard error This might not be the best solution in long term but at least it is consistent with how we are treating the flag now We could then add React specific aliases REACT ENV for finer grained configuration or for people who use NODE ENV for different purposes issuecomment 288809950 Still in my opinion there should be no default you need to pick the environment you re working in The error would link to a page that provides an exhaustive list of how to configure NODE ENV in different environments as well as possible workarounds use the right UMD build For UMD builds we will rename them to react development js and react production min js so that the distinction is more useful This is where people inexperienced with build systems start anyway so I don t think we ll hurt beginners I know this is probably going to be very controversial I believe explicit opting into either mode is the right decision but it will undoubtedly annoy people What do you think Update perhaps it is better to just go with REACT ENV issuecomment 288813823 instead of NODE ENV for everyone,,"gaearon,acdlite,trueadm,addyosmani,acdlite,gaearon,gaearon,gaearon,trueadm,gaearon,acdlite,trueadm,acdlite,gaearon,gaearon,trueadm,gaearon,gaearon,gaearon,aweary,gaearon,aweary,jquense,jquense,addyosmani,gaearon",2017-03-23 17:56:56,2017-10-04 19:02:27
IS,Add a React Children text helper,I have created a component roughly like this serving to wrap the behavior of the SVG text element to add more sophisticated handling of the string You can imagine something similar for generating simple a tags or spans or defn or whatnot Specifically if children represents a single text node return its string value otherwise throw an assertion error This would behave very much like the React children onlyChild L34 logic and its invariant check but expecting typeof children istring' rather than a ReactElement isValidElement children See also,,"aweary,syranide,aweary,gaearon",2017-03-24 20:59:23,2017-10-04 19:05:06
IS,improving doc,Here constructor it says Beware of this pattern as it effectively forks the props and can lead to bugs Nice but it would be better if docs explains what bugs it can lead to,,"gaearon,gaearon,hanumanthan,gaearon,hanumanthan,hanumanthan,gaearon",2017-04-02 12:54:24,2017-10-04 19:13:36
IS,Event plugins names are mungled in Closure Compiler under advanced optimizations,Do you want to request a feature or report a bug a bug What is the current behavior When React is compiled by Closure Compiler with advanced optimizations names of injected event plugins are being mungled If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template Compile React with Closure Compiler directly from NPM What is the expected behavior The names of injected event plugins should not be mungled Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React v15 5 4 It did not work in previous versions of React Closure Compiler renames object properties unless they are strings explicitly It happens because of the way how event plugins are injected here L56 L60,,"gaearon,anmonteiro,gaearon",2017-04-13 10:33:11,2017-10-04 19:21:25
IS,Pretty print error on React website,Just noticed that since we switched to Babel compile error is ugly if you make a mistake on interactive examples img width 339 alt screen shot 2017 04 21 at 4 53 33 pm src We should fix it to preserve the newlines It should be an easy fix You d need to follow the instructions in the docs folder to get them running then figure out a fix and send a PR Please comment here if you plan to work on this so that two people don t work on the same thing Update is looking at this,,"gaearon,tsriram,gaearon,gaearon,tsriram,tsriram,gaearon,gaearon,tsriram,gaearon,tsriram,tsriram,gaearon",2017-04-21 15:55:18,2017-10-04 19:35:44
PR,Remove references to PATENTS that crept in,,,"sophiebits,bvaughn",2017-10-04 18:23:58,2017-10-04 19:40:41
IS,Examples and Articles in Wiki are outdated unmaintained,I was referring to the Example and came to the page but It has the link for Example is broken Look at the first point React starter kit Includes several examples which you can view online in our GitHub repository,,"gaearon,gaearon,gaearon",2017-05-02 12:03:02,2017-10-04 19:40:58
IS,Proper Explanation for ref vs controlled input and use case for state variable in react,I went through the docs of react about controlled and uncontrolled components I have created a simple use case where I want to enforce the user to enter only uppercase values in the input field 1 In the first case I have used aref' with 'onChange' to achieve this and a global object is property to capture the dom node Here is the code for that 2 In the second case I have used 'value' property and state with 'onChange' Here is the code for that The docs says With a controlled component every state mutation will have an associated handler function This makes it straightforward to modify or validate user input For example if we wanted to enforce that names are written with all uppercase letters we could write handleChange as handleChange event this setState value event target value toUpperCase Well I can validate the user input even when I am not using state and not syncing the value prop with state as done in the first example above 1 So definitely validating user input can be done without using state at all 2 Can you explain why one approach is better than the other 3 What exactly the isingle source of truth' means and why it is so important In both the cases I am using a global variable of the component which is an object and can be accessed throughout the component 4 Also why should I unnecessarily use value this state input in example 2 because that would call render on every keystroke whereas in case 1 render is called only once So is not performance in case 1 better than 2 Also from the docs To write an uncontrolled component instead of writing an event handler for every state update you can use a ref to get form values from the DOM Well I need to write an event handler like 'onChange' even when using aref' to validate user input at run time as done in case 1 So using event handler with aref' is normal Use case for state variable From my understanding the only case where I have no other option than to use state variable is when I need to update the view dynamically Because this setState calls render every time it is run Here is the code for that I will be grateful if someone could clarify on all the three examples and enhance my understanding of the above concepts,,,2017-05-07 17:14:14,2017-10-04 19:41:59
IS,Tutorial,Hi I just had a couple of questions requests regarding the tutorial 1 In the Board is render function snippets in question show below while later removed winner and status both make use of this state value should this instead be this prop value I understand that it is removed later on but as I'm trying to follow along and understand the code this seemed inconsistent Shouldn t the line read We set xIsNext to true if the index of the move number is an odd number Thank you,,"gaearon,gaearon,gaearon,gaearon",2017-05-12 16:27:19,2017-10-04 19:44:21
IS,No warning about missing 'key' prop for array of arrays,I believe the following is a bug An array of div elements without 'key' props will correctly result in a warning but an array of length 1 arrays containing the same div elements will not result in a warning For example I believe the correct behavior is for the the array of arrays of div elements to also result in a warning React 15 5 4 Firefox,,gaearon,2017-05-20 19:10:11,2017-10-04 19:45:34
IS,Non Sensical Code in Official React Blog post How to submit a PR for the official React blog,Hey guys A while back I came across this post on the official React blog that contained a code example that made no sense and did not implement the intent expressed in the blog post which is to cancel a Promise in ComponentWillMount so setState is only invoked while component is mounted I ignored it back then but I just remembered again after I saw a tweet today about the same topic from The blog post in question is The non sensical non working code is Try it babili false evaluate true lineWrap false presets es2015 2Creact 2Cstage 2 targets browsers builtIns false debug false code const 20cancelablePromise 20 3D 20makeCancelable 0A 20 20new 20Promise r 20 3D 3E 20setTimeout 20 3D 3E 20alert 22we 20should 20not 20see 20this 22 2C 202000 0A 3B 0A 0AcancelablePromise 0A 20 20 promise 0A 20 20 then 20 3D 3E 20console log aresolved' 0A 20 20 catch reason 20 3D 3E 20console log 'isCanceled' 2C 20reason isCanceled 3B 0A 0AcancelablePromise cancel 3B 20 2F 2F 20Cancel 20the 20promise 0A 0Aconst 20makeCancelable 20 3D 20 promise 20 3D 3E 20 7B 0A 20 20let 20hasCanceled 20 3D 20false 3B 0A 0A 20 20const 20wrappedPromise 20 3D 20new 20Promise resolve 2C 20reject 20 3D 3E 20 7B 0A 20 20 20 20promise then val 20 3D 3E 0A 20 20 20 20 20 20hasCanceled 20 3F 20reject 7BisCanceled 3A 20true 7D 20 3A 20resolve val 0A 20 20 20 20 3B 0A 20 20 20 20promise catch error 20 3D 3E 0A 20 20 20 20 20 20hasCanceled 20 3F 20reject 7BisCanceled 3A 20true 7D 20 3A 20reject error 0A 20 20 20 20 3B 0A 20 20 7D 3B 0A 0A 20 20return 20 7B 0A 20 20 20 20promise 3A 20wrappedPromise 2C 0A 20 20 20 20cancel 20 7B 0A 20 20 20 20 20 20hasCanceled 20 3D 20true 3B 0A 20 20 20 20 7D 2C 0A 20 20 7D 3B 0A 7D 3B The blog post is even referenced from a StackOverflow answer that was given 21 points This is pretty ridiculous for a non working non sensical example code AFAIK other than using schemes that rely on Promise race with own limitations issues see here there is no way to cancel ES6 Promises AFAIK the Cancellable Promise ES Proposal had been withdrawn The right way to do Promise cancellation is with userland Promise implementations I would recommend Bluebird Promise library For details see,,"gaearon,aweary,gaearon,aweary,gaearon,aweary,gaearon",2017-05-29 01:01:51,2017-10-04 19:46:32
IS,RFC Should we be resilient to node normalize,Debate Should we support the node normalize case L77 L173 Summary We mostly supported this in Stack because we inserted comment nodes between everything This was important when we used innerHTML to generate the HTML on the client to preserve everything but it is not important anymore The new hydration is resilient to this However if this happens on an already active client tree we are not It is possible for consecutive text nodes to be merged into a single one if something above calls node normalize The whole subtree merges consecutive text nodes It is possible that extensions might do even more magic Context I think I have an idea for how we can do an automatic recovery phase for this that would not impact hot paths so it would not normally need to do anything However it would add a small but non trivial amount of code for an edge case that almost never happens It is also a bit awkward since it adds a very DOM specific case to the HostConfig API that every renderer will have to consider AFAIK we have not had any bugs related to this on FB with regard to extensions or anything else How do we find out if this breaks things outside of FB without just shipping a broken version,,"sebmarkbage,sebmarkbage,gaearon",2017-06-01 22:27:52,2017-10-04 19:49:58
IS,Feature request Warnings hook,Do you want to request a feature or report a bug I want to request a feature What is the current behavior Warning code is hardcoded to call fbjs lib warning This makes it hard to integrate warnings with tools As a workaround we could use webpack s resolve alias to alias fbjs lib warning into our fork which displays it on screen This use case is similar to Another use case is to integrate React warnings with our testing infrastructure This helps us to better see which warning belongs to which test image What is the expected behavior React allows library user to override the default warnings behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The workaround works in React 15 and should still work in React 16 as the flat bundles does var warning require 'fbjs lib warning' which means we can still hook into it for now This probably breaks when the flat bundles stopped doing var warning require 'fbjs lib warning',,"gaearon,gaearon,gaearon",2017-06-29 09:26:15,2017-10-04 20:05:47
IS,Input with type radio incorrectly trigger onChange handler,Bug If I put several input type radio with same name as in jsfiddle example below onChange handler triggered only once for individual input when mouse click on input happen Example Try to click on different radio inputs several times Next clicks has no console log output I expect trigger onChange every time when I click on non selected radio input Bug reproduces in several latest versions of React at least 15 6 0 and 15 6 1 My OS is Ubuntu I try in latest Chrome and latest Firefox,,"gaearon,jquense,gaearon,jquense,gaearon",2017-06-30 08:27:03,2017-10-04 20:06:56
IS,Add default property for ES2015 modules,Do you want to request a feature or report a bug Feature What is the current behavior Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 15 6 1 Chrome 59 OS X 10 12 5 Node 8 1 2 Does not work in previous versions since deprecation warning was added,,"aweary,aweary,gaearon,gaearon,gaearon",2017-07-03 17:35:57,2017-10-04 20:08:46
IS,React in CodePen not found it show only loading,Help the example in CodePen not working it show only loading,,gaearon,2017-07-15 22:57:07,2017-10-04 20:11:13
IS,Can we split off SVG property configs to a separate module,Instead of supporting svg directly if we require people to write then we could avoid sending down SVGDOMPropertyConfig and maybe other files unknown upfront It would be good to investigate the potential benefits here cc,,"sophiebits,aweary,gaearon,aweary,nhunzaker,trueadm,gaearon,trueadm,gaearon,gaearon",2017-07-18 17:39:32,2017-10-04 20:11:31
IS,fr allow refs on SFCs,Do you want to request a feature or report a bug feature What is the current behavior refs on SFC do not currently work What is the expected behavior taking a ref on a SFC should be the equivalent of calling findDOMNode and simply return the highest DOM node from the rendered output,,"iamdustan,gaearon,gaearon,gaearon",2017-07-20 07:21:42,2017-10-04 20:14:04
IS,Pass className through classnames module,Hi I usually am in the situation where I have to write code like this This seems simple but when you have more elements that need dynamic classes it gets tedious and pretty hard to read I propose the following thing When className attribute is evaluated how about running it through classnames before rendering the HTML This means that the className attribute should allow Array string string boolean and string types and would become much simpler to write code What do you guys think,,"gaearon,jquense,gaearon,maxdeviant,gaearon",2017-07-25 08:56:02,2017-10-04 20:18:31
IS,Wrong Each child should have a key prop warning with babel plugin transform react inline elements,Do you want to request a feature or report a bug Feature Bug What is the current behavior What is the expected behavior A more targeted warning either a problem with key props or a problem with string refs or both but clearly separated And also targeted to the correct element in this case an h1 instead of a div Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 0 0 beta 2,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-08-02 13:44:14,2017-10-04 20:23:48
IS,Better explanation when component is not imported,Do you want to request a feature or report a bug Feature What is the current behavior,,aweary,2017-08-04 12:46:39,2017-10-04 20:27:40
IS,Two steps Server Side Rendering,Do you want to request a feature or report a bug Feature What is the current behavior Imagine you have a component which triggers an api request on its componentWillMount method then it updates its internal state and you want to render the version of the component after this operation You have to call renderToString twice There are many ways to achieve this static methods on Component etc By the way they seem to be tricks Having a proper api would be better,,gaearon,2017-08-08 17:00:15,2017-10-04 20:38:26
IS,Events not registered inside shadow dom,Do you want to request a feature or report a bug Bug What is the current behavior When you render a react component inside a shadow DOM events will not be dispatched in react I e you do something like this but nothing happens Someone investigated this already got to the bottom of it and wrote a work around If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem Following the official docs What is the expected behavior Events should be dispatched even when the react app is rendered in a shadow dom Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React All browsers tested with react 15,,"jquense,aweary,gaearon",2017-08-09 08:31:07,2017-10-04 20:39:53
IS,Tutorial has nonsense sentence that is run on,Do you want to request a feature or report a bug bug What is the current behavior Note that onClick on the DOM button component has a special meaning to React but we could have called onClick prop in Square and handleClick in Board something else If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior there is no verb in handleClick in Board part and it is not part of first clause Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"gaearon,flarnie,flarnie,gaearon",2017-08-10 22:06:14,2017-10-04 20:45:39
IS,ReactDOM Docs Confusing Sentence,In we have the following statement ReactDOM render does not modify the container node only modifies the children of the container It may be possible to insert a component to an existing DOM node without overwriting the existing children I think that It may be possible to insert should be replaced with In the future it may be possible to insert Am I wrong,,"hnordt,flarnie,gaearon,sophiebits,gaearon,sophiebits",2017-08-11 03:23:45,2017-10-04 20:57:20
IS,Error with react perf Failed to execute 'measure' on 'Performance' The mark '1 unmount' does not exist,Do you want to request a feature or report a bug Bug What is the current behavior Hi When using react perf I am getting this error which seems to crash the render ReactDebugTool js 228 DOMException Failed to execute 'measure' on 'Performance' The mark '1 unmount' does not exist at markEnd webpack 226 21 at Object onUnmountComponent webpack 345 5 at eval webpack 48 40 at ReactServerRenderingTransaction perform webpack 143 20 at renderToStringImpl webpack 43 24 at renderToString webpack 73 10 If I modify this L299 try performance measure measurementName markName catch err console error err Then i get 2 3 errors per page refresh however the flame graph looks to be working If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior No error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React Chrome 60 0 3112 react 15 6 1 react dom 15 6 1,,gaearon,2017-08-12 23:50:46,2017-10-04 20:58:06
IS,componentDidCatch document decompose info parameter,Some quick googling did not show any explanation of the info parameter for componentDidCatch error info The only key in that object that I have seen so far is componentStack which is useful but is already composed If I want to do some custom rendering of that information I have to parse it I would love to see info componentStack become a more general info text string and then have componentStack be broken down to an array of frames Something like component createdBy,,"brandonbloom,bvaughn,brandonbloom,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,gaearon,gaearon",2017-08-15 16:48:17,2017-10-04 21:00:38
IS,Excessive duplicative variable assignments in CommonJS build,Followup from 10385 it looks like the CommonJS build is saving short variable name references to long property names however it does this in a bunch of places The net output is a larger build because the referenced names like IndeterminateComponent are duplicated quite a bit For example This duplicates a lot If you look in the CJS build something along the lines of a d HostNode shows up in like 10 places This is true of all of these tokens Here is a beautified version for reference,,"nhunzaker,gaearon",2017-08-16 12:30:16,2017-10-04 21:01:50
IS,Pattern for Parent Initiated fetch of Child data,For performance reasons I have a child element whose data is stored in its state and only its state instead of being passed up the hierarchal chain using callbacks passed in props There then comes a time where an action in the parent element dictates that I now need that data what is the correct pattern for fetching it in the child Do I use refs and call a child fetchData method via a saved reference Do I change a prop flag causing the child to call a prop callback with the data,,gaearon,2017-09-07 08:48:16,2017-10-04 21:06:49
IS,question state object and setState,Suppose if I have 100 objects and each maps to 100 different DOM components Which of the following coding practice helps react setState save work Practice 1,,jquense,2017-09-07 15:24:39,2017-10-04 21:07:07
IS,propTypes definition should have default value definition in itself,Do you want to request a feature or report a bug feature What is the current behavior Defining an optional type in propTypes for components make us define the defaultProps as well What is the expected behavior Set default value during propTypes definition if the defaultProps property is required internally it might be generated on fly based on the propTypes Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React N A Cheers,,gaearon,2017-09-20 23:41:55,2017-10-04 21:26:41
IS,Async render function,Since Fiber is here did you as React team even consider having render functions like What do you think about it,,gaearon,2017-09-27 12:08:18,2017-10-04 21:32:41
IS,Bug event isTrusted always true in onFocus event handler,Do you want to request a feature or report a bug Bug What is the current behavior When triggering focus on an element the onFocus handler receives event isTrusted true If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior event isTrusted to be false when focus is triggered programatically Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React So far I have reproduced in React 16 0 0 and 15 5 4 with Chrome 61 0 3163 100,,"gaearon,gaearon",2017-09-27 01:49:47,2017-10-04 22:17:21
IS,Programmatically filled input does not fire onchange event,Do you want to request a feature or report a bug Bug What is the current behavior React 15 6 0 generated input DOES NOT fire onchange event when programmatically filled DEMO What is the expected behavior React 15 5 4 generated input DOES fire onchange event when programmatically filled DEMO Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React The reported bug has been tested in Chrome 61 0 3163 100 and Safari 11 0 on macOS 10 13 Both experience the bug The bug was not present in React 15 5 4 My core goal is to create a browser bookmarklet that auto fills a form within my React app,,"gaearon,aweary,gaearon,aweary",2017-10-04 19:37:41,2017-10-04 22:18:03
PR,Optimize SFC initial mounting,To be clear SFCs already do not have lifecycle methods This PR splits the code path and skips polymorphic lookups like if inst componentDidMount so JS VMs can optimize things better,,"keyanzhang,keyanzhang,gaearon",2016-07-29 00:28:05,2017-10-04 23:03:27
PR,RFC Inline HTML rendering replaces dangerouslySetInnerHTML,This is just a proof of concept of 6253 to gauge interest it is a very shoddy implementation but can quite easily be fixed up if greenlit It relies on the same concept as ReactDOMTextComponent Basically the idea being to be able to render HTML without having a dedicated wrapping element and also deprecates the magic dangerouslySetInnerHTML Syntax is up for discussion but could be anything from i html i to i React createHTMLFragment i to i rawhtml rawhtml i etc Is this something we are interested in supporting PS It probably makes a lot of sense to introduce a callback as well which would provide the opening and closing comment node to the user so that you can interact with the rendered nodes in between just like ref This also allows you to render no HTML so that you then have free control over the children inside the open close comment You could even imagine that being the only feature we expose and what you render inside is up to you however SSR and simplicity would suffer EDIT We could also easily support an API which takes a list of nodes and appends them the same way would provide a neater escape hatch for some situations Suggested API React createHTMLFragment markup callback openingNode closingNode In this proof of concept PR it uses rawhtml html just for the sake of simplicity play with it here if you want you need to go to first and allow the invalid certificate,,"syranide,syranide,jimfb,syranide,syranide,sophiebits,milesj,syranide,syranide,sophiebits,milesj,syranide,milesj,gaearon",2016-07-27 11:52:58,2017-10-04 23:09:19
PR,RFC Proposal for ReactTestRenderer selector API,I have been following the discussion in 7148 and decided to submit a proposal for a selector API The methods that I have added to the TestComponent are,,"sophiebits,jquense,gaearon",2016-08-03 00:02:22,2017-10-04 23:10:00
PR,Returning an error if a PropType is passed to ReactPropTypes oneOf,I took where left off with to fix as that PR can not be merged anymore and is more than a month old if you meant to keep on working on please let me know and I will close this one The idea is to return a PropTypeError whenever one of ReactPropTypes is passed to ReactPropTypes oneOf The error message hints that the user might be meaning to use ReactPropTypes oneOfType instead 1 If createChainableTypeChecker is called with an expectedType we add the expectedType flag to the checkType function see 1 2 In createEnumTypeChecker validate if expectedValues i is of type function and it has the expectedType flag we know that a ReactPropTypes has been passed so we throw the error described above 3 As per if a generic function is passed to ReactPropTypes oneOf we improve the previous output to display Unexpected function and the function converted to string As a side note I noticed that if getPropType is called with undefined we get the following exception Cannot read property ' toStringTag' of undefined Is this expected 1 r68511156,,gaearon,2016-08-19 05:28:48,2017-10-04 23:11:08
PR,Process props with Symbol key 7552,Closes 7552 I'm not sure about testing this case in an environment without native Symbol Should I write separate it add a condition to it 'passes props with Symbol keys' or just ignore it,,"gaearon,aweary,gaearon",2016-08-24 12:40:04,2017-10-04 23:12:28
PR,Display which invalid type was returned,Fixes 7215,,"aweary,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,gaearon,aweary,gaearon,keyanzhang,keyanzhang,aweary,aweary,gaearon",2016-10-12 22:43:50,2017-10-04 23:16:59
PR,NFC Fiber Logging protips,These are the log points that I use for most debugging purposes when running unit tests with ReactNoop It is useful to have the tree when a commit happens and when a set state happens It is also useful to see the progression through the tree Like div and div You can attach additional information to these nodes depending on what you are debugging,,"sebmarkbage,sebmarkbage,gaearon",2016-10-18 21:34:56,2017-10-04 23:17:28
PR,Support for string and callback refs in shallow rendering,Since testing is horrible without refs IMHO I made this I chose to have elements instead of instances to avoid rendering recursively all nodes and to allow the same way to access it I think navigating in shallow instances if necessary since it is shallow rendering could easily fit in testing library like enzyme I actually started trying to solve the need of refs in shallow rendering in enzyme since it is a smaller learning curve for contributing than with react but I could not find a way to include callback refs in the solution With this it will be pretty simple So here is what this PR allow For string refs,,"aweary,gaearon",2016-11-16 20:13:41,2017-10-04 23:18:49
PR,WIP Delete Stack Reconciler,The point of this is to see what dependencies we have in unit tests or otherwise in the stack folder that should move out,,"sebmarkbage,gaearon,gaearon",2016-11-24 18:37:46,2017-10-04 23:19:12
PR,Add component information to the contentEditable warning Close 8497,Inside Stack renderer the additional information is the component is owner is name or in case where there is no getName function the component is owner is tag Inside Fiber renderer Component is name if exists,,"bvaughn,bvaughn,gaearon",2016-12-06 10:08:51,2017-10-04 23:21:06
PR,Fiber Not for commit Proof of concept Promise as element type,For fun here is a proof of concept based on an idea by If a promise is passed to React createElement on initial mount React waits for the promise to resolve to a React element type Meanwhile it bails out and continues rendering elsewhere Once the promise resolves React renders using the resolved element type Subsequent renders are not deferred and behave just like a regular element Such a feature could be useful alongside dynamic import currently stage 3 Again this is just an experiment and only implemented in Fiber It may never see public release,,"acdlite,acdlite,acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,sebmarkbage,acdlite,acdlite,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,sebmarkbage,acdlite,acdlite,sebmarkbage,gaearon",2016-12-17 23:19:23,2017-10-04 23:25:18
PR,WIP Fiber Make Fiber a disjoint union based on the tag,This will help us type things more precisely I have already found a few issues around refs Unfortunately this currently causes an infinite loop in Flow so we can not land it It is also far from complete More work is needed,,"sebmarkbage,gaearon,gaearon",2016-12-09 23:17:08,2017-10-04 23:25:41
PR,Add DEV mode warning,Just a quick patch to get the discussion started The warning reads My suggestion is to create a page redirection from to a place where some notes are collected around How to get rid of the warning What the differences are between dev mode and prod mode Tips for benchmark authors and perhaps an example of what is considered a useful benchmark Perhaps useful links to articles like this one localvoid how to win in web framework benchmarks 8bc31af76ce7 defwxx2re,,"aweary,aweary,aweary,sebmarkbage,sebmarkbage,aweary,gaearon,gaearon",2017-01-13 22:36:01,2017-10-04 23:28:41
PR,Fiber Fix failing test Should increase refs with an increase in divs,These test components defined outside of the test ClickCounter GeneralContainerComponent TestRefsComponent are constructed with a refs property referring to the initial value of require 'emptyObject' The module cache is reset before each test During the test an equality comparison is done L104 between the components refs property the initial value of require 'emptyObject' and the current value of require 'emptyObject' This comparison incorrectly fails because the values are now different due to resetting the module cache Moving these component definitions into the test itself fixes this issue,,"gaearon,gaearon",2017-01-14 11:42:44,2017-10-04 23:30:36
PR,Add createComponentMock option to test renderer,This PR is a followup to 8931 and adds a createComponentMock option to the test renderer when using fiber The function is expected to return the correct type mocked or not for the provided fiber This gets called on functional components and class components but not hosts I have added corresponding tests that show how one could use this property to emulate shallow rendering as well as what I believe is an even more practical usage simple mocking of components that have implementations difficult to test The implementation of this uses an additional optional mockComponent function that is added to the HostConfig when creating the reconciler This required that we pass the host config into a couple of additional places in the fiber codebase There are still some outstanding questions 1 Do we want to allow createComponentMock to return null in the case of not mocking or keep it as is where it just returns type 2 Is mockComponent the right name to use 3 createComponentMock gets called with a Fiber Do we instead want to only pass it type and tag or some transformation of tag Right now user land code will have to know if the mock should be a functional component or a class component Alternatively we could have two methods one for functional component mocking and another for class component mocking cc,,"lelandrichardson,iamdustan,iamdustan,acdlite,acdlite,lelandrichardson,acdlite,sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,acdlite,bvaughn,gaearon,acdlite,lelandrichardson,acdlite,lelandrichardson,acdlite,lelandrichardson,trueadm,sebmarkbage,sebmarkbage,lelandrichardson,lelandrichardson,sebmarkbage,bvaughn,gaearon",2017-02-12 22:52:43,2017-10-04 23:32:00
PR,WIP Bugfix for invokeGuardedCallback,Intended to fix Changes invokeGuardedCallback to use an onError callback instead of the return value Avoids having to do a type check on the return value so it works with throw null Test plan 9092 is fixed Devtools still break on uncaught exceptions Do another browser compatibility check Some do not attach an error object to the error event,,"acdlite,gaearon,gaearon",2017-03-17 17:32:31,2017-10-04 23:32:31
PR,Throw early on missing owner,I have not really experimented much with it but curious what you think The error we throw right now is a bit cryptic because it happens later during mounting I thought it would make sense to throw it as early as possible instead so that can see the JS stack for the specific element that has a bad owner This might even help find the offending library that shipped a duplicate copy of React,,"gaearon,gaearon",2017-03-24 19:58:59,2017-10-04 23:32:42
PR,WIP convert public React core properties to strings so uglify gcc can mangle,Ideally we want to be able to leverage stronger minifcations optimizations in our tooling so we can provide even smaller bundles Tools such as Uglify and Google Closure Compiler can do this when set to mangle internal properties However this can break things when properties are expected to be consumed in the wild public or by contract from another module The simplest way to deal with this limitation is to manually specify that the property should not be altered when it is a string literal Whitelisting is also an option however that has some limitations and can result in properties that are not public not being mangled simply because of them being a common name This PR is a WIP,,"trueadm,sebmarkbage,sophiebits,trueadm,gaearon",2017-03-30 17:23:44,2017-10-04 23:33:27
PR,WIP Improve build is handling of externals better,This is a follow on from comments in this PR Currently the build can be quite hard to reason with given un used externals do not give errors This PR adds an exclusion list and forces unused external modules to throw an error prompting that something needs to change This is still a WIP as I'm not sure this is 100 the best route for this still,,"trueadm,gaearon",2017-06-05 14:25:50,2017-10-04 23:39:11
PR,Not for Merge Just Yet Do not track Fiber tests,This is built on assumption all Fiber tests are passing including warnings which will happen soon I have removed all tests lists since presumably they all pass and change npm test to test Fiber by default You can opt into testing Stack by running it with REACT DOM JEST USE STACK true Since we do not need to keep a list anymore I deleted a separate Circle task and replaced it with a normal Jest call with this environment variable If some code change breaks Stack it will still fail the CI The expectDev convention no longer has special meaning but I would like to keep it and in the future repurpose it for testing PROD flat bundles with our unit tests,,gaearon,2017-06-06 22:48:00,2017-10-04 23:39:21
PR,WIP Convert isomorphic React to ES2015 modules,Still very much a work in progress TODO x Get tests passing x Get build working Get rid of default named duplication Can we avoid forking shared modules Add tests for imports to dev expression with codes and object assign transforms Vendor PooledClass into RN Use public API in tests diff 15dbb53e64453779f0339384282c7bbeR31,,"trueadm,gaearon",2017-06-07 12:55:41,2017-10-04 23:39:37
PR,Delete Stack ReactDOMServer,We can not do this yet because the new DOMServer does not pass all warning tests When it does we can merge this,,"gaearon,gaearon",2017-06-08 19:15:35,2017-10-04 23:39:51
PR,Remove further shims from ReactDOM FBEntry,This removes further forward module shims from the ReactDOM FB Entry point pending downstream changes on FB www Note I pushed changes from an existing branch move out react dom shims so all commits can be historically tracked in relation to the changes to ReactDOM shims,,"trueadm,gaearon,gaearon,trueadm,gaearon",2017-06-19 13:23:35,2017-10-04 23:40:27
PR,Add highWaterMark option to ReactDOMNodeStream,This is a small follow on to the addition of ReactDOMNodeStream allowing users of the API to specify how much memory the stream should use to buffer As explained in the Node stream buffering documentation stream buffering users of Readable streams can pass in a highWaterMark which indicates how many bytes the stream should buffer before pausing the stream This allows users of the stream to tune how much memory they use depending on their particular use case highWaterMark defaults to 16K but can be set to any number The code part of this is pretty simple renderToStream and renderToStaticStream now just take in an optional options object with a highWaterMark property and that value is passed along to the Readable constructor All the code for that is in ReactDOMNodeStreamRenderer js The rest of the PR is documentation and a few simple tests to make sure highWaterMark is being used,,"aickin,aweary,aickin,aickin,sebmarkbage,aickin,sebmarkbage,aickin,sebmarkbage",2017-06-25 17:37:21,2017-10-04 23:40:49
PR,Remove functions marked as undocumented and unused,Hey saw you added these TODOs in this commit about 8 months ago Figured I would open a PR if this can now be completed,,"gaearon,aweary,gaearon,aweary,aweary,gaearon",2017-07-03 02:09:42,2017-10-04 23:41:30
PR,The Web Optimization Project has optimized your repository,Web Optimization Project Beta The Web Optimization Project is a project that will automatically optimizes files in git repositories by compressing them losslessly This project was created by Devedse in an effort to save the world smirk If you have any questions feel free to create an issue or join the gitter chat Join the chat at Optimization The Web Optimization Project optimized this repository All optimizations compressions are done losslessly and no quality data is lost This is also verified afterwards by the Wop so you can be sure that your images are exactly the same Commits Commit 1 Information Value Version 0 0 4 0 Support file extension PNG JPG JPEG GIF BMP Statistics Stats Value Total size before optimization 21MB Total size after optimization 19 2MB Optimized size compared to old 91 23 Total bytes saved 1 8MB Time taken for optimization 25 4 Hours Files optimized in this repository FileName Original Size Optimized Size Bytes Saved Duration Successful external png 189B 189B 0B 9 Seconds True external 2x png 134B 134B 0B 7 Seconds True logo og png 10 5KB 10 5KB 0B 1 2 Minutes True logo small png 4 3KB 4 3KB 0B 8 Seconds True logo small 2x png 12 5KB 12 5KB 0B 11 Seconds True logo small gray png 1 8KB 1 8KB 0B 7 Seconds True logo small gray 2x png 4 2KB 4 2KB 0B 8 Seconds True noise png 22 1KB 22 1KB 0B 9 Seconds True oss logo png 3 9KB 3 9KB 0B 11 Seconds True search png 244B 244B 0B 7 Seconds True animal sounds jpg 48 1KB 48 1KB 0B 2 Seconds True chatapp png 21 6KB 21 6KB 0B 43 Seconds True cra better output png 146 4KB 146 4KB 0B 1 4 Minutes True cra dynamic import gif 1 7MB 1 7MB 0B 35 Seconds False cra jest search gif 906 9KB 906 9KB 0B 9 Seconds False cra pwa png 45 4KB 45 4KB 0B 2 4 Minutes True cra runtime error gif 1 7MB 1 7MB 0B 31 Seconds False cra update exports gif 1 4MB 1 4MB 0B 29 Seconds False devtools full gif 1 3MB 479KB 899 9KB 24 Seconds True devtools search gif 929 2KB 929 2KB 0B 50 Seconds True devtools side pane gif 42 6KB 42 6KB 0B 2 Seconds False devtools tree view png 71 2KB 71 2KB 0B 9 7 Hours True dog tutorial png 40 5KB 40 5KB 0B 2 4 Minutes True error boundaries sta png 35 8KB 35 8KB 0B 13 6 Hours True error boundaries sta png 34 9KB 34 9KB 0B 2 Minutes True first look png 27 6KB 27 6KB 0B 34 Seconds True flux chart png 41 6KB 41 6KB 0B 1 8 Minutes True flux diagram png 130 1KB 130 1KB 0B 6 8 Minutes True genesis skeleton png 142 6KB 142 6KB 0B 28 Seconds True gpu cursor move gif 789 6KB 308 2KB 481 4KB 3 Seconds True guess filter jpg 37 7KB 37 7KB 0B 2 Seconds True hacker news react na png 102 8KB 102 8KB 0B 56 Seconds True jsx compiler png 13 7KB 13 7KB 0B 1 5 Minutes True kendoui png 22KB 22KB 0B 36 Seconds True khan academy editor png 10 8KB 10 8KB 0B 1 Second False landoflisp png 108 7KB 108 7KB 0B 30 Seconds True lights out png 3 3KB 3 3KB 0B 29 Seconds True makona editor png 23 5KB 23 5KB 0B 47 Seconds True markdown refactor png 5 3KB 5 3KB 0B 39 Seconds True modus create gif 992 3KB 965 6KB 26 7KB 8 Seconds True monkeys gif 532KB 177 6KB 354 4KB 4 Seconds True ngreact png 54 4KB 54 4KB 0B 2 Minutes True om backbone png 126 5KB 126 5KB 0B 1 2 Minutes True parse react jpg 47 9KB 47 9KB 0B 1 Second True polarr jpg 66KB 66KB 0B 1 Second True propeller logo png 1 3KB 1 3KB 0B 11 Seconds True property finder png 60 9KB 60 9KB 0B 51 Seconds True quiztime png 18 7KB 18 7KB 0B 1 4 Minutes True react 50k mock full jpg 126 8KB 126 8KB 0B 3 Seconds True react 50k mock jpg 83KB 83KB 0B 2 Seconds True react 50k tshirt jpg 633 4KB 633 4KB 0B 3 Seconds True react browserify gul jpg 23 1KB 23 1KB 0B 1 Second True react dev tools jpg 69 7KB 69 7KB 0B 1 Second True react diff tree png 26 8KB 26 8KB 0B 52 Seconds True react draggable png 10 2KB 10 2KB 0B 1 1 Minutes True react hackathon jpg 48 8KB 48 8KB 0B 2 Seconds True react page png 19 9KB 19 9KB 0B 28 Seconds True react perf chrome ti png 68 4KB 68 4KB 0B 1 3 Minutes True react php png 35 7KB 35 7KB 0B 53 Seconds True react svg fbp png 57 2KB 57 2KB 0B 1 2 Minutes True reactive bookmarklet png 40 8KB 40 8KB 0B 1 5 Minutes True reflux flux png 2KB 2KB 0B 21 Seconds True relay visual archite png 129KB 129KB 0B 9 Minutes True resistance calculato png 44 2KB 44 1KB 47B 1 3 Minutes True skills matter png 120 3KB 120 3KB 0B 1 7 Minutes True snake png 6 8KB 6 8KB 0B 1 Minute False steve reverse gif 5 4MB 5 4MB 0B 1 6 Minutes True sweet jsx png 18 4KB 18 4KB 0B 1 2 Minutes True tcomb react native png 24 3KB 24 3KB 0B 1 8 Minutes True thinking in react co png 18 6KB 18 6KB 0B 37 Seconds True thinking in react mo png 17KB 17KB 6B 30 Seconds True todomvc png 21 8KB 21 8KB 0B 1 8 Minutes True turboreact png 3 4KB 3 4KB 3B 23 Seconds True tutsplus png 28 8KB 28 8KB 0B 1 2 Minutes True unite png 13 3KB 13 3KB 0B 27 Seconds True versioning 1 png 22 2KB 8KB 14 3KB 41 Seconds True versioning 2 png 23 1KB 9 1KB 14KB 1 2 Minutes True versioning 3 png 44 1KB 28 8KB 15 3KB 1 4 Minutes True versioning 4 png 47 9KB 31 8KB 16 1KB 2 4 Minutes True versioning 5 png 31 5KB 12 7KB 18 8KB 1 4 Minutes True versioning 6 png 44 8KB 27 7KB 17 1KB 1 9 Minutes True versioning poll png 48 2KB 48 2KB 0B 2 9 Minutes True weather png 6 8KB 6 8KB 0B 17 Seconds True wolfenstein react png 110 9KB 110 8KB 104B 1 2 Minutes True xoxo2013 png 168 3KB 168 3KB 0B 1 4 Minutes True xreact png 3 2KB 3 2KB 0B 26 Seconds True compiled successfull png 50KB 50KB 0B 2 7 Minutes True compiled with warnin png 135 1KB 134 4KB 761B 3 6 Minutes True created folder png 136KB 136KB 0B 3 9 Minutes True failed to compile png 136 5KB 135 7KB 856B 3 7 Minutes True npm run build png 122 1KB 122 1KB 0B 3 5 Minutes True relay architecture png 55 1KB 55 1KB 0B 8 1 Minutes True relay containers dat png 27 3KB 27 3KB 0B 4 Minutes True relay containers png 13 9KB 13 9KB 0B 2 5 Minutes True sample newsfeed png 56 9KB 56 9KB 0B 3 1 Minutes True cdn cors header png 42 5KB 42 5KB 0B 2 Minutes True codewinds 004 png 2 3KB 2 3KB 0B 10 Seconds True devtools dev png 51 6KB 51 6KB 0B 53 Seconds True devtools prod png 27 1KB 27 1KB 0B 39 Seconds True granular dom updates gif 124 2KB 122 9KB 1 3KB 21 Seconds True implementation notes png 51KB 51KB 0B 2 Minutes True javascript jabber png 1 6KB 1 6KB 0B 10 Seconds True keyboard focus png 1 7KB 1 7KB 0B 10 Seconds True perf dom png 7 3KB 7 3KB 0B 14 Seconds True perf exclusive png 9 3KB 9 3KB 0B 15 Seconds True perf inclusive png 12 2KB 12 2KB 0B 23 Seconds True perf wasted png 16KB 16KB 0B 22 Seconds True react devtools state gif 567 3KB 567 3KB 0B 9 Seconds False should component upd png 23 9KB 23 9KB 0B 1 2 Minutes True thinking in react ta png 14 2KB 10 7KB 3 5KB 22 Seconds True devtools png 23 4KB 23 4KB 0B 1 Minute True tictac empty png 10 9KB 1 8KB 9 1KB 1 8 Minutes True tictac numbers png 16 4KB 4KB 12 4KB 28 Seconds True grayarrow gif 111B 111B 0B 1 Second True logo png 218B 218B 0B 7 Seconds True Commit 2 Information Value Version 0 0 5 0 Support file extension PNG JPG JPEG GIF BMP Statistics Stats Value Total size before optimization 19 2MB Total size after optimization 19 1MB Optimized size compared to old 99 93 Total bytes saved 13 4KB Time taken for optimization 2 3 Hours Files optimized in this repository FileName Original Size Optimized Size Bytes Saved Duration Successful external png 189B 189B 0B 9 Seconds True external 2x png 134B 134B 0B 7 Seconds True logo og png 10 5KB 10 5KB 0B 1 6 Minutes False logo small png 4 3KB 4 3KB 0B 15 Seconds True logo small 2x png 12 5KB 12 5KB 0B 21 Seconds True logo small gray png 1 8KB 1 8KB 0B 9 Seconds True logo small gray 2x png 4 2KB 4 2KB 0B 8 Seconds True noise png 22 1KB 22 1KB 0B 16 Seconds True oss logo png 3 9KB 3 9KB 0B 48 Seconds True search png 244B 244B 0B 12 Seconds True animal sounds jpg 48 1KB 48 1KB 0B 5 Seconds True chatapp png 21 6KB 21 6KB 0B 1 3 Minutes True cra better output png 146 4KB 146 4KB 0B 3 2 Minutes True cra dynamic import gif 1 7MB 1 7MB 0B 1 9 Minutes False cra jest search gif 906 9KB 906 9KB 0B 14 Seconds False cra pwa png 45 4KB 45 4KB 0B 3 2 Minutes True cra runtime error gif 1 7MB 1 7MB 0B 51 Seconds False cra update exports gif 1 4MB 1 4MB 0B 1 2 Minutes False devtools full gif 479KB 479KB 0B 36 Seconds True devtools search gif 929 2KB 929 2KB 0B 1 4 Minutes True devtools side pane gif 42 6KB 29 3KB 13 3KB 6 Seconds True devtools tree view png 71 2KB 71 2KB 0B 1 6 Minutes True dog tutorial png 40 5KB 40 5KB 0B 1 4 Minutes True error boundaries sta png 35 8KB 35 8KB 0B 2 9 Minutes True error boundaries sta png 34 9KB 34 9KB 0B 1 9 Minutes True first look png 27 6KB 27 6KB 0B 37 Seconds True flux chart png 41 6KB 41 6KB 0B 2 1 Minutes True flux diagram png 130 1KB 130 1KB 0B 7 4 Minutes True genesis skeleton png 142 6KB 142 6KB 0B 31 Seconds True gpu cursor move gif 308 2KB 308 2KB 0B 4 Seconds True guess filter jpg 37 7KB 37 7KB 0B 3 Seconds True hacker news react na png 102 8KB 102 8KB 0B 1 Minute True jsx compiler png 13 7KB 13 7KB 0B 50 Seconds True kendoui png 22KB 22KB 0B 1 5 Minutes True khan academy editor png 10 8KB 10 8KB 0B 2 Seconds False landoflisp png 108 7KB 108 7KB 0B 30 Seconds True lights out png 3 3KB 3 3KB 0B 32 Seconds True makona editor png 23 5KB 23 5KB 0B 50 Seconds True markdown refactor png 5 3KB 5 3KB 0B 44 Seconds True modus create gif 965 6KB 965 6KB 21B 22 Seconds True monkeys gif 177 6KB 177 6KB 8B 8 Seconds True ngreact png 54 4KB 54 4KB 0B 1 7 Minutes True om backbone png 126 5KB 126 5KB 0B 1 Minute True parse react jpg 47 9KB 47 9KB 0B 1 Second True polarr jpg 66KB 66KB 0B 2 Seconds True propeller logo png 1 3KB 1 3KB 0B 11 Seconds True property finder png 60 9KB 60 9KB 0B 49 Seconds True quiztime png 18 7KB 18 7KB 0B 1 9 Minutes True react 50k mock full jpg 126 8KB 126 8KB 0B 3 Seconds True react 50k mock jpg 83KB 83KB 0B 2 Seconds True react 50k tshirt jpg 633 4KB 633 4KB 0B 4 Seconds True react browserify gul jpg 23 1KB 23 1KB 0B 2 Seconds True react dev tools jpg 69 7KB 69 7KB 0B 2 Seconds True react diff tree png 26 8KB 26 8KB 0B 46 Seconds True react draggable png 10 2KB 10 2KB 0B 1 4 Minutes True react hackathon jpg 48 8KB 48 8KB 0B 2 Seconds True react page png 19 9KB 19 9KB 0B 30 Seconds True react perf chrome ti png 68 4KB 68 4KB 0B 2 Minutes True react php png 35 7KB 35 7KB 0B 50 Seconds True react svg fbp png 57 2KB 57 2KB 0B 1 4 Minutes True reactive bookmarklet png 40 8KB 40 8KB 0B 39 Seconds True reflux flux png 2KB 2KB 0B 23 Seconds True relay visual archite png 129KB 129KB 0B 9 6 Minutes True resistance calculato png 44 1KB 44 1KB 0B 1 3 Minutes True skills matter png 120 3KB 120 3KB 0B 1 5 Minutes True snake png 6 8KB 6 8KB 0B 41 Seconds False steve reverse gif 5 4MB 5 4MB 0B 35 Seconds True sweet jsx png 18 4KB 18 4KB 0B 1 2 Minutes True tcomb react native png 24 3KB 24 3KB 0B 2 1 Minutes True thinking in react co png 18 6KB 18 6KB 0B 37 Seconds True thinking in react mo png 17KB 17KB 0B 30 Seconds True todomvc png 21 8KB 21 8KB 0B 2 2 Minutes True turboreact png 3 4KB 3 4KB 0B 22 Seconds False tutsplus png 28 8KB 28 8KB 0B 1 2 Minutes True unite png 13 3KB 13 3KB 0B 31 Seconds True versioning 1 png 8KB 8KB 0B 33 Seconds False versioning 2 png 9 1KB 9 1KB 0B 41 Seconds True versioning 3 png 28 8KB 28 8KB 0B 1 3 Minutes True versioning 4 png 31 8KB 31 8KB 0B 1 7 Minutes True versioning 5 png 12 7KB 12 7KB 0B 57 Seconds True versioning 6 png 27 7KB 27 7KB 0B 1 4 Minutes True versioning poll png 48 2KB 48 2KB 0B 2 7 Minutes True weather png 6 8KB 6 8KB 0B 17 Seconds True wolfenstein react png 110 8KB 110 8KB 0B 1 1 Minutes True xoxo2013 png 168 3KB 168 3KB 0B 1 3 Minutes True xreact png 3 2KB 3 2KB 0B 15 Seconds True compiled successfull png 50KB 50KB 0B 3 Minutes True compiled with warnin png 134 4KB 134 4KB 0B 3 7 Minutes True created folder png 136KB 136KB 0B 3 5 Minutes True failed to compile png 135 7KB 135 7KB 0B 3 5 Minutes True npm run build png 122 1KB 122 1KB 0B 3 4 Minutes True relay architecture png 55 1KB 55 1KB 0B 8 7 Minutes True relay containers dat png 27 3KB 27 3KB 0B 4 1 Minutes True relay containers png 13 9KB 13 9KB 0B 2 7 Minutes True sample newsfeed png 56 9KB 56 9KB 0B 3 2 Minutes True cdn cors header png 42 5KB 42 5KB 0B 1 5 Minutes True codewinds 004 png 2 3KB 2 3KB 0B 10 Seconds True devtools dev png 51 6KB 51 6KB 0B 46 Seconds True devtools prod png 27 1KB 27 1KB 0B 33 Seconds True granular dom updates gif 122 9KB 122 9KB 0B 3 Seconds True implementation notes png 51KB 51KB 0B 2 8 Minutes True javascript jabber png 1 6KB 1 6KB 0B 10 Seconds True keyboard focus png 1 7KB 1 7KB 0B 11 Seconds True perf dom png 7 3KB 7 3KB 0B 15 Seconds True perf exclusive png 9 3KB 9 3KB 0B 16 Seconds True perf inclusive png 12 2KB 12 2KB 0B 23 Seconds True perf wasted png 16KB 16KB 0B 23 Seconds True react devtools state gif 567 3KB 567 3KB 0B 13 Seconds False should component upd png 23 9KB 23 9KB 0B 1 2 Minutes True thinking in react ta png 10 7KB 10 7KB 0B 21 Seconds False devtools png 23 4KB 23 4KB 0B 59 Seconds True tictac empty png 1 8KB 1 8KB 0B 43 Seconds False tictac numbers png 4KB 4KB 0B 23 Seconds False grayarrow gif 111B 111B 0B 1 Second True logo png 218B 218B 0B 7 Seconds True,,"sophiebits,gaearon",2017-08-15 20:53:35,2017-10-04 23:42:32
PR,WIP Reconciler packaging,For 9103 Nothing to see here yet Just pushing up my prodding about,,"iamdustan,acdlite,iamdustan,gaearon",2017-09-07 18:20:29,2017-10-04 23:43:12
PR,Continue render on null reference error in IE,In IE11 my application is receiving the Unable to get property ' reactInternalInstance nn565zf8wm9c' of undefined or null reference error The findParent function is passing a null container which is being used as an object with a key of reactInternalInstance in the ReactDOMComponentTree file Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,"gaearon,gaearon,gaearon,gaearon",2017-09-08 18:28:01,2017-10-04 23:44:17
PR,Fix SyntheticEvent constructor comments,Some comments describing SyntheticEvent seem incorrect Shall we fix them,,"yenshih,gaearon",2017-10-01 15:57:32,2017-10-04 23:45:40
IS,After server render missing nodes are not re created with correct className,Possible regression it looks like re creating missing nodes is not working correctly in React 16 The nodes get re created but one of them will copy the className from a sibling node instead of getting re created with the correct className Here is a pen demonstrating the issue It works just fine in React 15 JSX img width 364 alt screen shot 2017 10 04 at 10 00 33 pm src Rendered HTML img width 271 alt screen shot 2017 10 04 at 10 01 19 pm src,,gaearon,2017-10-05 05:02:27,2017-10-05 07:31:48
IS,onInput is not firing on contentEditable div in IE11,When using onInput event on contentEditable div the event is not being fired on IE11 It does work on Chrome 51 0 2704 103 64 bit and Microsoft Edge It also reproduces on React 0 14 so it does not seem to be a regression See it being reproduced here Maybe related to 4051,,gaearon,2016-07-14 12:49:53,2017-10-05 13:10:28
PR,Add production bundles for Test and Shallow renderers,Per discussion in adds bundles for production versions of test and shallow renderer Tested by building and running Node REPL with production env and doing a basic sanity check,,"gaearon,gaearon,gaearon,gaearon",2017-10-05 14:07:34,2017-10-05 14:26:53
IS,Production Check in react test renderer,When upgrading to 16 0 0 from 15 6 1 react test renderer started failing on my tests with the message test renderer is not available in production mode I have in fact been running unit tests using this renderer during my production build I'm trying to understand why was this restriction introduced I saw the change was made in 9514 but could not find any explanation on the pull request or the documentation as to why production mode is now disallowed for this renderer Thanks Alex,,"gaearon,iamdustan,gaearon,gaearon,aweary,gaearon",2017-09-28 20:34:07,2017-10-05 14:27:12
IS,Using setState inside a function as child component generates a warning about functions not being valid children,Do you want to request a feature or report a bug Reporting a bug What is the current behavior Context React Native app but the error is not related to the renderer I'm using a handcrafted Fetch path api route render this renderChildren component which fetches data and passes it to a ''function as child component which is rendered However when using setState to save the call result I get a pretty interesting error as you can see img width 418 alt screenshot of the code leading to the error src gives you img width 418 alt screenshot of the error src If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 I tried to remove all the business logic and reproduce the error from my React Native app Here is a CodeSandbox which fully reproduce it What is the expected behavior I expected not to have this error Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React From what I know this error occurs on any React renderer got it on React Native in the first place and started the project with React 15 5 Related issues Might be related to 11081 11086 Ping,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon",2017-10-05 14:58:10,2017-10-05 16:20:03
IS,Reconciler is gone,Question I know this is intentional but how is one able to track the index of new removed node Are you going to provide any other API for this This is important for being able to integrate correctly with third party code for example PIXI js and Three js have addChild removeChild addChildAt APIs and so it is important to be able to tell where the node was before I can imagine something like this could be beneficial even for terminal UI and native UI To illustrate what I mean and then any new children should be appended with addChild and or removed with removeChild or preferrably with removeChildAt React 16,,"iamdustan,gaearon",2017-10-05 16:26:52,2017-10-05 17:24:38
IS,Returning plain string from component renders collapsed text nodes on server,Observed this on react 16 0 0 beta 5 This renders as div data reactroot a bc div If you try to hydrate this you will get the error Text content did not match Server bc Client b,,"gaearon,gaearon",2017-09-02 22:53:32,2017-10-05 19:05:00
PR,Adjacent text nodes in SSR should have comments between them despite components,This fixes See individual commits and test cases I added,,"gaearon,sebmarkbage,gaearon",2017-10-05 13:04:53,2017-10-05 19:05:01
IS,SSR ReactDOM client and server handling newlines differently causing mismatch warnings,Bug report I noticed a Warning Text content did not match warning on certain pages of my isomorphic React app using React and ReactDOM 16 0 0 After boiling it down to a simple test case it seems that different kinds of newlines are handled differently some failing to match If I do let test 'foo nbar' div test div Everything is fine no mismatch error and the words are separated in the browser However if I do let test 'foo rbar' I get This is a Node Express app on Node 8 4 0 Browser is macOS Chrome 61 0 3163 100 Workaround Preprocess any text that is user uploaded content to normalize the newlines,,"syranide,syranide,gaearon",2017-10-05 00:58:59,2017-10-05 19:59:44
PR,Ignore CR LF differences when warning about markup mismatch,Fixes According to the spec preprocessing the input stream HTML parser turns r n or lone r into n Since we compare JS app string which might have r with the representation parsed from HTML which can not we have a false positive text mismatch warning I am solving this by adding a second check It is only activated when we have a mismatch so it only penalizes users with mismatching markup or users with r in content s I opted not to patch up the markup when the only difference is r normalization This is because we never did that before and nobody complained So it is probably unobservable to the user anyway even though it is observable from the DOM you can not have r by setting innerHTML or parsing but you can if you createTextNode s with it directly s s An alternative could be to always normalize r when creating text nodes and patch up markup if we encounter it This would also make the behavior consistent between innerHTML and createTextNode path on the client side s s It seems like we can always do the latter if we want to but the former is an unobtrusive fix that can be applied now s Updated it to just ignore the warning but still patch up Production logic does not change now Later updated to normalize both server and client values before emitting the warning I started stripping both null and replacement character browser sometimes turns null into it since that is the only other corner case I know,,"gaearon,sebmarkbage,gaearon,vjeux,gaearon,gaearon,syranide,gaearon,syranide,gaearon",2017-10-05 17:01:26,2017-10-05 19:59:44
IS,Document the process for deprecating an API in React,Split out from what is the process for making that decision how do we communicate it before and during the release how do we support folks updating their syntax what should be included in a deprecation warning,,"flarnie,gaearon,flarnie",2017-06-27 23:45:31,2017-10-05 20:59:58
PR,RT Minor clean up,Currently we just naively serialize all the props We need to exclude children from the serialized props This adds some place holder logic for event listeners Not sure what it will actually be but at least something will show up there instead of being ignored,,"sebmarkbage,bvaughn,sebmarkbage,bvaughn,sebmarkbage,bvaughn",2017-10-05 19:24:31,2017-10-05 22:32:08
IS,React 16 client side render does not update DOM is style that comes from SSR,Do you want to request a feature or report a bug bug What is the current behavior React 16 client side render have a problem it can not update the DOM is style but it can update the prop More detail on repo below If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template for React 16 template for React 15 I created a repo for this What is the expected behavior Update DOM is style correctly Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React You are using Chrome Dev 61 0 3163 100 on OS X El Capitan 10 11 Mozilla 5 0 Macintosh Intel Mac OS X 10 11 6 AppleWebKit 537 36 KHTML like Gecko Chrome 61 0 3163 100 Safari 537 36 React 16 0 0 It does work in previou version like 15 6 2,,"gaearon,gaearon,gaearon",2017-10-06 07:02:01,2017-10-06 10:00:17
IS,Add topics to categorize React repository and make it more discoverable,Do you want to request a feature or report a bug Feature What is the current behavior There has no topics for this repo If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Other popular frameworks Angular Vue is Github page have topics Though React is a really popular project but would not it better to add topics such as react javascript frontend to make it more discoverable Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,"aweary,gaearon,zpao,gaearon",2017-08-25 06:10:24,2017-10-06 10:01:29
PR,Use indexOf instead of includes in RangeKeyboardFixture,Older browsers do not have includes I thought about adding the polyfill but indexOf is simple enough This allows us to test the range input change event test fixture in IE10 11 and older Chrome Safari Firefox Fixes,,"nhunzaker,nhunzaker",2017-10-06 11:58:10,2017-10-06 14:45:58
PR,Docs for Error Boundaries,Hey Changed blog post about error boundaries into doc format,,"bvaughn,bvaughn",2017-10-05 18:01:26,2017-10-06 16:09:54
PR,fix link to purecomponent in docs,the current link to React PureComponent from shouldComponentUpdate on this page is incorrect Changing the link from react purecomponent to reactpurecomponent,,bvaughn,2017-10-06 06:50:43,2017-10-06 16:11:09
PR,Update implementation notes md,prevChild could be CompositeComponent instance which cause prevChild node to be undefined Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,bvaughn,2017-10-06 13:13:51,2017-10-06 16:11:37
IS,website JSX Editor in documentation need more padding bottom,i found this image image in every LIVE JSX EDITOR which have scroll,,bvaughn,2017-10-06 08:49:11,2017-10-06 16:46:26
IS,website Old docs link redirect to,if you open this link old documentation link or it will redirect to it should redirect to current documentation URL,,"gaearon,bvaughn,bvaughn,gaearon",2017-10-06 09:15:43,2017-10-06 16:47:47
IS,Missing docs about Transferring Props in JSX,I noticed that the latest docs do not talk about Transferring Props in JSX with rest properties transferring with in jsx This was really useful for building reusable react components I was curious if omitting this documentation was intentional If so it would be great to understand why not a good practice anymore Otherwise I would be happy to send a PR that adds this back into the docs with any changes you and the community want to see Overall I just think this is important info to surface in the current docs,,bvaughn,2017-10-06 00:46:42,2017-10-06 16:50:06
IS,React 16 Document breaking changes that did not warn in React 15,Do you want to request a feature or report a bug Bug What is the current behavior The path to upgrading from React 15 to 16 should be simple From the docs With minor exceptions if your app runs in 15 6 without any warnings it should work in 16 There are 2 cases that I found where this is not true this state can no longer be declared in componentWillMount It never should be declared there anyways but React15 never yelled at me I found an old component that did this it was completely broken The callback for this setState can no longer be falsy Before i would write const cb false callback now i have to write const cb false callback undefined Again it is sloppy code that should have never existed anyways but it worked in React 15 What is the expected behavior Adding these 2 things to the migration guide Maybe re enabling support for the falsy setState callback Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16 all browsers It all worked in React 15,,"gaearon,bvaughn",2017-10-05 23:03:42,2017-10-06 16:57:20
PR,Add focus helper to range test update button styles,When testing range input change events clicking the knob would cause it to move if the click region was not precisely on the center of the knob This is annoying This commit adds a button to focus the range input knob and takes a small pass at styling buttons A label would work here too however it does not generate a focus ring in all browsers focus,,nhunzaker,2017-10-06 12:09:26,2017-10-06 16:58:11
IS,Document that deep equality checks and JSON stringify in shouldComponentUpdate are a bad idea,Inspired by,,"gaearon,bvaughn",2017-10-05 10:53:09,2017-10-06 16:59:24
IS,Add error boundaries to the website itself,A few places where it could be handy Live editor on the homepage to show crashes Search box that gets broken by Fair Adblocker because a global is missing Maybe more,,"gaearon,bvaughn",2017-10-04 19:33:28,2017-10-06 17:02:05
IS,Add inline syntax errors to website editor,tsriram suggested a proof of concept in I like that I wonder if we can do it with the new editor,,"gaearon,bvaughn,bvaughn,bvaughn,bvaughn",2017-10-04 19:35:22,2017-10-06 17:03:12
IS,Some old fiddles still broken due to some HTTP HTTPS issue,See here for example Mixed Content The page at ' ' was loaded over HTTPS but requested an insecure script '' This request has been blocked the content must be served over HTTPS It is as if redirect happens without preserving the protocol,,"gaearon,gaearon,bvaughn",2017-10-04 01:00:12,2017-10-06 17:06:21
IS,Idea Host codemods on the website,It would be nice to provide a REPL for codemods on the website especially for createClass or PropTypes conversion This is handy for one offs like converting StackOverflow answers or fiddles but also introduces people to the idea of codemodding in a playful way The REPL can include instructions on running it locally on the bottom,,"gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,gaearon,bvaughn,bvaughn",2017-10-04 10:49:26,2017-10-06 17:11:34
IS,Question on build scripts sources,The build scripts tirelessly typed up by fb do they exist in fancy 2017 versions somewhere with import statements object rest spread and for await that has then been lightly transpiled or are they actually typed in using the unpleasant quasi 2015 ECMAScript that offers direct untranspiled execution by a recent Node js Here s a very nice one I did search for some unique wordings in that one without finding anything,,bvaughn,2017-10-01 08:08:37,2017-10-06 17:15:10
IS,website yarn dev throwing error on Node 7,The website docs list Node js version 7 6 or greater as a requirement however when I tried to run yarn dev using version 7 10 I got the following error which I'm pretty sure is caused by the fact that Node js 7 does not support trailing commas in function parameters but there are a couple of those in the file gatsby node js So maybe It would be a good idea to change the required version of Node to 8 in the website docs either that or remove the trailing commas in gatsby node js Let me know which solution do you prefer and I will gladly open a PR,,"fpoumian,bvaughn",2017-09-30 19:23:42,2017-10-06 17:16:29
IS,website Online IDE in the documentation,Continuing the conversation on Twitter here I think it would be very beneficial for beginners to use CodeSandbox Stackblitz WebpackBin to start learning React The environment is like a local code editor which means that the user already gets familiar with the feel of a code editor The user does not have to install any tooling so you can start immediately Also whenever they want to continue offline they can easily click on 'Download' 'Export' to get a CRA version of the same application so they can work further on it I think we all agree that this would be beneficial the question is how to approach this without confusing the user Would be great to have a discussion on this here,,bvaughn,2017-09-30 20:20:03,2017-10-06 17:17:20
IS,Move website source to new reactjs org repo,Now that the new website has launched I propose we do the following clean up steps Move Gatsby source and dynamic content md and yml files to new repo Update external tools like Netlify and Crowdin to use this new repo Delete Jekyll website source This will offer several benefits including Improve focus and simplify triage process for both the website and framework repos Cut down on noise from Netlify preview comments on PRs that are not related to website I'm creating this issue mostly to facilitate discussion around the new proposed directory structure below Proposed Directory Structure cc,,"bvaughn,joecritch,gaearon,bvaughn,yangshun,bvaughn,bvaughn,bvaughn,gaearon,bvaughn,bvaughn,Daniel15,bvaughn",2017-10-03 21:29:03,2017-10-06 17:18:05
PR,Delete documentation and website source,These have been moved to I have updated Netlify to build from the new repl Resolves 11075,,"bvaughn,bvaughn",2017-10-06 16:08:16,2017-10-06 17:18:06
PR,website Add FAQ pages to docs,Based on 10740 this adds an FAQ page to the docs The contents are based on conversations in the Reactiflux community and discussions on Github Comments welcome img width 321 alt screen shot 2017 09 30 at 10 23 24 pm src Closes 10740,,bvaughn,2017-10-01 03:16:35,2017-10-06 17:19:38
PR,website Update thinking in react md to filter products in FilterableProductTable,This PR updates the Thinking In React example by moving the code that filters the products from the ProductTable component to the FilterableProductTable component See issue 10808 for more details,,bvaughn,2017-09-25 21:27:03,2017-10-06 17:19:53
PR,docs Render link as a link,The URL was in the documentation as a non clickable link Converting to an actual link and linking the relevant text in the docs,,bvaughn,2017-06-30 14:48:42,2017-10-06 17:20:36
PR,Document that value undefined is not controlled component,I got a warning which points to this page bundle js 11949 Warning X is changing an uncontrolled input of type undefined to be controlled Input elements should not switch from uncontrolled to controlled or vice versa Decide between using a controlled or uncontrolled input element for the lifetime of the component More info but it is not explained here that value undefined can be the cause,,"aweary,aweary,bvaughn",2017-06-05 13:20:36,2017-10-06 17:21:01
PR,PR for issue 9801,This PR mostly affects the code content of a post on the official React blog It does not touch any React code Here is the updated code from that blog post running on Babel babili false evaluate true lineWrap false presets es2015 2Creact 2Cstage 2 targets browsers builtIns false debug false code const 20managePromise 20 3D 20 originalPromise 20 3D 3E 20 7B 0A 20 20let 20cancelThen 20 3D 20false 3B 0A 0A 20 20const 20wrappedPromise 20 3D 20new 20Promise resolve 2C 20reject 20 3D 3E 20 7B 0A 20 20 20 20originalPromise then 0A 20 20 20 20 20 20val 20 3D 3E 20cancelThen 20 3F 20reject 7BcancelThen 3A 20true 7D 20 3A 20resolve val 2C 0A 20 20 20 20 20 20error 20 3D 3E 20cancelThen 20 3F 20reject 7BcancelThen 3A 20true 7D 20 3A 20reject error 0A 20 20 20 20 3B 0A 20 20 7D 3B 0A 0A 20 20return 20 7B 0A 20 20 20 20promise 3A 20wrappedPromise 2C 0A 20 20 20 20cancelThen 20 7B 0A 20 20 20 20 20 20cancelThen 20 3D 20true 3B 0A 20 20 20 20 7D 2C 0A 20 20 7D 3B 0A 7D 3B 0A 0Aconst 20managedPromise 20 3D 20managePromise 0A 20 20 0A 20 20 2F 20In 20actual 20practice 2C 20this 20is 20where 20we 20would 20have 20our 20Promise returning 20async 20call 3A 20 0A 20 20 20 20 20The 20code 20below 20simply 20simulates 20such 20call 20 2F 0A 20 20new 20Promise resolve 2C 20reject 20 3D 3E 20 7B 0A 20 20 20 20 2F 2F 20callback 20invoked 20upon 20success 20of 20some 20async 20call 0A 20 20 20 20const 20successCallback 20 3D 20 val 20 3D 3E 20 7B 0A 20 20 20 20 20 20console log 'async 20call 20was 20successful' 0A 20 20 20 20 20 20resolve val 0A 20 20 20 20 7D 0A 20 20 20 20 2F 2F 20simulating 20async 20call 0A 20 20 20 20setTimeout successCallback 2C 201000 2C 20 isuccess' 0A 0A 20 20 20 20 2F 2F 20In 20actual 20practice 2C 20we would 20also 20have 20a 20failureCallback 20that 20reject is 20the 20promise 20with 0A 20 20 20 20 2F 2F 20some 20error 20value 0A 20 20 7D 0A 3B 0A 0AmanagedPromise 0A 20 20 promise 0A 20 20 then val 20 3D 3E 20 7B 0A 20 20 20 20 2F 2F 20call 20to 20component setState 20goes 20here 2C 20so 20it 20can 20be 20prevented 20by 20 0A 20 20 20 20console log aresolved 20with' 2C 20val 0A 20 20 7D 0A 20 20 catch reason 20 3D 3E 20console log 'cancelThen' 2C 20reason cancelThen 3B 0A 0AmanagedPromise cancelThen 3B 20 2F 2F 20Cancel 20the 20'then' 20on 20managed 20promise,,"aweary,aweary,gaearon,bvaughn",2017-05-30 18:18:57,2017-10-06 17:21:28
PR,Caution in docs against dispatching redux actions or triggering component updates by any other means in componentWillUpdate,I just experienced really confusing errors that were happening because of an old component I wrote that was dispatching Redux actions during its componentWillUpdate The docs only warn that we can not call setState during componentWillUpdate but I assume that causing component updates by any other means is likewise a bad idea so I want to warn other devs about it in the official docs,,"jedwards1211,bvaughn",2017-05-15 22:06:56,2017-10-06 17:21:51
PR,Update state and lifecycle md,While reading the documentation it seemed to me that the documentation could be improved for beginners by a short example on how to update child properties of state and a link to further reading,,bvaughn,2017-04-30 09:09:19,2017-10-06 17:22:05
PR,docs Loading Data Asynchronously,gaearon Related to this pull request I have rewritten the whole process with axios I have also implemented the cancellation,,"lacker,lacker,lacker,lacker,lacker,lacker,bvaughn",2017-01-30 13:33:47,2017-10-06 17:22:15
PR,Pass event obj to the method,Before submitting a pull request please make sure the following is done 1 Fork the repo and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint we have done our best to make sure these rules match our internal linting guidelines 6 If you have not already complete the CLA,,"mitenka,aweary,gaearon,aweary,mitenka,bvaughn",2017-01-01 10:26:17,2017-10-06 17:22:30
PR,Add link and examples for purecomponents,Discussed here 8255 cc,,"gaearon,bvaughn",2016-12-01 22:15:19,2017-10-06 17:22:56
PR,docs Forms Documentation Improvement,I feel that the forms documentation is missing some important and fundamentals inputs multi select checkbox radio buttons So I have added them to the documentation to clarify how to convert those form inputs to React Controlled Components,,"lacker,lacker,lacker,gaearon,lacker,bvaughn",2016-11-16 11:08:40,2017-10-06 17:22:59
PR,new docs initial draft of glossary docs,Would love some feedback on these terms let me know if there are other terms that should be added,,"gaearon,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,aweary,gaearon,gaearon,gaearon,gaearon,bvaughn",2016-11-03 22:45:15,2017-10-06 17:23:03
IS,v16 announcement page is broken with adblocker,v16 announcement page is broken using Chrome on a mac image,,"gaearon,gaearon,bvaughn",2017-10-01 12:29:57,2017-10-06 17:24:51
IS,reactjs org website displays empty page when cookies are disabled in Firefox,When using a Firefox with Cookie Whitelist plugin and enabled preventing cookie storage loading flashes the page is content then removes all content in the body producing an empty white page with the following content If the Cookie Whitelist is set to allow temporary cookies the page loads normally,,"gaearon,KyleAMathews,gaearon,bvaughn",2017-10-01 22:35:24,2017-10-06 17:28:48
IS,Missing documentation null undefined as input value,Do you want to request a feature or report a bug I would like to request documentation When you pass null as value of an input you get the following warning warning js 33 Warning value prop on select should not be null Consider using the empty string to clear the component or undefined for uncontrolled components This warning very clearly states what to do My problem is it fails to mention why I'm not supposed to pass null Nor could I find any explanation online I found a link to The URL controlled input null value sounds as if this page should explain exactly what I'm looking for But it merely redirects to which does not mention null The issue Warn when input is value is null states that this warning should be added but does not say why The open pull request Document that value undefined is not controlled component adds the following documentation Similarly to not setting the value attribute at all setting it to null or undefined will make React assume the component is not controlled and may produce a warning But again there is no explanation as to why React behaves this way Naively I would expect null to be a perfectly valid value e g for a numeric input that is empty Passing an empty string to indicate the absence of a numeric value seems odd to me So I would really like some more information in the documentation,,"gaearon,bvaughn",2017-10-02 15:36:25,2017-10-06 17:35:10
IS,Document error boundaries,I do not think we have either a top level doc or a componentDidCatch reference yet cc,,"gaearon,gaearon,gaearon,bvaughn",2017-09-28 16:57:52,2017-10-06 17:38:44
IS,website maintain scroll position of mobile menus,When going quickly through pages on mobile it would be really nice if as you scroll down long menus e g in docs if after navigating to the next page and then returning to the menu if the previous scroll position is maintained restored This could be done by a rendering the menu in the layout component which isnt unmounted on page changes or by storing the menu scroll position in the layout again and then passing it into the page component on render,,"KyleAMathews,bvaughn,bvaughn",2017-09-29 03:22:00,2017-10-06 17:41:43
IS,website Gracefully recover when ad block prevents Babel from loading,I have seen reports that certain ad blockers eg Fair AdBlocker 1 404 prevent Babel from loading which causes a script error and breaks the docs site We should more robustly handle this case probably by showing an error on the code preview side where we would show script errors,,"bvaughn,bvaughn",2017-09-29 17:12:32,2017-10-06 17:42:54
IS,website Defer loading Babel until it is needed,We currently load Babel via CDN which is nice but we load it in the head of the page which is not so nice We should only load it on pages that actually use it eg pages that use the CodeEditor,,"bvaughn,bvaughn",2017-09-29 17:22:06,2017-10-06 17:43:01
IS,Recommend using componentWillMount instead of using a constructor,Do you want to request a feature or report a bug feature What is the current behavior In the docs it is recommended to use the constructor over componentWillMount If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Recommend using componentWillMount over a constructor In ES6 classes React does not have to provide a lifecycle hook before mounting since constructors are already defined however constructors are generally confusing considering they have their own ways of defining things in React Take the following example from the tutorial There is no weird having to pass to super props which only happens in constructors and nowhere else in React Also setting state is different only in the constructor and nowhere else in React Using componentWillMount you extract props like you normally would in any other method in a React class Also setting state is exactly the same as every other method in a React class I feel like having the consistency of componentWillMount is better even though ES6 classes do provide a constructor componentWillMount also supports server rendering Are there any benefits performance wise using a constructor over componentWillMount Thanks Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16,,bvaughn,2017-09-29 17:51:19,2017-10-06 17:44:10
IS,New docs site Add section headers to navigation element,In the new Reactjs org docs the nav only has different pages This makes it very difficult to quickly find jump to a part of the docs you care about If this change would be accepted I will create the PR for it screen shot 2017 09 29 at 3 53 48 pm For example what are the life cycle events in React The closest thing in the nav is Quick Start State and Lifecycle After navigating to this page and reading for a few seconds it becomes clear this is a tutorial Is there a list of the lifecycle events I'm not sure I scan through the whole page Does not look like it but maybe I just missed it Repeating this process of scrolling through entire pages is time consuming so instead I just google react 16 lifecycle events and end up finding it on someone is independent blog post,,"bvaughn,bvaughn,joecritch,bvaughn",2017-09-29 22:55:32,2017-10-06 17:47:00
IS,website Upon scroll active item in side navigation remains the same,I would call it a bug if you click on side nav items page goes to its part of the page and side nav item get an active state correctly with 4px blue span in front of the link text but if you scroll manually to those parts side nav does not refresh the active state of items Tested in all browsers on MacOS You can see it on a screenshot An Interactive Component should be active,,"bvaughn,bvaughn",2017-09-30 07:10:14,2017-10-06 17:49:15
IS,website Restructure docs to provide paths for guidance,Per Dan is recent comments at and a lot of people still seem to have complaints about the way the docs are structured It might be worth trying to restructure the docs kind of like a Choose Your Own Adventure book with different paths based on what you know so far and what you want to accomplish suggestions for reference Hypothetical paths example What are you looking for I want to see if I'm ready to learn React what should I know first links to a page discussing common JS prerequisite knowledge I want to try out React right now without installing anything links to a page that points to CodePen CodeSandbox and StackBlitz for online playgrounds and also gives a copy paste HTML snippet with links to CDN libs that the user can save and edit locally I want to learn the basic ideas of React with nothing new involved links to a page that describes components and rendering with ES5 syntax without using JSX I want to learn the recommended way to use React links to a page that talks about Create React App ES6 and JSX syntax I understand the basics how do I learn to think in React as I build something probably links to the current tutorial section I'm trying to build an application how do I solve real world problems with React links to a page that addresses topics like routing state management etc like the guides discussed in 8060 I'm looking for advanced React usage patterns that can help me reuse code better links to a page that covers topics like HOCs render props context etc Another related idea would be if the code samples in the docs all had multiple syntax variations that could be viewed by switching tabs or a global option across the site like Plain ES5 Syntax ES6 and JSX Syntax ES6 Syntax,,bvaughn,2017-09-30 15:40:19,2017-10-06 17:50:25
IS,Link to download html File is not working on this page,Do you want to request a feature or report a bug BUG What is the current behavior THE LINK TO DOWNLOAD FILE IS NOT DOWNLOADING ANYTHING If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template CLICK ON THE LINK ON THIS PAGE TO DOWNLOAD THE HTML FILE IT WILL NOT DOWNLOAD IT ON MAC AND CHROME BROWSER WHEN I CLICK ON LINK IT DOWNLOADS SOMETHING AND IT SAYS NO FILE AND I CANNOT OPEN IT IT APPEARS LIKE NOTHING IS DOWNLOADED What is the expected behavior YOU SHOULD BE ABLE TO DOWNLOAD THIS HTML FILE Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React MAC OS ON CHROME VERSION OF REACT IS IRRELEVANT AS I CANNOT OPEN THE FILE BUT MY VERSION IS 16 0 0 beta 2,,"gaearon,gaearon,bvaughn",2017-09-30 18:50:06,2017-10-06 17:53:37
IS,website Add Flow types to website source www,Replace PropTypes with Flow types for our components in www and make sure yarn flow checks these types to protect against regressions,,"bvaughn,bvaughn,bvaughn",2017-09-27 20:19:58,2017-10-06 17:57:37
IS,Suggestion to remove misleading docs code on new react portals,Do you want to request a feature or report a bug i want to suggest a docs optimization to not mislead the core idea of new react portals What is the current behavior currently docs example code uses a js created div element referenced by the object is this el property which further on is used in componentDidMount componentWillUnmount and render of the Modal class component If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template img width 382 alt modal this el src What is the expected behavior from my point of view the above mentioned implementations represent misleading unnecessary docs boilerplate that might lead to do I have to do that confusion especially at the beginning of a new feature this should probably be denied as good as possible here is a working fork showing the core idea of that feature and nothing else 0 Which versions of React and which browser OS are affected by this issue 16 0 0 in case you agree I can open a pull request,,"gaearon,bvaughn",2017-09-26 22:00:42,2017-10-06 17:59:02
IS,Update Thinking in React example to filter products in FilterableProductTable component,In step 4 step 4 identify where your state should live of the Thinking in React example the ProductTable component filters and displays an array of products based on user input I am unsure why the code for filtering the products is in the ProductTable component and not the FilterableProductTable component The same question was previously raised issuecomment 269130572 in issue 8035 I think having FilterableProductTable be responsible for filtering the products would improve the example for two reasons Allow ProductTable to be used outside of FilterableProductTable Better separate the concerns of filtering the products from displaying the products I updated the example and I'm happy to submit a PR if this is something that should be changed,,bvaughn,2017-09-25 02:16:25,2017-10-06 17:59:53
IS,Add an official React FAQ to the docs,I wrote the Redux FAQ last year and it is been pretty helpful for answering actual frequently asked questions It would be great if we could add a similar FAQ directly to the React docs Tim Arney already has a standalone React FAQ site at that would be a great starting point for a lot of the material My React Redux links list is also a useful source of info in general I'm opening this up as a place to discuss possible formatting for a React FAQ as well as possible topics and volunteers to help write it,,"gaearon,bvaughn,bvaughn",2017-09-18 20:16:43,2017-10-06 18:01:53
IS,Document that you can not rely on React 16 SSR patching up differences,With SSR being loaded on client side there are various wrong behaviors if the server is HTML differs from the client is HTML For a minimal example I created this repository Here is a code snippet if someCondition true on server side and someCondition false on client side You can see this behavior on my website Open Chrome Dev Tools and lower the width until you get the mobile view then reload the page and see how the list is wrapped inside another Component,,"sebmarkbage,sebmarkbage,sebmarkbage,sebmarkbage,Tom910,sebmarkbage,flarnie,zombieJ,sebmarkbage,gaearon,bvaughn,gaearon",2017-09-01 11:12:06,2017-10-06 18:09:55
IS,Interactive documentation for JSX,The interactive version of the JSX in depth article got a nice traction today on Hacker News The interactive snippets are powered by the Klipse plugin I'm the author of the plugin The evaluation is done on the client side no server is involved at all Would you consider trying the Klipse plugin on the official react documentation,,"gaearon,bvaughn,bvaughn",2017-09-08 12:31:04,2017-10-06 18:16:41
IS,Request for the Two way Binding Helpers article to be improved,Do you want to request a feature or report a bug Documentation update What is the current behavior It describes a deprecated feature What is the expected behavior It should ideally provide the reader with documentation of a non deprecated feature or at least provide an explanation of why the feature it heavily discusses was deprecated The article itself does provide a good deal of informative information as to why two way bindings are useful and how React itself works but it focuses heavily on the now deprecated LinkedStateMixin feature I'm requesting this here because this page is the top result on Google UK when searching for react two way binding without quotes,,"jquense,bvaughn",2017-09-04 15:04:38,2017-10-06 18:18:32
IS,Documentation about which style numeric values are treated as pixels is missing,This used to exist in the React 15 documentation under the Tips section but mentions to this support are now missing entirely The old documentation page This was removed in commit 455d2d1b48e5cdaeac5d0b4fd92b29b4d52bcaec,,bvaughn,2017-08-09 05:30:45,2017-10-06 18:20:13
IS,ReactTestUtils renderIntoDocument resources clean up and documentation,Do you want to request a feature or report a bug Feature documentation What is the current behavior There is almost none renderintodocument documentation about how to actually use renderIntoDocument method I can not find find answers on those questions on Jest is website or enzyme is I know that it is not Facebook either If I render a component into a DOM in a test how will it be destroyed Should I clean up by myself What tools to use for this Just unmountComponentAtNode Where I will get the container to pass in What about additional component trees like in Popovers What are the best ways to test that there are not any parts left after my component were unmounted If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior It will be nice to see such information before people will met memory leaks in their tests and also help to establish good practices for writing tests Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React,,bvaughn,2017-07-31 08:29:14,2017-10-06 18:27:44
IS,Rename move docs and examples license files so Github clearly shows MIT License in top navigation bar,Do you want to request a feature or report a bug Feature What is the current behavior Does not show license on React GitHub repository because there are multiple license files for examples and docs Keep links to the docs and examples licenses in README but not have them be in root directory so GitHub correctly detects MIT License for React If the current behavior is a bug please provide the steps to reproduce and if possible a minimal demo of the problem via or similar template What is the expected behavior Make it even more obvious the project uses the MIT License Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React React 16,,gaearon,2017-09-27 18:07:48,2017-10-06 18:27:45
PR,Added check to deduplicate function type warning calls on each compon,Hey I have added check to avoid duplication of messages 'Functions are not valid as React child ' for same component type Also this is my first PR in React yay,,"gaearon,gaearon",2017-10-05 17:50:13,2017-10-06 20:40:46
PR,Deduplication of warning messages in nested updates 11081,gaearon I have added flags for preventing duplication of both the warning messages so they print only once now But I noticed that the error related to 'Maximum update depth exceeded ' was going in infinite loop Not sure if its an issue or I am missing something,,"anushreesubramani,gaearon,anushreesubramani,anushreesubramani,gaearon,gaearon,gaearon,anushreesubramani",2017-10-05 14:26:46,2017-10-06 22:04:19
IS,Deduplicate Render methods should be pure warning,Note the task is already claimed Just saw this in a fiddle that has a nested update bug img width 414 alt screen shot 2017 10 04 at 11 52 52 src It would be nice to just dedupe them in the first place instead of calling console error a thousand times Note the task is already claimed,,"gaearon,gaearon,anushreesubramani,gaearon,gaearon,gaearon",2017-10-04 10:53:17,2017-10-06 22:04:48
IS,input type number onChange vs onInput,With input type number when entering text eee onChange is not fired onInput is Tested with React 16 Chrome 61 Firefox 55 Safari 10 1 1 and Edge 38 14 DOM behavior no React React onChange is not equivalent to DOM input event as it should,,aweary,2017-10-06 23:41:55,2017-10-07 00:56:28
PR,RT More predictable things,See individual commits,,"sebmarkbage,bvaughn,bvaughn,sebmarkbage",2017-10-06 21:30:44,2017-10-07 02:08:22
PR,Ignore SSR warning using explicit suppressHydrationWarning option,This lets you ignore the warning on a single element and its direct child content This is useful for simple fields that you are expecting to fail such as time stamps Note that this still wo not patch up such content so it will remain inconsistent until an update is flushed It is also not suitable for nested complex content that may change That is why it is only shallow The feature is nice but the architectural mess that is the hydration warning makes this harder than it should be See individual commits for details There is also a lot of logic in the renderer code as opposed to just being built in in the Fiber code I can imagine us doing a follow up where we move more of the hydration warning logic into shared code We could feed reads from the renderer code that provides canonicalized values that then can be used for comparisons inside the shared code which is then used to build up a nice isomorphic error message that can be used across renderers That part is related to 10085,,"sebmarkbage,acdlite,acdlite",2017-10-06 01:17:13,2017-10-07 02:50:02
PR,Make sure all class constructors in the docs call super with props,Frankly I'm not sure whether it is strictly necessary to do always call the base constructor with props but it is mentioned here adding local state to a class so I think this should be enforced in the documentation at the very least Some of the test fixtures in src have components which do not call the super with props as well I can make a PR to fix those if you like Also I understand that the docs page is undergoing migration at the moment If I should be making doc changes in the new repo or hold off further changes until the migration is complete do let me know,,"yangshun,yangshun",2017-10-05 06:34:37,2017-10-07 03:21:19
IS,React 16 bad UX scroll bug,React 16 bad UX image right menu is too bad for UX left menu should be much more better,,"nihgwu,gaearon",2017-10-07 02:10:14,2017-10-07 09:12:20
IS,React does not recognize the staticContext prop on a DOM element,Versions react v16 react router dom 4 2 2 react router redux next Test Case Server side,,,2017-10-07 11:39:08,2017-10-07 11:57:53
IS,React 16 Component updates but DOM does not,After upgrading to React 16 I noticed a regression in one of my apps where the navbar would rerender upon login logout as verified by console log statements but the DOM would not get the corresponding updates Here is the abbreviated component in question It worked without requiring the annotated keys on React 15 but they became necessary after upgrading Is this expected behavior or is it indicative of a regression,,"syranide,gaearon,syranide",2017-10-07 02:25:18,2017-10-07 18:51:44
IS,React 16 Missing global context,hey i been using for Internationalize component that wrap my App component only to provide translation to the whole app like so is this global context was removed have not seen this change in the breaking changes wrapping every component that use translations 99 of them do with IntlProvider and use this context instead sounds to me like overkill there is a better approach,,gaearon,2017-10-08 14:24:20,2017-10-08 14:43:41
IS,Update CodePen examples to use latest React,IIRC currently they don t We should probably leave them using latest since if it breaks we have to update them anyway,,"gaearon,gaearon,aweary,gaearon,bvaughn",2017-07-15 23:00:17,2017-10-08 17:51:23
IS,Documentation Add version information,Please list You ll need to have Node 6 on your machine before the description in npm install g create react app In Creating a New Application of the document Because you want to know the required version before running the command,,"gaearon,gaearon,bvaughn",2017-07-29 08:56:33,2017-10-08 17:53:19
IS,Documentation Improve tutorial example code write,I tried tutorial 3 Delete all files in the src folder of the new project I think that good example code here For example rm f src Because I had a misunderstanding remove src directory Thank you,,bvaughn,2017-07-29 05:59:50,2017-10-08 17:54:37
IS,Document non interaction between native and synthetic events,I have been trying to find out why my React event handlers were not able to prevent event handlers on document After hours of searching and experimenting I stumbled across issue 7094 which explains it Unfortunately the documentation at gives the impression that React events work exactly like native events apart from wrapping them in synthetic events and could therefore interact with them Please document that this is not the case,,"aweary,bvaughn",2017-07-26 16:36:47,2017-10-08 17:54:49
IS,Incomplete documentation on creating web components,Hey there your documentation on creating web components with react using react in your web components is quite cool and works really nice for the html However any component created this way will be unstyled as the documentation does not cover how to add CSS to the web component Using create react app all your CSS will end up in a main hash css file and have selectors for your components but when you create a web component you css must be encapsulated in the component as the the components DOM lives in the shadow root and is not stylable from outside It would be cool if you could show a way to account for this,,bvaughn,2017-07-12 14:12:16,2017-10-08 17:56:00
IS,Tutorial concepts without ES6 JSX,The tutorials with the exception of the advanced guides assume ES6 JSX The React without ES6 tutorial still uses JSX The React without JSX tutorial still uses ES6 What would a simple ES5 React demo look like To compare the Vue introduction starts with very simple examples that you can just drop in a webpage,,"gaearon,bvaughn",2017-07-11 18:52:21,2017-10-08 17:57:23
PR,Update docs to pass updater functions to setState,Fixes 9703 All previous PRs are in this PR and they will be closed,,bvaughn,2017-05-23 01:19:49,2017-10-08 17:59:48
IS,Functional setState as default in docs tutorials and first steps guides,,,"aweary,bvaughn",2017-05-17 10:44:19,2017-10-08 18:00:23
IS,warn against dispatching redux actions during componentWillUpdate at runtime or in docs,Do you want to request a feature or report a bug Feature What is the current behavior I had a component that was dispatching a redux action in its componentWillUpdate which causing things to blow up in confusing ways For instance it was causing a different component is componentWillReceiveProps to get called for the second time before its componentDidUpdate got called which led to various NPEs during the reconciliation process What is the expected behavior It would be nice if anything that would trigger an update to during a call to a component is componentWillUpdate would immediately error out in dev mode even if it is causing a different component to update in my case triggering an ancestor react redux container to update Would that be possible Which versions of React and which browser OS are affected by this issue Did this work in previous versions of React I'm seeing it with React 0 14 9 and Chrome on macOS I can not say for sure if my code caused the same bugs with previous versions of React but the blame rests on my code anyway,,"jedwards1211,jedwards1211,jedwards1211,jedwards1211,jedwards1211,gaearon,jedwards1211,bvaughn,bvaughn",2017-05-15 22:00:07,2017-10-08 18:05:22
IS,Document how to pass args to event handlers,Inside a loop it is common to want to pass a param to an event handler That would be a good thing to add to this doc page Also how to pass args without triggering a re render in the child component i e creating a new function every time,,bvaughn,2017-05-14 20:21:28,2017-10-08 18:07:35
IS,React Component undocumented templated class,I see that React Component is used with three template parameters that are documented nowhere or I simply could not find the docs I was able to deduce that the second and third are the types of props and state respectively However I coud not figure it out about the first template parameter Are these documented anywhere please,,"gaearon,gaearon,bvaughn",2017-05-14 07:16:54,2017-10-08 18:09:49
IS,Justification explanation of immutable props in docs,It would be nice if the React docs had a good concise explanation as to why they decided to make props immutable I have developer friends using angular who regularly make use of this technique child mutates a data structure owned by parent and think its great The docs do a great job explaining that you can not do this and what the React way of dealing with this is passing callbacks But it would be nice to see some more tangible and specific examples of exactly what problem is solved by making props immutable,,"gaearon,bvaughn",2017-05-03 23:58:11,2017-10-08 18:11:37
IS,React Examples are Not Accessible With a Screen Reader,Hello I would like to start using React but am very concerned about the examples I am seeing I would like to use React to interact with lots of data I am a screen reader user and Facebook has put out lots of articles on react s accessibility These are great but strangely the examples I have read that the React developers have put out are not accessible For the tutorial there are several problems First is that codepen is not very accessible so seeing examples there is really difficult Second there is a huge number of buttons that have no text in them in the tic tac toe game Third there doesn t seem to be any use of a table If I remember correctly a tic tac toe board is in a square A 4 by 4 set of table boxes would really help in making a beautiful layout for screen reader users For the datatable there is no table I think this table is just div elements with CSS Why It says it is a table To make this accessible one needs to use the table tag the th tag the tr tag and the td tag There is a fantastic article on how to make HTML tables This is really scary for me because if developers are looking at the above examples and learning how to code from them then they are learning how to code in an inaccessible manor Not only does this mean that I can t learn to use react from the official tutorial but any developer who goes through the official tutorial will have been exposed to an app that is supposed to model how their apps should look like If there apps look like the tutorial I will basically not be able to use any app made with react best practices I m really confused if react does all the actual rendering why are all the rendered elements not in perfect HTML Accessibility is not the use of an API in fact an accessibility API just makes things more difficult for everyone by adding complexity into something that is super easy The best way of making screen reader accessible apps is by using HTML tags not including div or span React has done an amazing thing by controlling HTML rendering and now all that needs to be done is make that renderer output proper HTML which will then be accessible If Facebook s developers are not writing accessible apps by default I think that there should be more reinforcement of good coding practices Could there be a warning when a button is missing text in between the opening and closing tags Could there be a warning when images do not have alt text Could there be a warning when links don t have text in between the opening and closing tags Could the app throw an error when input boxes are not coupled with a label element Could errors and warnings please be given by React when an app does not follow good coding practices This would not only help the React team make accessible examples but it will help to insure an accessible web for me and the other 39000000 screen reader users in the world Please let me know how I can help Thank you,,"gaearon,bvaughn,bvaughn,bvaughn,bvaughn",2017-04-28 04:16:56,2017-10-08 18:16:04
IS,Document what happens if keys are not used at all,Would be nice if the doc explicitly stated what happens if one does not use keys at all Will this be just performance issue,,"gaearon,gaearon,monkindey,bvaughn",2017-03-26 13:09:05,2017-10-08 18:20:01
PR,Documentation Details Example for Indexes as keys,This aims to add more information to the documentation and address 9260 1 Added more details on the performance and state issues cause by using indexes as keys in lists 2 Added information that React uses indexes as keys if none are given 3 Added a link to an example on Codepen to show the issue cause by using indexes as keys in list on state 4 Added a link to an example on Codepen to show how not using indexes as keys in a list fixes the previous example is issues with state and reordering,,"gaearon,gaearon,gaearon,bvaughn",2017-03-29 23:59:44,2017-10-08 18:20:47
IS,Document how React treats different attributes,As of 9106 there are quite a lot of tests for HTML is boolean properties on tags According to these tests HTML properties should get rendered into empty strings or not set e g div hidden true should render to div hidden and div hidden false should render to div But when I look further there are other tests which do similar things a href true should render to a href true This means that if I take true as my property value I will not know what the result will be The issue being React currently does not have a clearly defined and documented way with which they handle their props Could the docs be updated to specify which type of prop will result in what e g any number gets parsed to a string using Number toString an object gets stringified by using arg Object entries arg map key val key val join and booleans toggle the property In short these are the bugs undocumented features contradictions that the tests expect to happen plus my expectations prop true gets parsed to prop L222 or prop true L209 for select properties expected either prop or prop prop not both as per checked checked HTML standard prop gets parsed as prop L303 or L239 expected prop prop prop might get parsed as either prop prop L286 prop L231 or even L376 expected prop prop prop foo prop L245 or prop foo L286 expected prop foo prop false L282 or prop false L316 expected prop 'foo' 'bar' prop L252 or prop foo bar hand tested no automatic test available expected prop foo bar prop foo 'bar' baz 5 prop L257 or prop foo bar baz 5 L1180 or prop object Object hand tested no automatic test available expected prop foo bar baz 5 as per style object transform Hacky showcase Are these features or are these bugs If they are bugs and work is going to be done on the props value parsing then the following might be a nice addition prop foo true bar true baz false prop foo bar render all true keys disregard false keys like classNames,,"syranide,syranide,aweary,aweary,nhunzaker,bvaughn",2017-03-20 02:22:15,2017-10-08 18:31:39
IS,Document that componentDidUpdate happens before paint,From the docs componentDidUpdate is invoked immediately after updating occurs This method is not called for the initial render Use this as an opportunity to operate on the DOM when the component has been updated Please correct me if I'm wrong When the the last component in a large sequence of nested component changes then all cDU from last child to parent are called in sequence After the last cDU is called then flushBatchedUpdates is run which in turn calls runBatchedUpdates Read this comment from for more context issuecomment 66165159 If this is correct the docs should say something like Use this as an opportunity to enqueue DOM operations in the next execution thread EDIT I guess this issue is also related to new hooks proposal componentWasMounted and componentWasUpdated In the meanwhile it would be great if the docs specified that componentDid Mount Update should use requestAnimationFrame setTimeout to access the rendered DOM,,"bvaughn,bvaughn,bvaughn,bvaughn",2016-11-29 08:29:59,2017-10-08 18:34:42
IS,Component keys and array index,This is just a question I hope someone can provide more information about the following statements from here extracting components with keys We do not recommend using indexes for keys if the items can reorder as that would be slow You may read an in depth explanation about why keys are necessary if you are interested and from here recursing on children As a last resort you can pass item is index in the array as a key This can work well if the items are never reordered but reorders will be slow Can anyone provide some further explanation references links docs on this subject What number of items are we talking about which rendering be slow on sort,,"syranide,gaearon,gaearon,gaearon,bvaughn",2016-11-24 09:46:24,2017-10-08 18:36:40
IS,Handling events README does not have an example that handles the eventHandler AND takes a parameter,There are example for eventHandlers that receive e SyntheticEvents but no example of passing any other parameters to an eventHandler,,"gaearon,gaearon,lacker,lacker,lacker,lacker,lacker,bvaughn",2016-10-23 16:39:55,2017-10-08 18:39:17
IS,New Docs Set Up Localization Effort,We have deleted the old localized content because most of the docs changed too much We should set up proper infrastructure for localization because the old process was slow and ineffective cc,,"gaearon,gaearon,lacker,gaearon,ericnakagawa,sophiebits,gaearon,gaearon,hramos,gaearon,gaearon,ericnakagawa,sophiebits,gaearon,ericnakagawa,gaearon,ericnakagawa,gaearon,ericnakagawa,keyanzhang,sophiebits,ericnakagawa,ericnakagawa,ericnakagawa,ericnakagawa,gaearon,bvaughn",2016-10-23 13:58:46,2017-10-08 20:08:55
IS,New Docs Wanted Guides,We revamped the docs but there are a few guides that are missing and that I think are essential Community section with good resources e g Glossary similar to Virtual DOM Terminology that is now gone but more friendly Check for inspiration Troubleshooting there are 5 common issues we should explain right away like wrong element casing not loaded DOM container missing React in scope etc See for inspiration Accessibility Manipulating Children Using cloneElement and Children Portals useful for modals Animation with React Motion Routing no need to use React Router here just show how to use setState with HTML5 history API and point to RR as a component based API for it once v4 is out AJAX just show how to use fetch in lifecycles mention cancellation issues x Integrating with non React code show how to wrap jQuery plugin in React how to expose React component as a Backbone view and how to consume Backbone models pullrequestreview 30403084 ReactPerf should include a basic usage example not just reference Snapshot testing Publishing a Component If somebody wants to work on this please comment here and let is figure out a plan Help wanted,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,rthor,gaearon,gaearon,rthor,lacker,brigand,lacker,gaearon,lacker,gaearon,AlmeroSteyn,bvaughn",2016-10-23 13:12:02,2017-10-08 20:09:46
IS,New Docs Docs Bugs Issues,We just completely rewrote docs in 7864 They are bound to cause some issues have some mistakes etc Let is keep this issue as an umbrella for all problems we are discovering after the initial rollout x Old links should not be 404 Major issue x Topbar points to which is ugly URL x We should not use Number as an identifier x Remove vars everywhere except ES5 page x JSX in depth has weird names like Story1 render2 x JSX in depth shows a failing example with hello tag but does not show how to fix it Localized pages are gone need to set up a new streamlined localization effort cc Mention in default index html that it is not production ready Mark mockComponent as legacy and unnecessary issuecomment 94044857 shallowCompare on Addons page should recommend PureComponent instead Figure out what to do with Community section Mention string refs x Forms doc has mistakes Forms doc uses setState for uncontrolled components which is confusing Installation is messy,,"gaearon,gaearon,gaearon,hzoo,hzoo,gaearon,gaearon,hnordt,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,aweary,gaearon,aweary,gaearon,gaearon,gaearon,julen,gaearon,gaearon,monkindey,bvaughn",2016-10-21 20:41:26,2017-10-08 20:13:14
IS,link file json,demohtml txt demodatajs txt i want to ask how its away take file json in react js its file name orb in folder htdocs orb demo demo data js how demo data js take from file json the return dont show in localhost and then example file 1 demo data js window demo window demo data var data getData stockvs json for var t 0 t 1 t for var j 0 j data length j window demo data push data j function getData return stockvs json function getData1 return stockvs json 2 demo html function refreshData pgridwidget refreshData window stockvs json how to edit code example in file the number 1 and 2 orb test pivot,,bvaughn,2017-10-07 06:48:47,2017-10-08 20:27:25
PR,Tweak top level reference intros,Minor edits,,"gaearon,gaearon,bvaughn",2017-10-04 20:51:16,2017-10-08 20:40:54
PR,Update README md,Updated the links pointing to the old react js website to the new one,,bvaughn,2017-09-29 19:44:20,2017-10-08 20:41:50
PR,Update React Without JSX docs,This fixes a small number of grammar errors and makes the organization more conducive to understanding easily Let me know if this is un needed or anything should be changed Closes 10147,,"gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,gaearon,bvaughn",2017-09-28 16:44:25,2017-10-08 20:42:28
PR,Fix typo in idea for improvement 2,Pretty sure currently selected must be currently selected,,bvaughn,2017-09-13 15:00:18,2017-10-08 20:44:11
PR,Clarify idea for improvement 1,When I was working through this I found it not completely clear what was meant by 'instead of 6 ' I assumed the document refers to the move numbers in the move list so that is what this change clarifies,,bvaughn,2017-09-13 14:57:24,2017-10-08 20:44:41
PR,docs Update ref syntax,Using ref button as the docs currently state yields an error TypeError Cannot read property 'tagName' of undefined I have updated this to the new syntax as described in and it is now working,,"nikolas,bvaughn",2017-09-13 14:53:39,2017-10-08 20:44:56
PR,Update refs and the dom md,there seem to be a bug in nClick this focus,,"bvaughn,bvaughn",2017-09-12 17:25:38,2017-10-08 20:45:13
PR,Update refs and the dom md,,,"bvaughn,bvaughn",2017-09-12 16:42:32,2017-10-08 20:45:43
PR,Update docs to reflect support for form onReset,This is a small change to the docs to reflect the fact that onReset can be handled by Form Events form events,,"aesopwolf,aesopwolf,bvaughn",2017-08-18 18:51:09,2017-10-08 20:46:20
PR,Add a note about normalized Keycode,I forgot whether React actually did this so I went looking into the source Figured we should make a note of it,,bvaughn,2017-08-18 04:40:42,2017-10-08 20:46:27
PR,Add Static Type Checking guide 9684,,,bvaughn,2017-09-16 18:49:15,2017-10-08 20:47:18
PR,Docs shallowRenderer does not call cDM and cDU,I think this is a limitation that should be documented Correctly this PR is for v16 because shallowRenderer calls componentDidUpdate when updates with setstate in v15,,"koba04,bvaughn",2017-09-15 05:34:51,2017-10-08 20:47:46
PR,Update refs and the dom md,Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you have not already complete the CLA,,bvaughn,2017-09-14 11:36:22,2017-10-08 20:48:20
PR,Add doc about Render Props,This PR adds a doc page about render prop s a really useful means for resolving cross cutting concerns in React apps without the caveats of higher order components caveats This pattern is widely used in several popular React libraries including React Router and React Motion and I often get feedback from people at our React Training workshops who wonder why the pattern is missing from the official React docs This description is by no means perfect and I'm open to feedback about how I can improve it But I tried to keep it simple w out contradicting too much of what the current docs say about HOCs I would be happy to hear your feedback,,"sebmarkbage,sebmarkbage,Daniel15,Daniel15,Daniel15,Daniel15,Daniel15,Daniel15,Daniel15,Daniel15,aweary,acdlite,acdlite,sophiebits,sophiebits,bvaughn,bvaughn,bvaughn",2017-09-18 20:34:36,2017-10-08 20:49:34
PR,Add a section about es6 object shorthand,Not quite sure if the heading should be ES6 Object Shorthand or Filtering Props Thoughts,,"gaearon,gaearon,gaearon,gaearon,gaearon,acdlite,bvaughn",2017-03-05 04:17:42,2017-10-08 20:50:38
PR,Clarify onChange differences between React and HTML,First time reading about react and I thought the docs were wrong when they said that onChange is fired on every keystroke since the HTML change event is only fired when focus changes Looks like the docs are right but I think they ought to be clarified I have attempted the clarification here but a cross reference to something more authoritative about React is changes to HTML events would be good too,,"gaearon,syranide,aweary,syranide,aweary,bvaughn",2017-02-16 00:57:56,2017-10-08 20:50:49
PR,Document difference between Children map Array map,The two are not equivalent which would be a users' expectation for example Information obtained from this comment issuecomment 122158658,,"gaearon,gaearon,gaearon,jquense,bvaughn",2017-01-12 19:00:30,2017-10-08 20:50:59
PR,Docs Add link to catalog of components,The catalog Not sure if you guys are up for linking to such unofficial list if not just close this PR I think this is important for the ecosystem because it allows new components to get sustainable exposure to users Thanks for React btw it has improved my Front end life so much,,bvaughn,2016-12-15 11:51:48,2017-10-08 20:51:10
PR,Add docs for publishing a react component,Related to and,,"gaearon,bvaughn",2016-11-28 15:50:44,2017-10-08 20:51:37
PR,9685 Updated docs for event handling,Fixes 9624 I added an explanation and an example of using bind to the docs to pass arguments to event handlers,,"sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,sophiebits,bvaughn",2017-05-21 04:05:25,2017-10-08 20:53:07
PR,Update reference events md,update docs according to new version of react,,bvaughn,2017-05-19 10:06:58,2017-10-08 20:54:20
PR,Documentation Ref Arrow function should not return assignment,Well I do not think it is really a problem but according to documentation we do not need to return a value on the function to set the ref Thanks for you work we heart react,,"gaearon,gaearon,nhunzaker,bvaughn",2017-05-17 23:00:33,2017-10-08 20:54:52
PR,Improve wording for code conventions,sustainable code can replace the current wording without the use of quotes because it is probably the real intention of that phrase The quotes sounds like a documentation smell Other words can be used but might bring the discussion bikeshedding if that item is really necessary in that list Write human readable code Avoid writing unreadable code Write comprehensible code Any of them are subjective Following the other items in that list is good enough already,,"gaearon,bvaughn",2017-04-29 14:19:23,2017-10-08 20:55:05
PR,setState update arrow function syntax,updating the docs to remove return while using arrow functions Also helps to keep the snippets examples in sync with other docs state updates may be asynchronous,,"gaearon,bvaughn",2017-04-21 04:38:17,2017-10-08 20:55:39
PR,Consolidate SSR doc,This PR consolidates the two SSR reference pages into one page Since the streaming render methods were recently moved from react dom node stream to react dom server it makes sense to document them in the same place as the other methods on react dom server I also corrected a factual error in the doc about data reactid which is no longer added in React 16 This is a documentation only change Thanks,,"aickin,bvaughn",2017-08-11 04:10:29,2017-10-08 20:56:20
PR,Added note to create react app installation tutorial,fixes 10324,,"jquense,bvaughn",2017-07-30 17:07:12,2017-10-08 20:56:26
PR,Additional information on PropTypes func,Added clarification that PropTypes func can be used to check for a class components,,"bvaughn,bvaughn",2017-07-27 05:31:03,2017-10-08 20:57:28
PR,Added info that PropTypes are also nice as component API docs,In my opinion PropTypes have more benefits than just typechecking In order to better highlight benefits their usage I have added a hopefully concise information about one particular benefit I noticed which is the fact that they allow developers to see what props can be set on a component in a single place,,bvaughn,2017-07-26 14:56:39,2017-10-08 20:57:36
PR,Add an example for creating a new application,Add an example for create a new application using npx,,bvaughn,2017-07-21 09:38:13,2017-10-08 20:57:56
PR,Update typechecking with proptypes md,improved grammar Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Format your code with prettier npm run prettier 6 Make sure your code lints npm run lint 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"nhunzaker,aweary,nhunzaker,nhunzaker,bvaughn",2017-07-12 09:42:23,2017-10-08 20:58:09
PR,Update addons animation md,Add a link to new documentation,,"gaearon,bvaughn",2017-07-11 12:51:50,2017-10-08 20:58:38
PR,Update installation md,yarn start yarn build,,"aweary,bvaughn",2017-07-10 15:54:44,2017-10-08 20:59:16
PR,Update jsx in depth md,,,bvaughn,2017-06-30 07:02:51,2017-10-08 21:00:28
PR,Improves the documentation on Reconciliation,The old text could cause some confusion as mentioned in issue 9926,,"nhunzaker,bvaughn",2017-06-17 12:28:29,2017-10-08 21:00:48
PR,Update tutorial to match class component docs,According to the docs adding local state to a class class components should always call the base constructor with props Update the tutorial to reflect this,,"nhunzaker,milesj,nhunzaker,nhunzaker,sebmarkbage,sophiebits,sebmarkbage,gaearon,bvaughn",2017-06-16 19:15:15,2017-10-08 21:02:07
PR,Note about similarity to container components,I think it would be worth mentioning the similarities between HOCs and container components containment and when to choose the one over the other as they have some similar usecases This blog post franleplant react higher order components in depth cf9032ee6c3e has a nice writeup about it under Appendix B Difference with Parent Components Please note that English is not my mother tongue so any corrections to the language is very welcome,,bvaughn,2017-06-13 11:35:08,2017-10-08 21:02:19
PR,Clarify immutable state,State is described as immutable here state Never mutate this state directly as calling setState afterwards may replace the mutation you made Treat this state as if it were immutable However on the Immutability Helper page state is described as optionally mutable overview React lets you use whatever style of data management you want including mutation I have provided a suggestion for clarification Before submitting a pull request please make sure the following is done 1 Fork the repository and create your branch from master 2 If you have added code that should be tested add tests 3 If you have changed APIs update the documentation 4 Ensure the test suite passes npm test 5 Make sure your code lints npm run lint 6 Format your code with prettier npm run prettier 7 Run the Flow typechecks npm run flow 8 If you added or removed any tests run scripts fiber record tests before submitting the pull request and commit the resulting changes 9 If you have not already complete the CLA,,"aweary,bvaughn",2017-06-11 13:33:25,2017-10-08 21:02:25
